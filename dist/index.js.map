{"version":3,"file":"index.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/runAsyncAction.ts","../src/utilities/b64toBlob.ts","../src/utilities/emitEventRequestIsFinished.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/helpers/saltsAndSolventsProvider.ts","../src/domain/entities/box2Abs.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../../../node_modules/native-url/dist/index.mjs","../../../node_modules/jsonschema/lib/helpers.js","../../../node_modules/jsonschema/lib/attribute.js","../../../node_modules/jsonschema/lib/scan.js","../../../node_modules/jsonschema/lib/validator.js","../../../node_modules/jsonschema/lib/index.js","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/services/struct/structService.types.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/structFormatter.types.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/render/raphael-ext.ts","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/util.ts","../src/application/render/draw.ts","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/restruct/resgroup.js","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.ts","../src/application/render/options.ts","../src/application/render/raphaelRender.ts","../src/application/render/renderStruct.ts","../src/application/render/canvasExtension.ts","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowRotate.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/shared/constants.ts","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/index.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types'\n\ntype ElementColorType = {\n  [key in ElementLabel]: string\n}\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000'\n} as const\n\ntype Keys = keyof typeof ElementColor\nexport type AtomColor = typeof ElementColor[Keys]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types'\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294\n  }\n]\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element)\n  acc.set(element.number, element)\n  return acc\n}, new Map<string | number, Element>())\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string\n  description?: string\n}\n\nexport type GenItemSet = {\n  items: GenItem[]\n  displayName?: string\n}\n\nexport type GenGroup = {\n  itemSets: GenItemSet[]\n  title: string\n}\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType }\n}\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' }\n        ]\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)'\n          },\n          { label: 'QH', description: 'Any atom except C' }\n        ]\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' }\n        ]\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' }\n        ]\n      }\n    ]\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' }\n        ]\n      }\n    ]\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group'\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen'\n          }\n        ]\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure'\n          },\n          {\n            label: 'GH*',\n            description: 'Any group with a ring closure or hydrogen'\n          }\n        ]\n      }\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' }\n            ]\n          }\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' }\n                ]\n              }\n            ]\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' }\n                ]\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' }\n            ]\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms'\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen'\n              }\n            ]\n          }\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'aryl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen'\n                  }\n                ]\n              }\n            ]\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants'\n\nexport interface AtomListParams {\n  readonly notList: boolean\n  readonly ids: Array<number>\n}\n\nexport class AtomList {\n  notList: boolean\n  ids: Array<number>\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList\n    this.ids = params.ids\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = []\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id)\n      currenElement && labels.push(currenElement!.label)\n    }\n\n    return labels\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']'\n    if (this.notList) {\n      label = '!' + label\n    }\n    return label\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value\n  }\n}\n","// TODO add tests and rename to toFixed\n// https://github.com/epam/ketcher/issues/2675\nexport function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number\n  if (typeof value === 'number') {\n    parsedValue = value\n  } else {\n    parsedValue = parseFloat(value)\n  }\n  return parsedValue.toFixed(8)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events'\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING)\n  try {\n    const res = await action()\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS)\n    return res\n  } catch {\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE)\n    return undefined\n  }\n}\n","export function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512\n): Blob {\n  const byteCharacters: string = window.atob(b64Data)\n  const byteArrays: Array<Uint8Array> = []\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice: string = byteCharacters.slice(offset, offset + sliceSize)\n    const byteNumbers: Array<number> = new Array(slice.length)\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i)\n    }\n\n    const byteArray: Uint8Array = new Uint8Array(byteNumbers)\n    byteArrays.push(byteArray)\n  }\n\n  const blob: Blob = new Blob(byteArrays, { type: contentType })\n  return blob\n}\n","const REQUEST_IS_FINISHED = 'REQUEST_IS_FINISHED'\n\n/**\n * Emit event when request is finished\n * Used only for testers to prevent long delays in test cases\n * Triggers on Add to canvas / Aromatize / Dearomatize\n * Clean Up / Calculate CIP / Paste from clipboard\n * maybe somewhere else\n */\nexport function emitEventRequestIsFinished(): void {\n  window?.ketcher?.eventBus.emit(REQUEST_IS_FINISHED)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert'\nimport { tfx } from 'utilities'\n\nexport interface Point {\n  x?: number\n  y?: number\n  z?: number\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0)\n  static UNIT = new Vec2(1, 1)\n\n  x: number\n  y: number\n  z: number\n\n  constructor(point: Point)\n  constructor(x?: number, y?: number, z?: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0\n      this.y = 0\n      this.z = 0\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0)\n      this.y = parseFloat(args[0].y || 0)\n      this.z = parseFloat(args[0].z || 0)\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0)\n      this.y = parseFloat(args[1] || 0)\n      this.z = 0\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0])\n      this.y = parseFloat(args[1])\n      this.z = parseFloat(args[2])\n    } else {\n      throw new Error('Vec2(): invalid arguments')\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length()\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z)\n    )\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z)\n    )\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2))\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z)\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2()\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number)\n    }\n    return v\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2\n    )\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5)\n  }\n\n  static getLinePoint(lineStart: Vec2, lineEnd: Vec2, length) {\n    const difference = lineStart.sub(lineEnd)\n    const distance = difference.length()\n    const ratio = length / distance\n    return new Vec2(\n      lineStart.x + difference.x * ratio,\n      lineStart.y + difference.y * ratio\n    )\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z)\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y)\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z)\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s)\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z)\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0\n    return new Vec2(this.x, y1 - this.y, this.z)\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f)\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length())\n  }\n\n  normalize(): boolean {\n    const l = this.length()\n\n    if (l < 0.000001) return false\n\n    this.x /= l\n    this.y /= l\n\n    return true\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z)\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString()\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')'\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null)\n\n    return Vec2.max(this, v)\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v)\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z))\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z))\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle)\n    const cos = Math.cos(angle)\n\n    return this.rotateSC(sin, cos)\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin)\n    assert(cos === 0 || !!cos)\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z\n    )\n  }\n\n  rotateAroundOrigin(angleInDegrees: number, origin: Vec2) {\n    const angleInRadians = (angleInDegrees * Math.PI) / 180\n    const offsetX = this.x - origin.x\n    const offsetY = this.y - origin.y\n\n    const rotatedX =\n      Math.cos(angleInRadians) * offsetX - Math.sin(angleInRadians) * offsetY\n    const rotatedY =\n      Math.sin(angleInRadians) * offsetX + Math.cos(angleInRadians) * offsetY\n\n    const x = rotatedX + origin.x\n    const y = rotatedY + origin.y\n\n    return new Vec2(Number(tfx(x)), Number(tfx(y)), this.z || 0)\n  }\n\n  isInsidePolygon(points: Vec2[]) {\n    // ray-casting algorithm based on\n    // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n    const { x, y } = this\n    let inside = false\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i].x || 0\n      const yi = points[i].y || 0\n      const xj = points[j].x || 0\n      const yj = points[j].y || 0\n\n      const intersect =\n        yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi\n      if (intersect) inside = !inside\n    }\n\n    return inside\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item\n    }\n\n    return null\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this)\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false\n    }\n\n    return true\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression))\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this)\n\n    for (const item of setB) union.add(item)\n\n    return union\n  }\n\n  intersection(setB: Pile): Pile<TValue> {\n    const thisSet = new Pile(this)\n    return new Pile([...thisSet].filter((item) => setB.has(item)))\n  }\n\n  /**\n   * Union multiple sets which have intersections\n   * @example ```\n   * const setA = new Pile([0, 1])\n   * const setB = new Pile([1, 2])\n   * const setC = new Pile([2, 3])\n   * const setD = new Pile([4, 5])\n   * console.log(Pile.unionMultiple([setA, setB, setC, setD]))\n   * // [{0, 1, 2, 3}, {4, 5}]\n   * ```\n   */\n  static unionIntersections<T>(sets: Array<Pile<T>>): Array<Pile<T>> {\n    let unionized = false\n\n    // Union two of sets\n    const setsToReturn = sets.reduce((prevSets, curSet) => {\n      let isCurSetMerged = false\n\n      const newSets = prevSets.map((set) => {\n        const intersec = set.intersection(curSet)\n        if (intersec.size > 0) {\n          unionized = true\n          isCurSetMerged = true\n          return set.union(curSet)\n        }\n        return set\n      })\n\n      if (!isCurSetMerged) newSets.push(curSet)\n      return newSets\n    }, new Array<Pile<T>>())\n\n    // Recursively union two of sets === union all sets\n    return unionized ? Pile.unionIntersections(setsToReturn) : setsToReturn\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList'\nimport { Point, Vec2 } from './vec2'\n\nimport { Elements } from 'domain/constants'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue\n}\n\nfunction isCorrectPseudo(label) {\n  return (\n    !Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#'\n  )\n}\n\nfunction getPseudo(label: string) {\n  return isCorrectPseudo(label) ? label : ''\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2\n  } else {\n    return 0\n  }\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or'\n}\n\nenum CIP {\n  S = 'S',\n  R = 'R',\n  s = 's',\n  r = 'r'\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number\n  stereoLabel?: string | null\n  exactChangeFlag?: number\n  rxnFragmentType?: number\n  invRet?: number\n  aam?: number\n  hCount?: number\n  unsaturatedAtom?: number\n  substitutionCount?: number\n  ringBondCount?: number\n  explicitValence?: number\n  attpnt?: any\n  rglabel?: string | null\n  charge?: number\n  radical?: number\n  cip?: CIP | null\n  isotope?: number\n  alias?: string | null\n  pseudo?: string\n  atomList?: AtomListParams | null\n  label: string\n  fragment?: number\n  pp?: Point\n  implicitH?: number\n  implicitHCount?: number | null\n}\n\nexport class Atom {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3\n    }\n  }\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: 0,\n    radical: 0,\n    cip: null,\n    charge: 0,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attpnt: null,\n    aam: 0,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0,\n    implicitHCount: null\n  }\n\n  label: string\n  fragment: number\n  atomList: AtomList | null\n  attpnt: any\n  isotope: number\n  hCount: number\n  radical: number\n  cip: CIP | null\n  charge: number\n  explicitValence: number\n  ringBondCount: number\n  unsaturatedAtom: number\n  substitutionCount: number\n  valence: number\n  implicitH: number\n  implicitHCount: number | null\n  pp: Vec2\n  neighbors: Array<number>\n  sgs: Pile<number>\n  badConn: boolean\n  alias: string | null\n  rglabel: string | null\n  aam: number\n  invRet: number\n  exactChangeFlag: number\n  rxnFragmentType: number\n  stereoLabel?: string | null\n  stereoParity: number\n  hasImplicitH?: boolean\n  pseudo!: string\n\n  constructor(attributes: AtomAttributes) {\n    this.label = attributes.label\n    this.fragment = getValueOrDefault(attributes.fragment, -1)\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias)\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope)\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical)\n    this.cip = getValueOrDefault(attributes.cip, Atom.attrlist.cip)\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge)\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel)\n    this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt)\n    this.implicitHCount = getValueOrDefault(attributes.implicitHCount, null)\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence\n    )\n\n    this.valence = 0\n    this.implicitH = attributes.implicitHCount || attributes.implicitH || 0 // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2()\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile()\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount\n    )\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount\n    )\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom\n    )\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount)\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam)\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet)\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag\n    )\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1)\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel\n    )\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity\n    )\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null\n    this.neighbors = [] // set of half-bonds having this atom as their origin\n    this.badConn = false\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label)\n      },\n      set: function (value) {\n        if (isCorrectPseudo(value)) {\n          this.label = value\n        }\n      }\n    })\n  }\n\n  static getConnectedBondIds(struct: Struct, atomId: number): number[] {\n    const result: number[] = []\n    for (const [bondId, bond] of struct.bonds.entries()) {\n      if (bond.begin === atomId || bond.end === atomId) {\n        result.push(bondId)\n      }\n    }\n    return result\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {}\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr]\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr]\n    }\n  }\n\n  static isHeteroAtom(label: string): boolean {\n    return label !== 'C' && label !== 'H'\n  }\n\n  static isInAromatizedRing(struct: Struct, atomId: number): boolean {\n    const atom = struct.atoms.get(atomId)\n    if (atom && Atom.isHeteroAtom(atom.label)) {\n      for (const [_, loop] of struct.loops) {\n        const halfBondIds = loop.hbs\n        if (loop.aromatic) {\n          for (const halfBondId of halfBondIds) {\n            const halfBond = struct.halfBonds.get(halfBondId)\n            if (!halfBond) return false\n            const { begin, end } = halfBond\n            if (begin === atomId || end === atomId) {\n              return true\n            }\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  clone(fidMap: Map<number, number>): Atom {\n    const ret = new Atom(this)\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!\n    }\n    return ret\n  }\n\n  isQuery(): boolean {\n    return (\n      this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount\n    )\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === 0 &&\n      this.radical === 0 &&\n      this.charge === 0 &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    )\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label)\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attpnt !== null ||\n      this.aam\n    )\n  }\n\n  calcValence(connectionCount: number): boolean {\n    const label = this.label\n    const charge = this.charge\n    if (this.isQuery()) {\n      this.implicitH = 0\n      return true\n    }\n    const element = Elements.get(label)\n\n    const groupno = element?.group\n    const radicalCount = radicalElectrons(this.radical)\n    let valence = connectionCount\n    let hydrogenCount: any = 0\n    const absCharge = Math.abs(charge)\n\n    if (groupno === undefined) {\n      if (label === 'D' || label === 'T') {\n        valence = 1\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge\n      } else {\n        this.implicitH = 0\n        return true\n      }\n    } else if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge\n      }\n    } else if (groupno === 2) {\n      if (\n        connectionCount + radicalCount + absCharge === 2 ||\n        connectionCount + radicalCount + absCharge === 0\n      ) {\n        valence = 2\n      } else hydrogenCount = -1\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4\n          hydrogenCount = 4 - radicalCount - connectionCount\n        } else {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (radicalCount + connectionCount <= 2) {\n            valence = 2\n            hydrogenCount = 2 - radicalCount - connectionCount\n          } else {\n            valence = 4\n            hydrogenCount = 4 - radicalCount - connectionCount\n          }\n        } else if (charge === -2) {\n          if (radicalCount + connectionCount <= 3) {\n            valence = 3\n            hydrogenCount = 3 - radicalCount - connectionCount\n          } else {\n            valence = 5\n            hydrogenCount = 5 - radicalCount - connectionCount\n          }\n        } else if (radicalCount + connectionCount + absCharge <= 1) {\n          valence = 1\n          hydrogenCount = 1 - radicalCount - connectionCount - absCharge\n        } else {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4\n        hydrogenCount = 4 - radicalCount - connectionCount - absCharge\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge\n        } else {\n          valence = 4\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4\n          hydrogenCount = 4 - radicalCount - connectionCount\n        } else if (charge === 2) {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount\n        } else if (\n          label === 'N' ||\n          radicalCount + connectionCount + absCharge <= 3\n        ) {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (radicalCount + connectionCount <= 2 && label !== 'As') {\n            valence = 2\n            hydrogenCount = 2 - radicalCount - connectionCount\n          } else {\n            valence = 4\n            hydrogenCount = 4 - radicalCount - connectionCount\n          }\n        } else if (charge === 2) {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount\n        } else if (radicalCount + connectionCount <= 3) {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge\n        } else {\n          valence = 5\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3\n          hydrogenCount = 3 - radicalCount - connectionCount\n        } else {\n          valence = 2\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (connectionCount <= 3) {\n            valence = 3\n            hydrogenCount = 3 - radicalCount - connectionCount\n          } else {\n            valence = 5\n            hydrogenCount = 5 - radicalCount - connectionCount\n          }\n        } else if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge\n        } else if (connectionCount + radicalCount + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6\n          hydrogenCount = 6 - radicalCount - connectionCount - absCharge\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (connectionCount <= 2) {\n            valence = 2\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (connectionCount <= 2) {\n            valence = 2\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge\n          } else if (connectionCount <= 4) {\n            valence = 4\n            hydrogenCount = 4 - radicalCount - connectionCount - absCharge\n          } else if (charge === 0 && connectionCount <= 6) {\n            valence = 6\n            hydrogenCount = 6 - radicalCount - connectionCount - absCharge\n          } else {\n            hydrogenCount = -1\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (connectionCount <= 2) {\n            valence = 2\n            hydrogenCount = 2 - radicalCount - connectionCount\n          } else if (\n            connectionCount === 3 ||\n            connectionCount === 5 ||\n            connectionCount >= 7\n          ) {\n            hydrogenCount = -1\n          }\n        } else if (charge === 0) {\n          if (connectionCount <= 1) {\n            valence = 1\n            hydrogenCount = 1 - radicalCount - connectionCount\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (\n            connectionCount === 2 ||\n            connectionCount === 4 ||\n            connectionCount === 6\n          ) {\n            if (radicalCount === 1) {\n              valence = connectionCount\n              hydrogenCount = 0\n            } else {\n              hydrogenCount = -1 // will throw an error in the end\n            }\n          } else if (connectionCount > 7) {\n            hydrogenCount = -1 // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (connectionCount + radicalCount + absCharge === 0) valence = 1\n      else hydrogenCount = -1\n    }\n    if (Atom.isHeteroAtom(label) && this.implicitHCount !== null) {\n      hydrogenCount = this.implicitHCount\n    }\n    this.valence = valence\n    this.implicitH = hydrogenCount\n    if (this.implicitH < 0) {\n      this.valence = connectionCount\n      this.implicitH = 0\n      this.badConn = true\n      return false\n    }\n    return true\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge\n    const label = this.label\n    const element = Elements.get(this.label)\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0\n      return 0\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn\n        if (charge === 2) return rad + conn\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn\n        else if (charge === 2) return rad + conn\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn\n      }\n    }\n\n    return rad + conn + Math.abs(charge)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { Vec2 } from './vec2'\n\nenum CIP {\n  E = 'E',\n  Z = 'Z',\n  M = 'M',\n  P = 'P'\n}\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number\n  topology?: number\n  stereo?: number\n  xxx?: string\n  type: number\n  end: number\n  begin: number\n  cip?: CIP | null\n}\n\nexport class Bond {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12\n    }\n  }\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED,\n    cip: null\n  }\n\n  begin: number\n  end: number\n  readonly type: number\n  readonly xxx: string\n  readonly stereo: number\n  readonly topology: number\n  readonly reactingCenterStatus: number\n  len: number\n  sb: number\n  sa: number\n  cip?: CIP | null\n  hb1?: number\n  hb2?: number\n  angle: number\n  center: Vec2\n\n  constructor(attributes: BondAttributes) {\n    this.begin = attributes.begin\n    this.end = attributes.end\n    this.type = attributes.type\n    this.xxx = attributes.xxx || ''\n    this.stereo = Bond.PATTERN.STEREO.NONE\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER\n    this.reactingCenterStatus = 0\n    this.cip = attributes.cip ?? null\n    this.len = 0\n    this.sb = 0\n    this.sa = 0\n    this.angle = 0\n\n    if (attributes.stereo) this.stereo = attributes.stereo\n    if (attributes.topology) this.topology = attributes.topology\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus\n    }\n\n    this.center = new Vec2()\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {}\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr]\n      }\n    }\n    return attrs\n  }\n\n  static getBondNeighbourIds(struct: Struct, bondId: number) {\n    const bond = struct.bonds.get(bondId)!\n    const { begin, end } = bond\n    const beginBondIds = Atom.getConnectedBondIds(struct, begin).filter(\n      (id) => id !== bondId\n    )\n    const endBondIds = Atom.getConnectedBondIds(struct, end).filter(\n      (id) => id !== bondId\n    )\n    return { beginBondIds, endBondIds }\n  }\n\n  static getBenzeneConnectingBondType(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond\n  ): number | null {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE\n    const isFusingToDoubleBond =\n      bondBegin.type === SINGLE &&\n      bond.type === DOUBLE &&\n      bondEnd.type === SINGLE\n    const isFusingToSignleBond =\n      bondBegin.type === DOUBLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === DOUBLE\n    if (isFusingToDoubleBond) {\n      return DOUBLE\n    } else if (isFusingToSignleBond) {\n      return SINGLE\n    }\n    return null\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr]\n    }\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp\n    const p2 = struct.atoms.get(this.end).pp\n    return Vec2.lc2(p1, 0.5, p2, 0.5)\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp\n    const p2 = struct.atoms.get(this.end)!.pp\n    return p2.sub(p1).normalized()\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this)\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!\n      cp.end = aidMap.get(cp.end)!\n    }\n    return cp\n  }\n\n  getAttachedSGroups(struct: Struct) {\n    const sGroupsWithBeginAtom = struct.atoms.get(this.begin)?.sgs || new Pile()\n    const sGroupsWithEndAtom = struct.atoms.get(this.end)?.sgs || new Pile()\n    return sGroupsWithBeginAtom?.intersection(sGroupsWithEndAtom)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nimport { Bond } from './bond'\nimport { StereoLabel } from './atom'\nimport { Struct } from './struct'\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR'\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel)\n  if (!filteredStereoAtoms.length) return undefined\n\n  const atom = filteredStereoAtoms[0]!\n  const stereoLabel = atom.stereoLabel! // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel\n  )\n\n  let stereoFlag: StereoFlag\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0]\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs\n        break\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And\n        break\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or\n        break\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`)\n      }\n    }\n  }\n  return stereoFlag\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag\n  stereoFlagPosition?: Vec2\n  #stereoAtoms: Array<number>\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms]\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag\n  }\n\n  constructor(stereoAtoms: Array<number> = [], stereoFlagPosition?: Point) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition)\n    }\n\n    this.#stereoAtoms = stereoAtoms\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId)\n    if (!fragment) return undefined\n    const bb = fragment.getCoordBoundingBox()\n    return new Vec2(bb.max.x, bb.min.y - 1)\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!)\n    const fr = new Fragment(stereoAtoms, this.stereoFlagPosition)\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag\n    return fr\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n    return this.#enhancedStereoFlag\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid)\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid)\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId)\n      return true\n    }\n    return false\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId)\n      return true\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\n\nexport interface ScaleOptions {\n  scale: number\n}\n\nfunction scaled2obj(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(1 / options.scale)\n}\n\nfunction obj2scaled(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(options.scale)\n}\n\nexport const Scale = {\n  scaled2obj,\n  obj2scaled\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities'\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct\n) {\n  const beginAtom = struct.atoms.get(bond.begin)\n\n  let EndAtomNeigh: number | undefined = NaN\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider\n  functionalGroupsList: Struct[]\n  constructor() {\n    this.functionalGroupsList = []\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider()\n    }\n    return FunctionalGroupsProvider.instance\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list\n  }\n\n  public addToFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = [...this.functionalGroupsList, ...list]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class SaltsAndSolventsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: SaltsAndSolventsProvider\n  saltsAndSolventsList: Struct[]\n  constructor() {\n    this.saltsAndSolventsList = []\n  }\n\n  public static getInstance(): SaltsAndSolventsProvider {\n    if (!SaltsAndSolventsProvider.instance) {\n      SaltsAndSolventsProvider.instance = new SaltsAndSolventsProvider()\n    }\n    return SaltsAndSolventsProvider.instance\n  }\n\n  public getSaltsAndSolventsList() {\n    return this.saltsAndSolventsList\n  }\n\n  public setSaltsAndSolventsList(list: Struct[]): void {\n    this.saltsAndSolventsList = list\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\nexport class Box2Abs {\n  readonly p0: Vec2\n  readonly p1: Vec2\n\n  constructor()\n  constructor(p: Vec2)\n  constructor(p0: Vec2, p1: Vec2)\n  constructor(x0: number, y0: number, x1: number, y1: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min\n      this.p1 = args[0].max\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0]\n      this.p1 = args[1]\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1])\n      this.p1 = new Vec2(args[2], args[3])\n    } else if (args.length === 0) {\n      this.p0 = new Vec2()\n      this.p1 = new Vec2()\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!'\n      )\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString()\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1)\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb))\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null)\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p))\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null)\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    )\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d))\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function')\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options))\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0)\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1)\n  }\n\n  pos() {\n    return this.p0\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height\n    )\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1))\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x)\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x)\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x)\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x)\n\n    return dc * dd <= 0 && da * db <= 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { SaltsAndSolventsProvider } from '../helpers'\nimport { Vec2 } from './vec2'\nimport { ReStruct } from '../../application/render'\nimport { Pool } from 'domain/entities/pool'\nimport { ReSGroup } from 'application/render'\n\nexport class SGroupBracketParams {\n  readonly c: Vec2\n  readonly d: Vec2\n  readonly n: Vec2\n  readonly w: number\n  readonly h: number\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN'\n  }\n\n  type: string\n  id: number\n  label: number\n  bracketBox: any\n  bracketDir: Vec2\n  areas: any\n  hover: boolean\n  hovering: any\n  selected: boolean\n  selectionPlate: any\n  atoms: any\n  atomSet: any\n  parentAtomSet: any\n  patoms?: any\n  allAtoms: any\n  bonds: any\n  xBonds: any\n  neiAtoms: any\n  pp: Vec2 | null\n  data: any\n  firstSgroupAtom: any\n  firstSgroupAtomId: number\n\n  constructor(type: string) {\n    this.type = type\n    this.id = -1\n    this.label = -1\n    this.bracketBox = null\n    this.bracketDir = new Vec2(1, 0)\n    this.areas = []\n\n    this.hover = false\n    this.hovering = null\n    this.selected = false\n    this.selectionPlate = null\n\n    this.atoms = []\n    this.patoms = []\n    this.bonds = []\n    this.xBonds = []\n    this.neiAtoms = []\n    this.pp = null\n    this.firstSgroupAtomId = -1\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: ''\n    }\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr]\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {}\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr]\n    })\n    return attrs\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr]\n    this.data[attr] = value\n    return oldValue\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset)\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint\n\n    if (this.data.context === 'Atom' || this.data.context === 'Bond') {\n      const contentBoxes: Array<any> = []\n      let contentBB: Box2Abs | null = null\n      const direction = new Vec2(1, 0)\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid)\n        const pos = new Vec2(atom!.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        const bba = new Box2Abs(pos, pos).extend(ext, ext)\n        contentBoxes.push(bba)\n      })\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null\n        ;[bba.p0.x, bba.p1.x].forEach((x) => {\n          ;[bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y)\n            const p = new Vec2(\n              Vec2.dot(v, direction),\n              Vec2.dot(v, direction.rotateSC(1, 0))\n            )\n            bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n          })\n        })\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!)\n      })\n\n      topLeftPoint = contentBB!.p0\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5))\n    }\n\n    const sgroups = Array.from(struct.sgroups.values())\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5))\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0]\n        const sAtomPP = struct.atoms.get(sAtom)?.pp\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms)\n      }\n    }\n\n    this.pp = topLeftPoint\n  }\n\n  getAttAtomId(struct: Struct): number {\n    for (const atomId of this.atoms) {\n      const atom = struct.atoms.get(atomId)\n      if (!atom) continue\n      if (Number.isInteger(atom.attpnt)) return atomId\n    }\n    // in normal circumstances this should never be invoked\n    return this.atoms[0]\n  }\n\n  isGroupAttached(struct: Struct): boolean {\n    const attachPointId = this.getAttAtomId(struct)\n    const neighbours = struct.atomGetNeighbors(attachPointId)\n\n    return !neighbours?.every(({ aid }) => this.atoms.includes(aid))\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp) return null\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1)\n  }\n\n  static isSaltOrSolvent(moleculeName: string): boolean {\n    const saltsAndSolventsProvider = SaltsAndSolventsProvider.getInstance()\n    const saltsAndSolvents = saltsAndSolventsProvider.getSaltsAndSolventsList()\n    return saltsAndSolvents.some(\n      ({ name, abbreviation }) =>\n        name === moleculeName || moleculeName === abbreviation\n    )\n  }\n\n  static isAtomInSaltOrSolvent(\n    atomId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ atoms }) =>\n      atoms.some((atomIdInSaltOrSolvent) => atomIdInSaltOrSolvent === atomId)\n    )\n  }\n\n  static isBondInSaltOrSolvent(\n    bondId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ bonds }) =>\n      bonds.some((bondIdInSaltOrSolvent) => bondIdInSaltOrSolvent === bondId)\n    )\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = []\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      if (typeof map[aid] !== 'number') newAtoms.push(aid)\n      else if (map[aid] >= 0) newAtoms.push(map[aid])\n      else newAtoms.push(-1)\n    }\n    return newAtoms\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j])\n    }\n    return newAtoms\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap))\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type)\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field]\n    })\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem))\n    cp.pp = sgroup.pp\n    cp.bracketBox = sgroup.bracketBox\n    cp.patoms = null\n    cp.bonds = null\n    cp.allAtoms = sgroup.allAtoms\n    cp.data.expanded = sgroup.data.expanded\n    return cp\n  }\n\n  static addAtom(sgroup: SGroup, aid: number): void {\n    sgroup.atoms.push(aid)\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    if (!sgroup) {\n      return\n    }\n\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>\n  ): { [key: number]: Array<Bond> } {\n    const crossBonds: { [key: number]: Array<Bond> } = {}\n    mol.bonds.forEach((bond, bid) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = []\n        }\n        crossBonds[bond.begin].push(bid)\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = []\n        }\n        crossBonds[bond.end].push(bid)\n      }\n    })\n    return crossBonds\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    remol?: ReStruct,\n    render?\n  ): void {\n    const atoms = sGroup.atoms\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDir = new Vec2(1, 0)\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol)\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol)\n      sGroup.bracketDir = Vec2.diff(p2, p1).normalized()\n    }\n    const d = sGroup.bracketDir\n\n    let braketBox: Box2Abs | null = null\n    const contentBoxes: Array<any> = []\n    const getAtom = (aid) => {\n      if (remol && render) {\n        return remol.atoms.get(aid)\n      }\n      return mol.atoms.get(aid)\n    }\n    atoms.forEach((aid) => {\n      const atom = getAtom(aid)\n      const ext = new Vec2(0.05 * 3, 0.05 * 3)\n      let position\n      let structBoundingBox\n      if ('getVBoxObj' in atom && render) {\n        structBoundingBox = atom.getVBoxObj(render)\n      } else {\n        position = new Vec2(atom.pp)\n        structBoundingBox = new Box2Abs(position, position)\n      }\n      contentBoxes.push(structBoundingBox.extend(ext, ext))\n    })\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null\n      ;[bba.p0.x, bba.p1.x].forEach((x) => {\n        ;[bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y)\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)))\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n        })\n      })\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!)\n    })\n    const vext = new Vec2(0.2, 0.4)\n    if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext)\n    sGroup.bracketBox = braketBox\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n\n  ): Array<any> {\n    const brackets: Array<any> = []\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom)\n    const crossBonds = crossBondsPerAtomValues.flat()\n    if (crossBonds.length < 2) {\n      ;(function () {\n        d = d || new Vec2(1, 0)\n        n = n || d.rotateSC(1, 0)\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const bracketHeight = bb.sz().y\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight)\n        )\n      })()\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      ;(function () {\n        const b1 = mol.bonds.get(crossBonds[0])\n        const b2 = mol.bonds.get(crossBonds[1])\n        const cl0 = b1.getCenter(mol)\n        const cr0 = b2.getCenter(mol)\n        const dr = Vec2.diff(cr0, cl0).normalized()\n        const dl = dr.negated()\n\n        const bracketWidth = 0.25\n        const bracketHeight = 1.5\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight\n          )\n        )\n      })()\n    } else {\n      ;(function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i])\n          const c = b.getCenter(mol)\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated()\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0))\n        }\n      })()\n    }\n    return brackets\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp\n    let bb = new Box2Abs(a0, a0)\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      const atom = mol.atoms.get(aid)\n      const p = atom.pp\n      bb = bb.include(p)\n    }\n    return bb\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms\n    const atoms: Array<any> = []\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid)\n    })\n    return atoms\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg)\n    const bonds: Array<any> = []\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid)\n      }\n    })\n    return bonds\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b)\n    sgroup.atomSet = new Pile(sgroup.atoms)\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet)\n    const inBonds: Array<any> = []\n    const xBonds: Array<any> = []\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid)\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid)\n      }\n    })\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number')\n    }\n\n    let xAtom1 = -1\n    let xAtom2 = -1\n    let crossBond = null\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0])\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end\n\n      const bond2 = mol.bonds.get(xBonds[1])\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end\n      crossBond = bond2\n    }\n\n    let tailAtom = xAtom2\n\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {}\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid)\n        const aid2 = mol.atoms.add(new Atom(atom))\n        newAtoms.push(aid2)\n        sgroup.atomSet.add(aid2)\n        amap[aid] = aid2\n      })\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid)\n        const newBond = new Bond(bond)\n        newBond.begin = amap[newBond.begin]\n        newBond.end = amap[newBond.end]\n        mol.bonds.add(newBond)\n      })\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond)\n        newCrossBond.begin = tailAtom\n        newCrossBond.end = amap[xAtom1]\n        mol.bonds.add(newCrossBond)\n        tailAtom = amap[xAtom2]\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1])\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom\n      else xBond2.end = tailAtom\n    }\n    sgroup.bonds = xBonds\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid)\n        })\n    })\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2() // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length)\n    }\n    return c\n  }\n\n  static isAtomInContractedSGroup = (atom, sGroups) => {\n    const contractedSGroup: number[] = []\n\n    sGroups.forEach((sGroup) => {\n      const id = 'item' in sGroup ? sGroup.item.id : sGroup.id\n      if (this.isContractedSGroup(id, sGroups)) {\n        contractedSGroup.push(id)\n      }\n    })\n    return contractedSGroup.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedSGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>\n  ) {\n    return [...sGroups.values()].some((sGroup) => {\n      const atomsInSGroup = 'item' in sGroup ? sGroup.item.atoms : sGroup.atoms\n      const isContracted = !this.isExpandedSGroup(sGroup)\n      return (\n        isContracted &&\n        atomsInSGroup.includes(bond?.begin) &&\n        atomsInSGroup.includes(bond?.end)\n      )\n    })\n  }\n\n  static isSuperAtom(sGroup: SGroup): boolean {\n    if (!sGroup) {\n      return false\n    }\n    return sGroup?.type === SGroup.TYPES.SUP\n  }\n\n  static isDataSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.DAT\n  }\n\n  static isSRUSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.SRU\n  }\n\n  static isMulSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.MUL\n  }\n\n  static isExpandedSGroup(sGroup) {\n    return 'item' in sGroup ? sGroup?.item.data.expanded : sGroup.data.expanded\n  }\n\n  static isContractedSGroup(sGroupId, sGroups): boolean {\n    let isSGroup = false\n    let expanded = false\n    sGroups.forEach((sGroupItem) => {\n      const sGroupItemId =\n        'item' in sGroupItem ? sGroupItem?.item.id : sGroupItem.id\n      if (sGroupItemId === sGroupId) {\n        isSGroup = true\n        expanded = this.isExpandedSGroup(sGroupItem)\n      }\n    })\n    return !expanded && isSGroup\n  }\n\n  /**\n   * @returns `undefined`: if it's salt or solvent\n   */\n  static getAttachmentAtomIdBySGroupId(sGroupId: number, struct: Struct) {\n    const functionalGroup = struct.functionalGroups.get(sGroupId)\n    if (!SGroup.isSaltOrSolvent(functionalGroup?.name || '')) {\n      const sGroup = struct.sgroups.get(sGroupId)\n      return sGroup?.getAttAtomId(struct)\n    }\n    return undefined\n  }\n}\n\nfunction descriptorIntersects(sgroups: [], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5))\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5))\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ReSGroup } from 'application/render'\nimport assert from 'assert'\nimport { FunctionalGroupsProvider } from '../helpers'\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Pool } from './pool'\nimport { SGroup } from './sgroup'\nimport { Struct } from './struct'\n\nexport class FunctionalGroup {\n  #sgroup: SGroup\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null)\n\n    this.#sgroup = sgroup\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n    const {\n      data: { name },\n      type\n    } = sgroup\n    return (\n      type === 'SUP' &&\n      (functionalGroups.some((type) => type.name === name) ||\n        SGroup.isSaltOrSolvent(name))\n    )\n  }\n\n  static getFunctionalGroupByName(searchName: string): Struct | null {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n\n    let foundGroup\n    if (searchName) {\n      foundGroup = functionalGroups.find(({ name, abbreviation }) => {\n        return name === searchName || abbreviation === searchName\n      })\n    }\n\n    return foundGroup || null\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom\n    }\n    return null\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return bond\n    }\n    return null\n  }\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number\n  ): number | null\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned: true\n  ): FunctionalGroup | null\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned?: boolean\n  ): number | FunctionalGroup | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atomId))\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null\n  ): number | null\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned: true\n  ): FunctionalGroup | null\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned?: boolean\n  ): FunctionalGroup | number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bondId)) {\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId\n      }\n    }\n    return null\n  }\n\n  static findFunctionalGroupBySGroup(\n    functionalGroups: Pool<FunctionalGroup>,\n    sGroup?: SGroup\n  ) {\n    const key = functionalGroups.find(\n      (_, functionalGroup) => functionalGroup.relatedSGroupId === sGroup?.id\n    )\n    return key !== null ? functionalGroups.get(key) : undefined\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup)\n  }\n\n  static isAttachmentBond(sgroup, { begin, end }) {\n    return (\n      (sgroup.atoms.includes(begin) && !sgroup.atoms.includes(end)) ||\n      (sgroup.atoms.includes(end) && !sgroup.atoms.includes(begin))\n    )\n  }\n\n  // Checks, if S-Group is standalone or attached to some other structure\n  static isAttachedSGroup(sgroup, molecule) {\n    const { bonds } = molecule\n    for (const bond of bonds.values()) {\n      if (FunctionalGroup.isAttachmentBond(sgroup, bond)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * This function determines, if an atom is used for attachment to other structure.\n   * For example, having sgroup CF3, which looks like\n   *              F\n   *              |\n   *            F-C-F\n   *              |\n   *         other struct\n   * C – is an attachment point\n   */\n  static isAttachmentPointAtom(atomId: number, molecule: Struct): boolean {\n    const { sgroups, bonds } = molecule\n    const isAtomInSameFunctionalGroup = (otherAtomId, sgroup) =>\n      sgroup.atoms.includes(otherAtomId)\n    for (const sgroup of sgroups.values()) {\n      const isSGroup =\n        FunctionalGroup.isFunctionalGroup(sgroup) || SGroup.isSuperAtom(sgroup)\n      const isSGroupFound = sgroup.atoms.includes(atomId)\n      if (!isSGroup || !isSGroupFound) {\n        continue\n      }\n      for (const bond of bonds.values()) {\n        const isBondBeginInSGroupAndBondEndOutside =\n          bond.begin === atomId &&\n          !isAtomInSameFunctionalGroup(bond.end, sgroup)\n        const isBondEndInSGroupAndBondBeginOutside =\n          bond.end === atomId &&\n          !isAtomInSameFunctionalGroup(bond.begin, sgroup)\n        const isAttachmentBond =\n          isBondBeginInSGroupAndBondEndOutside ||\n          isBondEndInSGroupAndBondBeginOutside\n        if (isAttachmentBond) {\n          return true\n        }\n      }\n      // if atom in S-Group, which is not attached to any structure, then\n      // atoms[0] is considered as attachment point\n      if (!this.isAttachedSGroup(sgroup, molecule)) {\n        return sgroup.atoms[0] === atomId\n      }\n    }\n    return false\n  }\n\n  static getAttachmentPointCount(sGroup, molecule): number {\n    return sGroup.atoms?.reduce((count, currentAtom) => {\n      if (FunctionalGroup.isAttachmentPointAtom(currentAtom, molecule)) {\n        count++\n      }\n      return count\n    }, 0)\n  }\n\n  static isFirstAtomInFunctionalGroup(sgroups, aid): boolean {\n    for (const sg of sgroups.values()) {\n      if (FunctionalGroup.isFunctionalGroup(sg) && aid === sg.atoms[0]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom: Atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroups: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroups.push(sg.item.id)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.id)\n        }\n      })\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n    functionalGroups: Pool<FunctionalGroup>\n  ) {\n    return [...sGroups.values()].some((sGroup) => {\n      const sGroupId = 'item' in sGroup ? sGroup.item.id : sGroup.id\n      const atomsInSGroup = 'item' in sGroup ? sGroup.item.atoms : sGroup.atoms\n      const isContracted = FunctionalGroup.isContractedFunctionalGroup(\n        sGroupId,\n        functionalGroups\n      )\n      return (\n        isContracted &&\n        atomsInSGroup.includes(bond.begin) &&\n        atomsInSGroup.includes(bond.end)\n      )\n    })\n  }\n\n  static isContractedFunctionalGroup(sgroupId, functionalGroups): boolean {\n    let isFunctionalGroup = false\n    let expanded = false\n    functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroupId === sgroupId) {\n        isFunctionalGroup = true\n        expanded = fg.isExpanded\n      }\n    })\n    return !expanded && isFunctionalGroup\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\n/** @internal */\nexport class HalfBond {\n  begin: number\n  end: number\n  bid: number\n  dir: Vec2\n  norm: Vec2\n  ang: number\n  p: Vec2\n  loop: number\n  contra: number\n  next: number\n  leftSin: number\n  leftCos: number\n  leftNeighbor: number\n  rightSin: number\n  rightCos: number\n  rightNeighbor: number\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.')\n\n    this.begin = begin\n    this.end = end\n    this.bid = bid\n\n    // rendering properties\n    this.dir = new Vec2() // direction\n    this.norm = new Vec2() // left normal\n    this.ang = 0 // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2() // corrected origin position\n    this.loop = -1 // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1 // the half bond contrary to this one\n    this.next = -1 // the half-bond next ot this one in CCW order\n    this.leftSin = 0\n    this.leftCos = 0\n    this.leftNeighbor = 0\n    this.rightSin = 0\n    this.rightCos = 0\n    this.rightNeighbor = 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond'\nimport { Struct } from './struct'\n\nexport class Loop {\n  hbs: number[]\n  dblBonds: number\n  aromatic: boolean\n  convex: boolean\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs // set of half-bonds involved\n    this.dblBonds = 0 // number of double bonds in the loop\n    this.aromatic = true\n    this.convex = isConvex || false\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Pool } from './pool'\n\nexport interface RGroupAttributes {\n  index?: number\n  ifthen?: number\n  resth?: boolean\n  range?: string\n}\nexport class RGroup {\n  frags: Pile<number>\n  resth: boolean\n  range: string\n  ifthen: number\n  index: number\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>()\n    this.resth = atrributes?.resth || false\n    this.range = atrributes?.range || ''\n    this.ifthen = atrributes?.ifthen || 0\n    this.index = atrributes?.index || -1\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid))\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index\n    }\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this)\n    this.frags.forEach((fid) => {\n      ret.frags.add(fidMap ? fidMap.get(fid)! : fid)\n    })\n    return ret\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle'\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode\n  pos?: Array<Point>\n  height?: number\n}\n\nexport class RxnArrow {\n  mode: RxnArrowMode\n  pos: Array<Vec2>\n  height?: number\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle\n    ].includes(arrow.mode)\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    this.pos = []\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n    this.mode = attributes.mode\n    const defaultHeight = 2\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this)\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1])\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport interface RxnPlusAttributes {\n  pp?: Point\n}\n\nexport class RxnPlus {\n  pp: Vec2\n\n  constructor(attributes?: RxnPlusAttributes) {\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2()\n  }\n\n  clone() {\n    return new RxnPlus(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>\n  /** node id -> list of child ids */\n  children: Map<number, number[]>\n  atomSets: Map<number, any>\n\n  constructor() {\n    this.parent = new Map()\n    this.children = new Map()\n\n    this.children.set(-1, []) // extra root node\n    this.atomSets = new Map()\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = []\n    const queue = Array.from(this.children.get(-1) as Array<number>)\n    while (queue.length > 0) {\n      const id = queue.shift()\n      if (typeof id !== 'number') {\n        break\n      }\n      const children = this.children.get(id)\n      if (typeof children === 'undefined') {\n        break\n      }\n\n      children.forEach((id) => {\n        queue.push(id)\n      })\n\n      order.push(id)\n    }\n\n    return order\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map()\n    const isSubset = new Map()\n\n    this.atomSets.delete(newId)\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms))\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms)\n      )\n    })\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false\n      }\n      const childs = this.children.get(sgid)\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0\n    })\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id))\n    )\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0]\n    }\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = []\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id)\n    }\n    return path\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest')\n    assert(!this.children.has(id), 'sgid already present in the forest')\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms))\n      parent = guess.parent\n      children = guess.children\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id)\n    })\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id))\n    )\n    this.parent.set(id, parent)\n    this.children.get(parent)?.push(id)\n    this.atomSets.set(id, new Pile(atoms))\n\n    return { parent, children }\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId)\n    if (typeof parentId === 'undefined') {\n      return\n    }\n\n    const childs = this.children.get(parentId)\n    if (!childs) {\n      return\n    }\n\n    const childIndex = childs.indexOf(childId)\n    childs.splice(childIndex, 1)\n    this.parent.set(childId, id)\n  }\n\n  remove(id) {\n    try {\n      assert(this.parent.has(id), 'sgid is not in the forest')\n      assert(this.children.has(id), 'sgid is not in the forest')\n    } catch (e) {\n      console.info('error: sgid is not in the forest')\n    }\n\n    const parentId = this.parent.get(id) as any\n    const childs = this.children.get(parentId) as any\n\n    if (!parentId || !childs) return\n\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId)\n      this.children.get(parentId)?.push(childId)\n    })\n\n    const i = childs.indexOf(id)\n    childs.splice(i, 1)\n\n    this.children.delete(id)\n    this.parent.delete(id)\n    this.atomSets.delete(id)\n  }\n}\n\nexport function checkOverlapping(struct, atoms) {\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid)\n    return res.union(atom.sgs)\n  }, new Pile())\n\n  return Array.from(sgroups).some((sid) => {\n    const sg = struct.sgroups.get(sid)\n    if (sg.type === 'DAT') return false\n    const sgAtoms = SGroup.getAtoms(struct, sg)\n\n    return sgAtoms.length < atoms.length\n      ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n      : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line'\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode\n  pos?: Array<Point>\n}\n\nexport class SimpleObject {\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    this.pos = []\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this)\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1])\n      }\n      default:\n        return this.pos[0]\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0\n\n  add(item: TValue): number {\n    const id = this.nextId++\n    super.set(id, item)\n    return id\n  }\n\n  newId(): number {\n    return this.nextId++\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key\n    }\n\n    return null\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key\n    }\n\n    return null\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value))\n    )\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, radicalElectrons } from './atom'\n\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Elements } from 'domain/constants'\nimport { Fragment } from './fragment'\nimport { FunctionalGroup } from './functionalGroup'\nimport { HalfBond } from './halfBond'\nimport { Loop } from './loop'\nimport { Pile } from './pile'\nimport { Pool } from './pool'\nimport { RGroup } from './rgroup'\nimport { RxnArrow } from './rxnArrow'\nimport { RxnPlus } from './rxnPlus'\nimport { SGroup } from './sgroup'\nimport { SGroupForest } from './sgroupForest'\nimport { SimpleObject } from './simpleObject'\nimport { Text } from './text'\nimport { Vec2 } from './vec2'\nimport { Highlight } from './highlight'\n\nexport type Neighbor = {\n  aid: number\n  bid: number\n}\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false\n  }\n  array.push(item)\n  return true\n}\n\nexport class Struct {\n  atoms: Pool<Atom>\n  bonds: Pool<Bond>\n  sgroups: Pool<SGroup>\n  halfBonds: Pool<HalfBond>\n  loops: Pool<Loop>\n  isReaction: boolean\n  rxnArrows: Pool<RxnArrow>\n  rxnPluses: Pool<RxnPlus>\n  frags: Pool<Fragment | null>\n  rgroups: Pool<RGroup>\n  name: string\n  abbreviation?: string\n  sGroupForest: SGroupForest\n  simpleObjects: Pool<SimpleObject>\n  texts: Pool<Text>\n  functionalGroups: Pool<FunctionalGroup>\n  highlights: Pool<Highlight>\n\n  constructor() {\n    this.atoms = new Pool<Atom>()\n    this.bonds = new Pool<Bond>()\n    this.sgroups = new Pool<SGroup>()\n    this.halfBonds = new Pool<HalfBond>()\n    this.loops = new Pool<Loop>()\n    this.isReaction = false\n    this.rxnArrows = new Pool<RxnArrow>()\n    this.rxnPluses = new Pool<RxnPlus>()\n    this.frags = new Pool<Fragment>()\n    this.rgroups = new Pool<RGroup>()\n    this.name = ''\n    this.abbreviation = ''\n    this.sGroupForest = new SGroupForest()\n    this.simpleObjects = new Pool<SimpleObject>()\n    this.texts = new Pool<Text>()\n    this.functionalGroups = new Pool<FunctionalGroup>()\n    this.highlights = new Pool<Highlight>()\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    )\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses()\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    )\n  }\n\n  isSingleGroup(): boolean {\n    if (!this.sgroups.size || this.sgroups.size > 1) return false\n    const sgroup = this.sgroups.values().next().value // get sgroup from map\n    return this.atoms.size === sgroup.atoms.length\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet\n    )\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>()\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid)\n    })\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid)\n        })\n      })\n    })\n\n    return this.clone(atomSet)\n  }\n\n  getFragmentIds(fid: number): Pile<number> {\n    const atomSet = new Pile<number>()\n\n    this.atoms.forEach((atom, aid) => {\n      if (atom.fragment === fid) atomSet.add(aid)\n    })\n\n    return atomSet\n  }\n\n  getFragment(fid: number): Struct {\n    return this.clone(this.getFragmentIds(fid), null, true)\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys())\n    bondSet = bondSet || new Pile<number>(this.bonds.keys())\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys())\n    textsSet = textsSet || new Pile<number>(this.texts.keys())\n    aidMap = aidMap || new Map()\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end)\n    })\n\n    const fidMask = new Pile()\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment)\n    })\n\n    const fidMap = new Map()\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null))\n    })\n\n    const rgroupsIds: Array<number> = []\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) keepGroup = true\n        })\n\n        if (!keepGroup) return\n      }\n\n      const rg = cp.rgroups.get(rgid)\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid))\n        })\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap))\n      }\n    })\n\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid)\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)) // clone Fragments\n      }\n    })\n\n    const bidMap = new Map()\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)))\n    })\n\n    this.sgroups.forEach((sg) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return\n\n      sg = SGroup.clone(sg, aidMap!)\n      const id = cp.sgroups.add(sg)\n      sg.id = id\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid)\n        if (atom) {\n          atom.sgs.add(id)\n        }\n      })\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, [])\n      else cp.sGroupForest.insert(sg)\n    })\n\n    this.functionalGroups.forEach((fg) => {\n      fg = FunctionalGroup.clone(fg)\n      cp.functionalGroups.add(fg)\n    })\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone())\n    })\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone())\n    })\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone())\n      })\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone())\n      })\n    }\n\n    cp.name = this.name\n\n    return cp\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds()\n    this.initNeighbors()\n    this.updateHalfBonds(Array.from(this.atoms.keys()))\n    this.sortNeighbors(Array.from(this.atoms.keys()))\n    this.findLoops()\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid)\n    this.atoms.get(aid)!.sgs.add(sgid)\n  }\n\n  calcConn(atom) {\n    let conn = 0\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!\n      const bond = this.bonds.get(hb.bid)!\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1\n          break\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2\n          break\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3\n          break\n        case Bond.PATTERN.TYPE.DATIVE:\n          break\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true]\n          return [atom.neighbors.length, true]\n        default:\n          return [-1, false]\n      }\n    }\n    return [conn, false]\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin)\n    )\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = []\n    })\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n      a1.neighbors.push(bond.hb1!)\n      a2.neighbors.push(bond.hb2!)\n    })\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!\n    bond.hb1 = 2 * bid\n    bond.hb2 = 2 * bid + 1 // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid))\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid))\n    const hb1 = this.halfBonds.get(bond.hb1)!\n    const hb2 = this.halfBonds.get(bond.hb2)!\n    hb1.contra = bond.hb2\n    hb2.contra = bond.hb1\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!\n    const startCoords = this.atoms.get(halfBond.begin)!.pp\n    const endCoords = this.atoms.get(halfBond.end)!.pp\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized()\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0)\n    halfBond.norm = halfBond.dir.turnLeft()\n    halfBond.ang = halfBond.dir.oxAngle()\n    if (halfBond.loop < 0) halfBond.loop = -1\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear()\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond)\n    })\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!\n    const hbl = this.halfBonds.get(left)!\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir)\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir)\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir)\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir)\n\n    hb.leftNeighbor = left\n    hbl.rightNeighbor = hbid\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!\n    const atom = this.atoms.get(hb.begin)!\n\n    let i\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break\n    }\n    atom.neighbors.splice(i, 0, hbid)\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length]\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length]\n    this.setHbNext(il, hbid)\n    this.setHbNext(hbid, ir)\n    this.halfBondSetAngle(hbid, il)\n    this.halfBondSetAngle(ir, hbid)\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!\n    const halfBonds = this.halfBonds\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length]\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei\n        this.halfBondSetAngle(nextNei, nei)\n      })\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid)\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra)\n    })\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = []\n      sg.neiAtoms = []\n    })\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.end)\n        }\n      })\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.begin)\n        }\n      })\n    })\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid)\n    })\n\n    this.sGroupForest.remove(sgid)\n    this.sgroups.delete(sgid)\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!\n    item.pp = pp\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!\n    item.pp = pp\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id)\n    if (item) {\n      item.pos = pos\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!\n    item.pos = pos\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id)\n\n    if (item) {\n      item.position = position\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp\n        }\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec)\n            bb.max = Vec2.max(bb.max, vec)\n          })\n        } else {\n          bb.min = Vec2.min(bb.min, pp)\n          bb.max = Vec2.max(bb.max, pp)\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp)\n    })\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp)\n      })\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos)\n      })\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos)\n      })\n      this.texts.forEach((item) => {\n        extend(item.position)\n      })\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1)\n      }\n    }\n    return bb\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp)\n        }\n      } else {\n        bb.min = Vec2.min(bb.min, pp)\n        bb.max = Vec2.max(bb.max, pp)\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp)\n    })\n    return bb\n  }\n\n  getBondLengthData() {\n    let totalLength = 0\n    let cnt = 0\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp\n      )\n      cnt++\n    })\n    return { cnt, totalLength }\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData()\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0\n    let minDist\n    let dist = 0\n    const keys = Array.from(this.atoms.keys())\n    let k\n    let j\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp\n        )\n        if (minDist < 0 || minDist > dist) minDist = dist\n      }\n      totalDist += minDist\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end)\n    )\n\n    return key !== undefined\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid]\n    const ids = new Pile<number>()\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)!\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds()\n      this.initNeighbors()\n      this.updateHalfBonds(Array.from(this.atoms.keys()))\n      this.sortNeighbors(Array.from(this.atoms.keys()))\n    }\n\n    let addedAtoms = new Pile<number>()\n\n    const components: Array<any> = []\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid)\n        components.push(component)\n        addedAtoms = addedAtoms.union(component)\n      }\n    })\n\n    return components\n  }\n\n  markFragment(idSet: Pile<number>) {\n    const frag = new Fragment()\n    const fid = this.frags.add(frag)\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true)\n      atom.fragment = fid\n    })\n  }\n\n  markFragments() {\n    const components = this.findConnectedComponents()\n    components.forEach((comp) => {\n      this.markFragment(comp)\n    })\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale)\n    })\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale)\n    })\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale))\n    })\n\n    this.sgroups.forEach((item) => {\n      item.pp = item.pp ? item.pp.scaled(scale) : null\n    })\n\n    this.texts.forEach((item) => {\n      // Scale text only for reactions - i.e file contains reaction arrows\n      const isReactionStruct = this.rxnArrows.size\n      if (isReactionStruct) {\n        item.pos = item.pos.map((p) => p.scaled(scale))\n        item.position = item.position.scaled(scale)\n      }\n    })\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength()\n    if (avg < 0 && !this.isReaction) {\n      // TODO [MK] this doesn't work well for reactions as the distances between\n      // the atoms in different components are generally larger than those between atoms of a single component\n      // (KETCHER-341)\n      avg = this.getAvgClosestAtomDistance()\n    }\n    if (avg < 1e-3) avg = 1\n\n    const scale = 1 / avg\n    this.scale(scale)\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!\n      const ai = this.atoms.get(hbi.begin)!.pp\n      const bi = this.atoms.get(hbi.end)!.pp\n      const set = new Pile([hbi.begin, hbi.end])\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp\n        const bj = this.atoms.get(hbj.end)!.pp\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true\n      }\n    }\n\n    return false\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = []\n    let continueFlag = true\n    while (continueFlag) {\n      const atomToHalfBond = {} // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l]\n        const aid1 = this.halfBonds.get(hbid)!.begin\n        const aid2 = this.halfBonds.get(hbid)!.end\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2] // where the subloop begins\n          const subloop = loop.slice(s, l + 1)\n          subloops.push(subloop)\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1)\n          }\n          continueFlag = true\n          break\n        }\n        atomToHalfBond[aid1] = l\n      }\n      if (!continueFlag) subloops.push(loop) // we're done, no more subloops found\n    }\n    return subloops\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!\n    const hbb = this.halfBonds.get(hbid2)!\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir))\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length])\n      return angle <= 0\n    })\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length]\n      const hbb = this.halfBonds.get(hbidb)!\n      const angle = this.halfBondAngle(hbida, hbidb)\n      totalAngle += hbb.contra === hbida ? Math.PI : angle // back and forth along the same edge\n    })\n    return Math.abs(totalAngle) < Math.PI\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = []\n    const bondsToMark = new Pile<number>()\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext)\n          continue // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop)\n        subloops.forEach((loop) => {\n          let loopId\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop)\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop))\n            )\n          } else {\n            loopId = -2\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid)\n          })\n\n          if (loopId >= 0) newLoops.push(loopId)\n        })\n        break\n      }\n    })\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark)\n    }\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!\n    const [conn, isAromatic] = this.calcConn(atom)\n    let correctConn = conn\n    atom.badConn = false\n\n    if (isAromatic) {\n      if (atom.label === 'C' && atom.charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical)\n          return\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical)\n          return\n        }\n      } else if (\n        (atom.label === 'O' && atom.charge === 0) ||\n        (atom.label === 'N' && atom.charge === 0 && conn === 3) ||\n        (atom.label === 'N' && atom.charge === 1 && conn === 3) ||\n        (atom.label === 'S' && atom.charge === 0 && conn === 3)\n      ) {\n        atom.implicitH = 0\n        return\n      } else if (!atom.hasImplicitH) {\n        correctConn++\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery()) {\n      atom.implicitH = 0\n      return\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label)\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0\n        atom.badConn = true\n      }\n    } else {\n      atom.calcValence(correctConn)\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true\n      }\n    })\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid)\n        }\n      })\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!\n      return {\n        aid: hb.end,\n        bid: hb.bid\n      }\n    })\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true)\n    const barriers: Array<any> = []\n    let arrowPos: number | null = null\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x\n    })\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x)\n    })\n\n    if (arrowPos !== null) barriers.push(arrowPos)\n\n    barriers.sort((a, b) => a - b)\n\n    const components: Array<any> = []\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component)\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n      let j = 0\n\n      while (c.x > barriers[j]) ++j\n\n      components[j] = components[j] || new Pile()\n      components[j] = components[j].union(component)\n    })\n\n    const submolTexts: Array<string> = []\n    const reactants: Array<any> = []\n    const products: Array<any> = []\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('')\n        return\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0\n      )\n\n      if (rxnFragmentType === 1) reactants.push(component)\n      else products.push(component)\n    })\n\n    return {\n      reactants,\n      products\n    }\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset)\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n    return c.x < arrowpos ? 1 : 2\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin\n    return aid && this.atoms.get(aid)?.fragment\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (\n        FunctionalGroup.isFunctionalGroup(sgroup) ||\n        SGroup.isSuperAtom(sgroup)\n      ) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup))\n      }\n    })\n  }\n\n  getGroupIdFromAtomId(atomId: number): number | null {\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (sgroup.atoms.includes(atomId)) return groupId\n    }\n    return null\n  }\n\n  // TODO: simplify if bonds ids ever appear in sgroup\n  // ! deprecate\n  getGroupIdFromBondId(bondId: number): number | null {\n    const bond = this.bonds.get(bondId)\n    if (!bond) return null\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        return groupId\n      }\n    }\n    return null\n  }\n\n  getGroupsIdsFromBondId(bondId: number): number[] {\n    const bond = this.bonds.get(bondId)\n    if (!bond) return []\n\n    const groupsIds: number[] = []\n\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        groupsIds.push(groupId)\n      }\n    }\n    return groupsIds\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2'\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE'\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string\n  position: Point\n  pos: Array<Point>\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()]\n  }\n\n  return positions.map((position) => new Vec2(position))\n}\n\nexport class Text {\n  content: string\n  position: Vec2\n  pos: Array<Vec2>\n\n  constructor(attributes?: TextAttributes) {\n    this.pos = preparePositions(attributes?.pos)\n    this.content = attributes?.content || ''\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2()\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || []\n  }\n\n  clone(): Text {\n    return new Text(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n}\n\nexport class Highlight {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes\n    this.color = color\n    this.atoms = atoms\n    this.bonds = bonds\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { cloneDeepWith, cloneDeep } from 'lodash'\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value)\n    clonedValue.y = -clonedValue.y\n    return clonedValue\n  }\n}\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer)\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data)\n  }\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\n\nexport function headerToKet(struct: Struct): any {\n  const header = {}\n\n  ifDef(header, 'moleculeName', struct.name, '')\n  ifDef(header, 'creatorProgram', null, '')\n  ifDef(header, 'comment', null, '')\n\n  return Object.keys(header).length !== 0 ? header : null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = []\n  let rgi\n  let val\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1\n      res.push(val) // push the string\n    }\n  }\n  return res\n}\n\nexport function moleculeToKet(struct: Struct): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      if (atom.label === 'R#') return rglabelToKet(atom)\n      if (atom.label === 'L#') return atomListToKet(atom)\n      return atomToKet(atom)\n    })\n  }\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet)\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup)\n    )\n  }\n\n  const fragment = struct.frags.get(0)\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null)\n  }\n  return {\n    type: 'molecule',\n    ...body\n  }\n}\n\nfunction atomToKet(source) {\n  const result = {}\n  ifDef(result, 'label', source.label)\n  ifDef(result, 'alias', source.alias)\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'charge', source.charge, 0)\n  ifDef(result, 'explicitValence', source.explicitValence, -1)\n  ifDef(result, 'isotope', source.isotope, 0)\n  ifDef(result, 'radical', source.radical, 0)\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'cip', source.cip, '')\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null)\n  ifDef(result, 'stereoParity', source.stereoCare, 0)\n  ifDef(result, 'weight', source.weight, 0)\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0)\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0)\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false)\n  ifDef(result, 'hCount', source.hCount, 0)\n  // reaction\n  ifDef(result, 'mapping', parseInt(source.aam), 0)\n  ifDef(result, 'invRet', source.invRet, 0)\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false)\n  ifDef(result, 'implicitHCount', source.implicitHCount)\n  return result\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`\n  )\n  ifDef(result, '$refs', refsToRGroups)\n\n  return result\n}\n\nfunction atomListToKet(source) {\n  const result = {\n    type: 'atom-list'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'elements', source.atomList.labelList())\n  ifDef(result, 'notList', source.atomList.notList, false)\n  return result\n}\n\nfunction bondToKet(source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', [source.begin, source.end])\n  ifDef(result, 'stereo', source.stereo, 0)\n  ifDef(result, 'topology', source.topology, 0)\n  ifDef(result, 'center', source.reactingCenterStatus, 0)\n  ifDef(result, 'cip', source.cip, '')\n\n  return result\n}\n\nfunction sgroupToKet(struct, source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', source.atoms)\n\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1)\n      break\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n')\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht'\n      )\n      break\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '')\n      ifDef(result, 'expanded', source.data.expanded)\n      ifDef(result, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      const data = source.data\n      ifDef(result, 'placement', data.absolute, true)\n      ifDef(result, 'display', data.attached, false)\n      ifDef(result, 'context', data.context)\n      ifDef(result, 'fieldName', data.fieldName)\n      ifDef(result, 'fieldData', data.fieldValue)\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source))\n      break\n    }\n    default:\n      break\n  }\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport { ifDef } from 'utilities'\n\nexport function toRlabel(values) {\n  let res = 0\n  values.forEach((val) => {\n    const rgi = val - 1\n    res |= 1 << rgi\n  })\n  return res\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = new Struct()\n  ketItem.atoms.forEach((atom) => {\n    if (atom.type === 'rg-label') struct.atoms.add(rglabelToStruct(atom))\n    if (atom.type === 'atom-list') struct.atoms.add(atomListToStruct(atom))\n    if (!atom.type) struct.atoms.add(atomToStruct(atom))\n  })\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)))\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroup) =>\n      struct.sgroups.add(sgroupToStruct(sgroup))\n    )\n  }\n\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.markFragments()\n  struct.bindSGroupsToFunctionalGroups()\n\n  return struct\n}\n\nexport function atomToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'label', source.label)\n  ifDef(params, 'alias', source.alias)\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'charge', source.charge)\n  ifDef(params, 'explicitValence', source.explicitValence)\n  ifDef(params, 'isotope', source.isotope)\n  ifDef(params, 'radical', source.radical)\n  ifDef(params, 'cip', source.cip)\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel)\n  ifDef(params, 'stereoParity', source.stereoParity)\n  ifDef(params, 'weight', source.weight)\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount)\n  ifDef(params, 'substitutionCount', source.substitutionCount)\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)))\n  ifDef(params, 'hCount', source.hCount)\n  // reaction\n  ifDef(params, 'aam', source.mapping)\n  ifDef(params, 'invRet', source.invRet)\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)))\n  // implicit hydrogens\n  ifDef(params, 'implicitHCount', source.implicitHCount)\n  return new Atom(params)\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {}\n  params.label = 'R#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const rglabel = toRlabel(source.$refs.map((el) => parseInt(el.slice(3))))\n  ifDef(params, 'rglabel', rglabel)\n  return new Atom(params)\n}\n\nexport function atomListToStruct(source) {\n  const params: any = {}\n  params.label = 'L#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const ids = source.elements\n    .map((el) => Elements.get(el)?.number)\n    .filter((id) => id)\n  ifDef(params, 'atomList', {\n    ids,\n    notList: source.notList\n  })\n  return new Atom(params)\n}\n\nexport function bondToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'type', source.type)\n  ifDef(params, 'topology', source.topology)\n  ifDef(params, 'reactingCenterStatus', source.center)\n  ifDef(params, 'stereo', source.stereo)\n  ifDef(params, 'cip', source.cip)\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0])\n  ifDef(params, 'end', source.atoms[1])\n\n  return new Bond(params)\n}\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type)\n  ifDef(sgroup, 'atoms', source.atoms)\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul)\n      break\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript)\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase())\n      break\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name)\n      ifDef(sgroup.data, 'expanded', source.expanded)\n      ifDef(sgroup, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement)\n      ifDef(sgroup.data, 'attached', source.display)\n      ifDef(sgroup.data, 'context', source.context)\n      ifDef(sgroup.data, 'fieldName', source.fieldName)\n      ifDef(sgroup.data, 'fieldValue', source.fieldData)\n      break\n    }\n    default:\n      break\n  }\n  return sgroup\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, Pool, SGroup, Struct, Vec2 } from 'domain/entities'\n\ntype KetNode = {\n  type: string\n  fragment?: Struct\n  center: Vec2\n  data?: any\n}\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: KetNode[] = []\n\n  const rgFrags = new Set() // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid))\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile()\n    )\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup }\n    })\n  }\n\n  const filteredFragmentIds = Array.from(struct.frags.keys()).filter(\n    (fid) => !rgFrags.has(fid)\n  )\n  addMolecules(ketNodes, filteredFragmentIds, struct)\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height\n      }\n    })\n  })\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {}\n    })\n  })\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos\n      }\n    })\n  })\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos\n      }\n    })\n  })\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values())\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined)\n      )\n      const filteredSGroupsMap = new Pool<SGroup>()\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg)\n      })\n      ketNode.fragment.sgroups = filteredSGroupsMap\n    }\n  })\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet)\n  return Vec2.centre(bb.min, bb.max)\n}\n\n/**\n * Merge fragments which are in the same S-Groups to one fragment(molecule)\n * and add new fragments(molecules) to KetNodes\n * See: https://github.com/epam/ketcher/issues/2142\n */\nfunction addMolecules(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct\n) {\n  const sGroupFragmentsMap = generateSGroupFragmentsMap(\n    ketNodes,\n    fragmentIds,\n    struct\n  )\n  const mergedFragments = Pile.unionIntersections(\n    Array.from(sGroupFragmentsMap.values())\n  )\n\n  mergedFragments.forEach((fragments) => {\n    let atomSet = new Pile<number>()\n    fragments.forEach((fragmentId) => {\n      atomSet = atomSet.union(struct.getFragmentIds(fragmentId))\n    })\n    ketNodes.push({\n      type: 'molecule',\n      fragment: struct.clone(atomSet),\n      center: getFragmentCenter(struct, atomSet)\n    })\n  })\n}\n\n/**\n * @example Give `fragmentIds` is `[0, 1]`,\n * and S-Group0 includes fragment0 and fragment1,\n * and S-Group1 includes fragment1,\n * then return value should be\n * ```\n * {\n *   0: [0, 1],\n *   1: [1]\n * }\n * ```\n */\nfunction generateSGroupFragmentsMap(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct\n) {\n  const sGroupFragmentsMap = new Map<number, Pile<number>>()\n\n  fragmentIds.forEach((fragmentId) => {\n    const atomsInFragment = struct.getFragmentIds(fragmentId)\n\n    let hasAtomInSGroup = false\n    atomsInFragment.forEach((atomId) => {\n      struct.atoms.get(atomId)?.sgs.forEach((sGroupId) => {\n        hasAtomInSGroup = true\n        const fragmentSet = sGroupFragmentsMap.get(sGroupId)\n        if (fragmentSet) {\n          fragmentSet.add(fragmentId)\n        } else {\n          sGroupFragmentsMap.set(sGroupId, new Pile([fragmentId]))\n        }\n      })\n    })\n\n    if (!hasAtomInSGroup) {\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(atomsInFragment),\n        center: getFragmentCenter(struct, atomsInFragment)\n      })\n    }\n  })\n\n  return sGroupFragmentsMap\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\nimport { moleculeToKet } from './moleculeToKet'\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct)\n  }\n\n  return {\n    ...body,\n    type: 'rgroup'\n  }\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {}\n\n  ifDef(result, 'number', rgnumber)\n  ifDef(result, 'range', rglogic.range, '')\n  ifDef(result, 'resth', rglogic.resth, false)\n  ifDef(result, 'ifthen', rglogic.ifthen, 0)\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\nimport { moleculeToStruct } from './moleculeToStruct'\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem)\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic)\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key)\n  })\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup)\n  return struct\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {}\n  ifDef(params, 'range', rglogic.range)\n  ifDef(params, 'resth', rglogic.resth)\n  ifDef(params, 'ifthen', rglogic.ifthen)\n\n  return new RGroup(params)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    struct.rxnArrows.add(new RxnArrow(getNodeWithInvertedYCoord(ketItem.data)))\n  } else {\n    struct.rxnPluses.add(\n      new RxnPlus({\n        pp: {\n          x: ketItem.location[0],\n          y: -ketItem.location[1],\n          z: ketItem.location[2]\n        }\n      })\n    )\n  }\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data\n  struct.simpleObjects.add(new SimpleObject(getNodeWithInvertedYCoord(object)))\n  return struct\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0])\n  const pos0 = ketItem.data.pos[0]\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius)\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius)\n      }\n    ]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const object = getNodeWithInvertedYCoord(ketItem.data)\n  struct.texts.add(new Text(object))\n\n  return struct\n}\n","import t from\"querystring\";var e=/https?|ftp|gopher|file/;function o(o){\"string\"==typeof o&&(o=g(o));var r=function(t,e,o){var r=t.auth,a=t.hostname,s=t.protocol||\"\",p=t.pathname||\"\",n=t.hash||\"\",h=t.query||\"\",c=!1;r=r?encodeURIComponent(r).replace(/%3A/i,\":\")+\"@\":\"\",t.host?c=r+t.host:a&&(c=r+(~a.indexOf(\":\")?\"[\"+a+\"]\":a),t.port&&(c+=\":\"+t.port)),h&&\"object\"==typeof h&&(h=e.encode(h));var l=t.search||h&&\"?\"+h||\"\";return s&&\":\"!==s.substr(-1)&&(s+=\":\"),t.slashes||(!s||o.test(s))&&!1!==c?(c=\"//\"+(c||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):c||(c=\"\"),n&&\"#\"!==n[0]&&(n=\"#\"+n),l&&\"?\"!==l[0]&&(l=\"?\"+l),{protocol:s,host:c,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:l=l.replace(\"#\",\"%23\"),hash:n}}(o,t,e);return\"\"+r.protocol+r.host+r.pathname+r.search+r.hash}var r=\"http://\",a=\"w.w\",s=r+a,p=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,n=/https?|ftp|gopher|file/;function h(t,e){var a=\"string\"==typeof t?g(t):t;t=\"object\"==typeof t?o(t):t;var h=g(e),c=\"\";a.protocol&&!a.slashes&&(c=a.protocol,t=t.replace(a.protocol,\"\"),c+=\"/\"===e[0]||\"/\"===t[0]?\"/\":\"\"),c&&h.protocol&&(c=\"\",h.slashes||(c=h.protocol,e=e.replace(h.protocol,\"\")));var l=t.match(p);l&&!h.protocol&&(t=t.substr((c=l[1]+(l[2]||\"\")).length),/^\\/\\/[^/]/.test(e)&&(c=c.slice(0,-1)));var i=new URL(t,s+\"/\"),u=new URL(e,i).toString().replace(s,\"\"),f=h.protocol||a.protocol;return f+=a.slashes||h.slashes?\"//\":\"\",!c&&f?u=u.replace(r,f):c&&(u=u.replace(r,\"\")),n.test(u)||~e.indexOf(\".\")||\"/\"===t.slice(-1)||\"/\"===e.slice(-1)||\"/\"!==u.slice(-1)||(u=u.slice(0,-1)),c&&(u=c+(\"/\"===u[0]?u.substr(1):u)),u}function c(t,e){return g(h(t,e))}function l(){}l.prototype.parse=g,l.prototype.format=o,l.prototype.resolve=h,l.prototype.resolveObject=h;var i=/^https?|ftp|gopher|file/,u=/^(.*?)([#?].*)/,f=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,m=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,v=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function g(e,r,p){if(void 0===r&&(r=!1),void 0===p&&(p=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var n=(e=e.trim()).match(u);e=n?n[1].replace(/\\\\/g,\"/\")+n[2]:e.replace(/\\\\/g,\"/\"),v.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var h=!/(^javascript)/.test(e)&&e.match(f),c=m.test(e),g=\"\";h&&(i.test(h[1])||(g=h[1].toLowerCase(),e=\"\"+h[2]+h[3]),h[2]||(c=!1,i.test(h[1])?(g=h[1],e=\"\"+h[3]):e=\"//\"+h[3]),3!==h[2].length&&1!==h[2].length||(g=h[1],e=\"/\"+h[3]));var d,y=(n?n[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),b=y&&y[1],C=new l,U=\"\",w=\"\";try{d=new URL(e)}catch(t){U=t,g||p||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(w=\"/\",e=e.substr(1));try{d=new URL(e,s)}catch(t){return C.protocol=g,C.href=g,C}}C.slashes=c&&!w,C.host=d.host===a?\"\":d.host,C.hostname=d.hostname===a?\"\":d.hostname.replace(/(\\[|\\])/g,\"\"),C.protocol=U?g||null:d.protocol,C.search=d.search.replace(/\\\\/g,\"%5C\"),C.hash=d.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!C.search&&~j[0].indexOf(\"?\")&&(C.search=\"?\"),C.hash||\"\"!==j[1]||(C.hash=\"#\"),C.query=r?t.decode(d.search.substr(1)):C.search.substr(1),C.pathname=w+(h?function(t){return t.replace(/['^|`]/g,function(t){return\"%\"+t.charCodeAt().toString(16).toUpperCase()}).replace(/((?:%[0-9A-F]{2})+)/g,function(t,e){try{return decodeURIComponent(e).split(\"\").map(function(t){var e=t.charCodeAt();return e>256||/^[a-z0-9]$/i.test(t)?t:\"%\"+e.toString(16).toUpperCase()}).join(\"\")}catch(t){return e}})}(d.pathname):d.pathname),\"about:\"===C.protocol&&\"blank\"===C.pathname&&(C.protocol=\"\",C.pathname=\"\"),U&&\"/\"!==e[0]&&(C.pathname=C.pathname.substr(1)),g&&!i.test(g)&&\"/\"!==e.slice(-1)&&\"/\"===C.pathname&&(C.pathname=\"\"),C.path=C.pathname+C.search,C.auth=[d.username,d.password].map(decodeURIComponent).filter(Boolean).join(\":\"),C.port=d.port,b&&!C.host.endsWith(b)&&(C.host+=b,C.port=b.slice(1)),C.href=w?\"\"+C.pathname+C.search+C.hash:o(C);var R=/^(file)/.test(C.href)?[\"host\",\"hostname\"]:[];return Object.keys(C).forEach(function(t){~R.indexOf(t)||(C[t]=C[t]||null)}),C}export{g as parse,o as format,h as resolve,c as resolveObject,l as Url};\n//# sourceMappingURL=index.mjs.map\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Validator } from 'jsonschema'\nimport schema from './schema.json'\n\nexport function validate(ket: any): boolean {\n  const validator = new Validator()\n  return validator.validate(ket, schema).valid\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet'\n\nimport { Serializer } from '../serializers.types'\nimport { headerToKet } from './toKet/headerToKet'\nimport { moleculeToKet } from './toKet/moleculeToKet'\nimport { moleculeToStruct } from './fromKet/moleculeToStruct'\nimport { prepareStructForKet } from './toKet/prepare'\nimport { rgroupToKet } from './toKet/rgroupToKet'\nimport { rgroupToStruct } from './fromKet/rgroupToStruct'\nimport { rxnToStruct } from './fromKet/rxnToStruct'\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet'\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct'\nimport { textToKet } from './toKet/textToKet'\nimport { textToStruct } from './fromKet/textToStruct'\nimport { validate } from './validate'\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'plus': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct)\n      break\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node)\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition)\n      }\n\n      currentStruct.mergeInto(struct)\n      break\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct)\n      break\n    }\n    case 'text': {\n      textToStruct(node, struct)\n      break\n    }\n    default:\n      break\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserialize(content: string): Struct {\n    const resultingStruct = new Struct()\n    const ket = JSON.parse(content)\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.')\n    }\n    const nodes = ket.root.nodes\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct)\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct)\n    })\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null\n\n    return resultingStruct\n  }\n\n  serialize(struct: Struct): string {\n    const result: any = {\n      root: {\n        nodes: []\n      }\n    }\n\n    const header = headerToKet(struct)\n    if (header) result.header = header\n\n    const ketNodes = prepareStructForKet(struct)\n\n    let moleculeId = 0\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` })\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment!)\n          break\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` })\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment!,\n            item.data\n          )\n          break\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item))\n          break\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item))\n          break\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item))\n          break\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item))\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return JSON.stringify(result, null, 4)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment\n} from 'domain/entities'\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number)\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.') // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit')\n\n  return numStr.padStart(width)\n}\n\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10)\n\n  return isNaN(val) ? 0 : val // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength))\n    if (withspace) shift++\n  }\n  return res\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount'\n  },\n  rxnItemsPartition: [3, 3, 3]\n}\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3\n}\n\nconst SHOULD_RESCALE_MOLECULES = true\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct()\n  const bbReact = []\n  const bbAgent = []\n  const bbProd = []\n  const molReact = []\n  const molAgent = []\n  const molProd = []\n  let j\n  const bondLengthData = { cnt: 0, totalLength: 0 }\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j]\n    const bondLengthDataMol = mol.getBondLengthData()\n    bondLengthData.cnt += bondLengthDataMol.cnt\n    bondLengthData.totalLength += bondLengthDataMol.totalLength\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt)\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j]\n      mol.scale(avgBondLength)\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j]\n    const bb = mol.getCoordBoundingBoxObj()\n    if (!bb) continue // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb)\n      molReact.push(mol)\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb)\n      molAgent.push(mol)\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb)\n      molProd.push(mol)\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType\n    })\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2\n    )\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n    bb.min.add_(d) // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d) // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret)\n    return bb.max.x - bb.min.x\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0\n    }\n    xorig += 2.0\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0\n    }\n    xorig += 2.0\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret)\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret)\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret)\n  }\n\n  let bb1\n  let bb2\n  let x\n  let y\n  let bbReactAll = null\n  let bbProdAll = null\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j]\n    bb2 = bbReact[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {}\n      bbReactAll.max = new Vec2(bbReact[j].max)\n      bbReactAll.min = new Vec2(bbReact[j].min)\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max)\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min)\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j]\n    bb2 = bbProd[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {}\n      bbProdAll.max = new Vec2(bbProd[j].max)\n      bbProdAll.min = new Vec2(bbProd[j].min)\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max)\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min)\n    }\n  }\n  bb1 = bbReactAll\n  bb2 = bbProdAll\n  const defaultArrowLength = 2\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)]\n      })\n    )\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null\n    const defaultOffset = 3\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y)\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y)\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5)\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd]\n      })\n    )\n  }\n  ret.isReaction = true\n  return ret\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct()\n\n  scaffold.mergeInto(ret, null, null, false, true)\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10)\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j]\n      ctab.rgroups.set(rgid, new RGroup())\n      const frag = new Fragment()\n      const frid = ctab.frags.add(frag)\n      ctab.rgroups.get(rgid).frags.add(frid)\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      ctab.mergeInto(ret)\n    }\n  })\n\n  return ret\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2 } from 'domain/entities'\n\nimport utils from './utils'\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool()\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2])\n\n    ret.set(key, value)\n  }\n\n  return ret\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = []\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2])\n      /* eslint-enable no-mixed-operators */\n    ])\n  }\n  return ret\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0\n  const atomReductionMap = {}\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap)\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap)\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m] // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing')\n      atomReductionMap[raid] = sgroup.patoms[m] // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms)\n\n  const patomsMap = identityMap(sgroup.patoms)\n\n  const bondsToRemove = []\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap\n    const endIn = bond.end in atomReductionMap\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid)\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin]\n    else if (endIn) bond.end = atomReductionMap[bond.end]\n  }, sgroup)\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b])\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a)\n    atomMap[a] = -1\n  }\n  sgroup.atoms = sgroup.patoms\n  sgroup.patoms = null\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase()\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim()\n  sgroup.data.subscript = ''\n}\n\nfunction postLoadGen(sgroup, mol, atomMap) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms))\n  }\n}\n\nfunction postLoadMon(sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen\n  }\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg)\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap)\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id)\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, [])\n  else mol.sGroupForest.insert(sg)\n\n  return sg.id\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true)\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type)\n    sg.number = key\n    sGroups[key] = sg\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric)\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    ;(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key)\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1\n  const num = utils.parseDecimalInt(propData.slice(4, 8))\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true))\n\n  if (part.length !== num) throw new Error('File format invalid')\n  if (shift) part = part.map((v) => v + shift)\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part)\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false)\n  const id = utils.parseDecimalInt(split[0]) - 1\n  const fieldName = split[1].trim()\n  const fieldType = split[2].trim()\n  const units = split[3].trim()\n  const query = split[4].trim()\n  const queryOp = split[5].trim()\n  const sGroup = sGroups[id]\n  sGroup.data.fieldType = fieldType\n  sGroup.data.fieldName = fieldName\n  sGroup.data.units = units\n  sGroup.data.query = query\n  sGroup.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */\n    ],\n    false\n  )\n\n  const x = parseFloat(split[0])\n  const y = parseFloat(split[1])\n  const attached = split[3].trim() === 'A'\n  const absolute = split[4].trim() === 'A'\n  const showUnits = split[5].trim() === 'U'\n  let nCharsToDisplay = split[7].trim()\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay)\n  const tagChar = split[10].trim()\n  const daspPos = utils.parseDecimalInt(split[11].trim())\n\n  sg.pp = new Vec2(x, -y)\n  sg.data.attached = attached\n  sg.data.absolute = absolute\n  sg.data.showUnits = showUnits\n  sg.data.nCharsToDisplay = nCharsToDisplay\n  sg.data.tagChar = tagChar\n  sg.data.daspPos = daspPos\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1\n  const sg = sGroups[id]\n  applyDataSGroupInfo(sg, propData.substr(5))\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue)\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2\n      )\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1\n  const data = propData.substr(5)\n  const sg = sGroups[id]\n  applyDataSGroupData(sg, data, finalize)\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = []\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j])\n  }\n  return ret\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '')\n}\n\nfunction identityMap(array) {\n  const map = {}\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i]\n  return map\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition\n  )\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2])\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16])\n  }\n  return new Atom(params)\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition\n  )\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6])\n  }\n\n  return new Bond(params)\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition\n  )\n\n  const number = utils.parseDecimalInt(split[0]) - 1\n  const notList = split[2].trim() === 'T'\n  const count = utils.parseDecimalInt(split[4].trim())\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength)\n  const list = []\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1)\n    )\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list\n    })\n  }\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool()\n\n  while (shift < end) {\n    const line = ctabLines[shift]\n    if (line.charAt(0) === 'A') {\n      const propValue = ctabLines[++shift]\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue)\n      if (isPseudo && !props.get('pseudo')) {\n        props.set('pseudo', new Pool())\n      }\n      if (!isPseudo && !props.get('alias')) {\n        props.set('alias', new Pool())\n      }\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3)) - 1, propValue)\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6)\n      let propertyData = line.slice(6)\n      if (type === 'END') {\n        break\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set('substitutionCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData))\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool())\n        const rglabels = props.get('rglabel')\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData)\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri]\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1))\n          )\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4)\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim())\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim())\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim())\n        const ooo = propertyData.slice(12).trim()\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[rgid] = logic\n      } else if (type === 'APO') {\n        if (!props.get('attpnt')) {\n          props.set('attpnt', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false)\n        )\n\n        if (!props.get('atomList')) props.set('atomList', new Pool())\n        if (!props.get('label')) props.set('label', new Pool())\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#')\n          props.get('atomList').set(aid, atomList)\n        })\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData)\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData)\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true)\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true)\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData)\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1)\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1)\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1)\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1\n        sGroups[sid].data.subscript = propertyData.slice(4).trim()\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData)\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData)\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false)\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true)\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ')\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1\n          sGroups[sGroupId].data.expanded = true\n        })\n      }\n    }\n    ++shift\n  }\n  return props\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal\n  })\n}\n\nfunction parseCTabV2000(\n  ctabLines,\n  countsSplit,\n  /* boolean */ ignoreChiralFlag\n) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n  let i\n  const atomCount = utils.parseDecimalInt(countsSplit[0])\n  const bondCount = utils.parseDecimalInt(countsSplit[1])\n  const atomListCount = utils.parseDecimalInt(countsSplit[2])\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1 || ignoreChiralFlag\n  const isAnd = utils.parseDecimalInt(countsSplit[4]) === 0 && !ignoreChiralFlag\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5])\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10])\n  let shift = 0\n  const atomLines = ctabLines.slice(shift, shift + atomCount)\n  shift += atomCount\n  const bondLines = ctabLines.slice(shift, shift + bondCount)\n  shift += bondCount\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount)\n  shift += atomListCount + stextLinesCount\n\n  const atoms = atomLines.map(parseAtomLine)\n  atoms.forEach((atom) => ctab.atoms.add(atom))\n\n  const bonds = bondLines.map(parseBondLine)\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`\n    }\n    ctab.bonds.add(bond)\n  })\n\n  const atomLists = atomListLines.map(parseAtomListLine)\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList\n    ctab.atoms.get(pair.aid).label = 'L#'\n  })\n\n  const sGroups = {}\n  const rLogic = {}\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic\n  )\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId)\n  })\n\n  const atomMap = {}\n  let sid\n  for (sid in sGroups) {\n    const sg = sGroups[sid]\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1]\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms)\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap)\n  const emptyGroups = []\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap)\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid)\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i])\n    ctab.sgroups.delete(emptyGroups[i])\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10)\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n  }\n  return ctab\n}\n\nfunction parseRg2000(\n  /* string[] */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7)\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid')\n  let i = 1\n  while (ctabLines[i].charAt(0) !== '$') i++\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid')\n  }\n  const coreLines = ctabLines.slice(1, i)\n  ctabLines = ctabLines.slice(i + 1)\n  const fragmentLines = {}\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n    let line = ctabLines[0].trim()\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1)\n      break\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid')\n\n    const rgid = parseInt(ctabLines[1].trim(), 10)\n    fragmentLines[rgid] = []\n    ctabLines = ctabLines.slice(2)\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n      line = ctabLines[0].trim()\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1)\n        break\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid')\n      i = 1\n      while (ctabLines[i].charAt(0) !== '$') i++\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid')\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i))\n      ctabLines = ctabLines.slice(i + 1)\n    }\n  }\n\n  const core = parseCTab(coreLines, ignoreChiralFlag)\n  const frag = {}\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10)\n      frag[id] = []\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j], ignoreChiralFlag))\n      }\n    }\n  }\n  return utils.rgMerge(core, frag)\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition\n  )\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit[2] - 0\n  ctabLines = ctabLines.slice(1) // consume counts line\n  const mols = []\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1)\n    let n = 0\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++\n\n    const lines = ctabLines.slice(0, n)\n    var struct\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines, /* boolean */ ignoreChiralFlag)\n    } else {\n      struct = parseCTab(lines.slice(3), /* boolean */ ignoreChiralFlag)\n      struct.name = lines[0].trim()\n    }\n    mols.push(struct)\n    ctabLines = ctabLines.slice(n)\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  ctabLines = ctabLines.slice(1)\n  return parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1\n  const count = utils.parseDecimalInt(hdr[2])\n  const notList = hdr[4].trim() === 'T'\n  const ids = labelsListToIds(lst.slice(0, count))\n  const ret = new Pool()\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids\n    })\n  )\n  return ret\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4])\n    ),\n    aam: split[5].trim()\n  }\n  let label = split[1].trim()\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2)\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1) // remove ']'\n    const atomListParams = {}\n    atomListParams.notList = false\n    const matchNotListInfo = label.match(/NOT ?\\[/)\n    if (matchNotListInfo) {\n      atomListParams.notList = true\n      const [matchedSubstr] = matchNotListInfo\n      label = label.substr(matchedSubstr.length) // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\")\n    } else {\n      label = label.substr(1) // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','))\n    params.atomList = new AtomList(atomListParams)\n    params.label = 'L#'\n  } else {\n    params.label = label\n  }\n  split.splice(0, 6)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value)\n      if (key === 'VAL') {\n        if (ival === 0) continue // eslint-disable-line no-continue\n        if (ival === -1) ival = 0\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2)\n      const rgrsplit = value.split(' ').slice(1)\n      params.rglabel = 0\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1)\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0\n    }\n  }\n\n  return new Atom(params)\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])]\n  }\n  split.splice(0, 4)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)]\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)]\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value)\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value)\n    }\n  }\n  return new Bond(params)\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++\n  shift++\n  return shift\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = ''\n  shift++\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim()\n    if (line.trim() === 'END SGROUP') return shift\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim()\n    }\n    const split = splitSGroupDef(line)\n    const type = split[1]\n    const sg = new SGroup(type)\n    sg.number = split[0] - 0\n    sg.type = type\n    sg.label = split[2] - 0\n    sgroups[sg.number] = sg\n    const props = {}\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=')\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\"\n        )\n      }\n      const name = subsplit[0]\n      if (!(name in props)) props[name] = []\n      props[name].push(subsplit[1])\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1)\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1)\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : []\n    const brkxyzStrs = props.BRKXYZ\n    sg.brkxyz = []\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]))\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim()\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase()\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]))\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true)\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0])\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0])\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0])\n    sGroup.loadSGroup(ctab, sg, atomMap)\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0])\n  }\n  throw new Error('S-group declaration incomplete.')\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n\n  let shift = 0\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid')\n  }\n  const vals = ctabLines[shift].slice(14).split(' ')\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1\n  shift++\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++\n    let line\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim()\n      if (line === 'END ATOM') break\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim()\n      }\n      ctab.atoms.add(parseAtomLineV3000(line))\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim()\n        if (line === 'END BOND') break\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim()\n        }\n        const bond = parseBondLineV3000(line)\n        if (bond.stereo && isAbs) ctab.atoms.get(bond.begin).stereoLabel = 'abs'\n        ctab.bonds.add(bond)\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {}\n    const atomMap = {}\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift)\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift)\n      } else throw Error('CTAB V3000 invalid')\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift))\n\n  return ctab\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {}\n  const rLogic = {}\n  let shift = 0\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop()\n    rfrags[id] = []\n    rLogic[id] = {}\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim()\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13)\n        const rlsplit = line.trim().split(/\\s+/g)\n        const iii = utils.parseDecimalInt(rlsplit[0])\n        const hhh = utils.parseDecimalInt(rlsplit[1])\n        const ooo = rlsplit.slice(2).join(' ')\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[id] = logic\n        shift++\n        continue // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid')\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1)\n      const rfrag = parseCTabV3000(lines, true)\n      rfrags[id].push(rfrag)\n      shift = shift + i + 1\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++\n        break\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n      const frid = rg.frags.add({})\n      rg.rgroups.get(rgid).frags.add(frid)\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      rg.mergeInto(ctab)\n    })\n  })\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3)\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j\n    }\n\n    return console.error('CTab format invalid')\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j\n    }\n    return console.error('CTab format invalid')\n  }\n\n  const molLinesReactants = []\n  const molLinesProducts = []\n  const molLinesAgents = []\n  let current = null\n  const rGroups = []\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim()\n    var j\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN AGENT') {\n      current = molLinesAgents\n    } else if (line === 'M  V30 END AGENT') {\n      current = null\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i)\n      rGroups.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i)\n      current.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else {\n      throw new Error('line unrecognized: ' + line)\n    }\n  }\n  const mols = []\n  const molLines = molLinesReactants\n    .concat(molLinesProducts)\n    .concat(molLinesAgents)\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit)\n    mols.push(mol)\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = []\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k])\n      return res\n    })(rGroups)\n  )\n\n  return ctab\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let bracketEquality = 0\n  let currentIndex = 0\n  let firstSliceIndex = -1\n  let quoted = false\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex]\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']')\n      split.push(line.slice(currentIndex, closingBracketIndex + 1))\n      currentIndex = closingBracketIndex + 1\n      firstSliceIndex = currentIndex\n    } else if (currentSymbol === '(') bracketEquality += 1\n    else if (currentSymbol === ')') bracketEquality -= 1\n    else if (currentSymbol === '\"') quoted = !quoted\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex))\n      }\n      firstSliceIndex = currentIndex\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex))\n  }\n  return split\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2)\n  }\n  return str\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim)\n  return [line.slice(0, p), line.slice(p + 1)]\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let braceBalance = 0\n  let quoted = false\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i)\n    if (c === '\"') {\n      quoted = !quoted\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++\n      } else if (c === ')') {\n        braceBalance--\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i))\n        line = line.slice(i + 1).trim()\n        i = 0\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!')\n  }\n  if (line.length > 0) split.push(line.trim())\n  return split\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null\n  const list = []\n  line = line.trim()\n  line = line.substr(1, line.length - 2)\n  const split = line.split(' ')\n  shift = shift || 0\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i])\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift)\n    }\n  }\n\n  return list\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid')\n  return line.slice(7)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities'\n\nimport utils from './utils'\nimport v2000 from './v2000'\nimport v3000 from './v3000'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines, ignoreChiralFlag)\n    struct.name = ctabLines[3].trim()\n    return struct\n  }\n  const struct = parseCTab(ctabLines.slice(3), ignoreChiralFlag)\n  struct.name = ctabLines[0].trim()\n  return struct\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  const version = countsSplit[11].trim()\n  ctabLines = ctabLines.slice(1)\n  if (version === 'V2000') {\n    return v2000.parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag)\n  }\n  if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments)\n  } else {\n    throw new Error('Molfile version unknown: ' + version)\n  }\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ')\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout)\n  }\n\n  const struct = v2000.parseRxn2000(\n    ctabLines,\n    shouldReactionRelayout,\n    ignoreChiralFlag\n  )\n  struct.name = ctabLines[1].trim()\n  return struct\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving\n}\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number'\n    }\n  }\n  sgroup.bonds = xBonds\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  sgroup.bonds = xBonds\n}\n\nfunction prepareGenForSaving(sgroup, mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup)\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile\n}\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap\n    )\n  ) // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap\n    )\n  )\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul\n  lines.push(smtLine)\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name)\n  }\n  return lines.join('\\n')\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  const data = sgroup.data\n  let pp = sgroup.pp\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms))\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2)\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65)\n  }\n\n  lines.push(sdtLine)\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  ' // oo\n  lines.push(sddLine)\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '')\n  const charsPerLine = 69\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine))\n      chars = chars.slice(charsPerLine)\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars)\n  })\n  return lines.join('\\n')\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return []\n  const lines = []\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15) // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2)\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3)\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine)\n  }\n  return lines\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms)\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet)\n  SGroup.bracketPos(sg, mol, crossBonds)\n  const bb = sg.bracketBox\n  const d = sg.bracketDir\n  const n = d.rotateSC(1, 0)\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n\n  )\n  const lines = []\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement()\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement()\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3)\n    const coord = [a0.x, a0.y, a1.x, a1.y]\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n')\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { StereoFlag, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport common from './common'\nimport utils from './utils'\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0'\n\ntype Mapping = {\n  [key in number]: number\n}\ntype NumberTuple = [number, number]\n\ninterface ParseCTFileProps {\n  molfileLines: string[]\n  shouldReactionRelayout?: boolean\n  ignoreChiralFlag?: boolean\n}\n\nexport class Molfile {\n  molecule: Struct | null\n  molfile: string | null\n  reaction: boolean\n  mapping: Mapping\n  bondMapping: Mapping\n\n  constructor() {\n    this.molecule = null\n    this.molfile = null\n\n    this.reaction = false\n    this.mapping = {}\n    this.bondMapping = {}\n  }\n\n  parseCTFile(props: ParseCTFileProps) {\n    const { molfileLines, shouldReactionRelayout, ignoreChiralFlag } = props\n    let ret\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(\n        molfileLines,\n        shouldReactionRelayout,\n        ignoreChiralFlag\n      )\n    } else {\n      ret = common.parseMol(molfileLines, ignoreChiralFlag)\n    }\n    ret.initHalfBonds()\n    ret.initNeighbors()\n    ret.bindSGroupsToFunctionalGroups()\n\n    return ret\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule\n    const toRemove: any[] = []\n    let errors = 0\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!\n        let errorIgnore = false\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol)\n        } catch (ex: any) {\n          if (!skipErrors || typeof ex.id !== 'number') {\n            throw new Error(`Error: ${ex.message}`)\n          }\n          errorIgnore = true\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore\n          toRemove.push(sgroup.id)\n        }\n      }, this)\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.'\n      )\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i])\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone()\n    this.prepareSGroups(false, false)\n    this.molfile = ''\n    this.writeCTab2000(rgroups)\n    return this.molfile\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean,\n    ignoreChiralFlag?: boolean\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow()\n    this.molfile = '' + molecule.name\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment'\n        )\n      }\n      const components = molecule.getComponents()\n\n      const reactants = components.reactants\n      const products = components.products\n      const all = reactants.concat(products)\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n'\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile()\n        const submol = molecule.clone(all[i], null, true)\n        const molfile = saver.saveMolecule(submol, false, true)\n        this.molfile += '$MOL\\n' + molfile\n      }\n      return this.molfile\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold()\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups\n        )\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n'\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n'\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n'\n          this.writePaddedNumber(rgid, 3)\n          this.molfile += '\\n'\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid))\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n'\n          })\n          this.molfile += '$END RGP\\n'\n        })\n        this.molfile += '$END MOL\\n'\n\n        return this.molfile\n      }\n    }\n\n    this.molecule = molecule.clone()\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc)\n\n    this.writeHeader()\n    this.writeCTab2000(undefined, ignoreChiralFlag)\n\n    return this.molfile\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date()\n\n    this.writeCR() // TODO: write structure name\n    this.writeWhiteSpace(2)\n    this.write('Ketcher')\n    this.writeWhiteSpace()\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000\n    )\n    this.writeCR()\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = ''\n    }\n\n    this.molfile += str + '\\n'\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)))\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str)\n    this.writeWhiteSpace(width - str.length)\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString()\n\n    this.writeWhiteSpace(width - str.length)\n    this.write(str)\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision))\n  }\n\n  writeCTab2000Header(ignoreChiralFlag) {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3)\n    this.writePaddedNumber(this.molecule!.bonds.size, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false\n    )\n\n    this.writePaddedNumber(isAbsFlag || ignoreChiralFlag ? 1 : 0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(999, 3)\n    this.writeCR(' V2000')\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>, ignoreChiralFlag?: boolean) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header(ignoreChiralFlag)\n\n    this.mapping = {}\n    let i = 1\n\n    const atomsIds: number[] = []\n    const atomsProps: {\n      id: number\n      value: string\n    }[] = []\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label\n      if (atom.atomList != null) {\n        label = 'L'\n        atomsIds.push(id)\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A'\n          atomsProps.push({ id, value: `'${atom.pseudo}'` })\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias })\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C'\n        atomsProps.push({ id, value: atom.label })\n      }\n\n      this.writeAtom(atom, label)\n\n      this.mapping[id] = i++\n    }, this)\n\n    this.bondMapping = {}\n    i = 1\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++\n      this.writeBond(bond)\n    }, this)\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0])\n      atomsProps.splice(0, 1)\n    }\n\n    const chargeList: NumberTuple[] = []\n    const isotopeList: NumberTuple[] = []\n    const radicalList: NumberTuple[] = []\n    const rglabelList: NumberTuple[] = []\n    const rglogicList: string[] = []\n    const aplabelList: NumberTuple[] = []\n    const rbcountList: NumberTuple[] = []\n    const unsaturatedList: NumberTuple[] = []\n    const substcountList: NumberTuple[] = []\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0) {\n        chargeList.push([id, atom.charge])\n      }\n      if (atom.isotope !== 0) {\n        isotopeList.push([id, atom.isotope])\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical])\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1])\n          }\n        }\n      }\n      if (atom.attpnt != null) {\n        aplabelList.push([id, atom.attpnt])\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount])\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount])\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom])\n      }\n    })\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range\n          rglogicList.push(line)\n        }\n      })\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList)\n    this.writeAtomPropList('M  ISO', isotopeList)\n    this.writeAtomPropList('M  RAD', radicalList)\n    this.writeAtomPropList('M  RGP', rglabelList)\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n')\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList)\n    this.writeAtomPropList('M  RBC', rbcountList)\n    this.writeAtomPropList('M  SUB', substcountList)\n    this.writeAtomPropList('M  UNS', unsaturatedList)\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j]\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!\n        this.write('M  ALS')\n        this.writePaddedNumber(atomId + 1, 4)\n        this.writePaddedNumber(atomList.ids.length, 3)\n        this.writeWhiteSpace()\n        this.write(atomList.notList ? 'T' : 'F')\n\n        const labelList = atomList.labelList()\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace()\n          this.writePadded(labelList[k], 3)\n        }\n        this.writeWhiteSpace()\n        this.writeCR()\n      }\n    }\n\n    const sgmap = {}\n    let cnt = 1\n    const sgmapback = {}\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS()\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id\n      sgmap[id] = cnt++\n    })\n    for (let q = 1; q < cnt; ++q) {\n      // each group on its own\n      const id = sgmapback[q]\n      const sgroup = this.molecule!.sgroups.get(id)!\n      this.write('M  STY')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePadded(sgroup.type, 3)\n      this.writeCR()\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeCR()\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!\n      if (parentId >= 0) {\n        this.write('M  SPL')\n        this.writePaddedNumber(1, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(sgmap[parentId], 3)\n        this.writeCR()\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${q.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`\n\n        this.write('M  SCN')\n        this.writePaddedNumber(1, 3)\n        this.write(connectivity.toUpperCase())\n        this.writeCR()\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ')\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace()\n        this.write(sgroup.data.subscript || 'n')\n        this.writeCR()\n      }\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping\n        )\n      )\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = []\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.data.expanded) expandedGroups.push(sg.id + 1)\n    })\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`\n      this.writeCR(expandedGroupsLine)\n    }\n\n    this.writeCR('M  END')\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4)\n    this.writePaddedFloat(-atom.pp.y, 10, 4)\n    this.writePaddedFloat(atom.pp.z, 10, 4)\n    this.writeWhiteSpace()\n    this.writePadded(atomLabel, 3)\n    this.writePaddedNumber(0, 2)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0\n    }\n    this.writePaddedNumber(atom.hCount, 3)\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0\n    }\n    this.writePaddedNumber(atom.stereoCare, 3)\n\n    let number: number\n    if (atom.explicitValence < 0) {\n      number = 0\n    } else if (atom.explicitValence === 0) {\n      number = 15\n    } else {\n      number = atom.explicitValence\n    }\n    this.writePaddedNumber(number, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0\n    }\n    this.writePaddedNumber(atom.aam, 3)\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0\n    }\n    this.writePaddedNumber(atom.invRet, 3)\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3)\n\n    this.writeCR()\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3)\n    this.writePaddedNumber(this.mapping[bond.end], 3)\n    this.writePaddedNumber(bond.type, 3)\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0\n    }\n    this.writePaddedNumber(bond.stereo, 3)\n\n    this.writePadded(bond.xxx, 3)\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0\n    }\n    this.writePaddedNumber(bond.topology, 3)\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3)\n\n    this.writeCR()\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ')\n    this.writePaddedNumber(props.id + 1, 3)\n    this.writeCR()\n    this.writeCR(props.value)\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = []\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0])\n        values.splice(0, 1)\n      }\n\n      this.write(propId)\n      this.writePaddedNumber(part.length, 3)\n\n      part.forEach((value) => {\n        this.writeWhiteSpace()\n        this.writePaddedNumber(this.mapping[value[0]], 3)\n        this.writeWhiteSpace()\n        this.writePaddedNumber(value[1], 3)\n      })\n\n      this.writeCR()\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types'\nimport { Molfile } from './molfile'\nimport { Serializer } from '../serializers.types'\nimport { Struct } from 'domain/entities'\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false\n  }\n\n  readonly options: MolSerializerOptions\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile()\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g)\n\n    const parseCTFileParams = {\n      molfileLines: lines,\n      shouldReactionRelayout: this.options.reactionRelayout,\n      ignoreChiralFlag: this.options.ignoreChiralFlag\n    }\n\n    try {\n      return molfile.parseCTFile(parseCTFileParams)\n    } catch (ex) {\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: lines.slice(1)\n          })\n        } catch (ex1) {\n          //\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: [''].concat(lines)\n          })\n        } catch (ex2) {\n          //\n        }\n      }\n      throw ex\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc,\n      this.options.ignoreChiralFlag\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities'\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.bonds = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2\n}\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func)\n}\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity\n}\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents\n}\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end)\n  const norm = new Vec2(-diff.y, diff.x)\n\n  if (!norm.normalize()) return 0\n\n  const normBeg = Vec2.diff(neiBeg, beg)\n  const normEnd = Vec2.diff(neiEnd, end)\n\n  if (!normBeg.normalize()) return 0\n  if (!normEnd.normalize()) return 0\n\n  const prodBeg = Vec2.dot(normBeg, norm)\n  const prodEnd = Vec2.dot(normEnd, norm)\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0\n\n  return prodBeg * prodEnd > 0 ? 1 : -1\n}\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp\n  )\n}\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen()\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen()\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen()\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen()\n\n  if (h0 && h1) return false\n  if (h2 && h3) return false\n\n  if (h1) {\n    substituents[1] = -1\n  } else if (h0) {\n    substituents[0] = substituents[1]\n    substituents[1] = -1\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1)\n  }\n\n  if (h3) {\n    substituents[3] = -1\n  } else if (h2) {\n    substituents[2] = substituents[3]\n    substituents[3] = -1\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3)\n  }\n\n  return true\n}\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx)\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false\n\n  const label1 = this.molecule.atoms.get(bond.begin).label\n  const label2 = this.molecule.atoms.get(bond.end).label\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin)\n  const neiEnd = this.getNeighbors.call(this.context, bond.end)\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false\n  }\n\n  substituents[0] = -1\n  substituents[1] = -1\n  substituents[2] = -1\n  substituents[3] = -1\n\n  let i\n  let nei\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false\n  }\n\n  return true\n}\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: []\n    }\n    this.bonds.set(bid, ct)\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return\n\n    if (!this.sortSubstituents(ct.substituents)) return\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2]\n    )\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS\n  })\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default CisTrans\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol\n  this.atom_data = atomData\n  this.components = components\n  this.nComponentsInReactants = -1\n  this.nReactants = nReactants\n\n  this.vertices = new Array(this.molecule.atoms.size) // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc()\n  }, this)\n\n  this.edges = new Array(this.molecule.bonds.size) // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc()\n  }, this)\n\n  this.v_seq = []\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0 // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0 // parent vertex in DFS tree\n  this.parent_edge = 0 // edge to parent vertex\n  this.branches = 0 // how many DFS branches go out from this vertex}\n}\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0 // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0 // 1 if this edge closes a cycle\n}\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx // index of vertex in _graph\n  this.parent_vertex = parVertex // parent vertex in DFS tree\n  this.parent_edge = parEdge // edge to parent vertex\n}\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = []\n  let i, j\n  let cid = 0\n  let component = 0\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n        if (selected === null) {\n          selected = -1\n          cid++\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n      }\n      if (selected === -1) break\n      this.vertices[selected].parent_vertex = -1\n      this.vertices[selected].parent_edge = -1\n      vStack.push(selected)\n      component++\n    }\n\n    const vIdx = vStack.pop()\n    const parentVertex = this.vertices[vIdx].parent_vertex\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge\n    )\n    this.v_seq.push(seqElem)\n\n    this.vertices[vIdx].dfs_state = 2\n\n    const atomD = this.atom_data[vIdx]\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid\n      const edgeIdx = atomD.neighbours[i].bid\n\n      if (neiIdx === parentVertex) continue // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1\n\n        j = vIdx\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex\n        }\n\n        if (j === -1) throw new Error('cycle unwind error')\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++\n        this.vertices[vIdx].branches++\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx)\n        this.v_seq.push(seqElem)\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx)\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack')\n          }\n\n          vStack.splice(j, 1)\n\n          const parent = this.vertices[neiIdx].parent_vertex\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--\n          }\n        }\n\n        this.vertices[vIdx].branches++\n        this.vertices[neiIdx].parent_vertex = vIdx\n        this.vertices[neiIdx].parent_edge = edgeIdx\n        this.vertices[neiIdx].dfs_state = 1\n        vStack.push(neiIdx)\n      }\n    }\n  }\n}\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0\n}\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches\n}\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles\n}\n\nDfs.prototype.toString = function () {\n  let str = ''\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> '\n  })\n  str += '*'\n  return str\n}\n\nexport default Dfs\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities'\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.atoms = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context)\n}\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors\n) {\n  const atoms = this.molecule.atoms\n  const bonds = this.molecule.bonds\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile()\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid)\n    if (neiList.length !== 2) return false\n    const nei1 = neiList[0]\n    const nei2 = neiList[1]\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid)\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid)\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid)\n    return true\n  })\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid)\n      let stereocenter = false\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid)\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true\n            return true\n          }\n        }\n        return false\n      }, this)\n\n      if (!stereocenter) return\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      }\n    })\n  }\n}\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }\n]\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx)\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx)\n  const degree = neiList.length\n  let implicitDegree = -1\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: []\n  }\n\n  const edgeIds = []\n\n  let lastAtomDir = 0\n  let nDoubleBonds = 0\n\n  stereocenter.pyramid[0] = -1\n  stereocenter.pyramid[1] = -1\n  stereocenter.pyramid[2] = -1\n  stereocenter.pyramid[3] = -1\n\n  let nPureHydrogens = 0\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree)\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid)\n    const bond = this.molecule.bonds.get(nei.bid)\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement()\n    }\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++\n      edgeIds[neiIdx].rank = 10000\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length')\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++\n  })\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree\n      return true\n    }\n    return false\n  })\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)'\n    )\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter')\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter'\n    )\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n\n    var main1 = -1\n    let main2 = -1\n    var side1 = -1\n    var side2 = -1\n    var mainDir = 0\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx\n        mainDir = stereo\n        break\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond')\n    }\n\n    let xyz1, xyz2\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4\n        side1 = (main1 + 1) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 1) % 4\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond')\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec\n    )\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx)\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx)\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx)\n\n    let nUp = 0\n    let nDown = 0\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom')\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom')\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case')\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      }\n\n      mainDir = 0\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP\n      } else {\n        main1 = -1\n        side1 = -1\n        side2 = -1\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx\n            mainDir = dir\n            side1 = (neiIdx + 1) % 3\n            side2 = (neiIdx + 2) % 3\n            break\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond')\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec\n        )\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom')\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      }\n\n      stereocenter.pyramid[3] = -1\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      var dir\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter')\n      } else if (nUp > 0) dir = 1\n      else dir = -1\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      }\n      stereocenter.pyramid[3] = -1\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter)\n}\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx)\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0\n  }\n\n  return bond.stereo\n}\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001\n\n  const sine1 = Vec2.cross(v1, v2)\n  const cosine1 = Vec2.dot(v1, v2)\n\n  const sine2 = Vec2.cross(v1, u)\n  const cosine2 = Vec2.dot(v1, u)\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap')\n    }\n\n    return sine2 > 0 ? 4 : 8\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2\n\n  if (cosine2 < cosine1) return 2\n\n  return 1\n}\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x) // eslint-disable-line no-mixed-operators\n  const eps = 0.001\n\n  if (res > eps) return 1\n  if (res < -eps) return -1\n\n  throw new Error('degenerate triangle')\n}\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice()\n  let rigid = true\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n\n  return rigid\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default Stereocenters\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities'\n\nimport CisTrans from './cis_trans'\nimport Dfs from './dfs'\nimport Stereocenters from './stereocenters'\n\nexport function Smiles() {\n  this.smiles = ''\n  this.writtenAtoms = []\n  this.writtenComponents = 0\n\n  this.ignoreErrors = false\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = [] // Array of integer pairs {a, b}\n  this.aromatic = false // has aromatic bond\n  this.lowercase = false // aromatic and has to be written lowercase\n  this.chirality = 0 // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0 // runs from 0 to (branches - 1)\n  this.paren_written = false\n  this.h_count = hCount\n  this.parent = -1\n}\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid]\n}\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.sortNeighbors()\n  struct.setImplicitHydrogen()\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct)\n      } catch (ex) {\n        throw Error('Bad s-group (' + ex.message + ')')\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  })\n  // END\n\n  this.atoms = new Array(struct.atoms.size)\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH) // eslint-disable-line no-underscore-dangle\n  })\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As']\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true\n      }\n      this.atoms[bond.end].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid })\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid })\n  })\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure()\n    let bondsInLoops = new Pile()\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid)\n        bondsInLoops = bondsInLoops.union(new Pile(hbids))\n      }\n    })\n    const inLoop = {}\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1\n    })\n    return inLoop\n  })()\n\n  this.touchedCistransbonds = 0\n  this.markCisTrans(struct)\n\n  const components = struct.getComponents()\n  const componentsAll = components.reactants.concat(components.products)\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length\n  )\n\n  walk.walk()\n  this.atoms.forEach((atom) => {\n    atom.neighbours = []\n  })\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i]\n    var vIdx = seqEl.idx\n    var eIdx = seqEl.parent_edge\n    var vPrevIdx = seqEl.parent_vertex\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx]\n\n      var openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 })\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx\n            atom.neighbours[k].bid = eIdx\n            break\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place')\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx })\n        atom.parent = vPrevIdx\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx })\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours\n      },\n      this\n    )\n    stereocenters.buildFromBonds(this.ignoreErrors)\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = []\n      let counter = 0\n\n      const atom = this.atoms[atomIdx]\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow')\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0]\n        pyramidMapping[0] = pyramidMapping[1]\n        pyramidMapping[1] = pyramidMapping[2]\n        pyramidMapping[2] = pyramidMapping[3]\n        pyramidMapping[3] = counter\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality')\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1\n      } else this.atoms[atomIdx].chirality = 2\n    })\n  } catch (ex) {\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = []\n\n  cycleNumbers.push(0) // never used\n\n  let firstComponent = true\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i]\n    vIdx = seqEl.idx\n    eIdx = seqEl.parent_edge\n    vPrevIdx = seqEl.parent_vertex\n    let writeAtom = true\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')'\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx)\n        else cycleNumbers[k] = vPrevIdx\n\n        this.writeCycleNumber(k)\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx)\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false\n          } else {\n            this.smiles += '('\n            this.atoms[vPrevIdx].paren_written = true\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch')\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx)\n\n      let dir = 0\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx)\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/'\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\'\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '='\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,='\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':'\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-'\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break\n        }\n\n        if (j === cycleNumbers.length) throw new Error('cycle number not found')\n\n        this.writeCycleNumber(j)\n\n        cycleNumbers[j] = -1\n        writeAtom = false\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.' // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false\n      this.writtenComponents++\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality\n      )\n      this.writtenAtoms.push(seqEl.idx)\n    }\n  }\n\n  this.comma = false\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct)\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|'\n\n  return this.smiles\n}\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n\n  else if (n >= 10 && n < 100) this.smiles += '%' + n\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n\n  else throw new Error('bad cycle number: ' + n)\n}\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx)\n  let needBrackets = false\n  let hydro = -1\n  let aam = 0\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*'\n    return\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]'\n    return\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count\n  }\n\n  let label = atom.label\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label()\n    needBrackets = false // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*'\n    needBrackets = false\n  } else if (\n    chirality ||\n    atom.charge !== 0 ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count\n    this.smiles += '['\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope\n\n  if (lowercase) this.smiles += label.toLowerCase()\n  else this.smiles += label\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@'\n    // chirality == 2\n    else this.smiles += '@@'\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter')\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro\n    else if (hydro === 1) this.smiles += 'H'\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge\n  else if (atom.charge < -1) this.smiles += atom.charge\n  else if (atom.charge === 1) this.smiles += '+'\n  else if (atom.charge === -1) this.smiles += '-'\n\n  if (aam > 0) this.smiles += ':' + aam\n\n  if (needBrackets) this.smiles += ']'\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n}\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours\n    },\n    this\n  )\n  this.cis_trans.build()\n  this.dbonds = new Array(mol.bonds.size)\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0\n    }\n  })\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid)\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours\n      const neiEnd = this.atoms[bond.end].neighbours\n      let aromFailBeg = true\n      let aromFailEnd = true\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false\n        }\n      })\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false\n        }\n      })\n\n      if (aromFailBeg || aromFailEnd) return\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n    }\n  })\n}\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx)\n  const subst = this.cis_trans.getSubstituents(bondIdx)\n  const parity = this.cis_trans.getParity(bondIdx)\n\n  const sidebonds = [-1, -1, -1, -1]\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin)\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin)\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end)\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end)\n\n  let n1 = 0\n  let n2 = 0\n  let n3 = 0\n  let n4 = 0\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3\n    n2 += n4\n  } else {\n    n1 += n4\n    n2 += n3\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration')\n\n  if (n1 === 0 && n2 === 0) return false\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2\n    }\n  }\n\n  return true\n}\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type)\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++\n      }\n    })\n    if (ntouched === this.touchedCistransbonds) break\n    this.touchedCistransbonds = ntouched\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1\n    else this.dbonds[idx].saved = 2\n  }\n\n  return this.dbonds[idx].saved\n}\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length)\n  let i, j\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical\n\n    if (radical === 0) continue // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ','\n    } else {\n      this.smiles += ' |'\n      this.comma = true\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:'\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:'\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:'\n\n    this.smiles += i\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true\n        this.smiles += ',' + j\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types'\nimport { SmiSerializerOptions } from './smi.types'\nimport { Smiles } from './smiles'\nimport { Struct } from 'domain/entities'\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false\n  }\n\n  private readonly options: SmiSerializerOptions\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.')\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types'\n\nimport { MolSerializer } from '../mol/molSerializer'\nimport { Serializer } from '../serializers.types'\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  deserialize(content: string): Array<SdfItem> {\n    let m: any\n    const result: Array<SdfItem> = []\n    const molSerializer = new MolSerializer()\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim() // TODO: normalize newline?\n      const end = chunk.indexOf('M  END')\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m)\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6))\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/)\n            if (m) {\n              const field = m[1]\n              const value = pc.split('\\n')[1].trim()\n              acc[field] = Number.isFinite(value) ? +value : value.toString() // eslint-disable-line\n            }\n            return acc\n          },\n          {} as StructAssociatedData\n        )\n\n        result.push({ struct, props })\n      }\n    }\n    return result\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer()\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct)\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`\n        res += `${item.props[prop]}\\n\\n`\n      })\n\n      return `${res}$$$$\\n`\n    }, '')\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  CDX = 'chemical/x-cdx',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket',\n  UNKNOWN = 'chemical/x-unknown'\n}\n\nexport interface WithStruct {\n  struct: string\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType\n}\n\nexport interface WithSelection {\n  selected?: Array<number>\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence'\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>\n}\n\nexport interface CheckResult {\n  [key: string]: string\n}\n\nexport interface ConvertData extends WithStruct, WithOutputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition'\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear'\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string\n  imagoVersions: Array<string>\n  isAvailable: boolean\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined\n}\n\nexport type OutputFormatType = 'png' | 'svg'\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType\n  backgroundColor?: string\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions\n  ) => Promise<ConvertResult>\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions\n  ) => Promise<LayoutResult>\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions\n  ) => Promise<CleanResult>\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ) => Promise<AromatizeResult>\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ) => Promise<DearomatizeResult>\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateCipResult>\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions\n  ) => Promise<AutomapResult>\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions\n  ) => Promise<CheckResult>\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateResult>\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>\n  generateInchIKey: (struct: string) => Promise<string>\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions\n  ) => Promise<string>\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val)\n            else setTimeout(iterate, timeGap)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        (err) => reject(err)\n      )\n    }\n    setTimeout(iterate, startTimeGap || 0)\n  })\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val])\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>\n) {\n  let requestUrl = url\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data)\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json'\n      },\n      headers\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin'\n  })\n\n  if (responseHandler) {\n    response = responseHandler(response)\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error)))\n    )\n  }\n\n  return response\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>\n  ) {\n    const body = Object.assign({}, data)\n    body.options = Object.assign(body.options || {}, defaultOptions, options)\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders\n      },\n      responseHandler\n    )\n  }\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string\n  private readonly defaultOptions: StructServiceOptions\n  private readonly customHeaders?: Record<string, string>\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>\n  ) {\n    this.apiPath = apiPath\n    this.defaultOptions = defaultOptions\n    this.customHeaders = customHeaders\n  }\n\n  generateInchIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi'\n      },\n      {}\n    )\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string\n    let imagoVersions: Array<string>\n    let isAvailable = false\n\n    try {\n      const response = await request('GET', this.apiPath + 'info')\n      indigoVersion = response.indigo_version\n      imagoVersions = response.imago_versions\n      isAvailable = true\n    } catch (e) {\n      indigoVersion = ''\n      imagoVersions = []\n      isAvailable = false\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable\n    }\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : ''\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream'\n      }\n    )\n    const status = request.bind(null, 'GET', this.apiPath + 'imago/uploads/:id')\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response\n            return response.state === 'SUCCESS'\n          },\n          500,\n          300\n        )\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }))\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png'\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )({ struct: data }, { 'render-output-format': outputFormat }, (response) =>\n      response.then((resp) => resp.text())\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { RemoteStructService } from './remoteStructService'\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string\n  mode: ServiceMode = 'remote'\n  customHeaders?: Record<string, string>\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath\n    this.customHeaders = customHeaders\n    const params = new URLSearchParams(document.location.search)\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/'\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\n\nexport class SupportedFormatProperties {\n  name: string\n  mime: ChemicalMimeType\n  extensions: string[]\n  supportsCoords?: boolean\n  options?: any\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any\n  ) {\n    this.name = name\n    this.mime = mime\n    this.extensions = extensions\n    this.supportsCoords = supportsCoords || false\n    this.options = options || {}\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\nimport { SupportedFormat } from './structFormatter.types'\nimport { SupportedFormatProperties } from './supportedFormatProperties'\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties\n}\n\nconst formatProperties: FormatPropertiesMap = {\n  molAuto: new SupportedFormatProperties(\n    // TODO: is it a valid name?\n    'MDL Molfile Auto Format detect',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': 'auto' }\n  ),\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles']\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles']\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts']\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi'\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi']\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket'\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true\n  ),\n  cdx: new SupportedFormatProperties(\n    'Base64 CDX',\n    ChemicalMimeType.CDX,\n    ['.b64cdx'],\n    true\n  ),\n  binaryCdx: new SupportedFormatProperties(\n    'CDX',\n    ChemicalMimeType.CDX,\n    ['.cdx'],\n    true\n  ),\n  unknown: new SupportedFormatProperties(\n    'Unknown',\n    ChemicalMimeType.UNKNOWN,\n    ['.'],\n    true\n  )\n}\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' }\n}\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format]\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format]\n}\n\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructServiceOptions } from 'domain/services'\n\nexport interface StructFormatter {\n  getStructureFromStructAsync: (struct: Struct) => Promise<string>\n  getStructureFromStringAsync: (stringifiedStruct: string) => Promise<Struct>\n}\n\nexport enum SupportedFormat {\n  mol = 'mol',\n  molV3000 = 'molV3000',\n  molAuto = 'molAuto',\n  rxn = 'rxn',\n  rxnV3000 = 'rxnV3000',\n  smiles = 'smiles',\n  smilesExt = 'smilesExt',\n  smarts = 'smarts',\n  inChI = 'inChI',\n  inChIAuxInfo = 'inChIAuxInfo',\n  cml = 'cml',\n  ket = 'ket',\n  cdxml = 'cdxml',\n  cdx = 'cdx',\n  binaryCdx = 'binaryCdx',\n  unknown = 'unknown'\n}\n\nexport type FormatterFactoryOptions = Partial<\n  MolSerializerOptions & StructServiceOptions\n>\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const ket = this.#ketSerializer.serialize(struct)\n    return ket\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\nimport { StructFormatter, SupportedFormat } from './structFormatter.types'\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { getPropertiesByFormat } from './formatProperties'\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions\n) => Promise<ConvertResult>\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions\n) => Promise<LayoutResult>\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n  #format: SupportedFormat\n  #options?: StructServiceOptions\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions\n  ) {\n    this.#structService = structService\n    this.#ketSerializer = ketSerializer\n    this.#format = format\n    this.#options = options\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format)\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(struct)\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime\n        },\n        { ...this.#options, ...formatProperties.options }\n      )\n\n      return convertResult.struct\n    } catch (error: any) {\n      let message\n      if (error.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`\n      } else {\n        message = `Convert error!\\n${error.message || error}`\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    let promise: LayoutPromise | ConvertPromise\n\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat(SupportedFormat.ket).mime\n    }\n\n    const withCoords = getPropertiesByFormat(this.#format).supportsCoords\n    if (withCoords) {\n      promise = this.#structService.convert\n      data.struct = stringifiedStruct\n    } else {\n      promise = this.#structService.layout\n      data.struct = stringifiedStruct.trim()\n    }\n\n    try {\n      const result = await promise(data, this.#options)\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct)\n      if (!withCoords) {\n        parsedStruct.rescale()\n      }\n      return parsedStruct\n    } catch (error: any) {\n      if (error.message !== 'Server is not compatible') {\n        throw Error(`Convert error!\\n${error.message || error}`)\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${\n              getPropertiesByFormat(SupportedFormat.smilesExt).name\n            } and opening of ${\n              getPropertiesByFormat(SupportedFormat.smiles).name\n            }`\n          : getPropertiesByFormat(this.#format).name\n\n      throw Error(`${formatError} is not supported in standalone mode.`)\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat\n} from './structFormatter.types'\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions\n} from 'domain/serializers'\nimport { StructService, StructServiceOptions } from 'domain/services'\nimport { KetFormatter } from './ketFormatter'\nimport { ServerFormatter } from './serverFormatter'\nimport { MolfileV2000Formatter } from './molfileV2000Formatter'\n\nexport class FormatterFactory {\n  #structService: StructService\n\n  constructor(structService: StructService) {\n    this.#structService = structService\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}]\n    }\n\n    const {\n      reactionRelayout,\n      badHeaderRecover,\n      ignoreChiralFlag,\n      ...structServiceOptions\n    } = options\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {}\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover\n    }\n\n    if (typeof ignoreChiralFlag === 'boolean') {\n      molfileParseOptions.ignoreChiralFlag = ignoreChiralFlag\n      structServiceOptions['ignore-no-chiral-flag'] = ignoreChiralFlag\n    }\n\n    return [molfileParseOptions, structServiceOptions]\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options)\n\n    let formatter: StructFormatter\n    switch (format) {\n      case SupportedFormat.ket:\n        formatter = new KetFormatter(new KetSerializer())\n        break\n\n      case SupportedFormat.mol:\n        formatter = new MolfileV2000Formatter(\n          new MolSerializer(molSerializerOptions)\n        )\n        break\n\n      case SupportedFormat.cml:\n      case SupportedFormat.inChIAuxInfo:\n      case SupportedFormat.inChI:\n      case SupportedFormat.molV3000:\n      case SupportedFormat.smiles:\n      case SupportedFormat.rxnV3000:\n      case SupportedFormat.smilesExt:\n      case SupportedFormat.smarts:\n      case SupportedFormat.cdxml:\n      case SupportedFormat.cdx:\n      case SupportedFormat.binaryCdx:\n      case SupportedFormat.unknown:\n      case SupportedFormat.rxn:\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions\n        )\n    }\n\n    return formatter\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SupportedFormat } from './structFormatter.types'\n\nexport function identifyStructFormat(\n  stringifiedStruct: string\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim()\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return SupportedFormat.ket\n    }\n  } catch (er) {} // eslint-disable-line\n\n  if (sanitizedString.indexOf('$RXN') !== -1) {\n    return SupportedFormat.rxn\n  }\n\n  if (sanitizedString.indexOf('V2000') !== -1) {\n    return SupportedFormat.mol\n  }\n\n  if (sanitizedString.indexOf('V3000') !== -1) {\n    return SupportedFormat.molV3000\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m)\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return SupportedFormat.mol\n    }\n  }\n\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return SupportedFormat.cml\n  }\n\n  const clearStr = sanitizedString\n    .replace(/\\s/g, '')\n    .replace(/(\\\\r)|(\\\\n)/g, '')\n  const isBase64String =\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/\n  const cdxHeader = 'VjCD0100'\n  if (\n    clearStr.length % 4 === 0 &&\n    isBase64String.test(clearStr) &&\n    window.atob(clearStr).startsWith(cdxHeader)\n  ) {\n    return SupportedFormat.cdx\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return SupportedFormat.inChI\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return SupportedFormat.smiles\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return SupportedFormat.cdxml\n  }\n\n  return SupportedFormat.unknown\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael'\nimport { Vec2 } from 'domain/entities'\n\n// TODO: refactor ugly prototype extensions to plain old functions\nRaphael.el.translateAbs = function (x: number, y: number): void {\n  this.delta = this.delta || new Vec2()\n  // TODO check that only numbers might be passed to this function\n  this.delta.x += x - 0\n  this.delta.y += y - 0\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString())\n}\n\nRaphael.st.translateAbs = function (x: number, y: number): void {\n  this.forEach((el) => {\n    el.translateAbs(x, y)\n  })\n}\n\nexport default Raphael\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/*\n  This map is used to draw anything on 'layers'\n  You can treat these values as z-index: backround has the lowest z-index, indices has the highest\n*/\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  warnings = 'warnings',\n  data = 'data',\n  additionalInfo = 'additionalInfo',\n  indices = 'indices'\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off'\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nclass Visel {\n  constructor(type) {\n    this.type = type\n    this.paths = []\n    /** @type {Box2Abs[]} */\n    this.boxes = []\n    /** @type {Box2Abs | null} */\n    this.boundingBox = null\n    this.oldBoundingBox = null\n    this.exts = []\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path)\n    if (bb) {\n      this.boxes.push(bb)\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb)\n    }\n    if (ext) this.exts.push(ext)\n  }\n\n  clear() {\n    this.paths = []\n    this.boxes = []\n    this.exts = []\n    if (this.boundingBox !== null) {\n      this.oldBoundingBox = this.boundingBox.clone()\n    }\n    this.boundingBox = null\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected')\n    }\n    if (args.length === 1) {\n      const vector = args[0]\n      this.translate(vector.x, vector.y)\n    } else {\n      const x = args[0]\n      const y = args[1]\n      const delta = new Vec2(x, y)\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y)\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta)\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta)\n      }\n    }\n  }\n\n  /**\n   * @param {number} degree\n   * @param {Vec2} center\n   */\n  rotate(degree, center) {\n    for (let i = 0; i < this.paths.length; ++i) {\n      this.paths[i].rotate(degree, center.x, center.y)\n    }\n\n    for (let j = 0; j < this.boxes.length; ++j) {\n      this.boxes[j] = this.boxes[j].transform((point) =>\n        point.rotateAroundOrigin(degree, center)\n      )\n    }\n    if (this.boundingBox !== null) {\n      this.boundingBox = this.boundingBox.transform((point) =>\n        point.rotateAroundOrigin(degree, center)\n      )\n    }\n  }\n}\n\nexport default Visel\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport Visel from './visel'\n\nclass ReObject {\n  public visel: Visel\n  public hover = false\n  public hovering: any = null\n  public selected = false\n  public selectionPlate: any = null\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType)\n  }\n\n  changeSelectionStyle(options: any) {\n    const { hoverStyle } = options\n    this.hovering?.attr({\n      fill: this.selected ? hoverStyle.fillSelected : hoverStyle.fill,\n      'fill-opacity': this.selected ? 1 : 0\n    })\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox\n    if (vbox === null) return null\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated())\n    }\n    return vbox.transform(Scale.scaled2obj, render.options)\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    const { options } = render\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return\n          noredraw = !this.hovering[0].removed\n        } else {\n          noredraw = !this.hovering.removed\n        }\n      }\n      if (noredraw) {\n        this.changeSelectionStyle(options)\n        this.hovering.show()\n      } else {\n        render.paper.setStart()\n        this.drawHover(render)\n        this.hovering = render.paper.setFinish()\n      }\n    } else if (this.hovering) {\n      this.changeSelectionStyle(options)\n      this.hovering.hide()\n    }\n\n    this.hover = hover\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.')\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden')\n  }\n}\n\nexport default ReObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelAxisAlignedBoundingBox, RaphaelPaper } from 'raphael'\nimport { Atom, Bond, Box2Abs, Vec2 } from 'domain/entities'\nimport assert from 'assert'\nimport { ReStruct, LayerMap } from './restruct'\nimport Visel from './restruct/visel'\nimport { RelativeBox, RenderOptions } from './render.types'\n\nfunction relBox(box: RaphaelAxisAlignedBoundingBox): RelativeBox {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height\n  }\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n */\nfunction shiftRayBox(p: Vec2, d: Vec2, bb: Box2Abs) {\n  assert(!!p)\n  assert(!!d)\n  assert(!!bb)\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y)\n  ]\n\n  const r = b.map((v) => v.sub(p)) // b relative to p\n\n  d = d.normalized()\n\n  const rc = r.map((v) => Vec2.cross(v, d)) // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)) // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1\n  let nid = -1\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid\n  const id1 = rd[pid] > rd[nid] ? pid : nid\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  )\n}\nfunction calcCoordinates(aPoint: Vec2, bPoint: Vec2, lengthHyp: number) {\n  const obj: {\n    pos1: null | { x: number; y: number }\n    pos2: null | { x: number; y: number }\n  } = { pos1: null, pos2: null }\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y }\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x\n    const D = b * b - 4 * a * e\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 }\n      obj.pos2 = { x: 0, y: 0 }\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a)\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a)\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 }\n    obj.pos2 = { x: 0, y: 0 }\n    obj.pos1.y = c / oPos2.y\n    obj.pos2.y = c / oPos2.y\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x\n    obj.pos1.y += aPoint.y\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x\n    obj.pos2.y += aPoint.y\n  }\n  return obj\n}\n\nfunction getCIPValuePath({\n  paper,\n  cipLabelPosition,\n  atomOrBond,\n  options\n}: {\n  paper: RaphaelPaper\n  cipLabelPosition: Vec2\n  atomOrBond: Atom | Bond\n  options: RenderOptions\n}) {\n  const text = paper\n    .text(cipLabelPosition.x, cipLabelPosition.y, `(${atomOrBond.cip})`)\n    .attr({\n      font: options.font,\n      'font-size': options.fontsz\n    })\n  const box = text.getBBox()\n  const path = paper.set()\n  const rect = paper\n    .rect(box.x - 1, box.y - 1, box.width + 2, box.height + 2, 3, 3)\n    .attr({ fill: '#fff', stroke: '#fff' })\n  path.push(rect.toFront(), text.toFront())\n\n  return {\n    path,\n    text,\n    rectangle: rect\n  }\n}\n\nfunction drawCIPLabel({\n  atomOrBond,\n  position,\n  restruct,\n  visel\n}: {\n  atomOrBond: Bond | Atom\n  position: Vec2\n  restruct: ReStruct\n  visel: Visel\n}) {\n  const { options, paper } = restruct.render\n  const path = paper.set()\n\n  const cipLabelPosition = position.scaled(options.scale)\n  const cipValuePath = getCIPValuePath({\n    paper,\n    cipLabelPosition,\n    atomOrBond,\n    options\n  })\n  const box = relBox(cipValuePath.path.getBBox())\n\n  cipValuePath.path.translateAbs(0.5 * box.width, -0.5 * box.height)\n  path.push(cipValuePath.path.toFront())\n\n  restruct.addReObjectPath(LayerMap.additionalInfo, visel, path, null, true)\n\n  return cipValuePath\n}\n\nconst util = {\n  relBox,\n  shiftRayBox,\n  calcCoordinates,\n  getCIPValuePath,\n  drawCIPLabel\n}\n\nexport default util\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelPaper, Element } from 'raphael'\nimport { HalfBond, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport svgPath from 'svgpath'\nimport util from './util'\nimport { ArrowItem, RelativeBox, RenderOptions } from './render.types'\nimport { tfx } from 'utilities'\n\nfunction rectangle(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  return paper.rect(\n    tfx(Math.min(points[0].x, points[1].x)),\n    tfx(Math.min(points[0].y, points[1].y)),\n    tfx(Math.abs(points[1].x - points[0].x)),\n    tfx(Math.abs(points[1].y - points[0].y))\n  )\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  _paper: RaphaelPaper,\n  { pos: [point1], height }: ArrowItem,\n  length: number,\n  angle: number\n) {\n  const b0x = point1.x + length\n  const [wOffset, hOffset] = [5, height || 8]\n\n  const path =\n    `M${tfx(point1.x - wOffset)},${tfx(point1.y)}` +\n    `L${tfx(point1.x - wOffset)},${tfx(point1.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(point1.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(point1.y + (!height ? hOffset : 0))}` +\n    `L${tfx(point1.x - wOffset)},${tfx(point1.y + (!height ? hOffset : 0))}Z`\n\n  return svgPath(path).rotate(angle, point1.x, point1.y).toString()\n}\n\nfunction ellipse(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const rad = Vec2.diff(points[1], points[0])\n  const rx = rad.x / 2\n  const ry = rad.y / 2\n  return paper.ellipse(\n    points[0].x + rx,\n    points[0].y + ry,\n    Math.abs(rx),\n    Math.abs(ry)\n  )\n}\n\nfunction polyline(paper: RaphaelPaper, points: Vec2[]) {\n  const path = ['M', points[0].x, points[0].y]\n  for (let i = 1; i < points.length; i++)\n    path.push('L', points[i].x, points[i].y)\n  return paper.path(path)\n}\n\nfunction line(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const path = ['M', points[0].x, points[0].y]\n  path.push('L', points[1].x, points[1].y)\n  return paper.path(path)\n}\n\nfunction arrow(\n  paper: RaphaelPaper,\n  item: ArrowItem,\n  length: number,\n  angle: number,\n  options: RenderOptions\n) {\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper: RaphaelPaper,\n  { pos: [point1], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const direction = height >= 0 ? 1 : -1\n  const arrowHeadLength = direction * 10\n  const arrowHeadWidth = direction * 5\n  const arrowHeadAttr = direction * 4\n\n  const b0x = point1.x + arrowLength\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(point1.y)}` +\n    `L${tfx(b0x - arrowHeadWidth)},${tfx(point1.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [point1], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const direction = height >= 0 ? 1 : -1\n  const triangleLength = direction * 10\n  const triangleWidth = direction * 5\n\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(point1.y)}` +\n    `L${tfx(b0x - triangleWidth)},${tfx(point1.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [point1], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(point1.y)}` +\n    `L${tfx(b0x - width)},${tfx(point1.y - length)}` +\n    `M${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(point1.y - length)}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [point1], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      b0x\n    )},${tfx(point1.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(point1.y - length)}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const width = 5\n  const length = 7\n\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x - length)},${tfx(point1.y - width)}` +\n    `M${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x - length)}, ${tfx(point1.y + width)}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(point1.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(point1.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}Z`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFilledBow(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(point1.y + arrowHeadWidth)}` +\n    `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(point1.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(point1.y - arrowHeadWidth)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}Z`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowDashedOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n  const dashInterval = 3.5\n\n  const path: string[] = []\n\n  const b0x = point1.x + arrowLength\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(point1.x + i * dashInterval)},${tfx(point1.y)}`)\n    } else {\n      path.push(`M${tfx(point1.x + i * dashInterval)},${tfx(point1.y)}`)\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(point1.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(point1.y + triangleWidth)}` +\n      `M${tfx(b0x)},${tfx(point1.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(point1.y - triangleWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFailed(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n  const failSignWidth = 8\n\n  const b0x = point1.x + arrowLength\n\n  const arrowCenter = b0x - (b0x - point1.x) / 2\n\n  const path: string[] = []\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n      `L${tfx(b0x)},${tfx(point1.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(point1.y + arrowHeadWidth)}` +\n      `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(point1.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(point1.y - arrowHeadWidth)}` +\n      `L${tfx(b0x)},${tfx(point1.y)}Z`\n  )\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(point1.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(point1.y - failSignWidth)}`\n  )\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(point1.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(point1.y + failSignWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = point1.x + arrowLength\n\n  const path =\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(point1.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(point1.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(point1.y)}` +\n    `M${tfx(point1.x)},${tfx(point1.y)}` +\n    `L${tfx(point1.x + triangleLength)},${tfx(point1.y - triangleWidth)}` +\n    `L${tfx(point1.x + triangleLength)},${tfx(point1.y + triangleWidth)}` +\n    `L${tfx(point1.x)},${tfx(point1.y)}`\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // Arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(point1.y - lineOffset)}Z`\n  )\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen)},${tfx(point1.y + arrowOffset)}` +\n      `L${tfx(point1.x + arrowLen - arrowHeadAttr)},${point1.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}Z`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen)},${tfx(point1.y + arrowOffset)}` +\n      `L${tfx(point1.x + arrowLen)},${point1.y + lineOffset}Z` +\n      `L${tfx(point1.x + arrowLen)},${tfx(point1.y)}` +\n      `L${tfx(point1.x + arrowLen)},${point1.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(point1.y - width - lineOffset)}`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen)},${tfx(point1.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(point1.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen + unbalanceVal)},${tfx(\n        point1.y + arrowOffset\n      )}` +\n      `L${tfx(point1.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        point1.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const unbalanceVal = 15\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(point1.y - width - lineOffset)}`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen + unbalanceVal)},${tfx(\n        point1.y + lineOffset + width\n      )}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 10\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(point1.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen + unbalanceVal)},${tfx(\n        point1.y + arrowOffset\n      )}` +\n      `L${tfx(point1.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        point1.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper: RaphaelPaper,\n  { pos: [point1] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = point1.x + arrowLength\n\n  const path: string[] = []\n\n  // First arrow\n  path.push(\n    `M${tfx(point1.x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(point1.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(point1.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `M${tfx(point1.x + unbalanceVal)},${tfx(point1.y + lineOffset)}` +\n      `L${tfx(point1.x + arrowLen + unbalanceVal)},${tfx(\n        point1.y + arrowOffset\n      )}` +\n      `L${tfx(point1.x + arrowLen + unbalanceVal)},${point1.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, point1.x, point1.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction plus(paper: RaphaelPaper, point: Vec2, options: RenderOptions) {\n  const s = options.scale / 5\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      tfx(point.x),\n      tfx(point.y),\n      tfx(point.x - s),\n      tfx(point.x + s),\n      tfx(point.y - s),\n      tfx(point.y + s)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingle(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  color = '#000'\n) {\n  const a = halfBond1.p\n  const b = halfBond2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleUp(\n  paper: RaphaelPaper,\n  a: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  options: RenderOptions,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y)\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondSingleStereoBold(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  a3: Vec2,\n  a4: Vec2,\n  options: RenderOptions,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y)\n    )\n    .attr(options.lineattr)\n  bond.attr({\n    stroke: color,\n    fill: color\n  })\n  return bond\n}\n\nfunction bondDoubleStereoBold(\n  paper: RaphaelPaper,\n  sgBondPath: Element,\n  b1: Vec2,\n  b2: Vec2,\n  options: RenderOptions,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color\n      })\n  ])\n}\n\nfunction bondSingleDown(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p\n  const n = halfBond1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = ''\n  let p\n  let q\n  let r\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i)\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5))\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5))\n    path += makeStroke(p, q)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleEither(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p\n  const n = halfBond1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y)\n  let r = a\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5))\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondDouble(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  b1: Vec2,\n  b2: Vec2,\n  cisTrans: boolean,\n  options: RenderOptions\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingleOrDouble(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  nSect: number,\n  options: RenderOptions\n) {\n  // eslint-disable-line max-statements, max-params\n  const a = halfBond1.p\n  const b = halfBond2.p\n  const n = halfBond1.norm\n  const bsp = options.bondSpace / 2\n\n  let path = ''\n  let pi\n  let pp = a\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect)\n    if (i & 1) {\n      path += makeStroke(pp, pi)\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp))\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp))\n    }\n    pp = pi\n  }\n  return paper.path(path).attr(options.lineattr)\n}\n\nfunction bondTriple(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  color = '#000'\n) {\n  const a = halfBond1.p\n  const b = halfBond2.p\n  const n = halfBond1.norm\n  const a2 = a.addScaled(n, options.bondSpace)\n  const b2 = b.addScaled(n, options.bondSpace)\n  const a3 = a.addScaled(n, -options.bondSpace)\n  const b3 = b.addScaled(n, -options.bondSpace)\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondAromatic(\n  paper: RaphaelPaper,\n  paths: string[],\n  bondShift: number,\n  options: RenderOptions\n) {\n  const l1 = paper.path(paths[0]).attr(options.lineattr)\n  const l2 = paper.path(paths[1]).attr(options.lineattr)\n  if (bondShift !== undefined && bondShift !== null) {\n    ;(bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' })\n  }\n\n  return paper.set([l1, l2])\n}\n\nfunction bondAny(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions\n) {\n  const a = halfBond1.p\n  const b = halfBond2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n}\n\nfunction bondHydrogen(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions\n) {\n  const a = halfBond1.p\n  const b = halfBond2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    'stroke-dasharray': '.',\n    'stroke-linecap': 'square'\n  })\n}\n\nfunction bondDative(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions\n) {\n  const a = halfBond1.p\n  const b = halfBond2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n}\n\nfunction reactingCenter(\n  paper: RaphaelPaper,\n  points: Vec2[],\n  options: RenderOptions\n) {\n  let pathDesc = ''\n  for (let i = 0; i < points.length / 2; ++i) {\n    pathDesc += makeStroke(points[2 * i], points[2 * i + 1])\n  }\n  return paper.path(pathDesc).attr(options.lineattr)\n}\n\nfunction topologyMark(\n  paper: RaphaelPaper,\n  point: Vec2,\n  mark: string | null,\n  options: RenderOptions\n) {\n  const path = paper.text(point.x, point.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000'\n  })\n  const rbb = util.relBox(path.getBBox())\n  recenterText(path, rbb)\n  return path\n}\n\nfunction radicalCap(paper: RaphaelPaper, point1: Vec2, options: RenderOptions) {\n  const s = options.lineWidth * 0.9\n  const dw = s\n  const dh = 2 * s\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      tfx(point1.x - dw),\n      tfx(point1.y + dh),\n      tfx(point1.x),\n      tfx(point1.y),\n      tfx(point1.x + dw),\n      tfx(point1.y + dh)\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter'\n    })\n}\n\nfunction radicalBullet(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  options: RenderOptions\n) {\n  return paper.circle(tfx(point1.x), tfx(point1.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000'\n  })\n}\n\nfunction bracket(\n  paper: RaphaelPaper,\n  d: Vec2,\n  n: Vec2,\n  c: Vec2,\n  bracketWidth: number,\n  bracketHeight: number,\n  options: RenderOptions\n) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25\n  bracketHeight = bracketHeight || 1.0\n  const a0 = c.addScaled(n, -0.5 * bracketHeight)\n  const a1 = c.addScaled(n, 0.5 * bracketHeight)\n  const b0 = a0.addScaled(d, -bracketWidth)\n  const b1 = a1.addScaled(d, -bracketWidth)\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      tfx(b0.x),\n      tfx(b0.y),\n      tfx(a0.x),\n      tfx(a0.y),\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y)\n    )\n    .attr(options.sgroupBracketStyle)\n}\n\nfunction selectionRectangle(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions\n) {\n  return paper\n    .rect(\n      tfx(Math.min(point1.x, point2.x)),\n      tfx(Math.min(point1.y, point2.y)),\n      tfx(Math.abs(point2.x - point1.x)),\n      tfx(Math.abs(point2.y - point1.y))\n    )\n    .attr(options.lassoStyle)\n}\n\nfunction selectionPolygon(\n  paper: RaphaelPaper,\n  r: Vec2[],\n  options: RenderOptions\n) {\n  const v = r[r.length - 1]\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y)\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y)\n  }\n  return paper.path(pstr).attr(options.lassoStyle)\n}\n\nfunction selectionLine(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions\n) {\n  return paper.path(makeStroke(point1, point2)).attr(options.lassoStyle)\n}\n\nfunction makeStroke(point1: Vec2, point2: Vec2) {\n  return (\n    'M' +\n    tfx(point1.x) +\n    ',' +\n    tfx(point1.y) +\n    'L' +\n    tfx(point2.x) +\n    ',' +\n    tfx(point2.y) +\n    '\t'\n  )\n}\n\nfunction dashedPath(point1: Vec2, point2: Vec2, dash: number[]) {\n  let t0 = 0\n  const t1 = Vec2.dist(point1, point2)\n  const d = Vec2.diff(point2, point1).normalized()\n  let black = true\n  let path = ''\n  let i = 0\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length]\n    const t2 = t0 + Math.min(len, t1 - t0)\n    if (black) {\n      path +=\n        'M ' +\n        point1.addScaled(d, t0).coordStr() +\n        ' L ' +\n        point1.addScaled(d, t2).coordStr()\n    }\n    t0 += len\n    black = !black\n    i++\n  }\n  return path\n}\n\nfunction aromaticBondPaths(\n  a2: Vec2,\n  a3: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  mask: number,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2)\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3)\n\n  return [l1, l2]\n}\n\nfunction recenterText(path: Element, relativeBox: RelativeBox) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = relativeBox.height * 0.16\n    path.translateAbs(0, gap)\n    relativeBox.y += gap\n  }\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  topologyMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { ElementColor, Elements } from 'domain/constants'\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType\n} from './generalEnumTypes'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\nimport { tfx } from 'utilities'\n\ninterface ElemAttr {\n  text: string\n  path: any\n  rbb: { x: number; y: number; width: number; height: number }\n}\n\nconst StereoLabelMinOpacity = 0.3\n\nexport enum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'all'\n}\n\nexport enum ShowHydrogenLabelNames {\n  Off = 'Off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'On'\n}\n\nclass ReAtom extends ReObject {\n  a: Atom\n  showLabel: boolean\n  hydrogenOnTheLeft: boolean\n  color: string\n  component: number\n  label?: ElemAttr\n  cip?: {\n    // Raphael paths\n    path: any\n    text: any\n    rectangle: any\n  }\n\n  constructor(atom: Atom) {\n    super('atom')\n    this.a = atom // TODO rename a to item\n    this.showLabel = false\n\n    this.hydrogenOnTheLeft = false\n\n    this.color = '#000000'\n    this.component = -1\n  }\n\n  static isSelectable(): true {\n    return true\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render)\n    }\n    return new Box2Abs(this.a.pp, this.a.pp)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getLabeledSelectionContour(render: Render) {\n    const { paper, ctab: restruct, options } = render\n    const { fontsz, radiusScaleFactor } = options\n    const padding = fontsz * radiusScaleFactor\n    const radius = fontsz * radiusScaleFactor * 2\n    const box = this.getVBoxObj(restruct.render)!\n    const ps1 = Scale.obj2scaled(box.p0, restruct.render.options)\n    const ps2 = Scale.obj2scaled(box.p1, restruct.render.options)\n    const width = ps2.x - ps1.x\n    const height = fontsz * 1.23\n    return paper.rect(\n      ps1.x - padding,\n      ps1.y - padding,\n      width + padding * 2,\n      height + padding * 2,\n      radius\n    )\n  }\n\n  getUnlabeledSelectionContour(render: Render) {\n    const { paper, options } = render\n    const { atomSelectionPlateRadius } = options\n    const ps = Scale.obj2scaled(this.a.pp, options)\n    return paper.circle(ps.x, ps.y, atomSelectionPlateRadius)\n  }\n\n  getSelectionContour(render: Render) {\n    const hasLabel =\n      (this.a.pseudo && this.a.pseudo.length > 1) ||\n      (this.showLabel && this.a.implicitH !== 0)\n    return hasLabel\n      ? this.getLabeledSelectionContour(render)\n      : this.getUnlabeledSelectionContour(render)\n  }\n\n  makeHoverPlate(render: Render) {\n    const atom = this.a\n    const { options } = render\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    return this.getSelectionContour(render).attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct) {\n    const atom = this.a\n    const { render } = restruct\n    const { options } = render\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    return this.getSelectionContour(render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)!\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    const render = restruct.render\n    const ps = Scale.obj2scaled(this.a.pp, render.options)\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      if (FunctionalGroup.isAttachmentPointAtom(aid, restruct.molecule)) {\n        let sgroupName\n        for (const sg of sgroups.values()) {\n          if (sg.atoms.includes(aid)) sgroupName = sg.data.name\n        }\n        const path = render.paper.text(ps.x, ps.y, sgroupName).attr({\n          'font-weight': '700',\n          'font-size': 14\n        })\n        restruct.addReObjectPath(LayerMap.data, this.visel, path, ps, true)\n      }\n      return\n    }\n\n    this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this)\n    this.showLabel = isLabelVisible(restruct, render.options, this)\n    this.color = 'black' // reset colour\n\n    let delta\n    let rightMargin\n    let leftMargin\n    let implh\n    let isHydrogen\n    let isHydrogenIsotope\n    let label\n    let index: any = null\n\n    if (this.showLabel) {\n      label = buildLabel(this, render.paper, ps, options)\n      delta = 0.5 * options.lineWidth\n      rightMargin =\n        (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      leftMargin =\n        (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      implh = Math.floor(this.a.implicitH)\n      isHydrogen = label.text === 'H'\n      isHydrogenIsotope = label.text === 'D' || label.text === 'T'\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true)\n    }\n    if (options.showAtomIds) {\n      index = {}\n      index.text = aid.toString()\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6)\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6)\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070'\n      })\n      index.rbb = util.relBox(index.path.getBBox())\n      draw.recenterText(index.path, index.rbb)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps)\n    }\n\n    if (this.showLabel && (!this.a.pseudo || isHydrogenIsotope)) {\n      let hydroIndex: any = null\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin)\n        rightMargin += hydroIndex.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render)\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.isotope !== 0) {\n        const isotope = showIsotope(this, render, leftMargin)\n        leftMargin -= isotope.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true\n        )\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(options.showHydrogenLabels, this)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin\n        })\n        const hydrogen = data.hydrogen\n        hydroIndex = data.hydroIndex\n        rightMargin = data.rightMargin\n        leftMargin = data.leftMargin\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true\n        )\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true\n          )\n        }\n      }\n\n      if (this.a.charge !== 0 && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin)\n        rightMargin += charge.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin)\n        rightMargin += valence.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin)\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true\n        )\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    // draw hover after label is calculated\n    this.setHover(this.hover, render)\n\n    if (this.a.attpnt) {\n      const lsb = bisectLargestSector(this, restruct.molecule)\n      showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct))\n    }\n\n    const stereoLabel = this.a.stereoLabel // Enhanced Stereo\n    const aamText = getAamText(this)\n    const queryAttrsText = !this.a.pseudo ? getQueryAttrsText(this) : ''\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment)\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId)\n\n    const text =\n      (shouldDisplayStereoLabel(\n        stereoLabel,\n        options.stereoLabelStyle,\n        options.ignoreChiralFlag,\n        fragment?.enhancedStereoFlag\n      )\n        ? `${stereoLabel}\\n`\n        : '') +\n      (queryAttrsText.length > 0 ? `${queryAttrsText}\\n` : '') +\n      (aamText.length > 0 ? `.${aamText}.` : '')\n\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label)\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: options.atomColoring && elem ? ElementColor[this.a.label] : '#000'\n      })\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel)\n        const node = aamPath.node.childNodes[0] as unknown as HTMLElement\n        node.setAttribute('fill', color)\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel)\n        node.setAttribute('fill-opacity', opacity.toString())\n      }\n      const aamBox = util.relBox(aamPath.getBBox())\n      draw.recenterText(aamPath, aamBox)\n      const visel = this.visel\n      let t = 3\n      let dir = bisectLargestSector(this, restruct.molecule)\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)))\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox))\n      dir = dir.scaled(8 + t)\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y)\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true)\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' }\n\n      const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style)\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path)\n    }\n\n    if (atom.cip) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: atom,\n        position: atom.pp,\n        restruct: render.ctab,\n        visel: this.visel\n      })\n    }\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000'\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters\n    case StereoLabel.Or:\n      return options.colorOfOrCenters\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters\n    default:\n      return '#000'\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '')\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity)\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  ignoreChiralFlag,\n  flag: StereoFlag | undefined\n): boolean {\n  if (!stereoLabel) {\n    return false\n  }\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  if (ignoreChiralFlag && stereoLabelType === StereoLabel.Abs) {\n    return false\n  }\n  if (ignoreChiralFlag && stereoLabelType !== StereoLabel.Abs) {\n    return true\n  }\n\n  switch (labelStyle) {\n    // Off\n    case StereLabelStyleType.Off:\n      return false\n    // On\n    case StereLabelStyleType.On:\n      return true\n    // Classic\n    case StereLabelStyleType.Classic:\n      return !!(flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or)\n    // IUPAC\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      )\n    default:\n      return true\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom) {\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal)\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    options.showHydrogenLabels === ShowHydrogenLabels.On ||\n    atom.a.alias ||\n    atom.a.isotope !== 0 ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== 0 ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c'\n\n  if (shouldBeVisible) return true\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0]\n    const nei2 = atom.a.neighbors[1]\n    const hb1 = restruct.molecule.halfBonds.get(nei1)\n    const hb2 = restruct.molecule.halfBonds.get(nei2)\n    const bond1 = restruct.bonds.get(hb1.bid)\n    const bond2 = restruct.bonds.get(hb2.bid)\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction displayHydrogen(hydrogenLabels: ShowHydrogenLabels, atom: ReAtom) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label?.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label?.text.toLowerCase() !== 'c'))\n  )\n}\n\nfunction setHydrogenPos(struct, atom) {\n  // check where should the hydrogen be put on the left of the label\n  if (atom.a.neighbors.length === 0) {\n    if (atom.a.label === 'D' || atom.a.label === 'T') {\n      return false\n    } else {\n      const element = Elements.get(atom.a.label)\n      return !element || Boolean(element.leftH)\n    }\n  }\n\n  let yl = 1\n  let yr = 1\n  let nl = 0\n  let nr = 0\n\n  atom.a.neighbors.forEach((nei) => {\n    const d = struct.halfBonds.get(nei).dir\n\n    if (d.x <= 0) {\n      yl = Math.min(yl, Math.abs(d.y))\n      nl++\n    } else {\n      yr = Math.min(yr, Math.abs(d.y))\n      nr++\n    }\n  })\n\n  return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any\n): ElemAttr {\n  // eslint-disable-line max-statements\n  const label: any = {}\n  label.text = getLabelText(atom.a)\n\n  if (label.text === '') label.text = 'R#' // for structures that missed 'M  RGP' tag in molfile\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text)\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000'\n    }\n  }\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : ''\n  })\n\n  label.rbb = util.relBox(label.path.getBBox())\n  draw.recenterText(label.path, label.rbb)\n\n  if (atom.a.atomList !== null) {\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n        2,\n      0\n    )\n  }\n\n  atom.label = label\n  return label\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label()\n\n  if (atom.pseudo) return atom.pseudo\n\n  if (atom.alias) return atom.alias\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = ''\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString()\n      }\n    }\n\n    return text\n  }\n\n  return atom.label\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydroIndex: any = {}\n  hydroIndex.text = (implh + 1).toString()\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const paper: any = render.paper\n  const radical: any = {}\n  let hshift\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('fill', atom.color)\n      break\n    case 2:\n      radical.path = paper.set()\n      radical.path.push(draw.radicalBullet(paper, ps, options))\n      radical.path.attr('fill', atom.color)\n      break\n    case 3:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('stroke', atom.color)\n      break\n    default:\n      break\n  }\n  radical.rbb = util.relBox(radical.path.getBBox())\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height)\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift)\n  return radical\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const isotope: any = {}\n  isotope.text = atom.a.isotope.toString()\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  isotope.rbb = util.relBox(isotope.path.getBBox())\n  draw.recenterText(isotope.path, isotope.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return isotope\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const charge: any = {}\n  charge.text = ''\n  const absCharge = Math.abs(atom.a.charge)\n  if (absCharge !== 1) charge.text = absCharge.toString()\n  if (atom.a.charge < 0) charge.text += '\\u2013'\n  else charge.text += '+'\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  charge.rbb = util.relBox(charge.path.getBBox())\n  draw.recenterText(charge.path, charge.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return charge\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV'\n  }\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const valence: any = {}\n  valence.text = mapValence[atom.a.explicitValence]\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString())\n  }\n  valence.text = '(' + valence.text + ')'\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  valence.rbb = util.relBox(valence.path.getBBox())\n  draw.recenterText(valence.path, valence.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return valence\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any\n    hydroIndex: number\n    rightMargin: number\n    leftMargin: number\n  }\n): {\n  hydrogen: ElemAttr\n  hydroIndex: ElemAttr\n  rightMargin: number\n  leftMargin: number\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex\n  const hydrogenLeft = atom.hydrogenOnTheLeft\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydrogen = data.hydrogen\n  hydrogen.text = 'H'\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color\n  })\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox())\n  draw.recenterText(hydrogen.path, hydrogen.rbb)\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0\n    )\n    data.rightMargin += hydrogen.rbb.width + delta\n  }\n  if (implh > 1) {\n    hydroIndex = {}\n    hydroIndex.text = implh.toString()\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color\n    })\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.rightMargin += hydroIndex.rbb.width + delta\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.leftMargin -= hydroIndex.rbb.width + delta\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0\n    )\n    data.leftMargin -= hydrogen.rbb.width + delta\n  }\n  return Object.assign(data, { hydrogen, hydroIndex })\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const delta = 0.5 * render.options.lineWidth\n  const warning: any = {}\n  const y = ps.y + atom.label.rbb.height / 2 + delta\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y)\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' })\n  warning.rbb = util.relBox(warning.path.getBBox())\n  return warning\n}\n\nfunction showAttpnt(atom, render, lsb, addReObjectPath) {\n  // eslint-disable-line max-statements\n  const asterisk = '∗'\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  let i, j\n  for (i = 0; i < 4; ++i) {\n    let attpntText = ''\n    if (atom.a.attpnt & (1 << i)) {\n      if (attpntText.length > 0) attpntText += ' '\n      attpntText += asterisk\n      for (j = 0; j < (i === 0 ? 0 : i + 1); ++j) attpntText += \"'\"\n      let pos0 = new Vec2(ps)\n      let pos1 = ps.addScaled(lsb, 0.7 * options.scale)\n\n      const attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({\n        font: options.font,\n        'font-size': options.fontsz,\n        fill: atom.color\n      })\n      const attpntRbb = util.relBox(attpntPath1.getBBox())\n      draw.recenterText(attpntPath1, attpntRbb)\n\n      const lsbn = lsb.negated()\n      /* eslint-disable no-mixed-operators */\n      pos1 = pos1.addScaled(\n        lsbn,\n        util.shiftRayBox(pos1, lsbn, Box2Abs.fromRelBox(attpntRbb)) +\n          options.lineWidth / 2\n      )\n      /* eslint-enable no-mixed-operators */\n      pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth)\n      const n = lsb.rotateSC(1, 0)\n      const arrowLeft = pos1\n        .addScaled(n, 0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const arrowRight = pos1\n        .addScaled(n, -0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const attpntPath = render.paper.set()\n      attpntPath.push(\n        attpntPath1,\n        render.paper\n          .path(\n            'M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}',\n            tfx(pos0.x),\n            tfx(pos0.y),\n            tfx(pos1.x),\n            tfx(pos1.y),\n            tfx(arrowLeft.x),\n            tfx(arrowLeft.y),\n            tfx(arrowRight.x),\n            tfx(arrowRight.y)\n          )\n          .attr(render.options.lineattr)\n          .attr({ 'stroke-width': options.lineWidth / 2 })\n      )\n      addReObjectPath(LayerMap.indices, atom.visel, attpntPath, ps)\n      lsb = lsb.rotate(Math.PI / 6)\n    }\n  }\n}\n\n// function getStereoLabelText(atom, aid, render) {\n// \tconst struct = render.ctab.molecule;\n// \tconst frag = struct.frags.get(atom.a.fragment);\n// \tconst stereo = frag.getStereoAtomMark(aid);\n// \tif (!stereo.type) return null;\n//\n// \treturn stereo.type + (stereo.number || '');\n// }\n\nfunction getAamText(atom) {\n  let aamText = ''\n  if (atom.a.aam > 0) aamText += atom.a.aam\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.invRet === 1) aamText += 'Inv'\n    else if (atom.a.invRet === 2) aamText += 'Ret'\n    else throw new Error('Invalid value for the invert/retain flag')\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext'\n    else throw new Error('Invalid value for the exact change flag')\n  }\n  return aamText\n}\n\nfunction getQueryAttrsText(atom) {\n  let queryAttrsText = ''\n  if (atom.a.ringBondCount !== 0) {\n    if (atom.a.ringBondCount > 0) {\n      queryAttrsText += 'rb' + atom.a.ringBondCount.toString()\n    } else if (atom.a.ringBondCount === -1) queryAttrsText += 'rb0'\n    else if (atom.a.ringBondCount === -2) queryAttrsText += 'rb*'\n    else throw new Error('Ring bond count invalid')\n  }\n  if (atom.a.substitutionCount !== 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.substitutionCount > 0) {\n      queryAttrsText += 's' + atom.a.substitutionCount.toString()\n    } else if (atom.a.substitutionCount === -1) queryAttrsText += 's0'\n    else if (atom.a.substitutionCount === -2) queryAttrsText += 's*'\n    else throw new Error('Substitution count invalid')\n  }\n  if (atom.a.unsaturatedAtom > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.unsaturatedAtom === 1) queryAttrsText += 'u'\n    else throw new Error('Unsaturated atom invalid value')\n  }\n  if (atom.a.hCount > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    queryAttrsText += 'H' + (atom.a.hCount - 1).toString()\n  }\n  return queryAttrsText\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y)\n  rbb.x += x\n  rbb.y += y\n}\n\nfunction bisectLargestSector(atom: ReAtom, struct: Struct) {\n  let angles: Array<number> = []\n  atom.a.neighbors.forEach((hbid) => {\n    const hb = struct.halfBonds.get(hbid)\n    hb && angles.push(hb.ang)\n  })\n  angles = angles.sort((a, b) => a - b)\n  const da: Array<number> = []\n  for (let i = 0; i < angles.length - 1; ++i) {\n    da.push(angles[(i + 1) % angles.length] - angles[i])\n  }\n  da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI)\n  let daMax = 0\n  let ang = -Math.PI / 2\n  for (let i = 0; i < angles.length; ++i) {\n    if (da[i] > daMax) {\n      daMax = da[i]\n      ang = angles[i] + da[i] / 2\n    }\n  }\n  return new Vec2(Math.cos(ang), Math.sin(ang))\n}\n\nfunction shiftBondEnd(atom, pos0, dir, margin) {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nexport default ReAtom\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { LayerMap, StereoColoringType } from './generalEnumTypes'\nimport ReAtom, { getColorFromStereoLabel } from './reatom'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReBond extends ReObject {\n  b: Bond\n  doubleBondShift: number\n  path: any\n  neihbid1 = -1\n  neihbid2 = -1\n  boldStereo?: boolean\n  rbb?: { x: number; y: number; width: number; height: number }\n  cip?: {\n    // Raphael paths\n    path: any\n    text: any\n    rectangle: any\n  }\n\n  constructor(bond: Bond) {\n    super('bond')\n    this.b = bond // TODO rename b to item\n    this.doubleBondShift = 0\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  static bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const atom1 = restruct.atoms.get(bond.b.begin)\n    const atom2 = restruct.atoms.get(bond.b.end)\n\n    if (\n      !atom1 ||\n      !atom2 ||\n      bond.b.hb1 === undefined ||\n      bond.b.hb2 === undefined\n    ) {\n      return\n    }\n\n    const p1 = Scale.obj2scaled(atom1.a.pp, render.options)\n    const p2 = Scale.obj2scaled(atom2.a.pp, render.options)\n    const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (!hb1?.dir || !hb2?.dir) return\n\n    hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth)\n    hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth)\n    bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5)\n    bond.b.len = Vec2.dist(p1, p2)\n    bond.b.sb = options.lineWidth * 5\n    /* eslint-disable no-mixed-operators */\n    bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2)\n    /* eslint-enable no-mixed-operators */\n    bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getSelectionPoints(render: Render) {\n    // please refer to: ketcher-core/docs/data/hover_selection_1.png\n    const bond: Bond = this.b\n    const { ctab: restruct, options } = render\n    const { bondThickness, doubleBondWidth, stereoBondWidth } = options\n    const regularSelectionThikness = doubleBondWidth + bondThickness\n\n    // get half-bond positions, this is where the actual bond\n    // image on the screen is drawn, it may be different e.g. if the\n    // bond is connected to an atom with a label as opposed\n    // to when it is connected to a Carbon atom w/o a label\n    // please refer to: ketcher-core/docs/data/hover_selection_2.png\n    const halfBondStart = restruct.molecule.halfBonds.get(bond.hb1!)!.p\n    const halfBondEnd = restruct.molecule.halfBonds.get(bond.hb2!)!.p\n\n    const isStereoBond =\n      bond.stereo !== Bond.PATTERN.STEREO.NONE &&\n      bond.stereo !== Bond.PATTERN.STEREO.CIS_TRANS\n\n    // for stereo bonds we slightly change the parameters\n    // to adjust the shape of the selection\n    const addStereoPadding = isStereoBond ? stereoBondWidth / 2 : 0\n\n    // find the points on the line where we will be drawing the curves\n    const contourStart = Vec2.getLinePoint(\n      halfBondEnd,\n      halfBondStart,\n      -bondThickness * 2.5 - addStereoPadding\n    )\n    const contourEnd = Vec2.getLinePoint(\n      halfBondStart,\n      halfBondEnd,\n      -bondThickness * 2.5\n    )\n\n    const addStart = isStereoBond\n      ? stereoBondWidth * 0.25\n      : regularSelectionThikness\n    const addEnd = isStereoBond\n      ? stereoBondWidth + (regularSelectionThikness * 4) / stereoBondWidth\n      : regularSelectionThikness\n\n    const contourPaddedStart = Vec2.getLinePoint(\n      contourStart,\n      contourEnd,\n      addEnd\n    )\n    const contourPaddedEnd = Vec2.getLinePoint(\n      contourEnd,\n      contourStart,\n      addStart\n    )\n\n    // we need four points for each bezier curve\n    // and two for each line that together form the selection contour\n    // the padded values are for the curve points and the rest of\n    // the values are for drawing the lines\n    // please refer to: ketcher-core/docs/data/hover_selection_3.png\n    const startPoint = contourStart.add(new Vec2(addEnd, 0))\n    const endPoint = contourEnd.add(new Vec2(addStart, 0))\n    const padStartPoint = contourPaddedStart.add(new Vec2(addEnd, 0))\n    const padEndPoint = contourPaddedEnd.add(new Vec2(addStart, 0))\n\n    const { angle } = bond\n\n    // rotate the points +/-90 degrees to find the\n    // perpendicular points that will be used for actual drawing\n    // of selection contour on canvas\n    const startTop = startPoint.rotateAroundOrigin(\n      angle + 90,\n      new Vec2(contourStart.x, contourStart.y)\n    )\n    const startBottom = startPoint.rotateAroundOrigin(\n      angle - 90,\n      new Vec2(contourStart.x, contourStart.y)\n    )\n    const startPadTop = padStartPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedStart\n    )\n    const startPadBottom = padStartPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedStart\n    )\n    const endTop = endPoint.rotateAroundOrigin(angle + 90, contourEnd)\n    const endBottom = endPoint.rotateAroundOrigin(angle - 90, contourEnd)\n    const endPadTop = padEndPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedEnd\n    )\n    const endPadBottom = padEndPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedEnd\n    )\n\n    return [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom\n    ]\n  }\n\n  getSelectionContour(render: Render) {\n    const { paper } = render\n    const [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom\n    ] = this.getSelectionPoints(render)\n\n    // for a visual representation of the points\n    // please refer to: ketcher-core/docs/data/hover_selection_exp.png\n    const pathString = `\n      M ${startTop.x} ${startTop.y}\n      L ${endTop.x} ${endTop.y}\n      C ${endPadTop.x} ${endPadTop.y}, ${endPadBottom.x} ${endPadBottom.y}, ${endBottom.x} ${endBottom.y}\n      L ${startBottom.x} ${startBottom.y}\n      C ${startPadBottom.x} ${startPadBottom.y}, ${startPadTop.x} ${startPadTop.y}, ${startTop.x} ${startTop.y}\n    `\n\n    return paper.path(pathString)\n  }\n\n  makeHoverPlate(render: Render) {\n    const restruct = render.ctab\n    const options = render.options\n    ReBond.bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return null\n    }\n\n    const rect = this.getSelectionContour(render)\n\n    return rect.attr({ ...options.hoverStyle })\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _: any, options: any) {\n    ReBond.bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return null\n    }\n\n    const rect = this.getSelectionContour(restruct.render)\n\n    return rect.attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const struct = restruct.molecule\n    const bond = restruct.molecule.bonds.get(bid)!\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      bond &&\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups\n      )\n    ) {\n      return\n    }\n\n    const paper = render.paper\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null\n\n    checkStereoBold(bid, this, restruct)\n    ReBond.bondRecalc(this, restruct, options)\n    setDoubleBondShift(this, struct)\n    if (!hb1 || !hb2) return\n    this.path = getBondPath(restruct, this, hb1, hb2)\n    this.rbb = util.relBox(this.path.getBBox())\n    restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true)\n    const reactingCenter: any = {}\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2)\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true\n      )\n    }\n    const topology: any = {}\n    topology.path = getTopologyMark(render, this, hb1, hb2)\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true\n      )\n    }\n    this.setHover(this.hover, render)\n\n    let ipath = null\n    const bondIdxOff = options.subFontSize * 0.6\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round'\n      }\n\n      const c = Scale.obj2scaled(this.b.center, restruct.render.options)\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2)\n      highlightPath.attr(style)\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true\n      )\n    }\n\n    if (bond.cip) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: bond,\n        position: bond.center,\n        restruct: render.ctab,\n        visel: this.visel\n      })\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y }\n  const end = { x: hb2.p.x, y: hb2.p.y }\n\n  const paper = restruct.render.paper\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`\n\n  const path = paper.path(pathString)\n\n  return path\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid)\n\n    if (!hb || hb.bid === bid0) return false\n\n    const neibond = restruct.bonds.get(hb.bid)\n\n    if (!neibond) return false\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      )\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    )\n  })\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    if (!atom) return -1\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0]\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1]\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  let path = null\n  const render = restruct.render\n  const struct = restruct.molecule\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel\n\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct)\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n          } else path = getBondSingleUpPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(render, hb1, hb2, bond, struct)\n          break\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            getStereoBondColor(render.options, bond, struct)\n          )\n          break\n      }\n      break\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct)\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB\n        )\n      } else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic)\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options)\n        : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      path = getSingleOrDoublePath(render, hb1, hb2)\n      break\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.ANY:\n      path = draw.bondAny(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      path = draw.bondHydrogen(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(render.paper, hb1, hb2, render.options)\n      break\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported')\n  }\n  return path\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const options = render.options\n  const bsp = 0.7 * options.stereoBond\n  let b2 = b.addScaled(n, bsp)\n  let b3 = b.addScaled(n, -bsp)\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct\n    )\n    b2 = coords[0]\n    b3 = coords[1]\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct\n): string {\n  const defaultColor = '#000'\n\n  if (bond.b.stereo === 0) return defaultColor\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel\n\n  let stereoLabel = ''\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const options = render.options\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct\n  )\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct\n  )\n  const a1 = coords1[0]\n  const a2 = coords1[1]\n  const a3 = coords2[0]\n  const a4 = coords2[1]\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = bond.doubleBondShift\n  const bsp = 1.5 * render.options.stereoBond\n  let b1 = a.addScaled(n, bsp * shift)\n  let b2 = b.addScaled(n, bsp * shift)\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    getStereoBondColor(render.options, bond, struct)\n  )\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0\n  return sin / (1 - cos)\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid)\n  const cos = Vec2.dot(hb.dir, neihb!.dir)\n  const sin = Vec2.cross(hb.dir, neihb!.dir)\n  const cosHalf = Math.sqrt(0.5 * (1 - cos))\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos))\n  )\n\n  const denomAdd = 0.3\n  const scale = 0.7\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd))\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd)\n  )\n  return sin > 0 ? [a1, a2] : [a2, a1]\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length() + 0.2\n  d = d.normalized()\n  const interval = 1.2 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 1)\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length()\n  d = d.normalized()\n  const interval = 0.6 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 0.5)\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS\n\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = cisTrans ? 0 : bond.doubleBondShift\n\n  const options = render.options\n  const bsp = options.bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n\n  let a1 = a.addScaled(n, s1)\n  let b1 = b.addScaled(n, s1)\n  let a2 = a.addScaled(n, s2)\n  let b2 = b.addScaled(n, s2)\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n\n  return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options)\n}\n\nfunction getSingleOrDoublePath(render: Render, hb1: HalfBond, hb2: HalfBond) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed())\n  if (!(nSect & 1)) nSect += 1\n  return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options)\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125]\n  let mask = 0\n  let dash: number[] | null = null\n  const options = render.options\n  const bondShift = bond.doubleBondShift\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mask = bondShift > 0 ? 1 : 2\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mask = 3\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mask,\n    dash\n  )\n  return draw.bondAromatic(render.paper, paths, bondShift, options)\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n  let a2 = a.addScaled(n, s1)\n  let b2 = b.addScaled(n, s1)\n  let a3 = a.addScaled(n, s2)\n  let b3 = b.addScaled(n, s2)\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash)\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  const n = d.rotateSC(1, 0)\n\n  const p: Array<Vec2> = []\n\n  const lw = render.options.lineWidth\n  const bs = render.options.bondSpace / 2\n  const alongIntRc = lw // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs // half size along for CENTER\n  const acrossInt = 1.5 * bs // half interval across for CENTER\n  const acrossSz = 3.0 * bs // half size across for all\n  const tiltTan = 0.2 // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt))\n      break\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      break\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    default:\n      return null\n  }\n  return draw.reactingCenter(render.paper, p, render.options)\n}\n\nfunction getTopologyMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const options = render.options\n  let mark: string | null = null\n\n  if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) mark = 'rng'\n  else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn'\n  else return null\n\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  let n = d.rotateSC(1, 0)\n  let fixed = options.lineWidth\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift)\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace)\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)))\n\n  return draw.topologyMark(render.paper, p, mark, options)\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff)\n  const ipath = paper.text(pb.x, pb.y, bid.toString())\n  const irbb = util.relBox(ipath.getBBox())\n  draw.recenterText(ipath, irbb)\n  return ipath\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1\n  const hb2 = bond.b.hb2\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n    return\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop\n  const loop2 = struct.halfBonds.get(hb2)!.loop\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds\n    const d2 = struct.loops.get(loop2)!.dblBonds\n    const n1 = struct.loops.get(loop1)!.hbs.length\n    const n2 = struct.loops.get(loop2)!.hbs.length\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2)\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n  }\n}\n\nfunction shiftBondEnd(\n  atom: ReAtom,\n  pos0: Vec2,\n  dir: Vec2,\n  margin: number\n): Vec2 {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1\n  if (n2 * d1 > n1 * d2) return -1\n  if (n2 * d1 < n1 * d2) return 1\n  if (n2 > n1) return -1\n  return 1\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1)\n  const hb2 = struct.halfBonds.get(bond.b.hb2)\n  if (!hb1 || !hb2) return 0\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0)\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0)\n  if (nLeft > nRight) return -1\n  if (nLeft < nRight) return 1\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1) return 1\n  return 0\n}\n\nexport default ReBond\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any\n\n  constructor() {\n    super('enhancedFlag')\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox())\n    const sz = box.p1.sub(box.p0)\n    const p0 = box.p0.sub(render.options.offset)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render\n    const fragment = restruct.molecule.frags.get(fragmentId)\n    if (!fragment?.enhancedStereoFlag) return\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!\n\n    const paper = render.paper\n    const ps = Scale.obj2scaled(position, options)\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel\n    }\n\n    if (options.showStereoFlags && !options.ignoreChiralFlag) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : ''\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000'\n        })\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true\n    )\n  }\n}\n\nexport default ReEnhancedFlag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag')\n    this.item = frag\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid\n    )\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment\n\n      return firstFrag === fid && secondFrag === fid\n    })\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        bba = bba.extend(ext, ext)\n      } else {\n        if (!render) render = global._ui_editor.render // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba\n    })\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render)\n\n    if (bb) {\n      const p0 = Scale.obj2scaled(new Vec2(bb.p0.x, bb.p0.y), render.options)\n      const p1 = Scale.obj2scaled(new Vec2(bb.p1.x, bb.p1.y), render.options)\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs)\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(render) {\n    // eslint-disable-line no-unused-vars\n    return null // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this)\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render')\n      return\n    }\n\n    fid = parseInt(fid, 10)\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render)\n    })\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render)\n      }\n    })\n  }\n}\nexport default ReFrag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3)\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup')\n    this.labelBox = null\n    this.item = rgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  getAtoms(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  getBonds(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  calcBBox(render) {\n    let ret = null\n    this.item.frags.forEach((fid) => {\n      const bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render)\n      if (bbf) ret = ret ? Box2Abs.union(ret, bbf) : bbf\n    })\n\n    if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT)\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    const bb = this.calcBBox(render)\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools'\n      )\n      return {}\n    }\n\n    const ret = { data: [] }\n    const p0 = Scale.obj2scaled(bb.p0, options)\n    const p1 = Scale.obj2scaled(bb.p1, options)\n    const brackets = render.paper.set()\n\n    rGroupdrawBrackets(brackets, render, bb) // eslint-disable-line new-cap\n\n    ret.data.push(brackets)\n    const key = render.ctab.rgroups.keyOf(this)\n    const labelSet = render.paper.set()\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black'\n      })\n\n    const labelBox = util.relBox(label.getBBox())\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0)\n\n    labelSet.push(label)\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black'\n    }\n\n    const logic = [rLogicToString(key, this.item)]\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle)\n      const logicBox = util.relBox(logicPath.getBBox())\n      shift += logicBox.height / 2\n      logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift)\n      shift += logicBox.height / 2 + options.lineWidth / 2\n      ret.data.push(logicPath)\n      labelSet.push(logicPath)\n    }\n\n    ret.data.push(label)\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.scaled2obj,\n      render.options\n    )\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT) // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null\n\n    const p0 = Scale.obj2scaled(bb.p0, render.options)\n    const p1 = Scale.obj2scaled(bb.p1, render.options)\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs)\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this)\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render'\n      )\n      return null\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */\n    ) // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render)\n    })\n\n    return ret\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options)\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true\n        )\n      }\n    })\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.obj2scaled(d || new Vec2(1, 0), render.options)\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n  const bracketHeight = bb.p1.y - bb.p0.y\n  const cy = 0.5 * (bb.p1.y + bb.p0.y)\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  return set.push(leftBracket, rightBracket)\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : ''\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=')\n\n  let range = null\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range\n  } else range = '>0'\n\n  const restH = rLogic.resth ? ' (RestH)' : ''\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : ''\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`\n}\n\nexport default ReRGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport Raphael from '../raphael-ext'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\nimport { tfx } from 'utilities'\n\ntype Arrow = {\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n  height?: number\n}\n\ntype ArrowParams = {\n  length: number\n  angle: number\n}\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow')\n    this.item = arrow\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const pos = item.pos\n\n    let dist: number = calculateDistanceToLine(pos, point)\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints()\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point)\n      )\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection')\n\n    return render.paper.path(path)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    const item = this.item\n    const [a, b] = item.pos\n    const height = item.height\n    refPoints.push(new Vec2(a.x, a.y))\n    refPoints.push(new Vec2(b.x, b.y))\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b)\n      refPoints.push(middlePoint)\n    }\n    return refPoints\n  }\n\n  makeAdditionalInfo(restruct: ReStruct) {\n    const scaleFactor = restruct.render.options.scale\n    const refPoints = this.getReferencePoints()\n    const selectionSet = restruct.render.paper.set()\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n\n    return selectionSet\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render\n    const options = restruct.render.options\n    const selectionSet = restruct.render.paper.set()\n\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle)\n    )\n    return selectionSet\n  }\n\n  generatePath(render: Render, options, type) {\n    let path\n    const item = this.item\n    const height =\n      RxnArrow.isElliptical(item) && item.height\n        ? item.height * options.scale\n        : 0\n    const pos = item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y\n    )\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle\n        )\n        break\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n    }\n\n    return path\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1)\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180\n\n    return { length, angle }\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow')\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x)\n    const minY = Math.min(a.y, b.y)\n    const x = minX + Math.abs(a.x - b.x) / 2\n    const y = minY + Math.abs(a.y - b.y) / 2\n    return new Vec2(x, y)\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y)\n  const lengthHyp = Math.hypot(length / 2, height)\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  }\n  return new Vec2(a.x, a.y)\n}\n\nexport default ReRxnArrow\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus')\n    this.item = plus\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const p = Scale.obj2scaled(this.item.pp, render.options)\n    const s = render.options.scale\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8)\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render\n    const centre = Scale.obj2scaled(this.item.pp, options)\n    const path = draw.plus(render.paper, centre, options)\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nexport default ReRxnPlus\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData')\n    this.sgroup = sgroup\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea\n    const p0 = Scale.obj2scaled(box.p0, render.options)\n    const sz = Scale.obj2scaled(box.p1, render.options).sub(p0)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n}\n\nexport default ReDataSGroupData\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, FunctionalGroup, Pile, SGroup, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\nimport { tfx } from 'utilities'\n\nclass ReSGroup extends ReObject {\n  constructor(sgroup) {\n    super('sgroup')\n    this.item = sgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  draw(remol, sgroup) {\n    this.render = remol.render\n    let set = this.render.paper.set()\n    const atomSet = new Pile(sgroup.atoms)\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet)\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds, remol, this.render)\n    const bracketBox = sgroup.bracketBox\n    const d = sgroup.bracketDir\n    sgroup.areas = [bracketBox]\n    const functionalGroups = remol.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sgroup.id,\n        functionalGroups\n      ) ||\n      (SGroup.isSuperAtom(sgroup) && !sgroup.data.expanded)\n    ) {\n      sgroup.atoms.forEach((aid) => {\n        if (FunctionalGroup.isAttachmentPointAtom(aid, remol.molecule)) {\n          sgroup.firstSgroupAtom = remol.molecule.atoms.get(aid)\n          sgroup.functionalGroup = true\n          sgroup.firstSgroupAtomId = aid\n        }\n      })\n    } else {\n      switch (sgroup.type) {\n        case 'MUL':\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.mul\n          )\n          break\n        case 'SRU': {\n          let connectivity = sgroup.data.connectivity || 'eu'\n          if (connectivity === 'ht') connectivity = ''\n          const subscript = sgroup.data.subscript || 'n'\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            subscript,\n            connectivity\n          )\n          break\n        }\n        case 'SUP': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.name,\n            null,\n            { 'font-style': 'italic' }\n          )\n          break\n        }\n        case 'GEN': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d\n          )\n          break\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup)\n          break\n        }\n        default:\n          break\n      }\n    }\n    return set\n  }\n\n  getTextHighlightDimensions(padding = 0, render) {\n    let startX = 0\n    let startY = 0\n    let width = 0\n    let height = 0\n    const sGroupItem = this.item\n    const sGroupHasFirstAtom =\n      sGroupItem.functionalGroup &&\n      !sGroupItem.data.expanded &&\n      sGroupItem.firstSgroupAtom\n    if (sGroupHasFirstAtom) {\n      const firstAtomPosition = sGroupItem.firstSgroupAtom.pp\n      const reSGroupAtom = render.ctab.atoms.get(sGroupItem.firstSgroupAtomId)\n      const sGroupTextBoundingBox =\n        reSGroupAtom?.visel.boundingBox || reSGroupAtom?.visel.oldBoundingBox\n      if (sGroupTextBoundingBox) {\n        const { x, y } = Scale.obj2scaled(firstAtomPosition, render.options)\n        const { p0, p1 } = sGroupTextBoundingBox\n        width = p1.x - p0.x + padding * 2\n        height = p1.y - p0.y + padding * 2\n        startX = x - width / 2\n        startY = y - height / 2\n      }\n    }\n\n    return { startX, startY, width, height }\n  }\n\n  getContractedSelectionContour(render) {\n    const { paper, options } = render\n    const { fontsz, radiusScaleFactor } = options\n    const radius = fontsz * radiusScaleFactor * 2\n    const { startX, startY, width, height } = this.getTextHighlightDimensions(\n      fontsz / 2,\n      render\n    )\n    return paper.rect(startX, startY, width, height, radius)\n  }\n\n  makeSelectionPlate(restruct, paper, options) {\n    const sgroup = this.item\n    const functionalGroups = restruct.molecule.functionalGroups\n    const sGroups = restruct.molecule.sgroups\n    const render = restruct.render\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      return this.getContractedSelectionContour(render).attr(\n        options.selectionStyle\n      )\n    }\n  }\n\n  drawHover(render) {\n    // eslint-disable-line max-statements\n    const options = render.options\n    const paper = render.paper\n    const sGroupItem = this.item\n    const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, options)\n\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    const sGroups = render.ctab.molecule.sgroups\n    const set = paper.set()\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sGroupItem.id,\n        functionalGroups\n      )\n    ) {\n      sGroupItem.hovering = this.getContractedSelectionContour(render).attr(\n        options.hoverStyle\n      )\n    } else {\n      sGroupItem.hovering = paper\n        .path(\n          'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n          tfx(a0.x),\n          tfx(a0.y),\n          tfx(a1.x),\n          tfx(a1.y),\n          tfx(b1.x),\n          tfx(b1.y),\n          tfx(b0.x),\n          tfx(b0.y)\n        )\n        .attr(options.hoverStyle)\n    }\n    set.push(sGroupItem.hovering)\n\n    SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n      set.push(render.ctab.atoms.get(aid).makeHoverPlate(render))\n    }, this)\n    SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n      set.push(render.ctab.bonds.get(bid).makeHoverPlate(render))\n    }, this)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set)\n  }\n\n  show(restruct) {\n    const render = restruct.render\n    const sgroup = this.item\n    if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab\n      const path = this.draw(remol, sgroup)\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n      this.setHover(this.hover, render) // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets(\n  set,\n  render,\n  sg,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute\n) {\n  // eslint-disable-line max-params\n  const brackets = getBracketParameters(\n    render.ctab.molecule,\n    crossBonds,\n    atomSet,\n    bracketBox,\n    d,\n    render,\n    sg.id\n  )\n  let ir = -1\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const path = draw.bracket(\n      render.paper,\n      Scale.obj2scaled(bracket.d, render.options),\n      Scale.obj2scaled(bracket.n, render.options),\n      Scale.obj2scaled(bracket.c, render.options),\n      bracket.w,\n      bracket.h,\n      render.options\n    )\n    set.push(path)\n    if (\n      ir < 0 ||\n      brackets[ir].d.x < bracket.d.x ||\n      (brackets[ir].d.x === bracket.d.x && brackets[ir].d.y > bracket.d.y)\n    ) {\n      ir = i\n    }\n  }\n  const bracketR = brackets[ir]\n  function renderIndex(text, shift) {\n    const indexPos = Scale.obj2scaled(\n      bracketR.c.addScaled(bracketR.n, shift * bracketR.h),\n      render.options\n    )\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub\n    })\n    if (indexAttribute) indexPath.attr(indexAttribute)\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()))\n    const t =\n      Math.max(util.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) +\n      2\n    indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y)\n    set.push(indexPath)\n  }\n  if (lowerIndexText) renderIndex(lowerIndexText, 0.5)\n  if (upperIndexText) renderIndex(upperIndexText, -0.5)\n}\n\nfunction showValue(paper, pos, sg, options) {\n  const text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz\n  })\n  const box = text.getBBox()\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    3\n  )\n  rect = sg.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' })\n  const st = paper.set()\n  st.push(rect, text.toFront())\n  return st\n}\n\nfunction drawGroupDat(restruct, sgroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule)\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : []\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule)\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup)\n}\n\nfunction drawAbsoluteDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  const ps = sgroup.pp.scaled(options.scale)\n  const name = showValue(paper, ps, sgroup, options)\n  const box = util.relBox(name.getBBox())\n\n  name.translateAbs(0.5 * box.width, -0.5 * box.height)\n  set.push(name)\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()))\n  sgroup.dataArea = sbox.transform(Scale.scaled2obj, render.options)\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup))\n  }\n\n  return set\n}\n\nfunction drawAttachedDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid)\n    const p = Scale.obj2scaled(atom.a.pp, options)\n    const bb = atom.visel.boundingBox\n\n    if (bb !== null) p.x = Math.max(p.x, bb.p1.x)\n\n    p.x += options.lineWidth // shift a bit to the right\n\n    const nameI = showValue(paper, p, sgroup, options)\n    const boxI = util.relBox(nameI.getBBox())\n\n    nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height)\n    set.push(nameI)\n\n    let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()))\n    sboxI = sboxI.transform(Scale.scaled2obj, render.options)\n    sgroup.areas.push(sboxI)\n  })\n\n  return set\n}\n\nfunction getBracketParameters(\n  mol,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  render,\n  id\n) {\n  // eslint-disable-line max-params\n  function BracketParams(c, d, w, h) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n  const brackets = []\n  let n = d.rotateSC(1, 0)\n\n  const crossBondsPerAtom = Object.values(crossBonds)\n  const crossBondsValues = crossBondsPerAtom.flat()\n  if (crossBondsValues.length < 2) {\n    ;(function () {\n      d = d || new Vec2(1, 0)\n      n = n || d.rotateSC(1, 0)\n      const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3)\n      const cl = Vec2.lc2(\n        d,\n        bracketBox.p0.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const cr = Vec2.lc2(\n        d,\n        bracketBox.p1.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const bracketHeight = bracketBox.sz().y\n\n      brackets.push(\n        new BracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n        new BracketParams(cr, d, bracketWidth, bracketHeight)\n      )\n    })()\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    ;(function () {\n      // eslint-disable-line max-statements\n      const b1 = mol.bonds.get(crossBondsValues[0])\n      const b2 = mol.bonds.get(crossBondsValues[1])\n      const cl0 = b1.getCenter(mol)\n      const cr0 = b2.getCenter(mol)\n      let tl = -1\n      let tr = -1\n      let tt = -1\n      let tb = -1\n      const cc = Vec2.centre(cl0, cr0)\n      const dr = Vec2.diff(cr0, cl0).normalized()\n      const dl = dr.negated()\n      const dt = dr.rotateSC(1, 0)\n      const db = dt.negated()\n\n      mol.sGroupForest.children.get(id).forEach((sgid) => {\n        let bba = render.ctab.sgroups.get(sgid).visel.boundingBox\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n        tl = Math.max(tl, util.shiftRayBox(cl0, dl, bba))\n        tr = Math.max(tr, util.shiftRayBox(cr0, dr, bba))\n        tt = Math.max(tt, util.shiftRayBox(cc, dt, bba))\n        tb = Math.max(tb, util.shiftRayBox(cc, db, bba))\n      }, this)\n      tl = Math.max(tl + 0.2, 0)\n      tr = Math.max(tr + 0.2, 0)\n      tt = Math.max(Math.max(tt, tb) + 0.1, 0)\n      const bracketWidth = 0.25\n      const bracketHeight = 1.5 + tt\n      brackets.push(\n        new BracketParams(\n          cl0.addScaled(dl, tl),\n          dl,\n          bracketWidth,\n          bracketHeight\n        ),\n        new BracketParams(\n          cr0.addScaled(dr, tr),\n          dr,\n          bracketWidth,\n          bracketHeight\n        )\n      )\n    })()\n  } else {\n    ;(function () {\n      for (let i = 0; i < crossBondsValues.length; ++i) {\n        const b = mol.bonds.get(crossBondsValues[i])\n        const c = b.getCenter(mol)\n        const d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated()\n        brackets.push(new BracketParams(c, d, 0.2, 1.0))\n      }\n    })()\n  }\n  return brackets\n}\n\nfunction getHighlighPathInfo(sgroup, options) {\n  let bracketBox = sgroup.bracketBox.transform(Scale.obj2scaled, options)\n  const lineWidth = options.lineWidth\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6)\n  bracketBox = bracketBox.extend(vext, vext)\n  const d = sgroup.bracketDir\n  const n = d.rotateSC(1, 0)\n  const a0 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p0.y)\n  const a1 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p1.y)\n  const b0 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p0.y)\n  const b1 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p1.y)\n  const size = options.contractedFunctionalGroupSize\n  let startX = (b0.x + a0.x) / 2 - size / 2\n  let startY = (a1.y + a0.y) / 2 - size / 2\n  if (sgroup.firstSgroupAtom) {\n    const shift = new Vec2(size / 2, size / 2, 0)\n    const hoverPp = Vec2.diff(sgroup.firstSgroupAtom.pp.scaled(40), shift)\n    startX = hoverPp.x\n    startY = hoverPp.y\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size\n  }\n}\n\nexport default ReSGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\nimport { tfx } from 'utilities'\n\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\ninterface StyledPath {\n  path: any\n  stylesApplied: boolean\n}\nclass ReSimpleObject extends ReObject {\n  private item: any\n\n  constructor(simpleObject: any) {\n    super('simpleObject')\n    this.item = simpleObject\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const mode = item.mode\n    const pos = item.pos\n    let dist: number\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry))\n        const pointToCenter = Vec2.diff(point, center)\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry)\n          )\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point)\n        }\n        break\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x)\n        const topY = Math.min(pos[0].y, pos[1].y)\n        const bottomX = Math.max(pos[0].x, pos[1].x)\n        const bottomY = Math.max(pos[0].y, pos[1].y)\n\n        const distances: Array<number> = []\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y)\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY)\n          } else {\n            distances.push(point.y - topY, bottomY - point.y)\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point))\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point))\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point))\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point))\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x)\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX)\n          } else {\n            distances.push(point.x - topX, bottomX - point.x)\n          }\n        }\n        dist = Math.min(...distances)\n        break\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point)\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y)\n        )\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x)\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y)\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h)\n        )\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y)\n          )\n        }\n        break\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)))\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n    return refPoints\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = []\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.obj2scaled(p, render.options)\n    })\n    const scaleFactor = render.options.scale\n\n    const path: Array<any> = []\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        path.push(\n          render.paper.ellipse(\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) + scaleFactor / 8),\n            tfx(Math.abs(ry) + scaleFactor / 8)\n          )\n        )\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          path.push(\n            render.paper.ellipse(\n              tfx(point[0].x + rx),\n              tfx(point[0].y + ry),\n              tfx(Math.abs(rx) - scaleFactor / 8),\n              tfx(Math.abs(ry) - scaleFactor / 8)\n            )\n          )\n        }\n        break\n      }\n\n      case SimpleObjectMode.rectangle: {\n        path.push(\n          render.paper.rect(\n            tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) +\n                scaleFactor / 4\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) +\n                scaleFactor / 4\n            )\n          )\n        )\n\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          path.push(\n            render.paper.rect(\n              tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n              tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n              tfx(\n                Math.max(point[0].x, point[1].x) -\n                  Math.min(point[0].x, point[1].x) -\n                  scaleFactor / 4\n              ),\n              tfx(\n                Math.max(point[0].y, point[1].y) -\n                  Math.min(point[0].y, point[1].y) -\n                  scaleFactor / 4\n              )\n            )\n          )\n        }\n\n        break\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = []\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x)\n        )\n\n        const p0 = { x: 0, y: 0 }\n        const p1 = { x: 0, y: 0 }\n\n        const k = point[0].x > point[1].x ? -1 : 1\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle))\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle))\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle))\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle))\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n\n        path.push(render.paper.path(poly))\n        break\n      }\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const enhPaths: Array<StyledPath> = path.map((p) => {\n      return { path: p, stylesApplied: false }\n    })\n\n    return enhPaths\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle)\n      }\n      return enhPath.path\n    })\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths)\n    return paths\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, restruct.render.options) || new Vec2()\n    })\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = restruct.render.options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.hoverStyleSimpleObject\n      )\n    )\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n\n    const path = generatePath(this.item.mode, render.paper, pos)\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: [Vec2, Vec2]): any {\n  let path: any\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos)\n      break\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos)\n      break\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos)\n      break\n    }\n    default: {\n      throw new Error('Unsupported shape type')\n    }\n  }\n\n  return path\n}\n\nexport default ReSimpleObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop')\n    this.loop = loop\n    this.centre = new Vec2()\n    this.radius = new Vec2()\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const paper = render.paper\n    const molecule = restruct.molecule\n    const loop = this.loop\n    this.centre = new Vec2()\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const bond = restruct.bonds.get(hb.bid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false\n      this.centre.add_(apos) // eslint-disable-line no-underscore-dangle\n    })\n    loop.convex = true\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k])\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir)\n      )\n      if (angle > 0) loop.convex = false\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length)\n    this.radius = -1\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      const bpos = Scale.obj2scaled(restruct.atoms.get(hb.end).a.pp, options)\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized()\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n)\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist)\n    })\n    this.radius *= 0.7\n    if (!loop.aromatic) return\n    let path = null\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width']\n      })\n    } else {\n      let pathStr = ''\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k])\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir)\n        )\n        const halfAngle = (Math.PI - angle) / 2\n        const dir = hbb.dir.rotate(halfAngle)\n        const pi = Scale.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options)\n        let sin = Math.sin(halfAngle)\n        const minSin = 0.1\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin)\n        const offset = options.bondSpace / sin\n        const qi = pi.addScaled(dir, -offset)\n        pathStr += k === 0 ? 'M' : 'L'\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y)\n      }\n      pathStr += 'Z'\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- '\n      })\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid\n    )\n  }\n}\n\nexport default ReLoop\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange\n} from 'draft-js'\nimport { Text, TextCommand, Vec2 } from 'domain/entities'\nimport { flatten, isEqual } from 'lodash/fp'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Scale } from 'domain/helpers'\nimport { RaphaelBaseElement } from 'raphael'\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize\n}\n\nconst SCALE = 40 // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text\n  paths: Array<Array<RaphaelBaseElement>> = []\n\n  constructor(text: Text) {\n    super('text')\n    this.item = text\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return []\n\n    const { p0, p1 } = this.getRelBox(this.paths)\n\n    const p = this.item.position\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE\n\n    const refPoints: Array<Vec2> = []\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y)\n    )\n\n    return refPoints\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths)\n    const topLeft = p0.sub(render.options.offset)\n    const { x: width, y: height } = p1.sub(p0)\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5)\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0]\n    const leftEdge = firstElOfFirstRow.getBBox().x\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0]\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y)\n    )\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0]\n    )\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1]\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1]\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height)\n    )\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge)\n    }\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width\n      return rowWidth\n    }, 0)\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render\n    const paper = render.paper\n    const paperScale = Scale.obj2scaled(this.item.position!, options)\n\n    let shiftY = 0\n    this.paths = []\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null\n    if (!rawContentState) {\n      return\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options)\n      let shiftX = 0\n      const row: Array<RaphaelBaseElement> = []\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0')\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0'\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles\n          })\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0))\n        row.push(path)\n        shiftX += path.getBBox().width\n      })\n\n      this.paths.push(row)\n\n      const { p0, p1 } = this.getRelBox([row])\n      shiftY += Math.abs(Vec2.diff(p0, p1).y)\n    })\n\n    this.item.setPos(this.getReferencePoints())\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true\n    )\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = []\n\n    let start = 0\n    let styles: Record<string, any> = this.getStyles(block, start, options)\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options)\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles])\n        styles = nextStyles\n        start = i\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles])\n\n    return ranges\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length\n    )\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0]\n        }\n        return acc\n      },\n      null\n    )\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz\n        const fontszsub = (customFontSize || options.fontszsub) * 0.5\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold'\n            break\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic'\n            break\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = fontsz / 4\n\n            break\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = -fontsz / 3\n            break\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px'\n            break\n\n          default:\n        }\n\n        return styles\n      },\n      {}\n    )\n  }\n}\n\nexport default ReText\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReAtom from './reatom'\nimport ReBond from './rebond'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReEnhancedFlag from './reenhancedFlag'\nimport ReFrag from './refrag'\nimport ReLoop from './reloop'\nimport ReRGroup from './rergroup'\nimport ReRxnArrow from './rerxnarrow'\nimport ReRxnPlus from './rerxnplus'\nimport ReSGroup from './resgroup'\nimport ReSimpleObject from './resimpleObject'\nimport ReText from './retext'\nimport { Render } from '../raphaelRender'\nimport Visel from './visel'\nimport util from '../util'\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText\n  }\n\n  public render: Render\n  public molecule: Struct\n  public atoms: Map<number, ReAtom> = new Map()\n  public bonds: Map<number, ReBond> = new Map()\n  public reloops: Map<number, ReLoop> = new Map()\n  public rxnPluses: Map<number, ReRxnPlus> = new Map()\n  public rxnArrows: Map<number, ReRxnArrow> = new Map()\n  public frags: Pool = new Pool()\n  public rgroups: Pool = new Pool()\n  public sgroups: Map<number, ReSGroup> = new Map()\n  public sgroupData: Map<number, ReDataSGroupData> = new Map()\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map()\n  private simpleObjects: Map<number, ReSimpleObject> = new Map()\n  public texts: Map<number, ReText> = new Map()\n  private initialized = false\n  private layers: Array<any> = []\n  public connectedComponents: Pool = new Pool()\n  private ccFragmentType: Pool = new Pool()\n  private structChanged = false\n\n  private atomsChanged: Map<number, ReAtom> = new Map()\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map()\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map()\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map()\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private textsChanged: Map<number, ReText> = new Map()\n  constructor(molecule, render: Render) {\n    // eslint-disable-line max-statements\n    this.render = render\n    this.molecule = molecule || new Struct()\n    this.initLayers()\n    this.clearMarks()\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom))\n    })\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond))\n    })\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop))\n    })\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item))\n    })\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item))\n    })\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item))\n    })\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item))\n    })\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item))\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag())\n    })\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item))\n    })\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item))\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item))\n      } // [MK] sort of a hack, we use the SGroup id for the data field id\n      if (FunctionalGroup.isFunctionalGroup(item) || SGroup.isSuperAtom(item)) {\n        this.molecule.functionalGroups.set(id, new FunctionalGroup(item))\n      }\n    })\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid)\n    if (!atom || atom.component < 0) return\n    const cc = this.connectedComponents.get(atom.component)\n\n    cc.delete(aid)\n    if (cc.size < 1) this.connectedComponents.delete(atom.component)\n\n    atom.component = -1\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear()\n    this.atoms.forEach((atom) => {\n      atom.component = -1\n    })\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid]\n    const ids = new Pile()\n\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)\n      if (!atom) continue\n      if (atom.component >= 0) adjacentComponents.add(atom.component)\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor)\n        if (!halfBond) return\n        const neiId = halfBond.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet)\n    const adjacentComponents = new Pile()\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents\n    )\n\n    adjacentComponents.delete(compId)\n\n    let type = -1\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (!atom) return\n      atom.component = compId\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType\n    })\n\n    this.ccFragmentType.set(compId, type)\n    return compId\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.component = -1\n    })\n\n    return this.connectedComponents.delete(ccid)\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return\n\n      const adjacentComponents = new Pile()\n      const idSet = this.getConnectedComponent(aid, adjacentComponents)\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid)\n      })\n\n      this.addConnectedComponent(idSet)\n    })\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0'\n        })\n        .toFront()\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return\n\n    const paths = Array.isArray(path) ? path : [path]\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null\n      const ext = pos && bb ? bb.translate(pos.negated()) : null\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y)\n        bb = bb ? bb.translate(offset) : null\n      }\n      visel.add(path, bb, ext)\n      path.insertBefore(this.layers[LayerMap[group]])\n    })\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map()\n    })\n\n    this.structChanged = false\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark)\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark)\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed']\n\n    const value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark\n\n    mapChanged.set(id, value)\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel)\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove()\n    })\n    visel.clear()\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func)\n    })\n  }\n\n  getVBoxObj(selection?): Box2Abs {\n    selection = selection || {}\n\n    if (isSelectionEmpty(selection)) {\n      Object.keys(ReStruct.maps).forEach((map) => {\n        selection[map] = Array.from(this[map].keys())\n      })\n    }\n\n    let vbox: Box2Abs | null = null\n    Object.keys(ReStruct.maps).forEach((map) => {\n      if (!selection[map]) return\n\n      selection[map].forEach((id) => {\n        const box = this[map].get(id).getVBoxObj(this.render)\n        if (box) vbox = vbox ? Box2Abs.union(vbox, box) : box.clone()\n      })\n    })\n\n    vbox = vbox || new Box2Abs(0, 0, 0, 0)\n    return vbox\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d))\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s))\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel))\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1))\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id)\n        })\n      }\n    })\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid)\n    )\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render)\n    )\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel)\n      this.frags.delete(fid)\n      this.molecule.frags.delete(fid)\n    })\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n\n      mapChanged.forEach((_value, id) => {\n        this.clearVisel(this[map].get(id).visel)\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0\n      })\n    })\n\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel)\n      sgroup.hovering = null\n      sgroup.selectionPlate = null\n    })\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel)\n    })\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel)\n    })\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents()\n      this.molecule.initHalfBonds()\n      this.molecule.initNeighbors()\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys())\n    this.molecule.updateHalfBonds(atomsChangedArray)\n    this.molecule.sortNeighbors(atomsChangedArray)\n\n    this.assignConnectedComponents()\n    this.initialized = true\n\n    this.verifyLoops()\n    const updLoops = force || this.structChanged\n    if (updLoops) this.updateLoops()\n    this.showLabels()\n    this.showBonds()\n    if (updLoops) this.showLoops()\n    this.showReactionSymbols()\n    this.showSGroups()\n\n    this.showFragments()\n    this.showRGroups()\n    this.showEnhancedFlags()\n    this.showSimpleObjects()\n    this.showTexts()\n    this.clearMarks()\n\n    return true\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel)\n    })\n    const ret = this.molecule.findLoops()\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1)\n    })\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)))\n    })\n  }\n\n  showLoops(): void {\n    const options = this.render.options\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options)\n    })\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id)\n      if (simpleObject) simpleObject.show(this, options)\n    })\n  }\n\n  showTexts() {\n    const options = this.render.options\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id)\n      if (text) text.show(this, id, options)\n    })\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id)\n      if (arrow) arrow.show(this, id, options)\n    })\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id)\n      if (plus) plus.show(this, id, options)\n    })\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id)\n        if (!resgroup) return\n        resgroup.show(this)\n      })\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id)\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true)\n      }\n      // TODO fragment selection & highlighting\n    })\n  }\n\n  showRGroups(): void {\n    const options = this.render.options\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options)\n    })\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId)\n    if (!reloop) {\n      return\n    }\n    this.clearVisel(reloop.visel)\n\n    const bondlist: Array<number> = []\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid)\n      if (!hb) return\n      hb.loop = -1\n      this.markBond(hb.bid, 1)\n      this.markAtom(hb.begin, 1)\n      bondlist.push(hb.bid)\n    })\n\n    this.reloops.delete(loopId)\n    this.molecule.loops.delete(loopId)\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid)\n    })\n  }\n\n  showLabels(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.show(this, aid, options)\n    })\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid)\n      if (flag) flag.show(this, chid, options)\n    })\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid)\n      if (bond) {\n        bond.show(this, bid, options)\n      }\n    })\n  }\n\n  setSelection(selection?) {\n    const atoms: { selected: boolean; sgroup: number }[] = []\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values() // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup: sgroup\n            })\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item.item.id,\n              this.molecule.functionalGroups\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item.item.id\n            )\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected\n          }\n\n          let selected = selection?.[map]\n            ? selection[map].indexOf(id) > -1\n            : item.selected\n\n          if (selection === null) {\n            selected = false\n          }\n\n          this.showItemSelection(item, selected)\n          item.selectionPlate?.toBack()\n        })\n      }\n    })\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item)\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected\n    if (selected) {\n      if (!exists) {\n        const render = this.render\n        const options = render.options\n        const paper = render.paper\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options)\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate\n        )\n\n        if (typeof item.makeAdditionalInfo === 'function') {\n          item.additionalInfo = item.makeAdditionalInfo(this)\n          this.addReObjectPath(\n            LayerMap.additionalInfo,\n            item.visel,\n            item.additionalInfo\n          )\n        }\n      }\n      if (item.selectionPlate) {\n        item.selectionPlate.show()\n        item.additionalInfo?.show()\n        item.cip?.rectangle.attr({\n          fill: '#7f7',\n          stroke: '#7f7'\n        })\n      }\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide()\n      item.additionalInfo?.hide()\n      item.cip?.rectangle.attr({\n        fill: '#fff',\n        stroke: '#fff'\n      })\n    }\n  }\n}\n\nfunction isSelectionEmpty(selection) {\n  if (!selection) return true\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0\n  )\n\n  return !anySelection\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor)\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor)\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor)\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0)\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s)\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  )\n}\n\nexport default ReStruct\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { inRange } from 'lodash'\nimport { BondAtoms } from 'application/editor/shared/utils.types'\n\nlet FRAC = Math.PI / 12 // '15º'\n\nfunction setFracAngle(angle: number): void {\n  FRAC = (Math.PI / 180) * angle\n}\n\nfunction calcAngle(pos0: Vec2, pos1: Vec2): number {\n  const v = Vec2.diff(pos1, pos0)\n  return Math.atan2(v.y, v.x)\n}\n\nfunction fracAngle(angle, angle2): number {\n  if (angle2) angle = calcAngle(angle, angle2)\n  return Math.round(angle / FRAC) * FRAC\n}\n\nfunction calcNewAtomPos(pos0: Vec2, pos1: Vec2, ctrlKey: boolean): Vec2 {\n  const vector = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1)\n  )\n  vector.add_(pos0) // eslint-disable-line no-underscore-dangle\n  return vector\n}\n\nfunction degrees(angle: number): number {\n  let degree = Math.round((angle / Math.PI) * 180)\n  if (degree > 180) degree -= 360\n  else if (degree <= -180) degree += 360\n  return degree\n}\n\nconst BONDS_MERGE_ANGLE = 10 // 'º'\nconst BONDS_MERGE_SCALE = 0.2\n\nfunction mergeBondsParams(\n  struct1: Struct,\n  bond1: BondAtoms,\n  struct2: Struct,\n  bond2: BondAtoms\n) {\n  // TODO find a solution to remove not-null assertion from result atoms below\n  // https://github.com/epam/ketcher/issues/2652\n  const begin1 = struct1.atoms.get(bond1.begin)!\n  const begin2 = struct2.atoms.get(bond2.begin)!\n  const end1 = struct1.atoms.get(bond1.end)!\n  const end2 = struct2.atoms.get(bond2.end)!\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp)\n  const mergeAngle = Math.abs(degrees(angle) % 180)\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp)\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE)\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 }\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  calcNewAtomPos,\n  degrees,\n  setFracAngle,\n  mergeBondsParams\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport utils from '../editor/shared/utils'\nimport { ShowHydrogenLabels } from './restruct/reatom'\nimport { RenderOptions } from './render.types'\n\nfunction defaultOptions(options: RenderOptions): RenderOptions {\n  const scaleFactor = options.scale || 100\n\n  if (options.rotationStep) {\n    utils.setFracAngle(options.rotationStep)\n  }\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactor / 6))\n  const subFontSize = Math.ceil(0.5 * labelFontSize)\n\n  const defaultOptions: Partial<RenderOptions> = {\n    'dearomatize-on-load': false,\n    ignoreChiralFlag: false,\n    disableQueryElements: null,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: ShowHydrogenLabels.TerminalAndHetero,\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    scale: scaleFactor,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactor / 20,\n    bondSpace: options.doubleBondWidth || scaleFactor / 7,\n    stereoBond: options.stereoBondWidth || scaleFactor / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    radiusScaleFactor: 0.38,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': options.bondThickness || scaleFactor / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#57FF8F',\n      stroke: '#57FF8F'\n    },\n    hoverStyle: {\n      stroke: '#0097A8',\n      fill: 'transparent',\n      fillSelected: '#CCFFDD',\n      'stroke-width': (0.6 * scaleFactor) / 20\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactor) / 20\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px'\n    },\n    hoverStyleSimpleObject: {\n      stroke: '#57FF8F',\n      'stroke-width': scaleFactor / 4,\n      'stroke-linecap': 'round',\n      'stroke-opacity': 0.6\n    },\n    atomSelectionPlateRadius: labelFontSize,\n    contractedFunctionalGroupSize: 50\n  }\n\n  return Object.assign({}, defaultOptions, options)\n}\n\nexport default defaultOptions\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities'\nimport { RaphaelPaper } from 'raphael'\n\nimport Raphael from './raphael-ext'\nimport { ReStruct } from './restruct'\nimport { Scale } from 'domain/helpers'\nimport defaultOptions from './options'\nimport draw from './draw'\nimport { RenderOptions } from './render.types'\n\nexport class Render {\n  public readonly clientArea: HTMLElement\n  public readonly paper: RaphaelPaper\n  // TODO https://github.com/epam/ketcher/issues/2631\n  public sz: Vec2\n  // TODO https://github.com/epam/ketcher/issues/2630\n  public ctab: ReStruct\n  public options: RenderOptions\n  private readonly userOpts: RenderOptions\n  private oldCb: Box2Abs | null = null\n\n  constructor(clientArea: HTMLElement, options: RenderOptions) {\n    let renderWidth = options.width || clientArea.clientWidth - 10\n    let renderHeight = options.height || clientArea.clientHeight - 10\n    renderWidth = renderWidth > 0 ? renderWidth : 0\n    renderHeight = renderHeight > 0 ? renderHeight : 0\n\n    this.userOpts = options\n    this.clientArea = clientArea\n    this.paper = new Raphael(clientArea, renderWidth, renderHeight)\n    this.sz = Vec2.ZERO\n    this.ctab = new ReStruct(new Struct(), this)\n    this.options = defaultOptions(this.userOpts)\n  }\n\n  updateOptions(opts: string) {\n    try {\n      const passedOptions = JSON.parse(opts)\n      if (passedOptions && typeof passedOptions === 'object') {\n        this.options = { ...this.options, ...passedOptions }\n        return this.options\n      }\n    } catch (e) {\n      console.log('Not a valid settings object')\n    }\n    return false\n  }\n\n  selectionPolygon(polygon: Vec2[]) {\n    return draw.selectionPolygon(this.paper, polygon, this.options)\n  }\n\n  selectionLine(point0: Vec2, point1: Vec2) {\n    return draw.selectionLine(this.paper, point0, point1, this.options)\n  }\n\n  selectionRectangle(point0: Vec2, point1: Vec2) {\n    return draw.selectionRectangle(this.paper, point0, point1, this.options)\n  }\n\n  view2obj(point: Vec2, isRelative?: boolean) {\n    let scroll = this.scrollPos()\n\n    point = point.scaled(1 / this.options.zoom)\n    scroll = scroll.scaled(1 / this.options.zoom)\n\n    point = isRelative ? point : point.add(scroll).sub(this.options.offset)\n\n    return Scale.scaled2obj(point, this.options)\n  }\n\n  obj2view(vector: Vec2, isRelative: true) {\n    let p = Scale.obj2scaled(vector, this.options)\n    p = isRelative\n      ? p\n      : p\n          .add(this.options.offset)\n          .sub(this.scrollPos().scaled(1 / this.options.zoom))\n    p = p.scaled(this.options.zoom)\n\n    return p\n  }\n\n  scrollPos() {\n    return new Vec2(this.clientArea.scrollLeft, this.clientArea.scrollTop)\n  }\n\n  page2obj(event: MouseEvent) {\n    const clientArea = this.clientArea\n\n    const { top: offsetTop, left: offsetLeft } =\n      clientArea.getBoundingClientRect()\n\n    const pp = new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop)\n    return this.view2obj(pp)\n  }\n\n  setPaperSize(newSize: Vec2) {\n    this.sz = newSize\n    this.paper.setSize(\n      newSize.x * this.options.zoom,\n      newSize.y * this.options.zoom\n    )\n    this.setViewBox()\n  }\n\n  setOffset(newOffset: Vec2): void {\n    const delta = new Vec2(\n      newOffset.x - this.options.offset.x,\n      newOffset.y - this.options.offset.y\n    )\n    this.clientArea.scrollLeft += delta.x\n    this.clientArea.scrollTop += delta.y\n    this.options.offset = newOffset\n  }\n\n  setZoom(zoom: number) {\n    // when scaling the canvas down it may happen that the scaled canvas is smaller than the view window\n    // don't forget to call setScrollOffset after zooming (or use extendCanvas directly)\n    this.options.zoom = zoom\n    this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom)\n    this.setViewBox()\n  }\n\n  setScrollOffset(x: number, y: number) {\n    const clientArea = this.clientArea\n    const cx = clientArea.clientWidth\n    const cy = clientArea.clientHeight\n    const e = calcExtend(\n      this.sz.scaled(this.options.zoom),\n      x,\n      y,\n      cx + Math.abs(x),\n      cy + Math.abs(y)\n    ).scaled(1 / this.options.zoom)\n    if (e.x > 0 || e.y > 0) {\n      this.setPaperSize(this.sz.add(e))\n      const d = new Vec2(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(\n        1 / this.options.zoom\n      )\n      if (d.x > 0 || d.y > 0) {\n        this.ctab.translate(d)\n        this.setOffset(this.options.offset.add(d))\n      }\n    }\n    // clientArea.scrollLeft = x\n    // clientArea.scrollTop = y\n    clientArea.scrollLeft = x * this.options.scale\n    clientArea.scrollTop = y * this.options.scale\n    // TODO: store drag position in scaled systems\n    // scrollLeft = clientArea.scrollLeft;\n    // scrollTop = clientArea.scrollTop;\n    this.update(false)\n  }\n\n  setViewBox() {\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      '0 0 ' + this.sz.x + ' ' + this.sz.y\n    )\n  }\n\n  setMolecule(struct: Struct) {\n    this.paper.clear()\n    this.ctab = new ReStruct(struct, this)\n    this.options.offset = new Vec2()\n    this.update(false)\n  }\n\n  update(\n    force = false,\n    viewSz: Vec2 | null = null,\n    options = {\n      resizeCanvas: true\n    }\n  ) {\n    // eslint-disable-line max-statements\n    viewSz =\n      viewSz ||\n      new Vec2(\n        this.clientArea.clientWidth || 100,\n        this.clientArea.clientHeight || 100\n      )\n\n    const changes = this.ctab.update(force)\n    this.ctab.setSelection() // [MK] redraw the selection bits where necessary\n    if (changes) {\n      const scale = this.options.scale\n      const bb = this.ctab\n        .getVBoxObj()\n        .transform(Scale.obj2scaled, this.options)\n        .translate(this.options.offset || new Vec2())\n\n      if (this.options.downScale) {\n        this.ctab.molecule.rescale()\n      }\n\n      const isAutoScale = this.options.autoScale || this.options.downScale\n      if (!isAutoScale) {\n        const ext = Vec2.UNIT.scaled(scale)\n        const eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb\n        const vb = new Box2Abs(\n          this.scrollPos(),\n          viewSz.scaled(1 / this.options.zoom).sub(Vec2.UNIT.scaled(20))\n        )\n        const cb = Box2Abs.union(vb, eb)\n        if (!this.oldCb) this.oldCb = new Box2Abs()\n\n        const sz = cb.sz().floor()\n        const delta = this.oldCb.p0.sub(cb.p0).ceil()\n        const shouldResizeCanvas =\n          (!this.sz || sz.x !== this.sz.x || sz.y !== this.sz.y) &&\n          options.resizeCanvas\n        if (shouldResizeCanvas) {\n          this.setPaperSize(sz)\n        }\n\n        this.options.offset = this.options.offset || new Vec2()\n        const shouldScrollCanvas =\n          (delta.x !== 0 || delta.y !== 0) && options.resizeCanvas\n        if (shouldScrollCanvas) {\n          this.setOffset(this.options.offset.add(delta))\n          this.ctab.translate(delta)\n        }\n      } else {\n        const sz1 = bb.sz()\n        const marg = this.options.autoScaleMargin\n        const mv = new Vec2(marg, marg)\n        const csz = viewSz\n        if (marg && (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1)) {\n          throw new Error('View box too small for the given margin')\n        }\n        let rescale =\n          this.options.rescaleAmount ||\n          Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg))\n\n        const isForceDownscale = this.options.downScale && rescale < 1\n        const isBondsLengthFit = this.options.maxBondLength / rescale > 1\n        if (isBondsLengthFit || isForceDownscale) {\n          rescale = 1\n        }\n        const sz2 = sz1.add(mv.scaled(2 * rescale))\n        /* eslint-disable no-mixed-operators */\n        this.paper.setViewBox(\n          bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n          bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n          csz.x * rescale,\n          csz.y * rescale\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n  }\n}\n\nfunction calcExtend(\n  canvasSize: Vec2,\n  x0: number,\n  y0: number,\n  newXSize: number,\n  newYSize: number\n): Vec2 {\n  // eslint-disable-line max-params\n  let ex = x0 < 0 ? -x0 : 0\n  let ey = y0 < 0 ? -y0 : 0\n\n  if (canvasSize.x < newXSize) {\n    ex += newXSize - canvasSize.x\n  }\n  if (canvasSize.y < newYSize) {\n    ey += newYSize - canvasSize.y\n  }\n  return new Vec2(ex, ey)\n}\n","import { Struct } from 'domain/entities'\nimport { Render } from './raphaelRender'\n\n/**\n * Is used to improve search and opening tab performance in Template Dialog\n * Rendering a lot of structures causes great delay\n */\nconst renderCache = new Map()\n\nexport class RenderStruct {\n  /**\n   * for S-Groups we want to show expanded structure\n   * without brackets\n   */\n  static prepareStruct(struct: Struct) {\n    if (struct.sgroups.size > 0) {\n      const newStruct = struct.clone()\n      newStruct.sgroups.delete(0)\n      return newStruct\n    }\n    return struct\n  }\n\n  static render(\n    el: HTMLElement | null,\n    struct: Struct | null,\n    options: any = {}\n  ) {\n    if (el && struct) {\n      const { cachePrefix = '', needCache = true } = options\n      const cacheKey = `${cachePrefix}${struct.name}`\n      if (renderCache.has(cacheKey) && needCache) {\n        el.innerHTML = renderCache.get(cacheKey)\n        return\n      }\n      const preparedStruct = this.prepareStruct(struct)\n      preparedStruct.initHalfBonds()\n      preparedStruct.initNeighbors()\n      preparedStruct.setImplicitHydrogen()\n      preparedStruct.markFragments()\n      const rnd = new Render(el, {\n        autoScale: true,\n        ...options\n      })\n      preparedStruct.rescale()\n      rnd.setMolecule(preparedStruct)\n      if (needCache) {\n        renderCache.set(cacheKey, rnd.clientArea.innerHTML)\n      }\n    }\n  }\n}\n","import { Vec2 } from 'domain/entities'\n\nconst edgeOffset = 150\nconst scrollMultiplier = 2\nconst moveDelta = 1\nlet lastX = 0\nlet lastY = 0\n\nexport function getDirections(event) {\n  const { layerX, layerY } = event\n  const isMovingRight = layerX - lastX > moveDelta\n  const isMovingLeft = lastX - layerX > moveDelta\n  const isMovingTop = lastY - layerY > moveDelta\n  const isMovingBottom = layerY - lastY > moveDelta\n  lastX = layerX\n  lastY = layerY\n  return { isMovingRight, isMovingLeft, isMovingTop, isMovingBottom }\n}\n\nexport function isCloseToEdgeOfScreen(event) {\n  const { clientX, clientY } = event\n  const body = document.body\n  const isCloseToLeftEdgeOfScreen = clientX <= edgeOffset\n  const isCloseToTopEdgeOfScreen = clientY <= edgeOffset\n  const isCloseToRightEdgeOfScreen = body.clientWidth - clientX <= edgeOffset\n  const isCloseToBottomEdgeOfScreen = body.clientHeight - clientY <= edgeOffset\n  return {\n    isCloseToLeftEdgeOfScreen,\n    isCloseToTopEdgeOfScreen,\n    isCloseToRightEdgeOfScreen,\n    isCloseToBottomEdgeOfScreen\n  }\n}\n\nexport function isCloseToEdgeOfCanvas(event, canvasSize) {\n  const { layerX, layerY } = event\n  const isCloseToLeftEdgeOfCanvas = layerX <= edgeOffset\n  const isCloseToTopEdgeOfCanvas = layerY <= edgeOffset\n  const isCloseToRightEdgeOfCanvas = canvasSize.x - layerX <= edgeOffset\n  const isCloseToBottomEdgeOfCanvas = canvasSize.y - layerY <= edgeOffset\n  return {\n    isCloseToLeftEdgeOfCanvas,\n    isCloseToTopEdgeOfCanvas,\n    isCloseToRightEdgeOfCanvas,\n    isCloseToBottomEdgeOfCanvas\n  }\n}\n\nexport function calculateCanvasExtension(\n  clientArea,\n  currentCanvasSize,\n  extensionVector\n) {\n  const newHorizontalScrollPosition = clientArea.scrollLeft + extensionVector.x\n  const newVerticalScrollPosition = clientArea.scrollTop + extensionVector.y\n  let horizontalExtension = 0\n  let verticalExtension = 0\n  if (newHorizontalScrollPosition > currentCanvasSize.x) {\n    horizontalExtension = newHorizontalScrollPosition - currentCanvasSize.x\n  }\n  if (newHorizontalScrollPosition < 0) {\n    horizontalExtension = Math.abs(newHorizontalScrollPosition)\n  }\n  if (newVerticalScrollPosition > currentCanvasSize.y) {\n    verticalExtension = newVerticalScrollPosition - currentCanvasSize.y\n  }\n  if (newVerticalScrollPosition < 0) {\n    verticalExtension = Math.abs(newVerticalScrollPosition)\n  }\n  return new Vec2(horizontalExtension, verticalExtension, 0)\n}\n\nexport function shiftAndExtendCanvasByVector(vector: Vec2, render) {\n  const clientArea = render.clientArea\n  const extensionVector = calculateCanvasExtension(\n    clientArea,\n    render.sz.scaled(render.options.zoom),\n    vector\n  ).scaled(1 / render.options.zoom)\n\n  if (extensionVector.x > 0 || extensionVector.y > 0) {\n    render.setPaperSize(render.sz.add(extensionVector))\n    render.setOffset(render.options.offset.add(vector))\n    render.ctab.translate(vector)\n    render.setViewBox(render.options.zoom)\n    /**\n     * When canvas extends previous (0, 0) coordinates may become (100, 100)\n     */\n    lastX += extensionVector.x\n    lastY += extensionVector.y\n  }\n\n  scrollByVector(vector, render)\n  render.update(false)\n}\n\nexport function scrollByVector(vector: Vec2, render) {\n  const clientArea = render.clientArea\n  clientArea.scrollLeft += (vector.x * render.options.scale) / scrollMultiplier\n  clientArea.scrollTop += (vector.y * render.options.scale) / scrollMultiplier\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render'\n\nimport { OperationType } from './OperationType'\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>\ntype OperationType = ValueOf<typeof OperationType>\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined\n  type: OperationType\n  priority: number\n  data: any\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type\n    this.priority = priority\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented')\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct)\n    if (!this._inverted) {\n      this._inverted = this.invert()\n      this._inverted._inverted = this\n    }\n    return this._inverted\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented')\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId)\n    if (!atom) {\n      return\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0)\n\n    const halfBonds = restruct.molecule.halfBonds\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return\n      }\n\n      const halfBond = halfBonds.get(halfBondId)\n      if (!halfBond) {\n        return\n      }\n\n      restruct.markBond(halfBond.bid, 1)\n      restruct.markAtom(halfBond.end, 0)\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid)\n      }\n    })\n\n    const fragment = atom.a.fragment\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0)\n      }\n    })\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId)\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop)\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop)\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId)\n\n    const bond = restruct.bonds.get(bondId)\n    if (!bond) {\n      return\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0)\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0)\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level)\n      return\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id)\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id)\n      }\n      return\n    }\n\n    restruct.markItem(map, id, level)\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1)\n  }\n}\n\nexport { BaseOperation }\nexport default BaseOperation\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_ROTATE: 'Rotate rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight'\n})\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  aid?: any\n  attribute?: any\n  value?: any\n}\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, 1)\n    this.data = { aid: atomId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data\n\n      const atom = restruct.molecule.atoms.get(aid)!\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute]\n        }\n      }\n\n      atom[attribute] = value\n      BaseOperation.invalidateAtom(restruct, aid)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, 2)\n    this.data = { aid: atomId, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { aid, d } = this.data\n    const atom = struct.atoms.get(aid)\n    if (!atom) return\n    atom!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid)\n    if (reatom) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reatom.visel.translate(scaled)\n    }\n\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove()\n    inverted.data = this.data\n    return inverted\n  }\n\n  isDummy() {\n    const { d } = this.data\n    return d.x === 0 && d.y === 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Pile, Vec2 } from 'domain/entities'\nimport { ReAtom, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any\n  atom: any\n  pos: any\n}\n\nclass AtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD)\n    this.data = { atom, pos, aid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data\n\n    const struct = restruct.molecule\n\n    const pp: { label: string } = { label: '' }\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p]\n      })\n    }\n\n    pp.label = pp.label || 'C'\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp))\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp))\n    }\n\n    const { aid } = this.data\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!)\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]))\n    restruct.atoms.set(aid, atomData)\n    restruct.markAtom(aid, 1)\n\n    struct.atomSetPos(aid, new Vec2(pos))\n\n    const arrow = struct.rxnArrows.get(0)\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x\n      )\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, 5)\n    this.data = { aid: atomId, atom: null, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid)\n      this.data.pos = this.data.atom.pp\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid)\n    if (!restructedAtom) {\n      return\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component)\n    set.delete(aid)\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component)\n    }\n\n    restruct.clearVisel(restructedAtom.visel)\n    restruct.atoms.delete(aid)\n    restruct.markItemRemoved()\n    struct.atoms.delete(aid)\n  }\n\n  invert() {\n    const inverted = new AtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { AtomAdd, AtomDelete }\nexport * from './AtomAttr'\nexport * from './AtomMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  bid: any\n  attribute: any\n  value: any\n}\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(bondId?: any, attribute?: any, value?: any) {\n    super(OperationType.BOND_ATTR, 2)\n    this.data = { bid: bondId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n\n      if (!this.data2) {\n        this.data2 = {\n          bid: bid,\n          attribute: attribute,\n          value: bond[attribute]\n        }\n      }\n\n      bond[attribute] = value\n\n      BaseOperation.invalidateBond(restruct, bid)\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid)\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n      return bond[attribute] === value\n    }\n    return false\n  }\n\n  invert() {\n    const inverted = new BondAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any\n    d: any\n  }\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, 2)\n    this.data = { bid: bondId, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data\n    const bond = restruct.bonds.get(bid)\n    if (!bond) return\n\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    bond.visel.translate(scaled)\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new BondMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReBond, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { Bond } from 'domain/entities'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any\n  begin: any\n  end: any\n  bid: any\n}\n\nclass BondAdd extends BaseOperation {\n  data: Data\n\n  constructor(begin?: any, end?: any, bond?: any) {\n    super(OperationType.BOND_ADD, 1)\n    this.data = { bond, begin, end, bid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected')\n    }\n\n    BaseOperation.invalidateAtom(restruct, begin, 1)\n    BaseOperation.invalidateAtom(restruct, end, 1)\n\n    const pp: {\n      type: number\n      begin: number\n      end: number\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0\n    }\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p]\n      })\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE\n    pp.begin = begin\n    pp.end = end\n\n    const newBond = new Bond(pp)\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond)\n    } else {\n      this.data.bid = struct.bonds.add(newBond)\n    }\n\n    const { bid } = this.data\n    const structBond = struct.bonds.get(bid)!\n\n    struct.bondInitHalfBonds(bid)\n    struct.atomAddNeighbor(structBond.hb1)\n    struct.atomAddNeighbor(structBond.hb2)\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond))\n    restruct.markBond(bid, 1)\n  }\n\n  invert() {\n    const inverted = new BondDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, 3)\n    this.data = { bid: bondId, bond: null, begin: null, end: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid)\n      this.data.begin = this.data.bond.begin\n      this.data.end = this.data.bond.end\n    }\n\n    BaseOperation.invalidateBond(restruct, bid)\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid)\n    if (!rebond) return\n    ;[rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return\n      const halfBond = restruct.molecule.halfBonds.get(hbid)\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop)\n      }\n    }, restruct)\n    restruct.clearVisel(rebond.visel)\n    restruct.bonds.delete(bid)\n    restruct.markItemRemoved()\n\n    const structBond = struct.bonds.get(bid)!\n    ;[structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!)\n      if (!halfBond) {\n        return\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!\n      const pos = atom.neighbors.indexOf(hbid!)\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length\n      const next = (pos + 1) % atom.neighbors.length\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next])\n      atom.neighbors.splice(pos, 1)\n    })\n    struct.halfBonds.delete(structBond.hb1!)\n    struct.halfBonds.delete(structBond.hb2!)\n\n    struct.bonds.delete(bid)\n  }\n\n  invert() {\n    const inverted = new BondAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { BondAdd, BondDelete }\nexport * from './BondAttr'\nexport * from './BondMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Struct } from 'domain/entities'\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct\n  }\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD)\n    this.data = { struct }\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule\n    restruct.clearVisels() // TODO: What is it?\n    if (this.data.struct) {\n      restruct.render.setMolecule(this.data.struct)\n    }\n\n    this.data.struct = oldStruct\n  }\n\n  invert() {\n    const inverted = new CanvasLoad()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS)\n    this.history = {}\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse()\n\n    const structBox: any = struct.getCoordBoundingBoxObj()\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0)\n    )\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp)\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5))\n      sgroup.pp = alignPoint\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history)\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION)\n    this.history = history\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values())\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id]\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new AlignDescriptors()\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any\n    p: any\n  }\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE)\n    this.data = { frid: fragmentId, p }\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data\n    const { p } = this.data\n    const fragment = restruct.molecule.frags.get(frid)\n    if (!fragment) return\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!\n\n    const newPosition = Vec2.sum(currentPosition, p)\n    fragment.stereoFlagPosition = newPosition\n\n    this.data.p = p.negated()\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1)\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n  skipRgids: any[]\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = new Map()\n    this.skipRgids = skipRgids || []\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new\n        this.ifThenHistory.set(rgid, this.rgid_old)\n        struct.rgroups.set(rgid, rg)\n      }\n    })\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory)\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = history || new Map()\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!\n      rgValue.ifthen = rg\n      struct.rgroups.set(rgid, rgValue)\n    })\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new)\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { Fragment } from 'domain/entities'\nimport { OperationType } from './OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId?: any) {\n    super(OperationType.FRAGMENT_ADD)\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const frag = new Fragment()\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag)\n    } else {\n      struct.frags.set(this.frid, frag)\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)) // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag())\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid)\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    if (!struct.frags.get(this.frid)) {\n      return\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1)\n    restruct.frags.delete(this.frid)\n    struct.frags.delete(this.frid) // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid)\n    if (!enhancedFalg) return\n    restruct.clearVisel(enhancedFalg.visel)\n    restruct.enhancedFlags.delete(this.frid)\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid)\n  }\n}\n\nexport { FragmentAdd, FragmentDelete }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any\n  aid: any\n}\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_ADD_STEREO_ATOM, 100)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid)\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_DELETE_STEREO_ATOM, 90)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data\n    return new FragmentAddStereoAtom(frid, aid)\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number\n\n  constructor(fragmentId: number) {\n    super(OperationType.FRAGMENT_STEREO_FLAG, 6)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const fragment = struct.frags.get(this.frid)!\n    fragment.updateStereoFlag(struct)\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid)\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid)\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, 10)\n    this.atomIds = aids\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds\n\n    restruct.molecule.setImplicitHydrogen(aIds)\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data\n    const reloop = restruct.reloops.get(id)\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reloop.visel.translate(scaled)\n    }\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new LoopMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  rgid: any\n  attribute: any\n  value: any\n}\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR)\n    this.data = { rgid: rgroupId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!\n\n      if (!rgp) {\n        return\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute]\n        }\n      }\n\n      rgp[attribute] = value\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid)\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n      const rgroup = restruct.molecule.rgroups.get(rgid)!\n      return rgroup[attribute] === value\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { RGroup } from 'domain/entities'\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any\n  rg_new: any\n  rgid_old: any\n  rg_old: any\n  frid: any\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT)\n    this.rgid_new = rgroupId\n    this.rg_new = rg\n    this.rgid_old = null\n    this.rg_old = null\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid)\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null\n\n    this.removeOld(struct, restruct)\n    this.setNew(struct, restruct)\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return\n    }\n\n    this.rg_old.frags.delete(this.frid)\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel)\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old)\n      struct.rgroups.delete(this.rgid_old)\n      restruct.markItemRemoved()\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1)\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new)\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup()\n      struct.rgroups.set(this.rgid_new, rgNew)\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew))\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1)\n    }\n\n    rgNew.frags.add(this.frid)\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\n\ninterface RxnArrowMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.rxnArrows.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    move.data = this.data\n    return move\n  }\n}\n","import utils from 'application/editor/shared/utils'\nimport { ReStruct } from 'application/render'\nimport { Vec2 } from 'domain/entities'\nimport { OperationType } from '../OperationType'\nimport Base from '../base'\n\ninterface RxnArrowRotateData {\n  id: number\n  angle: number\n  center: Vec2\n  noinvalidate?: boolean\n}\n\nexport class RxnArrowRotate extends Base {\n  data: RxnArrowRotateData\n\n  constructor(id: number, angle: number, center: Vec2, noinvalidate?: boolean) {\n    super(OperationType.RXN_ARROW_ROTATE)\n    this.data = { id, angle, center, noinvalidate }\n  }\n\n  execute(reStruct: ReStruct) {\n    const degree = utils.degrees(this.data.angle)\n\n    const arrowId = this.data.id\n    const arrow = reStruct.molecule.rxnArrows.get(arrowId)\n    if (arrow) {\n      // Note: Struct and ReStruct are in two different systems,\n      //       must manually update struct's position\n      arrow.pos = arrow.pos.map((p) =>\n        p.rotateAroundOrigin(degree, this.data.center)\n      )\n    }\n\n    const options = reStruct.render.options\n    const drawingCenter = this.data.center\n      .scaled(options.scale)\n      .add(options.offset)\n\n    reStruct.rxnArrows.get(arrowId)?.visel.rotate(degree, drawingCenter)\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(reStruct, 'rxnArrows', arrowId, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowRotate(\n      this.data.id,\n      -this.data.angle,\n      this.data.center,\n      this.data.noinvalidate\n    )\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\nimport { RxnArrow, Vec2 } from 'domain/entities'\nimport { tfx } from 'utilities'\ninterface RxnArrowResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.rxnArrows.get(id)\n    const anchor = this.data.anchor\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n      let middlePoint\n      let reItem\n\n      if (RxnArrow.isElliptical(item)) {\n        reItem = restruct.rxnArrows.get(id)\n        ;[, , middlePoint] = reItem.getReferencePoints()\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y\n        )\n        const angleInRadians = (angle * Math.PI) / 180\n        const cosAngle = Math.cos(angleInRadians)\n        const sinAngle = Math.sin(angleInRadians)\n\n        const diffX = current.x - anchor.x\n        const diffY = current.y - anchor.y\n\n        const diff = diffY * cosAngle - diffX * sinAngle\n        item.height -= diff\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints()\n\n        anchor.y = newMiddlePoint.y\n        anchor.x = newMiddlePoint.x\n      }\n    } else {\n      item.pos[1].add_(d)\n    }\n\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\nimport { ReStruct } from '../../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data\n\n    const struct = restruct.molecule\n    struct.rxnPluses.get(id)!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    rxn.visel.translate(scaled)\n\n    this.data.d = d.negated()\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRxnPlus, ReStruct } from '../../../../render'\nimport { RxnPlus, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any\n  pos: any\n}\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD)\n    this.data = { plid: null, pos }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const newRxn = new RxnPlus()\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn)\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn)\n    }\n\n    const { pos, plid } = this.data\n\n    const structRxn = struct.rxnPluses.get(plid)\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn))\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos))\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1)\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE)\n    this.data = { plid, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved()\n    const rxn = restruct.rxnPluses.get(plid)\n    if (!rxn) return\n    restruct.clearVisel(rxn.visel)\n    restruct.rxnPluses.delete(plid)\n\n    struct.rxnPluses.delete(plid)\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete }\nexport * from './RxnPlusMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReRxnArrow } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n}\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number\n  ) {\n    super(OperationType.RXN_ARROW_ADD)\n    this.data = { pos, mode, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new RxnArrow({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item)\n      this.data.id = index\n    } else {\n      struct.rxnArrows.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item))\n\n    const positions = [...this.data.pos]\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1)\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!)\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: RxnArrowMode\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE)\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.rxnArrows.get(this.data.id) as any\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel)\n    restruct.rxnArrows.delete(this.data.id)\n\n    struct.rxnArrows.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id)\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete }\nexport * from './RxnArrowMove'\nexport * from './RxnArrowRotate'\nexport * from './RxnArrowResize'\nexport * from './plus'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport Base from './base'\nimport { OperationType } from './OperationType'\nimport { ReSimpleObject } from '../../render'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\ninterface SimpleObjectAddData {\n  id?: number\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n  toCircle: boolean\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD)\n    this.data = { pos, mode, toCircle, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new SimpleObject({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item)\n      this.data.id = index\n    } else {\n      struct.simpleObjects.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item))\n\n    const positions = [...this.data.pos]\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1])\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1)\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!)\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: SimpleObjectMode\n  toCircle?: boolean\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE)\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.simpleObjects.get(this.data.id) as any\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.data.toCircle = item.toCircle\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel)\n    restruct.simpleObjects.delete(this.data.id)\n\n    struct.simpleObjects.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id\n    )\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.simpleObjects.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    // todo Need further investigation on why this is needed?\n    move.data = this.data\n    return move\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n  toCircle: boolean\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0()\n  const previousPos1 = item.pos[1].get_xy0()\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x\n    current.x = previousPos1.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y\n    current.y = previousPos1.y\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x\n    current.x = previousPos0.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y\n    current.y = previousPos0.y\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate, toCircle }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.simpleObjects.get(id)\n    const anchor = this.data.anchor\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current)\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0()\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current)\n        item.pos[1].x = circlePoint.x\n        item.pos[1].y = circlePoint.y\n        this.data.current = previousPos1\n      } else {\n        const previousPos1 = item.pos[1].get_xy0()\n        item.pos[1].x = current.x\n        item.pos[1].y = current.y\n        this.data.current = previousPos1\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current)\n    } else item.pos[1].add_(d)\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle\n    )\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0)\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { SGroup } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  aid: any\n}\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, 3)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once'\n      )\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found')\n    }\n\n    struct.atomAddToSGroup(sgid, aid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (!atom || !sgroup) {\n      return\n    }\n\n    SGroup.removeAtom(sgroup, aid)\n    atom.sgs.delete(sgid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any\n    attr: any\n    value: any\n  }\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, 4)\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroupId = this.data.sgid!\n    const sgroup = struct.sgroups.get(sgroupId)!\n\n    if (!sgroup) {\n      return\n    }\n\n    const sgroupData = restruct.sgroupData.get(sgroupId)\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgroupId)\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value)\n  }\n\n  invert() {\n    const inverted = new SGroupAttr()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data\n    const { sgroups } = restruct.molecule\n\n    sgroups.get(id)!.pp?.add_(d) // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated()\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1)\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  parent?: any\n  children?: any\n}\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(OperationType.S_GROUP_ADD_TO_HIERACHY, 100)\n    this.data = { sgid: sgroupId, parent, children }\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data\n\n    const struct = restruct.molecule\n    const sgroup = struct.sgroups.get(sgid)!\n    const relations = struct.sGroupForest.insert(sgroup, parent, children)\n\n    this.data.parent = relations.parent\n    this.data.children = relations.children\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data\n    const struct = restruct.molecule\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid)\n    this.data.children = struct.sGroupForest.children.get(sgid)\n    struct.sGroupForest.remove(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities'\nimport { ReSGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  type?: any\n  pp?: any\n  expanded?: boolean\n  name?: string\n}\n\nclass SGroupCreate extends BaseOperation {\n  data: Data\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string\n  ) {\n    super(OperationType.S_GROUP_CREATE)\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroup = new SGroup(this.data.type)\n    const { sgid, pp, expanded, name } = this.data\n\n    sgroup.id = sgid\n    struct.sgroups.set(sgid, sgroup)\n\n    if (pp) {\n      struct.sgroups.get(sgid)!.pp = new Vec2(pp)\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded\n    }\n\n    if (name) {\n      sgroup.data.name = name\n    }\n\n    restruct.sgroups.set(sgid, new ReSGroup(struct.sgroups.get(sgid)))\n    if (\n      FunctionalGroup.isFunctionalGroup(sgroup) ||\n      SGroup.isSuperAtom(sgroup)\n    ) {\n      restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup))\n    }\n    this.data.sgid = sgid\n  }\n\n  invert() {\n    const inverted = new SGroupDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, 95)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { sgid } = this.data\n    const sgroup = restruct.sgroups.get(sgid)\n    const sgroupData = restruct.sgroupData.get(sgid)\n    if (!sgroup) return\n    this.data.type = sgroup.item.type\n    this.data.pp = sgroup.item.pp\n\n    if (sgroup.item.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgid)\n    }\n\n    restruct.clearVisel(sgroup.visel)\n    if (sgroup.item.atoms.length !== 0) {\n      throw new Error('S-Group not empty!')\n    }\n\n    if (\n      FunctionalGroup.isFunctionalGroup(sgroup.item) ||\n      SGroup.isSuperAtom(sgroup.item)\n    ) {\n      let relatedFGroupId\n      this.data.name = sgroup.item.data.name\n      this.data.expanded = sgroup.item.expanded\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid\n        }\n      })\n      restruct.molecule.functionalGroups.delete(relatedFGroupId)\n    }\n\n    restruct.sgroups.delete(sgid)\n    struct.sgroups.delete(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupCreate()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupCreate, SGroupDelete }\nexport * from './sgroupAtom'\nexport * from './SGroupAttr'\nexport * from './SGroupDataMove'\nexport * from './sgroupHierarchy'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct, ReText } from '../../../render'\nimport { Text, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\ninterface TextCreateData {\n  id?: number\n  content: string\n  pos: Array<Vec2>\n  position: Vec2\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE)\n    this.data = { content: content, position, pos, id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data)\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item)\n      this.data.id = index\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.texts.set(itemId, new ReText(item))\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position))\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1)\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!)\n  }\n}\n\ninterface TextDeleteData {\n  id: number\n  content?: string\n  position?: Vec2\n  pos?: Array<Vec2> | []\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE)\n    this.data = { id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const item = struct.texts.get(this.data.id)!\n    if (!item) return\n\n    this.data.content = item.content!\n    this.data.position = item.position\n\n    restruct.markItemRemoved()\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel)\n    restruct.texts.delete(this.data.id)\n\n    struct.texts.delete(this.data.id)\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ninterface TextUpdateData {\n  id: number\n  content: string\n  previousContent?: string\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE)\n    this.data = { id, content: content }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data\n    const text = restruct.molecule.texts.get(id)\n\n    if (text) {\n      this.data.previousContent = text.content!\n      text.content = content\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!)\n\n    inverted.data.previousContent = this.data.content\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\ninterface TextMoveData {\n  id: any\n  d: any\n  noinvalidate?: boolean\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData\n\n  constructor(id: any, d: any, noinvalidate?: boolean) {\n    super(OperationType.TEXT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const difference = this.data.d\n    const item = struct.texts.get(id)\n\n    item?.position?.add_(difference)\n    restruct.texts\n      .get(id)\n      ?.visel.translate(Scale.obj2scaled(difference, restruct.render.options))\n\n    this.data.d = difference.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(this.data.id, this.data.d, this.data.noinvalidate)\n\n    move.data = this.data\n\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base'\nimport { ReStruct } from '../../render'\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[]\n\n  constructor(operations = []) {\n    this.operations = operations\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation)\n    }\n\n    return operation\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations)\n    return this\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct) {\n    const action = new Action()\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority\n    )\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct)\n      action.addOp(invertedOperation)\n    })\n\n    return action\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true)\n      ) === undefined\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { Bond } from 'domain/entities'\nimport { BondAttr } from '../operations'\nimport { MolSerializer } from 'domain/serializers'\n\n/**\n * @param restruct { ReStruct }\n * @param events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  events,\n  simpleFusing\n) {\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const frid = struct.getBondFragment(bid)\n  const beforeMerge = getFragmentWithBondMap(struct, frid)\n  let afterMerge: any = null\n  let pasteItems: any = null\n\n  let action = new Action()\n\n  if (true) {\n    action = simpleFusing(restruct, template, bid)\n    return Promise.resolve(action)\n  }\n\n  const molSerialzer = new MolSerializer()\n\n  return Promise.all([\n    events.aromatizeStruct\n      .dispatch(beforeMerge.frag)\n      .then((res) => molSerialzer.deserialize(res.struct)),\n    events.aromatizeStruct\n      .dispatch(tmpl)\n      .then((res) => molSerialzer.deserialize(res.struct))\n  ])\n    .then(([astruct, atmpl]) => {\n      // aromatize restruct fragment\n      const aromatizeAction = fromAromatize(\n        restruct,\n        astruct,\n        beforeMerge.bondMap\n      )\n      // merge template with fragment\n      const aromTemplate = { bid: template.bid, molecule: atmpl }\n      const templateFusingAction = simpleFusing(restruct, aromTemplate, bid)\n      pasteItems = templateFusingAction[1]\n\n      action = templateFusingAction[0].mergeWith(aromatizeAction)\n\n      afterMerge = getFragmentWithBondMap(restruct.molecule, frid)\n\n      return events.dearomatizeStruct\n        .dispatch(afterMerge.frag)\n        .then((res) => molSerialzer.deserialize(res.struct))\n    })\n    .then((destruct) => {\n      destruct.bonds.forEach((bond) => {\n        if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n          throw Error('Bad dearomatize')\n        }\n      })\n\n      // dearomatize restruct fragment\n      const dearomatizeAction = fromDearomatize(\n        restruct,\n        destruct,\n        afterMerge.bondMap\n      )\n      action = dearomatizeAction.mergeWith(action)\n\n      return [action, pasteItems]\n    })\n    .catch((err) => {\n      console.info(err.message)\n      action.perform(restruct) // revert actions if error\n\n      return simpleFusing(restruct, template, bid)\n    })\n}\n\nfunction fromAromatize(restruct, astruct, bondMap) {\n  const action = new Action()\n\n  astruct.bonds.forEach((bond, bid) => {\n    if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) return\n    action.addOp(\n      new BondAttr(\n        bondMap.get(bid),\n        'type',\n        Bond.PATTERN.TYPE.AROMATIC\n      ).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param dastruct { ReStruct }\n * @param bondMap { Map<number, number> }\n * @returns { Action }\n */\nfunction fromDearomatize(restruct, dastruct, bondMap) {\n  const action = new Action()\n\n  dastruct.bonds.forEach((bond, bid) => {\n    action.addOp(\n      new BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/* UTILS */\n\n// function canBeAromatized(struct) {\n//   // TODO correct this checking && move to chem.Struct ??\n//   if (struct.loops.size === 0) struct.prepareLoopStructure()\n//\n//   const hasAromLoop = struct.loops.find((_id, loop) => loop.aromatic)\n//   if (struct.loops.size === 0 || hasAromLoop) return false\n//\n//   const correctDblBonds = struct.loops.find(\n//     (_id, loop) => loop.dblBonds === loop.hbs.length / 2\n//   )\n//\n//   return correctDblBonds !== undefined\n// }\n\n/**\n * @param struct { Struct }\n * @param frid { number }\n * @returns {{\n * \t\tfrag: Struct,\n * \t\tbondMap: Map<number, number>\n *  }}\n */\nfunction getFragmentWithBondMap(struct, frid) {\n  const atomSet = struct.getFragmentIds(frid)\n  const atomsInStruct = Array.from(atomSet)\n\n  const frag = struct.clone(atomSet)\n  const bondMap = new Map()\n  frag.bonds.forEach((bond, bid) => {\n    bondMap.set(\n      bid,\n      struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end])\n    )\n  })\n\n  return { frag, bondMap }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4\nconst SELECTION_WITHIN_TEXT = 0\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText\n}\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null\n  let ret = null\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct)\n    const topX = referencePoints[0].x\n    const topY = referencePoints[0].y\n    const bottomX = referencePoints[2].x\n    const bottomY = referencePoints[2].y\n\n    const distances = []\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y)\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY)\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y)\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x)\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX)\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT)\n      }\n    }\n\n    const dist = Math.min(...distances)\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return\n\n    const dist = Vec2.dist(pos, atom.a.pp)\n\n    if (dist < minDist) {\n      closestAtom = aid\n      minDist = dist\n    }\n  })\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null\n  let closestBondCenter = null\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  let minCDist = minDist\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5)\n    const cdist = Vec2.dist(pos, mid)\n\n    if (cdist < minCDist) {\n      minCDist = cdist\n      closestBondCenter = bid\n    }\n  })\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const dir = hb.dir\n    const norm = hb.norm\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const inStripe = Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm))\n\n      if (dist < minDist) {\n        closestBond = bid\n        minDist = dist\n      }\n    }\n  })\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist\n    }\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist\n  let ret = null\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id)\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id)\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return\n\n    const dist = Math.abs(pos.y - p.y)\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected')\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist }\n        minDist = xDist\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  const struct = restruct.molecule\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist)\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist\n    }\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale)\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  let ret = null\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos)\n\n      if (!ret || dist < minDist) {\n        minDist = dist\n        ret = { id: rgid, dist: minDist }\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y))\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null\n  let minDist = SELECTION_DISTANCE_COEFFICIENT\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.functionalGroup && !sg.expanded) {\n      const firstAtomPp = sg.firstSgroupAtom.pp\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n      const shift = new Vec2(0.625, 0.625)\n      const box = {\n        p0: Vec2.diff(firstAtomPp, shift),\n        p1: Vec2.sum(firstAtomPp, shift)\n      }\n\n      const inBox =\n        box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid\n        minDist = xDist\n      }\n    } else {\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x)\n        )\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid\n          minDist = xDist\n        }\n      })\n    }\n  })\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps)\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale)\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item\n      return {\n        map: mp,\n        id: id,\n        dist: dist,\n        ...other\n      }\n    }\n\n    return res\n  }, null)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map() // bid -> position\n  }\n\n  const struct = restruct.molecule\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp)\n  })\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid)\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5\n      )\n    )\n  })\n\n  const result = {}\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId }\n      const item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale)\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id)\n\n      return res\n    }, new Map())\n  })\n\n  return result\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group'\n}\n\nexport const selectionKeys = [\n  'atoms',\n  'bonds',\n  'frags',\n  'sgroups',\n  'rgroups',\n  'rxnArrows',\n  'rxnPluses',\n  'simpleObjects',\n  'texts'\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAttributes, Bond, Vec2 } from 'domain/entities'\n\nimport closest from '../shared/closest'\nimport { difference } from 'lodash'\nimport { ReStruct } from 'application/render'\nimport { selectionKeys } from '../shared/constants'\n\ntype AtomAttributeName = keyof AtomAttributes\n\nexport function atomGetAttr(\n  restruct: ReStruct,\n  aid: number,\n  name: AtomAttributeName\n) {\n  const atom = restruct.molecule.atoms.get(aid)\n  if (!atom) return null\n  return atom[name]\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length\n}\n\nexport function atomGetSGroups(restruct, aid) {\n  return Array.from(restruct.atoms.get(aid).a.sgs)\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp\n}\n\nexport function findStereoAtoms(struct, aids: number[] | undefined): number[] {\n  if (!aids) {\n    return [] as number[]\n  }\n\n  return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null)\n}\n\nexport function structSelection(struct) {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys())\n    return res\n  }, {})\n}\n\nexport function formatSelection(selection): any {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = selection[key] || []\n\n    return res\n  }, {})\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = []\n  const pos = atomGetPos(restruct, id)\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id)\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined\n  )\n  const prevBond = restruct.molecule.bonds.get(prevBondId)\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid)\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) })\n  })\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x)\n  )\n\n  let i\n  let maxI = 0\n  let angle\n  let maxAngle = 0\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v\n    )\n\n    if (angle < 0) angle += 2 * Math.PI\n\n    if (angle > maxAngle) {\n      maxI = i\n      maxAngle = angle\n    }\n  }\n\n  let v = new Vec2(1, 0)\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3)\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0]\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = []\n        const neiPos = atomGetPos(restruct, nei.aid)\n        const neiV = Vec2.diff(pos, neiPos)\n        const neiAngle = Math.atan2(neiV.y, neiV.x)\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid)\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos)\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle\n\n          if (ang < 0) ang += 2 * Math.PI\n\n          neiNeighbours.push(ang)\n        })\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2)\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE)\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x)\n    }\n\n    v = v.rotate(angle)\n  }\n\n  v.add_(pos) // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1)\n  a = a === null ? { label: 'C' } : a.id\n\n  return { atom: a, pos: v }\n}\n\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\n  return restruct.molecule.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0\n  )\n}\n\nexport function isAttachmentBond({ begin, end }: Bond, selection): boolean {\n  if (!selection.atoms) {\n    return false\n  }\n  const isBondStartsInSelectionAndEndsOutside =\n    selection.atoms.includes(begin) && !selection.atoms.includes(end)\n  const isBondEndsInSelectionAndStartsOutside =\n    selection.atoms.includes(end) && !selection.atoms.includes(begin)\n  return (\n    isBondStartsInSelectionAndEndsOutside ||\n    isBondEndsInSelectionAndStartsOutside\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action()\n  action.addOp(new RGroupFragment(rgidNew, frid))\n\n  return action.perform(restruct)\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = []\n) {\n  const action = new Action()\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids))\n  }\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy\n} from '../operations'\nimport { FunctionalGroup, Pile, SGroup } from 'domain/entities'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\n\nimport { Action } from './action'\nimport { SgContexts } from '..'\nimport { uniq } from 'lodash/fp'\nimport { fromAtomsAttrs } from './atom'\n\nexport function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {\n  const descriptors = attrs.fieldValue\n\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId()\n    )\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs)\n    localAttrs.fieldValue = fValue\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId()\n      )\n    )\n  }, new Action())\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function setExpandSGroup(restruct, sgid, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]))\n  })\n\n  const sgroup = restruct.molecule.sgroups.get(sgid)\n  if (sgroup.firstSgroupAtom) {\n    delete sgroup.firstSgroupAtom\n    delete sgroup.firstSgroupAtomId\n  }\n  const atoms = SGroup.getAtoms(restruct, sgroup)\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid).a, false)\n    )\n  })\n\n  return action.perform(restruct)\n}\n\n// todo delete after supporting expand - collapse for 2 attachment points\nexport function expandSGroupWithMultipleAttachmentPoint(restruct) {\n  const action = new Action()\n\n  const struct = restruct.molecule\n\n  struct.sgroups.forEach((sgroup) => {\n    const countAttachmentPoint = FunctionalGroup.getAttachmentPointCount(\n      sgroup,\n      struct\n    )\n    if (countAttachmentPoint > 1) {\n      action.mergeWith(\n        setExpandSGroup(restruct, sgroup.id, {\n          expanded: true\n        })\n      )\n    }\n  })\n\n  return action\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action()\n  const struct = restruct.molecule\n\n  const sG = restruct.sgroups.get(id).item\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds()\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'))\n      }\n    })\n  }\n\n  const sg = struct.sgroups.get(id)\n  const atoms = SGroup.getAtoms(struct, sg)\n  const attrs = sg.getAttrs()\n\n  action.addOp(new SGroupRemoveFromHierarchy(id))\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom))\n  })\n\n  action.addOp(new SGroupDelete(id))\n\n  action = action.perform(restruct)\n\n  action.mergeWith(sGroupAttributeAction(id, attrs))\n\n  return action\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  pp?,\n  expanded?,\n  name?\n) {\n  // eslint-disable-line\n  let action = new Action()\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId()\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name))\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp))\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom))\n  })\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, [])\n  )\n\n  action = action.perform(restruct)\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds()\n    let asteriskAction = new Action()\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon()\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'))\n      }\n    })\n\n    asteriskAction = asteriskAction.perform(restruct)\n    asteriskAction.mergeWith(action)\n    action = asteriskAction\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action)\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection)\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds)\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds))\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys())\n    )\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms)\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      sourceAtoms,\n      newSg.attrs\n    )\n  }\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs)\n      )\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment)\n  )\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a\n        if (fragId === atom.fragment) res.push(aid)\n\n        return res\n      }, [])\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs)\n      )\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms)\n      acc.selection.bonds = acc.selection.bonds.concat(bonds)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule\n  let bonds = getAtomsBondIds(struct, sourceAtoms)\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds))\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs\n        )\n      )\n\n      acc.selection.bonds.push(bondid)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms)\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds\n    }\n  }\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id)\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id))\n    })\n\n    return true\n  }\n\n  return false\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule\n  const sgCounts = new Map()\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id)\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1)\n    })\n  })\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG)\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid)\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()))\n      action.addOp(new SGroupRemoveFromHierarchy(sid))\n      action.addOp(new SGroupDelete(sid))\n    }\n  })\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms)\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid)\n    return atomSet.has(bond.begin) && atomSet.has(bond.end)\n  })\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || []\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid)\n    acc = acc.concat([bond.begin, bond.end])\n    return acc\n  }, [])\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2,\n  AtomAttributes,\n  BondAttributes,\n  FunctionalGroup\n} from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag\n} from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups\n} from './atom'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { StereoValidator } from 'domain/helpers'\nimport utils from '../shared/utils'\n\nexport function fromBondAddition(\n  reStruct: ReStruct,\n  bond: Partial<BondAttributes>,\n  begin: number | AtomAttributes,\n  end: number | AtomAttributes,\n  beginAtomPos?: Vec2,\n  endAtomPos?: Vec2\n): [Action, number, number, number] {\n  const action = new Action()\n  const struct = reStruct.molecule\n\n  const mouseDownNothingAndUpNothing = (\n    beginAtomAttr: AtomAttributes,\n    endAtomAttr: AtomAttributes\n  ) => {\n    const newFragmentId = (\n      action.addOp(new FragmentAdd().perform(reStruct)) as FragmentAdd\n    ).frid\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: newFragmentId },\n          beginAtomPos\n        ).perform(reStruct)\n      ) as AtomAdd\n    ).data.aid\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...endAtomAttr, fragment: newFragmentId },\n          endAtomPos\n        ).perform(reStruct)\n      ) as AtomAdd\n    ).data.aid\n\n    return [newBeginAtomId, newEndAtomId] as const\n  }\n\n  const mouseDownNothingAndUpAtom = (\n    beginAtomAttr: AtomAttributes,\n    endAtomId: number\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, endAtomId, 'fragment')\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: fragmentId },\n          beginAtomPos\n        ).perform(reStruct)\n      ) as AtomAdd\n    ).data.aid\n\n    const endAtom = struct.atoms.get(endAtomId)\n    if (\n      endAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        endAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newBeginAtomId], endAtomId)\n    }\n    return [newBeginAtomId, endAtomId] as const\n  }\n\n  const mouseDownAtomAndUpNothing = (\n    beginAtomId: number,\n    endAtomAttr: AtomAttributes\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, beginAtomId, 'fragment')\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          {\n            ...endAtomAttr,\n            fragment: fragmentId\n          },\n          endAtomPos ?? atomForNewBond(reStruct, begin, bond).pos\n        ).perform(reStruct)\n      ) as AtomAdd\n    ).data.aid\n\n    const beginAtom = struct.atoms.get(beginAtomId)\n    if (\n      beginAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        beginAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newEndAtomId], beginAtomId)\n    }\n\n    return [beginAtomId, newEndAtomId] as const\n  }\n\n  let beginAtomId: number, endAtomId: number\n\n  const startsOnAtom = typeof begin === 'number'\n  const endsOnAtom = typeof end === 'number'\n\n  if (!startsOnAtom && !endsOnAtom) {\n    ;[beginAtomId, endAtomId] = mouseDownNothingAndUpNothing(begin, end)\n  } else if (!startsOnAtom && endsOnAtom) {\n    ;[beginAtomId, endAtomId] = mouseDownNothingAndUpAtom(begin, end)\n  } else if (startsOnAtom && !endsOnAtom) {\n    ;[beginAtomId, endAtomId] = mouseDownAtomAndUpNothing(begin, end)\n  } else {\n    ;[beginAtomId, endAtomId] = [begin as number, end as number]\n  }\n\n  if (atomGetAttr(reStruct, beginAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(beginAtomId, 'label', 'C').perform(reStruct))\n  }\n\n  if (atomGetAttr(reStruct, endAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(endAtomId, 'label', 'C').perform(reStruct))\n  }\n\n  const newBondId = (\n    action.addOp(\n      new BondAdd(beginAtomId, endAtomId, bond).perform(reStruct)\n    ) as BondAdd\n  ).data.bid\n  const newBond = struct.bonds.get(newBondId)\n  if (newBond) {\n    action.addOp(\n      new CalcImplicitH([newBond.begin, newBond.end]).perform(reStruct)\n    )\n    action.mergeWith(fromBondStereoUpdate(reStruct, newBond))\n  }\n\n  action.operations.reverse()\n\n  const mergedFragmentId = mergeFragmentsIfNeeded(\n    action,\n    reStruct,\n    beginAtomId,\n    endAtomId\n  )\n  if (struct.frags.get(mergedFragmentId || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(\n      new FragmentStereoFlag(mergedFragmentId || 0).perform(reStruct)\n    )\n  }\n\n  return [action, beginAtomId, endAtomId, newBondId]\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean\n): Action {\n  const struct = restruct.molecule\n  const action = new Action()\n  const bids = Array.isArray(ids) ? ids : [ids]\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key)\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct))\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid)\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct)\n          )\n          action.mergeWith(fromBondStereoUpdate(restruct, bond))\n        }\n      }\n    })\n  })\n\n  return action\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>\n): Action {\n  const struct = restruct.molecule\n\n  const atomPairs = new Map()\n  let action = new Action()\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n    if (!bond || !bondCI) return\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI)\n    if (!params.merged) return\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end)\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin)\n  })\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n  })\n\n  return action\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id)\n\n  const action = new Action()\n  action.addOp(new BondDelete(id).perform(restruct))\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct))\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean\n): Action {\n  const action = new Action()\n  const struct = restruct.molecule\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment\n  const endFrId = struct.atoms.get(bond?.end)?.fragment\n\n  const fragmentStereoBonds: Array<Bond> = []\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond)\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond)\n    }\n  })\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond)\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond\n) {\n  const stereoAtomsMap = new Map()\n  const correctAtomIds: Array<number> = []\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin\n      )\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end\n      )\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`\n          })\n        }\n        correctAtomIds.push(bond.begin)\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n      }\n    }\n  })\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n  }\n\n  return stereoAtomsMap\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD\n      break\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER\n      break\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN\n      break\n  }\n  return newAtomParity\n}\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any\n): Action {\n  const action = new Action()\n  let newItemId = itemID\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID))\n    newItemId = (action.operations[1] as BondAdd).data.bid\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length]\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action)\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup } from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd\n} from '../operations'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport { fromBondStereoUpdate } from './bond'\nimport { without } from 'lodash/fp'\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom)\n  const action = new Action()\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid\n  action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param ids { Array<number>|number }\n * @param attrs { object }\n * @param reset { boolean? }\n */\nexport function fromAtomsAttrs(restruct, ids, attrs, reset) {\n  const action = new Action()\n  const aids = Array.isArray(ids) ? ids : [ids]\n\n  aids.forEach((atomId) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attpnt' && !(key in attrs)) return\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key)\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct))\n          }\n          break\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct))\n          }\n          break\n        default:\n          action.addOp(new AtomAttr(atomId, key, value).perform(restruct))\n          break\n      }\n    })\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(atomId, 'atomList', null).perform(restruct))\n    }\n\n    action.addOp(new CalcImplicitH([atomId]).perform(restruct))\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(atomId)\n    const bond = restruct.molecule.bonds.get(atomNeighbors[0]?.bid)\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond))\n    }\n    // when a heteroatom connects to an aromatic ring it's necessary to add a ImplicitHCount\n    // property to this atom to specify the number of hydrogens on it.\n    const atom = restruct.molecule.atoms.get(atomId)\n    if (Atom.isInAromatizedRing(restruct.molecule, atomId)) {\n      action.addOp(\n        new AtomAttr(atomId, 'implicitHCount', atom.implicitH).perform(restruct)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action()\n  const atom = restruct.molecule.atoms.get(aid)\n  if (atom) {\n    const frid = atom.fragment\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct)\n      )\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct)\n      )\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct))\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct))\n      }\n    }\n    if (withReverse) action.operations.reverse()\n  }\n\n  return action\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action()\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const oldfrid = atom.fragment\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid))\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid))\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid))\n    }\n  })\n\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action()\n\n  const fragAction = new Action()\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId)\n\n  const action = new Action()\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId)\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid)\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid))\n      return\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId\n    const end = bond.begin === nei.aid ? dstId : nei.aid\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end)\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond))\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond)\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]))\n      })\n    }\n\n    action.addOp(new BondDelete(nei.bid))\n  })\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId))\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C'\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]))\n    }\n  })\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId)\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId])\n\n  action.addOp(new AtomDelete(srcId))\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId)\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid\n  )\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond))\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment')\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment')\n  if (frid2 === frid || typeof frid !== 'number' || typeof frid2 !== 'number') {\n    return frid\n  }\n\n  const struct = restruct.molecule\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2)\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid))\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid)\n\n  const atomsToNewFrag: Array<any> = []\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid)\n  })\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid)\n\n  mergeSgroups(action, restruct, fridAtoms, dstId)\n  action.addOp(new FragmentDelete(frid2).perform(restruct))\n  action.mergeWith(moveAtomsAction)\n\n  return frid\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom)\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid)\n    const notExpandedContexts = ['Atom', 'Bond', 'Group']\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms)\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct))\n    )\n  })\n}\n\nexport function checkAtomValence(restruct, atomId) {\n  const action = new Action()\n\n  if (!restruct.atoms.has(atomId)) return action\n\n  action.addOp(new CalcImplicitH([atomId]))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action()\n\n  action.addOp(new CanvasLoad(struct))\n  return action.perform(restruct)\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action()\n  action.addOp(new AlignDescriptors())\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { atomGetAttr } from './utils'\nimport { fromBondAddition } from './bond'\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6)\n  const dy = Math.sin(Math.PI / 6)\n\n  let action = new Action()\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: []\n  }\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)\n          ) as AtomAdd\n        ).data.aid\n\n  chainItems.atoms.push(id0)\n  action.operations.reverse()\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0)\n\n    const ret = fromBondAddition(\n      restruct,\n      {},\n      id0,\n      { label: 'C' },\n      undefined,\n      pos\n    )\n    action = ret[0].mergeWith(action)\n    id0 = ret[2]\n    chainItems.bonds.push(ret[3])\n    chainItems.atoms.push(id0)\n  }\n\n  return [action, chainItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { checkAtomValence, fromAtomMerge } from './atom'\nimport { fromBondsMerge } from './bond'\nimport utils from '../shared/utils'\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action()\n\n  if (!items) return action\n\n  const usedAtoms = new Set()\n\n  const connectedAtomIds = getAllConnectedAtomsIds(\n    restruct,\n    mergeMapOfItemsToSet(items.atoms),\n    mergeMapOfItemsToSet(items.bonds)\n  )\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n    usedAtoms.add(dst).add(src)\n  })\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action)\n\n  action = valenceCheck(restruct, connectedAtomIds).mergeWith(action)\n\n  return action\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys())\n  }\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds'])\n  )\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values()),\n    ...(items.functionalGroups && {\n      functionalGroups: Array.from(items.functionalGroups.values())\n    }),\n    ...(items.atomToFunctionalGroup && {\n      sgroups: Array.from(items.atomToFunctionalGroup.values())\n    })\n  }\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems }\n}\n\nexport function mergeMapOfItemsToSet(items: Map<number, number>): Set<number> {\n  const itemsSet = new Set<number>()\n  items.forEach((value, key) => {\n    itemsSet.add(value).add(key)\n  })\n  return itemsSet\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds),\n    atomToFunctionalGroup: new Map(closestMap.atomToFunctionalGroup)\n  }\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin)\n      mergeMap.atoms.delete(bond.end)\n    } else {\n      mergeMap.bonds.delete(srcId)\n    }\n  })\n\n  if (\n    mergeMap.atoms.size === 0 &&\n    mergeMap.bonds.size === 0 &&\n    mergeMap.atomToFunctionalGroup.size === 0\n  ) {\n    return null\n  }\n\n  return mergeMap\n}\n\nfunction getAllConnectedAtomsIds(restruct, atomsIds, bondsIds) {\n  const initialAtoms = new Set(atomsIds)\n  const connectedAtoms = new Set()\n\n  for (const bondId of bondsIds) {\n    const bond = restruct.bonds.get(bondId)\n    if (bond) {\n      const { begin, end } = bond.b\n      initialAtoms.add(begin).add(end)\n    }\n  }\n\n  for (const initialAtom of initialAtoms) {\n    if (connectedAtoms.has(initialAtom)) continue\n    const relevantConnectedComponent = [\n      ...restruct.connectedComponents.values()\n    ].find((component) => component.has(initialAtom))\n    if (relevantConnectedComponent)\n      relevantConnectedComponent.forEach((id) => connectedAtoms.add(id))\n  }\n\n  return connectedAtoms\n}\n\nfunction valenceCheck(restruct, atomIds) {\n  let action = new Action()\n\n  if (!atomIds) return action\n  const usedAtoms = new Set()\n\n  // merge single atoms\n  atomIds.forEach((atomId) => {\n    if (usedAtoms.has(atomId)) return\n\n    action = checkAtomValence(restruct, atomId).mergeWith(action)\n    usedAtoms.add(atomId)\n  })\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove\n} from '../operations'\nimport { Pile, RGroup, Vec2 } from 'domain/entities'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { fromAtomsFragmentAttr } from './atom'\nimport { getRelSgroupsBySelection } from './utils'\n\nexport function fromMultipleMove(restruct, lists, d) {\n  d = new Vec2(d)\n\n  const action = new Action()\n  const struct = restruct.molecule\n  const loops = new Pile()\n  const atomsToInvalidate = new Pile()\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms)\n    const bondlist: Array<number> = []\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid)\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ;['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop\n          if (loop >= 0) loops.add(loop)\n        })\n        return\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin)\n        return\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end)\n    })\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d))\n    })\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d))\n      }\n    })\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)))\n    })\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSgroupsBySelection(restruct, lists.atoms)\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d))\n      })\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true))\n    })\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true))\n    })\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true))\n    })\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d))\n    })\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d))\n    })\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true))\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action()\n\n  if (!flag) {\n    const struct = restruct.molecule\n    const frag = restruct.molecule.frags.get(frid)\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid))\n      }\n    })\n  }\n\n  action.addOp(new FragmentStereoFlag(frid))\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid]\n  const usedIds = new Pile(queue)\n\n  while (queue.length > 0) {\n    const id = queue.shift()\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid)\n        queue.push(nei.aid)\n      }\n    })\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = []\n) {\n  const action = new Action()\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid))\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid))\n    }\n  })\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid))\n    action.addOp(new FragmentDelete(frid).perform(restruct))\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove))\n  }\n\n  action.operations.reverse()\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete\n} from '../operations'\nimport { RGroup } from 'domain/entities'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport assert from 'assert'\nimport { atomGetDegree, formatSelection } from './utils'\nimport { fromBondStereoUpdate } from '../actions/bond'\nimport { fromFragmentSplit } from './fragment'\n\nexport function fromOneAtomDeletion(restruct, atomId: number) {\n  return fromFragmentDeletion(restruct, { atoms: [atomId] })\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action()\n  const bond: any = restruct.molecule.bonds.get(bid)\n  const atomsToRemove: Array<any> = []\n\n  action.addOp(new BondDelete(bid))\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin)\n    }\n\n    action.addOp(new AtomDelete(bond.begin))\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end)\n    }\n\n    action.addOp(new AtomDelete(bond.end))\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n  action = action.perform(restruct)\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct))\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false))\n\n  action.operations.reverse()\n\n  return action\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id)\n  let action = fromBondDeletion(restruct, id)\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action)\n\n  return action\n}\n\nexport function fromFragmentDeletion(restruct, rawSelection) {\n  assert(!!rawSelection != null)\n\n  let action = new Action()\n  const atomsToRemove: Array<number> = []\n  const frids: Array<number> = []\n\n  const selection = formatSelection(rawSelection)\n\n  selection.sgroups.forEach((sgroupId) => {\n    const sgroup = restruct.sgroups.get(sgroupId)\n    const sgroupAtoms = sgroup.item.atoms\n\n    selection.atoms = selection.atoms.concat(sgroupAtoms)\n\n    restruct.molecule.bonds.forEach((bond, bondId) => {\n      if (\n        sgroupAtoms.indexOf(bond.begin) >= 0 &&\n        sgroupAtoms.indexOf(bond.end) >= 0\n      ) {\n        selection.bonds.push(bondId)\n      }\n    })\n  })\n\n  selection.atoms = Array.from(new Set(selection.atoms))\n  selection.bonds = Array.from(new Set(selection.bonds))\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid])\n      }\n    })\n  })\n\n  const actionRemoveBonds = new Action()\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid)\n    if (frids.indexOf(frid) < 0) frids.push(frid)\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms)\n    )\n  })\n\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment\n    if (frids.indexOf(frid3) < 0) frids.push(frid3)\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid)\n    }\n\n    action.addOp(new AtomDelete(aid))\n  })\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id))\n  })\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id))\n  })\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id))\n  })\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id))\n  })\n\n  action = action.perform(restruct)\n  action.mergeWith(actionRemoveBonds)\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!\n  )\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action\n    )\n  }\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH\n} from '../operations'\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromPaste(restruct, pstruct, point, angle = 0) {\n  const xy0 = getStructCenter(pstruct)\n  const offset = Vec2.diff(point, xy0)\n\n  const action = new Action()\n\n  const aidMap = new Map()\n  const fridMap = new Map()\n\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment)) {\n      fridMap.set(\n        atom.fragment,\n        (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n      )\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment)\n    })\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point)\n    ).perform(restruct) as AtomAdd\n    action.addOp(operation)\n    aidMap.set(aid, operation.data.aid)\n\n    pasteItems.atoms.push(operation.data.aid)\n  })\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct\n        )\n      )\n    )\n  })\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n  })\n\n  pstruct.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.data.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct))\n  })\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset))\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct)\n      )\n    })\n    const ifThen = pstruct.rgroups.get(rgid).ifthen\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen))\n  })\n\n  action.operations.reverse()\n  return [action, pasteItems]\n}\n\nfunction getStructCenter(struct) {\n  // TODO: Review, function may not work sometimes\n  const onlyOneStructsSgroupId = struct.sgroups.keys().next().value\n  if (\n    struct.sgroups.size === 1 &&\n    !struct.sgroups.get(onlyOneStructsSgroupId).data.expanded\n  ) {\n    return struct.atoms.get(0).pp\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50\n    let ymin = xmin\n    let xmax = -xmin\n    let ymax = -ymin\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x)\n      ymin = Math.min(ymin, atom.pp.y)\n      xmax = Math.max(xmax, atom.pp.x)\n      ymax = Math.max(ymax, atom.pp.y)\n    })\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2) // TODO: check\n  }\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).center()\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp\n  if (struct.simpleObjects.size > 0) return struct.simpleObjects.get(0).center()\n  if (struct.texts.size > 0) return struct.texts.get(0).position\n\n  return null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action()\n  action.addOp(new RxnArrowAdd(pos, mode))\n  return action.perform(restruct)\n}\n\nexport function fromArrowResizing(restruct, id, d, current, anchor) {\n  const action = new Action()\n  action.addOp(new RxnArrowResize(id, d, current, anchor, false))\n  return action.perform(restruct)\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnArrowDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action()\n  action.addOp(new RxnPlusAdd(pos).perform(restruct))\n  return action\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnPlusDelete(id))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowRotate,\n  RxnPlusMove,\n  SGroupDataMove,\n  TextMove\n} from '../operations'\nimport { Bond, Fragment, Pile, Vec2 } from 'domain/entities'\nimport {\n  getRelSgroupsBySelection,\n  structSelection,\n  isAttachmentBond\n} from './utils'\n\nimport { Action } from './action'\nimport utils from '../shared/utils'\n\nexport function fromFlip(restruct, selection, dir, center) {\n  // eslint-disable-line max-statements\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (!selection.atoms) {\n    return action.perform(restruct)\n  }\n\n  const fids = selection.atoms.reduce((acc, aid) => {\n    const atom = struct.atoms.get(aid)\n\n    if (!acc[atom.fragment]) {\n      acc[atom.fragment] = []\n    }\n\n    acc[atom.fragment].push(aid)\n    return acc\n  }, {})\n\n  const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10))\n\n  const isFragFound = fidsNumberKeys.find((frag) => {\n    const allFragmentsOfStructure = struct.getFragmentIds(frag)\n    const selectedFragmentsOfStructure = new Pile(fids[frag])\n    const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure)\n    return !res\n  })\n\n  if (typeof isFragFound === 'number') {\n    return flipPartOfStructure({\n      fids,\n      struct,\n      restruct,\n      dir,\n      action,\n      selection\n    })\n  }\n\n  return flipStandaloneStructure({\n    fids,\n    struct,\n    restruct,\n    center,\n    dir,\n    action,\n    selection\n  })\n}\n\nfunction getRotationPoint(struct, selection) {\n  const { bonds } = struct\n  const isSelectedAtom = (atomId) => selection.atoms.includes(atomId)\n  const getAttachmentBond = () => {\n    for (const [bondId, bond] of bonds.entries()) {\n      if (isAttachmentBond(bond, selection)) {\n        return [bondId, bond]\n      }\n    }\n    return [null, null]\n  }\n  const getRotationPointAtomId = (attachmentBondId, attachmentBond) => {\n    if (selection.bonds.includes(attachmentBondId)) {\n      return [attachmentBond.begin, attachmentBond.end].find(\n        (atomId) => !isSelectedAtom(atomId)\n      )\n    }\n    return [attachmentBond.begin, attachmentBond.end].find(isSelectedAtom)\n  }\n\n  const [attachmentBondId, attachmentBond] = getAttachmentBond()\n  const rotationPointAtomId = getRotationPointAtomId(\n    attachmentBondId,\n    attachmentBond\n  )\n  return struct.atoms.get(rotationPointAtomId).pp\n}\n\nfunction flipBonds(selection, struct, action) {\n  if (selection.bonds) {\n    selection.bonds.forEach((bid) => {\n      const bond = struct.bonds.get(bid)\n\n      if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN))\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP))\n      }\n    })\n  }\n}\n\nfunction flipPartOfStructure({\n  fids,\n  struct,\n  restruct,\n  dir,\n  action,\n  selection\n}) {\n  const rotationPoint = getRotationPoint(struct, selection)\n\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, rotationPoint, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, rotationPoint, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  flipBonds(selection, struct, action)\n\n  return action.perform(restruct)\n}\n\nfunction flipStandaloneStructure({\n  fids,\n  struct,\n  restruct,\n  center,\n  dir,\n  action,\n  selection\n}) {\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    const bbox = struct.getCoordBoundingBox(fragment)\n    const calcCenter =\n      center ||\n      new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2)\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, calcCenter, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, calcCenter, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  flipBonds(selection, struct, action)\n\n  return action.perform(restruct)\n}\n\nfunction flipItemByCenter(item, center, dir) {\n  const d = new Vec2()\n  /* eslint-disable no-mixed-operators */\n  if (dir === 'horizontal') {\n    d.x =\n      center.x > item.pp.x\n        ? 2 * (center.x - item.pp.x)\n        : -2 * (item.pp.x - center.x)\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > item.pp.y\n        ? 2 * (center.y - item.pp.y)\n        : -2 * (item.pp.y - center.y)\n  }\n  /* eslint-enable no-mixed-operators */\n  return d\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)))\n    })\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSgroupsBySelection(restruct, selection.atoms)\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle))\n        )\n      })\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((arrowId) => {\n      action.addOp(new RxnArrowRotate(arrowId, angle, center))\n    })\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid)\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)))\n    })\n  }\n\n  if (selection.texts) {\n    selection.texts.forEach((textId) => {\n      const text = struct.texts.get(textId)\n      action.addOp(\n        new TextMove(textId, rotateDelta(text.position, center, angle))\n      )\n    })\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did)\n      action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)))\n    })\n  }\n\n  const stereoFlags =\n    selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys())\n  if (stereoFlags) {\n    stereoFlags.forEach((flagId) => {\n      const frId = flagId\n      const frag = restruct.molecule.frags.get(frId)\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle\n          )\n        )\n      )\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromBondAlign(restruct, bid, dir) {\n  const struct = restruct.molecule\n  const bond = struct.bonds.get(bid)\n  const begin = struct.atoms.get(bond.begin)\n  const end = struct.atoms.get(bond.end)\n\n  const center = begin.pp.add(end.pp).scaled(0.5)\n  let angle = utils.calcAngle(begin.pp, end.pp)\n  const atoms = Array.from(struct.getFragmentIds(begin.fragment))\n\n  // TODO: choose minimal angle\n  angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle\n\n  if (angle === 0 || Math.abs(angle) === Math.PI) {\n    return fromFlip(restruct, { atoms }, dir, center)\n  }\n\n  return fromRotate(restruct, { atoms }, center, angle)\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center)\n  v1 = v1.rotate(angle)\n  v1.add_(center) // eslint-disable-line no-underscore-dangle\n  return v1.sub(v)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new SimpleObjectDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action()\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle\n) {\n  const action = new Action()\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Vec2 } from 'domain/entities'\nimport { AtomAdd, BondAdd, BondAttr, CalcImplicitH } from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport { fromAtomsAttrs, mergeSgroups } from './atom'\nimport { fromBondStereoUpdate, fromBondsAttrs, fromBondAddition } from './bond'\n\nimport { Action } from './action'\nimport closest from '../shared/closest'\nimport { fromAromaticTemplateOnBond } from './aromaticFusing'\nimport { fromPaste } from './paste'\nimport utils from '../shared/utils'\nimport { fromSgroupAddition } from './sgroup'\n\nconst benzeneMoleculeName = 'Benzene'\nconst benzeneDoubleBondIndexes = [1, 4]\n\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle\n  )\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n\n  return [action, pasteItems]\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action()\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n  let additionalAtom: any = null\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid)\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      undefined,\n      middleAtom.pos.get_xy0()\n    )\n    action = actionRes[0]\n    action.operations.reverse()\n    additionalAtom = actionRes[2]\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0()\n    ).perform(restruct) as AtomAdd\n\n    action.addOp(operation)\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct)\n    )\n\n    additionalAtom = operation.data.aid\n  }\n\n  return { action, aid1: additionalAtom }\n}\n\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\n  let action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const isTmplSingleGroup = template.molecule.isSingleGroup()\n\n  let atom = struct.atoms.get(aid) // aid - the atom that was clicked on\n  let aid1 = aid // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle)\n    action = extraRes.action\n    aid1 = extraRes.aid1\n\n    atom = struct.atoms.get(aid1)\n    delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos)\n    }\n    delta = angle - template.angle0\n  }\n\n  const map = new Map()\n  const xy0 = tmpl.atoms.get(template.aid).pp\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a)\n    attrs.fragment = frid\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true))\n      map.set(id, aid1)\n      pasteItems.atoms.push(aid1)\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp)\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct\n      ) as AtomAdd\n      action.addOp(operation)\n      map.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    }\n  })\n\n  if (!isTmplSingleGroup) mergeSgroups(action, restruct, pasteItems.atoms, aid)\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  tmpl.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      atom.pp,\n      sg.type === 'SUP' ? sg.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  action.operations.reverse()\n\n  action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct))\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0])\n    )\n  )\n\n  return [action, pasteItems]\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip)\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip) // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing\n  )\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\n  // TODO: refactor function !!\n  const action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const bond = struct.bonds.get(bid)\n  const tmplBond = tmpl.bonds.get(template.bid)\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin)\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end]\n  ])\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end\n  }\n  const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms)\n\n  const frid = struct.getBondFragment(bid)\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom)\n    attrs.fragment = frid\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      return\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp)\n    const mergeA = closest.atom(restruct, v, null, 0.1)\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd\n      action.addOp(operation)\n      atomsMap.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    } else {\n      atomsMap.set(id, mergeA.id)\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      // TODO [RB] need to merge fragments?\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin)\n\n  // When a template of \"Benzene\" molecule is attached it\n  // uses specific fusing rules when attaching to a bond\n  // that is connected exactly to one bond on each side.\n  // For more info please refer to: https://github.com/epam/ketcher/issues/1855\n  let isFusingBenzeneBySpecialRules = false\n  let benzeneConnectingBondType: any = null\n\n  const isBenzeneTemplate = tmpl.name === benzeneMoleculeName\n  if (tmpl.bonds.size && isBenzeneTemplate) {\n    const { beginBondIds, endBondIds } = Bond.getBondNeighbourIds(struct, bid)\n    const isOnlyTwoConnectingBonds =\n      beginBondIds.length === 1 && endBondIds.length === 1\n    if (isOnlyTwoConnectingBonds) {\n      const beginBond = struct.bonds.get(beginBondIds[0])\n      const endBond = struct.bonds.get(endBondIds[0])\n      benzeneConnectingBondType = Bond.getBenzeneConnectingBondType(\n        bond,\n        beginBond,\n        endBond\n      )\n      isFusingBenzeneBySpecialRules = benzeneConnectingBondType !== null\n    }\n  }\n\n  tmpl.bonds.forEach((tBond, tBondIndex) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end)\n    )\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond\n      ).perform(restruct) as BondAdd\n      action.addOp(operation)\n      const newBondId = operation.data.bid\n\n      if (isFusingBenzeneBySpecialRules) {\n        const newBondType = benzeneDoubleBondIndexes.includes(tBondIndex)\n          ? Bond.PATTERN.TYPE.DOUBLE\n          : Bond.PATTERN.TYPE.SINGLE\n        action.addOp(\n          new BondAttr(newBondId, 'type', newBondType).perform(restruct)\n        )\n      }\n\n      pasteItems.bonds.push(newBondId)\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true))\n\n      if (isFusingBenzeneBySpecialRules && benzeneConnectingBondType) {\n        action.addOp(\n          new BondAttr(bid, 'type', benzeneConnectingBondType).perform(restruct)\n        )\n      }\n    }\n  })\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct\n      )\n    )\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0])\n      )\n    )\n  }\n\n  action.operations.reverse()\n\n  return [action, pasteItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>\n) {\n  const action = new Action()\n  action.addOp(new TextCreate(content, position, pos))\n  return action.perform(restruct)\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string\n) {\n  const action = new Action()\n  action.addOp(new TextUpdate(id, content))\n  return action.perform(restruct)\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action()\n\n  action.addOp(new TextDelete(id))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Highlight } from 'domain/entities'\nimport { ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\n\ntype Data = {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n  highlightId?: number\n}\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number\n  ) {\n    super(OperationType.ADD_HIGHLIGHT)\n    this.data = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data\n\n    if (!color) {\n      return\n    }\n\n    const struct = restruct.molecule\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color\n    })\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight)\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight)\n    }\n\n    notifyChanged(restruct, atoms, bonds)\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color)\n    return inverted\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5)\n    this.data = {\n      highlightId: highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white'\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId)\n      if (typeof highlightToRemove === 'undefined') {\n        return\n      }\n\n      const { atoms, bonds, color } = highlightToRemove\n\n      this.data.atoms = atoms\n      this.data.bonds = bonds\n      this.data.color = color\n\n      struct.highlights.delete(this.data.highlightId)\n      notifyChanged(restruct, atoms, bonds)\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId)\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number }\n  oldData: Data & { highlightId: number }\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT)\n    this.newData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData\n    if (!color) {\n      return\n    }\n\n    const highlightId = this.newData.highlightId\n    const struct = restruct.molecule\n\n    const highlightToUpdate = struct.highlights.get(highlightId)\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor\n      } = highlightToUpdate\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId\n      }\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color\n      })\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight)\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds])\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color\n    )\n    return inverted\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms\n  const reBonds = restruct.bonds\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1)\n      }\n    })\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1)\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render'\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight'\n\nimport { Action } from './action'\n\ntype HighlightType = {\n  atoms: number[]\n  bonds: number[]\n  color: string\n}\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[]\n): Action {\n  const action = new Action()\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight\n\n    action.addOp(new HighlightAdd(atoms, bonds, color))\n  })\n  return action.perform(restruct)\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key))\n  })\n\n  return action.perform(restruct)\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils'\n\n// TODO: delete it\nexport const fracAngle = utils.fracAngle\nexport * from './operations'\nexport * from './actions'\nexport * from './shared/constants'\nexport * from './editor.types'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService\n} from 'domain/services'\nimport { StructOrString } from 'application/indigo.types'\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d'\n]\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition'\n]\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType\n}\ntype AutomapOptions = {\n  mode?: AutomapMode\n}\ntype CheckOptions = {\n  types?: Array<CheckTypes>\n}\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>\n}\ntype RecognizeOptions = {\n  version?: string\n}\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType\n  backgroundColor?: string\n}\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map()\n    const result = struct.clone(null, null, false, aidMap)\n\n    return serializer.serialize(result)\n  }\n\n  return struct\n}\n\nexport class Indigo {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n\n  constructor(structService) {\n    this.#structService = structService\n    this.#ketSerializer = new KetSerializer()\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info()\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat\n    })\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard'\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types\n    })\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties\n    })\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || ''\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png'\n    const backgroundColor = options?.backgroundColor || ''\n\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor\n      }\n    )\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat\n} from './formatters'\nimport { GenerateImageOptions, StructService } from 'domain/services'\n\nimport { Editor } from './editor'\nimport { Indigo } from 'application/indigo'\nimport { KetSerializer, MolfileFormat } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport assert from 'assert'\nimport { EventEmitter } from 'events'\nimport { runAsyncAction } from 'utilities'\n\nconst allowedApiSettings = {\n  'general.dearomatize-on-load': 'dearomatize-on-load',\n  ignoreChiralFlag: 'ignoreChiralFlag',\n  disableQueryElements: 'disableQueryElements'\n}\n\nasync function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.setImplicitHydrogen()\n  struct.markFragments()\n\n  return struct\n}\n\nfunction parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n) {\n  const format = identifyStructFormat(structStr)\n  const factory = new FormatterFactory(structService)\n  const options = ketcherInstance.editor.options()\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load'],\n    'ignore-no-chiral-flag': options.ignoreChiralFlag\n  })\n  return service.getStructureFromStringAsync(structStr)\n}\n\nfunction getStructure(\n  structureFormat = SupportedFormat.rxn,\n  formatterFactory: FormatterFactory,\n  struct: Struct\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat)\n  return formatter.getStructureFromStructAsync(struct)\n}\n\nexport class Ketcher {\n  #structService: StructService\n  #formatterFactory: FormatterFactory\n  #editor: Editor\n  #indigo: Indigo\n  #eventBus: EventEmitter\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory\n  ) {\n    assert(editor != null)\n    assert(structService != null)\n    assert(formatterFactory != null)\n\n    this.#editor = editor\n    this.#structService = structService\n    this.#formatterFactory = formatterFactory\n    this.#indigo = new Indigo(this.#structService)\n    this.#eventBus = new EventEmitter()\n  }\n\n  get indigo() {\n    return this.#indigo\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options()\n    const result = Object.entries(allowedApiSettings).reduce(\n      (acc, [apiSetting, clientSetting]) => {\n        if (clientSetting in options) {\n          return { ...acc, [apiSetting]: clientSetting }\n        }\n        return acc\n      },\n      {}\n    )\n\n    if (!Object.keys(result).length) {\n      throw new Error('Allowed options are not provided')\n    }\n\n    return result\n  }\n\n  // TODO: create optoions type\n  setSettings(settings: Record<string, string>) {\n    // TODO: need to expand this and refactor this method\n    if (!settings) {\n      throw new Error('Please provide settings')\n    }\n    const options = {}\n    for (const [apiSetting, clientSetting] of Object.entries(\n      allowedApiSettings\n    )) {\n      options[clientSetting] = settings[apiSetting]\n    }\n\n    return this.#editor.setOptions(JSON.stringify(options))\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    const format = isExtended\n      ? SupportedFormat.smilesExt\n      : SupportedFormat.smiles\n    return getStructure(format, this.#formatterFactory, this.editor.struct())\n  }\n\n  async getMolfile(molfileFormat?: MolfileFormat): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrrows.'\n      )\n    }\n\n    const formatPassed =\n      molfileFormat === 'v3000' ? SupportedFormat.molV3000 : SupportedFormat.mol\n    const format = molfileFormat ? formatPassed : SupportedFormat.molAuto\n\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return molfile\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.'\n      )\n    }\n    const format =\n      molfileFormat === 'v3000' ? SupportedFormat.rxnV3000 : SupportedFormat.rxn\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return rxnfile\n  }\n\n  getKet(): Promise<string> {\n    return getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getSmarts(): Promise<string> {\n    return getStructure(\n      SupportedFormat.smarts,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getCml(): Promise<string> {\n    return getStructure(\n      SupportedFormat.cml,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getCDXml(): Promise<string> {\n    return getStructure(\n      SupportedFormat.cdxml,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getCDX(): Promise<string> {\n    return getStructure(\n      SupportedFormat.cdx,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? SupportedFormat.inChIAuxInfo : SupportedFormat.inChI,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  async generateInchIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return this.#structService.generateInchIKey(struct)\n  }\n\n  containsReaction(): boolean {\n    return this.editor.struct().hasRxnArrow()\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.struct(struct)\n    }, this.eventBus)\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.structToAddFragment(struct)\n    }, this.eventBus)\n  }\n\n  async layout(): Promise<void> {\n    runAsyncAction<void>(async () => {\n      const struct = await this.#indigo.layout(this.#editor.struct())\n      const ketSerializer = new KetSerializer()\n      this.setMolecule(ketSerializer.serialize(struct))\n    }, this.eventBus)\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    return this.#indigo.recognize(image, { version: version })\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = { outputFormat: 'png' }\n  ): Promise<Blob> {\n    let meta = ''\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml'\n        break\n\n      case 'png':\n      default:\n        meta = 'image/png'\n        options.outputFormat = 'png'\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options\n    )\n    const byteCharacters = atob(base64)\n    const byteNumbers = new Array(byteCharacters.length)\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\n    }\n    const byteArray = new Uint8Array(byteNumbers)\n    const blob = new Blob([byteArray], { type: meta })\n    return blob\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { Editor } from 'application/editor'\nimport { FormatterFactory } from 'application/formatters'\nimport { Ketcher } from './ketcher'\nimport assert from 'assert'\n\nexport const DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false,\n  'ignore-no-chiral-flag': false\n}\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider\n    return this\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null)\n    assert(this.#structServiceProvider != null)\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions\n    }\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions)\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService)\n    )\n    ketcher[this.#structServiceProvider.mode] = true\n\n    return ketcher\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","Generics","itemSets","displayName","items","description","subGroups","AtomList","params","_classCallCheck","notList","ids","_createClass","value","labelList","labels","_iterator","_createForOfIteratorHelper","_step","s","n","done","id","currenElement","push","err","e","f","join","equals","atomList","sort","toString","ifDef","target","defaultValue","undefined","Array","isArray","length","tfx","parsedValue","parseFloat","toFixed","KetcherAsyncEvents","runAsyncAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","eventEmitter","res","wrap","_callee$","_context","prev","next","emit","LOADING","sent","SUCCESS","abrupt","t0","FAILURE","stop","_x","_x2","apply","arguments","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","window","atob","byteArrays","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","blob","Blob","REQUEST_IS_FINISHED","emitEventRequestIsFinished","_window","_window$ketcher","ketcher","eventBus","Vec2","_len","args","_key","x","y","z","Error","Math","sqrt","v","add","add_","get_xy0","sub","scaled","negated","yComplement","y1","addScaled","normalized","normalize","l","turnLeft","coordStr","max","assert","min","ceil","floor","rotate","angle","sin","cos","rotateSC","rotateAroundOrigin","angleInDegrees","angleInRadians","PI","offsetX","offsetY","rotatedX","rotatedY","Number","isInsidePolygon","points","inside","j","xi","yi","xj","yj","intersect","oxAngle","atan2","dist","a","b","diff","v1","v2","sum","dot","cross","lc","_len2","_key2","lc2","f1","f2","centre","getLinePoint","lineStart","lineEnd","difference","distance","ratio","_defineProperty","Pile","_Set","_inherits","_super","_createSuper","find","item","setB","isSuperset","subset","_iterator2","_step2","has","expression","from","union","_iterator3","_step3","intersection","thisSet","_toConsumableArray","unionIntersections","sets","unionized","setsToReturn","prevSets","curSet","isCurSetMerged","newSets","map","intersec","size","_wrapNativeSuper","Set","getValueOrDefault","isCorrectPseudo","getPseudo","radicalElectrons","radical","Atom","PATTERN","RADICAL","DOUPLET","SINGLET","TRIPLET","StereoLabel","CIP","attributes","fragment","alias","attrlist","isotope","cip","charge","rglabel","attpnt","implicitHCount","explicitValence","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","Object","defineProperty","enumerable","clone","fidMap","ret","isQuery","pureHydrogen","isPlainCarbon","isPseudo","hasRxnProps","calcValence","connectionCount","groupno","radicalCount","hydrogenCount","absCharge","abs","isHeteroAtom","calcValenceMinusHyd","conn","rad","getConnectedBondIds","struct","atomId","result","bonds","entries","_step$value","_slicedToArray","bondId","bond","begin","end","getAttrHash","atom","attrs","attr","attrGetDefault","isInAromatizedRing","atoms","loops","_step2$value","_","loop","halfBondIds","hbs","aromatic","halfBondId","halfBond","halfBonds","NONE","STEREO_PARITY","ODD","EVEN","EITHER","Bond","_attributes$cip","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","center","getCenter","p1","p2","getDir","aidMap","cp","getAttachedSGroups","_struct$atoms$get","_struct$atoms$get2","sGroupsWithBeginAtom","sGroupsWithEndAtom","getBondNeighbourIds","beginBondIds","endBondIds","getBenzeneConnectingBondType","bondBegin","bondEnd","_this$PATTERN$TYPE","TYPE","DOUBLE","SINGLE","isFusingToDoubleBond","isFusingToSignleBond","TRIPLE","AROMATIC","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","ANY","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","filteredStereoAtoms","aid","hasAnotherLabel","some","stereoFlag","Mixed","_stereoLabel$match","match","Abs","And","Or","concat","_enhancedStereoFlag","WeakMap","_stereoAtoms","Fragment","stereoAtoms","stereoFlagPosition","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_classPrivateFieldGet","fr","updateStereoFlag","updateStereoAtom","frId","isAdd","includes","values","addStereoAtom","deleteStereoAtom","fragmentId","getDefaultStereoFlagPosition","getFragment","bb","getCoordBoundingBox","scaled2obj","options","scale","obj2scaled","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","_struct$atomGetNeighb","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","getFunctionalGroupsList","setFunctionalGroupsList","list","addToFunctionalGroupsList","getInstance","instance","SaltsAndSolventsProvider","saltsAndSolventsList","getSaltsAndSolventsList","setSaltsAndSolventsList","Box2Abs","p0","extend","lp","rb","include","p","contains","ext","translate","d","transform","sz","pos","fromRelBox","relBox","width","height","b1","b2","segmentIntersection","c","dc","dd","da","db","SGroupBracketParams","w","h","SGroup","bracketBox","bracketDir","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","firstSgroupAtomId","data","mul","connectivity","name","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","getAttr","getAttrs","_this","keys","forEach","setAttr","oldValue","checkAttr","updateOffset","calculatePP","topLeftPoint","context","contentBoxes","contentBB","direction","bba","bbb","sgroups","descriptorIntersects","sAtom","sAtomPP","getMassCentre","getAttAtomId","isInteger","isGroupAttached","_this2","attachPointId","neighbours","every","getOffset","sgroup","isSaltOrSolvent","moleculeName","saltsAndSolventsProvider","saltsAndSolvents","_ref2","abbreviation","isAtomInSaltOrSolvent","sgroupsOnCanvas","_this3","onlySaltsOrSolvents","_ref3","atomIdInSaltOrSolvent","isBondInSaltOrSolvent","_this4","_ref4","bondIdInSaltOrSolvent","filterAtoms","newAtoms","removeNegative","_mol","sg","atomMap","field","elem","allAtoms","addAtom","removeAtom","splice","getCrossBonds","mol","parentAtomSet","crossBonds","bid","bracketPos","sGroup","crossBondsPerAtom","remol","render","flat","braketBox","getAtom","position","structBoundingBox","getVBoxObj","vext","getBracketParameters","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","cl","cr","bracketHeight","cl0","cr0","dr","dl","getObjBBox","a0","getAtoms","_atom","getBonds","indexOf","prepareMulForSaving","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","_loop","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","isBondInContractedSGroup","sGroups","_this5","atomsInSGroup","isContracted","isExpandedSGroup","isSuperAtom","TYPES","SUP","isDataSGroup","DAT","isSRUSGroup","SRU","isMulSGroup","MUL","isContractedSGroup","sGroupId","_this6","isSGroup","sGroupItem","sGroupItemId","getAttachmentAtomIdBySGroupId","functionalGroup","functionalGroups","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","GEN","contractedSGroup","sgBottomRightPoint","bottomRightPoint","_sgroup","FunctionalGroup","isFunctionalGroup","provider","getFunctionalGroupByName","searchName","foundGroup","atomsInFunctionalGroup","fg","relatedSGroup","bondsInFunctionalGroup","molecule","findFunctionalGroupByAtom","isFunctionalGroupReturned","relatedSGroupId","findFunctionalGroupByBond","_iterator4","_step4","findFunctionalGroupBySGroup","isAttachmentBond","isAttachedSGroup","_iterator5","_step5","isAttachmentPointAtom","isAtomInSameFunctionalGroup","otherAtomId","_iterator6","_step6","isSGroupFound","_iterator7","_step7","isBondBeginInSGroupAndBondEndOutside","isBondEndInSGroupAndBondBeginOutside","getAttachmentPointCount","_sGroup$atoms","count","currentAtom","isFirstAtomInFunctionalGroup","_iterator8","_step8","isAtomInContractedFunctionalGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","isBondInContractedFunctionalGroup","sgroupId","isExpanded","HalfBond","dir","norm","ang","contra","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","isConvex","dblBonds","convex","hb","RGroup","atrributes","frags","resth","range","ifthen","index","fid","findRGroupByFragment","rgroups","frid","_rgid","rgroup","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","_attributes$height","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","getSGroupsBFS","order","queue","shift","getAtomSetRelations","newId","isStrictSuperset","isSubset","parents","childs","findIndex","childId","path","insert","_this$children$get","guess","resetParentLink","parentId","childIndex","remove","_this$children$get2","_this3$children$get","checkOverlapping","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","_Map","call","_assertThisInitialized","nextId","_get","_getPrototypeOf","prototype","keyOf","arrayAddIfMissing","array","Struct","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","_bid","hasRxnArrow","hasRxnPluses","isRxn","isBlank","isSingleGroup","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","mergeInto","getScaffold","rg","_fnum","getFragmentIds","keepAllRGroups","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","bidMap","soid","prepareLoopStructure","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","calcConn","findBondId","a1","a2","hb1","hb2","bondInitHalfBonds","halfBondUpdate","startCoords","endCoords","coordsDifference","clear","setHbNext","hbid","halfBondSetAngle","left","hbl","atomAddNeighbor","ir","il","atomSortNeighbors","nei","nei2","nextNei","atomUpdateHalfBonds","_this7","_this8","sGroupsRecalcCrossBonds","_this9","sGroupDelete","_this10","atomSetPos","rxnPlusSetPos","rxnArrowSetPos","simpleObjectSetPos","textSetPosition","vec","global","getCoordBoundingBoxObj","getBondLengthData","_this11","totalLength","cnt","getAvgBondLength","bld","getAvgClosestAtomDistance","totalDist","minDist","k","checkBondExists","findConnectedComponent","firstaid","_this12","pop","neiId","findConnectedComponents","discardExistingFragments","_this13","addedAtoms","components","component","markFragment","idSet","_this14","frag","markFragments","_this15","comp","_this16","isReactionStruct","rescale","avg","loopHasSelfIntersections","hbi","ai","bi","hbj","aj","bj","partitionLoop","subloops","continueFlag","atomToHalfBond","aid1","subloop","halfBondAngle","hbid1","hbid2","hba","hbb","loopIsConvex","_this17","loopArr","loopIsInner","_this18","totalAngle","hbida","hbidb","_this19","newLoops","bondsToMark","hbIdNext","hbId","loopId","calcImplicitHydrogen","_this$calcConn","_this$calcConn2","isAromatic","correctConn","hasImplicitH","setImplicitHydrogen","_this20","_this$atoms$get","_this21","getComponents","_this22","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","getBondFragment","_this$bonds$get","_this$atoms$get2","bindSGroupsToFunctionalGroups","_this23","getGroupIdFromAtomId","_i","_Array$from","_Array$from$_i","groupId","getGroupIdFromBondId","_i2","_Array$from2","_Array$from2$_i","getGroupsIdsFromBondId","groupsIds","_i3","_Array$from3","_Array$from3$_i","TextCommand","preparePositions","positions","Text","content","setPos","coords","Highlight","color","customizer","_typeof","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","prop","headerToKet","header","fromRlabel","rgi","val","moleculeToKet","body","rglabelToKet","atomListToKet","atomToKet","bondToKet","sgroupToKet","_objectSpread","source","stereoCare","weight","parseInt","refsToRGroups","rgnumber","toUpperCase","toRlabel","moleculeToStruct","ketItem","rglabelToStruct","atomListToStruct","atomToStruct","bondToStruct","sgroupToStruct","attachmentPoints","Boolean","mapping","$refs","el","elements","_Elements$get","toLowerCase","placement","display","fieldData","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","filteredFragmentIds","addMolecules","ketNode","filteredSGroups","filteredSGroupsMap","fragmentIds","sGroupFragmentsMap","generateSGroupFragmentsMap","mergedFragments","fragments","atomsInFragment","hasAtomInSGroup","fragmentSet","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","radius","pos0","ellipse","textToKet","textNode","textToStruct","t","uri","ValidatorResult","SchemaError","require$$0","attribute","require$$1","require$$2","validate","ket","validator","Validator","schema","valid","parseNode","currentStruct","KetSerializer","deserialize","resultingStruct","JSON","parse","nodes","root","$ref","serialize","moleculeId","stringify","paddedNum","precision","numStr","replace","padStart","parseDecimalInt","str","isNaN","partitionLine","parts","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","fragmentType","shiftMol","xorig","over","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowCenter","arrowStart","arrowEnd","rgMerge","scaffold","ctab","readKeyValuePairs","valueString","partition","utils","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","split","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","startsWith","endsWith","applyDataSGroupDataLine","strArray","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","rLogic","props","charAt","propValue","test","propertyData","rglabels","a2rs","a2ri","a2r","iii","hhh","ooo","logic","pool","parsePropertyLineAtomList","expandedSGroups","eg","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","ignoreChiralFlag","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","_matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","substring","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","molLinesAgents","current","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","bracket","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","parseCTFile","molfileLines","common","prepareSGroups","skipErrors","preserveIndigoDesc","_this$molecule","toRemove","errors","errorIgnore","ex","getCTab","writeCTab2000","saveMolecule","skipSGroupErrors","all","saver","submol","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","writePadded","writePaddedFloat","writeCTab2000Header","isAbsFlag","enhancedStereoFlag","atomsIds","atomsProps","pseudo","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","sgmap","sgmapback","sgorder","q","expandedGroups","expandedGroupsLine","atomLabel","MolSerializer","DefaultOptions","parseCTFileParams","reactionRelayout","badHeaderRecover","ex1","ex2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","each","func","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","arr","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","degree","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","smiles","writtenAtoms","writtenComponents","_Atom","lowercase","chirality","branch_cnt","paren_written","h_count","isBondInRing","inLoop","allowedLowercase","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","n1","n2","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializer","exec","chunk","propChunks","pc","isFinite","sdfItems","ChemicalMimeType","pollDeferred","process","complete","timeGap","startTimeGap","Promise","resolve","reject","iterate","then","setTimeout","parametrizeUrl","url","request","method","headers","responseHandler","requestUrl","response","fetch","assign","Accept","credentials","json","ok","error","indigoCall","baseUrl","defaultOptions","customHeaders","RemoteStructService","apiPath","generateInchIKey","output_format","_info","indigoVersion","imagoVersions","isAvailable","indigo_version","imago_versions","info","convert","layout","clean","aromatize","dearomatize","calculateCip","automap","check","calculate","recognize","parVersion","req","status","bind","upload_id","metadata","mol_str","generateImageAsBase64","outputFormat","resp","text","RemoteStructServiceProvider","currentApiPath","URLSearchParams","document","createStructService","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","molAuto","Mol","molV3000","rxn","Rxn","rxnV3000","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","cml","CML","KET","cdxml","CDXML","cdx","CDX","binaryCdx","unknown","UNKNOWN","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","SupportedFormat","KetFormatter","serializer","_ketSerializer","_getStructureFromStructAsync","getStructureFromStructAsync","_getStructureFromStringAsync","_callee2","_callee2$","_context2","getStructureFromStringAsync","_structService","_format","_options","ServerFormatter","structService","ketSerializer","stringifiedStruct","convertResult","promise","withCoords","parsedStruct","formatError","MolfileV2000Formatter","_molSerializer","stringifiedMolfile","FormatterFactory","separateOptions","structServiceOptions","_objectWithoutProperties","_excluded","molfileParseOptions","create","_this$separateOptions","_this$separateOptions2","molSerializerOptions","formatter","identifyStructFormat","sanitizedString","er","clearStr","isBase64String","cdxHeader","Raphael","translateAbs","delta","st","LayerMap","StereoColoringType","StereLabelStyleType","Visel","paths","boxes","boundingBox","oldBoundingBox","exts","vector","point","ReObject","viselType","visel","changeSelectionStyle","_this$hovering","hoverStyle","fill","fillSelected","vbox","setHover","noredraw","removed","show","paper","setStart","drawHover","setFinish","hide","_render","makeSelectionPlate","_restruct","_paper","_styles","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","obj","pos1","pos2","oPos2","pow","D","getCIPValuePath","cipLabelPosition","atomOrBond","font","fontsz","getBBox","rect","stroke","toFront","drawCIPLabel","restruct","_restruct$render","cipValuePath","addReObjectPath","additionalInfo","util","rectangleArrowHighlightAndSelection","_ref$pos","point1","b0x","wOffset","hOffset","svgPath","rx","ry","polyline","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","_ref2$pos","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","transformedPath","lineattr","_ref3$pos","triangleLength","triangleWidth","_ref4$pos","_ref5","_ref5$pos","_ref6","_ref6$pos","_ref7","_ref7$pos","_ref8","_ref8$pos","_ref9","_ref9$pos","dashInterval","_ref10","_ref10$pos","failSignWidth","_ref11","_ref11$pos","_ref12","_ref12$pos","arrowLen","lineOffset","arrowOffset","_ref13","_ref13$pos","_ref14","_ref14$pos","_ref15","_ref15$pos","unbalanceVal","_ref16","_ref16$pos","_ref17","_ref17$pos","_ref18","_ref18$pos","plus","bondSingle","halfBond1","halfBond2","makeStroke","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathDesc","topologyMark","fontszsub","rbb","recenterText","radicalCap","lineWidth","dw","dh","radicalBullet","circle","b0","sgroupBracketStyle","selectionRectangle","point2","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t1","black","t2","aromaticBondPaths","mask","relativeBox","vml","gap","StereoLabelMinOpacity","ShowHydrogenLabels","ShowHydrogenLabelNames","ReAtom","_ReObject","showLabel","hydrogenOnTheLeft","makeHoverPlate","getLabeledSelectionContour","radiusScaleFactor","padding","ps1","ps2","getUnlabeledSelectionContour","atomSelectionPlateRadius","ps","getSelectionContour","hasLabel","selectionStyle","_restruct$atoms$get","sgroupName","setHydrogenPos","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","isHydrogenIsotope","buildLabel","zoom","showAtomIds","idPos","draw","indices","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","warnings","pathAndRBoxTranslate","lsb","bisectLargestSector","showAttpnt","aamText","getAamText","queryAttrsText","getQueryAttrsText","shouldDisplayStereoLabel","stereoLabelStyle","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","isHighlighted","highlightColor","highlight","_highlight$atoms","hasCurrentHighlight","style","isSelectable","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","sameNotStereo","hydrogenLabels","_atom$label","_atom$label2","Terminal","TerminalAndHetero","yl","yr","nl","nr","getLabelText","hshift","vshift","mapValence","hydrogenLeft","asterisk","attpntText","attpntPath1","attpntRbb","lsbn","shiftBondEnd","arrowLeft","arrowRight","attpntPath","angles","daMax","margin","ReBond","doubleBondShift","getSelectionPoints","bondThickness","doubleBondWidth","stereoBondWidth","regularSelectionThikness","halfBondStart","halfBondEnd","isStereoBond","addStereoPadding","contourStart","contourEnd","addStart","addEnd","contourPaddedStart","contourPaddedEnd","startPoint","endPoint","padStartPoint","padEndPoint","startTop","startBottom","startPadTop","startPadBottom","endTop","endBottom","endPadTop","endPadBottom","_this$getSelectionPoi","_this$getSelectionPoi2","pathString","bondRecalc","checkStereoBold","setDoubleBondShift","getBondPath","getReactingCenterPath","getTopologyMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","_highlight$bonds","highlightPath","getHighlightPath","atom1","atom2","beginning","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","_restruct$atoms$get2","halfbonds","neihbid1","neihbid2","_restruct$atoms$get3","_restruct$atoms$get4","shiftA","shiftB","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","_struct$loops$get","_struct$loops$get2","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","selectDoubleBondShift","nLeft","nRight","_path","ReEnhancedFlag","hoverPath","_classPrivateFieldGet2","_classPrivateFieldGet3","_stereoFlagMap","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","fragGetAtoms","fragGetBonds","firstFrag","secondFrag","calcBBox","_ui_editor","_draw","BORDER_EXT","ReRGroup","labelBox","bbf","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","rLogicToString","logicPath","logicBox","fnum","drawing","cy","leftBracket","rightBracket","ifThen","rangeExists","restH","nextRg","ReRxnArrow","calcDistance","distRef","getReferencePointDistance","calculateDistanceToLine","_this$getReferencePoi","getReferencePoints","_this$getReferencePoi2","middlePoint","refPoint","refPoints","rp","generatePath","_item$pos","findMiddlePoint","makeAdditionalInfo","scaleFactor","selectionSet","scaledRP","styles","_this$getArrowParams","getArrowParams","x1","x2","y2","hypot","_id","per","minX","minY","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","ReSGroup","firstSgroupAtom","SGroupdrawBrackets","drawGroupDat","getTextHighlightDimensions","startX","startY","sGroupHasFirstAtom","firstAtomPosition","reSGroupAtom","sGroupTextBoundingBox","_Scale$obj2scaled","getContractedSelectionContour","_this$getTextHighligh","_getHighlighPathInfo","getHighlighPathInfo","lowerIndexText","upperIndexText","indexAttribute","bracketR","renderIndex","indexPos","indexPath","indexBox","showValue","drawAttachedDat","drawAbsoluteDat","sbox","sgroupData","nameI","boxI","sboxI","BracketParams","crossBondsValues","tl","tr","tt","tb","cc","dt","contractedFunctionalGroupSize","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","poly","atan","enhPaths","stylesApplied","enhPath","hoverStyleSimpleObject","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","isValid","SCALE","ReText","_this$getRelBox","getRelBox","_this$getRelBox2","topLeft","_p1$sub","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","start","_this3$getRelBox","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","_range$style$match","textRange","Bold","Italic","Subscript","Superscript","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","connectedComponentRemoveAtom","reAtom","clearConnectedComponents","getConnectedComponent","adjacentComponents","neighbor","addConnectedComponent","compId","aidSet","ccFragmentType","removeConnectedComponent","ccid","assignConnectedComponents","layers","visible","parentNode","insertBefore","maps","structChanged","markItemRemoved","markBond","markItem","markAtom","mapChanged","clearVisel","eachItem","selection","isSelectionEmpty","scaleVisel","clearVisels","update","force","initialized","_item","atomsChanged","emptyFrags","atomsChangedArray","verifyLoops","updLoops","updateLoops","showLabels","showBonds","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","loopRemove","bondlist","enhancedFlagsChanged","chid","_this24","bondsChanged","setSelection","_this25","_this25$map$values","_this25$map$values2","mapValues","_item$selectionPlate","sgId","sGroupAtoms","showItemSelection","toBack","exists","isSelectionSvgObjectExists","_item$additionalInfo","_item$cip","_item$additionalInfo2","_item$cip2","anySelection","scaleRPath","_item$selectionPlate2","_item$selectionPlate3","_item$selectionPlate4","_item$selectionPlate$","FRAC","setFracAngle","calcAngle","fracAngle","angle2","round","calcNewAtomPos","ctrlKey","degrees","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","rotationStep","labelFontSize","disableQueryElements","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","Render","clientArea","renderWidth","clientWidth","renderHeight","clientHeight","userOpts","ZERO","updateOptions","opts","passedOptions","polygon","point0","view2obj","isRelative","scroll","scrollPos","obj2view","scrollLeft","scrollTop","page2obj","event","_clientArea$getBoundi","getBoundingClientRect","offsetTop","top","offsetLeft","clientX","clientY","setPaperSize","newSize","setSize","setViewBox","setOffset","newOffset","setZoom","setScrollOffset","cx","calcExtend","canvas","setMolecule","viewSz","resizeCanvas","changes","downScale","isAutoScale","UNIT","eb","vb","cb","oldCb","shouldResizeCanvas","shouldScrollCanvas","sz1","marg","mv","csz","rescaleAmount","isForceDownscale","isBondsLengthFit","sz2","canvasSize","x0","y0","newXSize","newYSize","ey","renderCache","RenderStruct","prepareStruct","newStruct","_options$cachePrefix","cachePrefix","_options$needCache","needCache","cacheKey","innerHTML","preparedStruct","rnd","edgeOffset","scrollMultiplier","moveDelta","lastX","lastY","getDirections","layerX","layerY","isMovingRight","isMovingLeft","isMovingTop","isMovingBottom","isCloseToEdgeOfScreen","isCloseToLeftEdgeOfScreen","isCloseToTopEdgeOfScreen","isCloseToRightEdgeOfScreen","isCloseToBottomEdgeOfScreen","isCloseToEdgeOfCanvas","isCloseToLeftEdgeOfCanvas","isCloseToTopEdgeOfCanvas","isCloseToRightEdgeOfCanvas","isCloseToBottomEdgeOfCanvas","calculateCanvasExtension","currentCanvasSize","extensionVector","newHorizontalScrollPosition","newVerticalScrollPosition","horizontalExtension","verticalExtension","shiftAndExtendCanvasByVector","scrollByVector","BaseOperation","priority","execute","perform","_inverted","invert","isDummy","invalidateAtom","level","invalidateLoop","invalidateBond","invalidateItem","invalidateEnhancedFlag","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_ROTATE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","AtomAttr","_BaseOperation","data2","_this$data","inverted","_this$data2","_this$data3","_this$data4","AtomMove","noinvalidate","reatom","AtomAdd","AtomDelete","_BaseOperation2","_super2","restructedAtom","BondAttr","BondMove","BondAdd","structBond","BondDelete","rebond","CanvasLoad","oldStruct","AlignDescriptors","history","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","enhancedFalg","FragmentAddStereoAtom","FragmentDeleteStereoAtom","FragmentStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","removeOld","setNew","RxnArrowMove","_Base","Base","move","RxnArrowRotate","reStruct","_reStruct$rxnArrows$g","arrowId","drawingCenter","RxnArrowResize","anchor","_middlePoint","_middlePoint2","previousPos0","previousPos1","reItem","_reItem$getReferenceP","_reItem$getReferenceP2","_reItem$getArrowParam","cosAngle","sinAngle","diffX","diffY","_reItem$getReferenceP3","_reItem$getReferenceP4","newMiddlePoint","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","RxnPlusDelete","RxnArrowAdd","itemId","RxnArrowDelete","_Base2","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","SimpleObjectDelete","SimpleObjectMove","_Base3","_super3","handleRectangleChangeWithAnchor","SimpleObjectResize","_Base4","_super4","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","SGroupAttr","SGroupDataMove","_sgroups$get$pp","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","SGroupDelete","relatedFGroupId","fgid","TextCreate","TextDelete","TextUpdate","previousContent","TextMove","_item$position","_restruct$texts$get","Action","operations","addOp","operation","mergeWith","sortedOperations","invertedOperation","fromAromaticTemplateOnBond","template","events","simpleFusing","getFragmentWithBondMap","atomsInStruct","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","rxnArrow","firstAtomPp","pg","findClosestItem","mp","other","findCloseMerge","srcId","merge","SgContexts","Multifragment","Group","selectionKeys","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","structSelection","formatSelection","atomForNewBond","_atomNeighbours$","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSgroupsBySelection","selectedAtoms","_sgid","isBondStartsInSelectionAndEndsOutside","isBondEndsInSelectionAndStartsOutside","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","expandSGroupWithMultipleAttachmentPoint","countAttachmentPoint","sGroupAttributeAction","fromSgroupDeletion","sG","asteriskAction","plainCarbon","fromSgroupAction","newSg","sourceAtoms","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","fromMultiFragmentAction","fromAtomAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","beginAtomPos","endAtomPos","_struct$frags$get","mouseDownNothingAndUpNothing","beginAtomAttr","endAtomAttr","newFragmentId","newBeginAtomId","newEndAtomId","mouseDownNothingAndUpAtom","endAtomId","endAtom","mergeSgroups","mouseDownAtomAndUpNothing","beginAtomId","startsOnAtom","endsOnAtom","_mouseDownNothingAndU","_mouseDownNothingAndU2","_mouseDownNothingAndU3","_mouseDownNothingAndU4","_mouseDownAtomAndUpNo","_mouseDownAtomAndUpNo2","newBondId","fromBondStereoUpdate","mergedFragmentId","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","withReverse","beginFrId","endFrId","fragmentStereoBonds","_struct$atoms$get3","_struct$atoms$get4","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","_struct$atoms$get5","fromStereoAtomAttrs","correctAtomIds","_struct$atoms$get6","_stereoAtomsMap$get","getStereoParity","newAtomParity","bondChangingAction","itemID","bondProps","newItemId","plainBondTypes","fromAtomAddition","_atomNeighbors$","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","_dstAtomNeighbors$","_atomNeighbors$2","fragAction","mergeBondId","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","checkAtomValence","fromNewCanvas","fromDescriptorsAlign","fromChain","dx","dy","chainItems","fromItemsFuse","usedAtoms","connectedAtomIds","getAllConnectedAtomsIds","mergeMapOfItemsToSet","valenceCheck","getItemsToFuse","editor","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","atomToFunctionalGroup","now","itemsSet","closestMap","bondsIds","initialAtoms","connectedAtoms","_bond$b","initialAtom","relevantConnectedComponent","_ret","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","rawSelection","frids","sgroupAtoms","actionRemoveBonds","frid3","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","fids","fidsNumberKeys","isFragFound","allFragmentsOfStructure","selectedFragmentsOfStructure","flipPartOfStructure","flipStandaloneStructure","getRotationPoint","isSelectedAtom","getAttachmentBond","getRotationPointAtomId","attachmentBondId","attachmentBond","_getAttachmentBond","_getAttachmentBond2","rotationPointAtomId","flipBonds","rotationPoint","flipItemByCenter","bbox","calcCenter","fromRotate","rotateDelta","textId","did","stereoFlags","flagId","fromBondAlign","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","benzeneMoleculeName","benzeneDoubleBondIndexes","fromTemplateOnCanvas","_fromPaste","_fromPaste2","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","isTmplSingleGroup","extraRes","angle0","fromTemplateOnBondAction","flip","fromTemplateOnBond","tmplBond","tmplBegin","atomsMap","bondAtoms","_utils$mergeBondsPara","mergeA","isFusingBenzeneBySpecialRules","benzeneConnectingBondType","isBenzeneTemplate","_Bond$getBondNeighbou","isOnlyTwoConnectingBonds","beginBond","endBond","tBond","tBondIndex","existId","newBondType","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","_BaseOperation3","HighlightUpdate","newData","oldData","_this$newData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","_this$oldData","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","defaultTypes","defaultCalcProps","convertStructToString","Indigo","types","properties","image","backgroundColor","allowedApiSettings","prepareStructToRender","_x3","_prepareStructToRender","_callee11","structStr","ketcherInstance","_callee11$","_context11","parseStruct","factory","service","getStructure","structureFormat","formatterFactory","_formatterFactory","_editor","_indigo","_eventBus","Ketcher","EventEmitter","apiSetting","clientSetting","setSettings","settings","_Object$entries","_Object$entries$_i","setOptions","getSmiles","isExtended","_getMolfile","molfileFormat","formatPassed","containsReaction","getMolfile","_x4","_getRxn","rxnfile","_args2","getRxn","getKet","getSmarts","getCml","getCDXml","getCDX","getInchi","withAuxInfo","_generateInchIKey","_callee3","_callee3$","_context3","_setMolecule","_callee5","_callee5$","_context5","_callee4","_callee4$","_context4","_x5","_addFragment","_callee7","_callee7$","_context7","_callee6","_callee6$","_context6","structToAddFragment","addFragment","_x6","_layout","_callee9","_callee9$","_context9","_callee8","_callee8$","_context8","_generateImage","_callee10","meta","base64","_args10","_callee10$","_context10","generateImage","_x7","DefaultStructServiceOptions","_structServiceProvider","KetcherBuilder","withStructServiceProvider","structServiceProvider","serviceOptions","mergedServiceOptions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,IAAMA,YAAY,GAAqB;AAC5CC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EA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"}