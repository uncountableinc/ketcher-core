{"version":3,"file":"index.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/KetcherLogger.ts","../src/utilities/runAsyncAction.ts","../src/utilities/b64toBlob.ts","../src/utilities/notifyRequestCompleted.ts","../src/utilities/SettingsManager.ts","../../../node_modules/w3c-keyname/index.js","../src/utilities/keynorm.ts","../src/utilities/shortcutsUtil.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/BaseMicromoleculeEntity.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/helpers/saltsAndSolventsProvider.ts","../src/domain/entities/box2Abs.ts","../src/application/editor/shared/constants.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rgroupAttachmentPoint.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/monomerMicromolecule.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/entities/sGroupAttachmentPoint.ts","../src/application/editor/editorSettings.ts","../src/application/editor/constants.ts","../src/application/render/notifyRenderComplete.ts","../src/application/editor/tools/Zoom.ts","../src/application/editor/shared/coordinates.ts","../src/application/render/renderers/BaseRenderer.ts","../src/application/render/renderers/sequence/BaseSequenceRenderer.ts","../src/domain/entities/DrawingEntity.ts","../src/domain/types/monomers.ts","../src/domain/helpers/attachmentPointCalculations.ts","../src/domain/entities/BaseMonomer.ts","../src/domain/entities/monomer-chains/BaseSubChain.ts","../src/domain/entities/monomer-chains/PeptideSubChain.ts","../src/domain/entities/monomer-chains/ChemSubChain.ts","../src/domain/entities/Peptide.ts","../src/domain/entities/Chem.ts","../src/domain/entities/RNABase.ts","../src/domain/entities/monomer-chains/PhosphateSubChain.ts","../src/domain/entities/monomer-chains/RnaSubChain.ts","../src/domain/entities/Phosphate.ts","../src/domain/entities/Sugar.ts","../src/domain/entities/Axis.ts","../src/domain/helpers/monomers.ts","../../../node_modules/subscription/index.js","../src/application/editor/tools/Tool.ts","../src/application/editor/editorEvents.ts","../src/domain/AttachmentPoint.ts","../src/application/render/renderers/BaseMonomerRenderer.ts","../src/application/render/renderers/ChemRenderer.ts","../src/application/render/renderers/PeptideRenderer.ts","../src/application/render/renderers/PhosphateRenderer.ts","../src/application/render/renderers/SugarRenderer.ts","../src/application/render/renderers/RNABaseRenderer.ts","../src/domain/entities/Command.ts","../src/application/editor/operations/polymerBond/index.ts","../src/application/editor/modes/BaseMode.ts","../src/application/editor/modes/FlexMode.ts","../src/domain/entities/monomer-chains/EmptySubChain.ts","../src/domain/entities/EmptyMonomer.ts","../src/domain/entities/EmptySequenceNode.ts","../src/application/render/renderers/sequence/BaseSequenceItemRenderer.ts","../src/application/render/renderers/sequence/PeptideSequenceItemRenderer.ts","../src/application/render/renderers/sequence/ChemSequenceItemRenderer.ts","../src/application/render/renderers/sequence/PhosphateSequenceItemRenderer.ts","../src/application/render/renderers/sequence/NucleotideSequenceItemRenderer.ts","../src/domain/constants/monomers.ts","../src/domain/helpers/rna.ts","../src/domain/entities/Nucleotide.ts","../src/application/render/renderers/sequence/EmptySequenceItemRenderer.ts","../src/application/render/renderers/sequence/SequenceNodeRendererFactory.ts","../src/application/render/renderers/sequence/PolymerBondSequenceRenderer.ts","../src/application/render/renderers/sequence/BackBoneBondSequenceRenderer.ts","../src/domain/entities/PolymerBond.ts","../src/domain/entities/MonomerSequenceNode.ts","../src/domain/entities/monomer-chains/Chain.ts","../src/application/editor/operations/modes/index.ts","../src/application/render/raphael-ext.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/util.ts","../src/application/render/draw.ts","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/bracket-params.ts","../src/application/render/restruct/resgroup.ts","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/rergroupAttachmentPoint.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.ts","../src/application/render/options.ts","../src/application/render/coordinateTransformation.ts","../src/application/render/scrollbar/scroll-offset.ts","../src/application/render/scrollbar/scrollbar.ts","../src/application/render/scrollbar/utils.ts","../src/application/render/scrollbar/scrollbar-vertical.ts","../src/application/render/scrollbar/scrollbar-horizontal.ts","../src/application/render/scrollbar/scrollbar-container.ts","../src/application/render/raphaelRender.ts","../src/application/render/renderStruct.ts","../src/application/render/renderers/sequence/SequenceRenderer.ts","../src/application/editor/modes/SequenceMode.ts","../src/application/editor/modes/SnakeMode.ts","../src/application/editor/modes/index.ts","../src/application/render/renderers/PolymerBondRenderer.ts","../src/application/editor/tools/Bond.ts","../src/application/editor/operations/monomer/monomerFactory.ts","../src/application/editor/tools/Monomer.ts","../src/application/editor/tools/RnaPreset.ts","../src/application/editor/tools/Erase.ts","../src/application/editor/tools/SelectRectangle.ts","../src/application/editor/tools/Clear.ts","../src/application/editor/tools/index.ts","../src/application/render/renderers/RenderersManager.ts","../src/application/editor/operations/monomer/index.ts","../src/application/editor/operations/drawingEntity/index.ts","../src/domain/services/struct/structService.types.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/structFormatter.types.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/mergeFragmentsToStruct.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/domain/serializers/ket/fromKet/monomerToDrawingEntity.ts","../src/domain/serializers/ket/fromKet/polymerBondToDrawingEntity.ts","../../../node_modules/native-url/dist/index.mjs","../../../node_modules/jsonschema/lib/helpers.js","../../../node_modules/jsonschema/lib/attribute.js","../../../node_modules/jsonschema/lib/scan.js","../../../node_modules/jsonschema/lib/validator.js","../../../node_modules/jsonschema/lib/index.js","../src/domain/serializers/ket/validate.ts","../src/application/editor/MacromoleculesConverter.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/smilesFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/utils.ts","../src/domain/entities/monomer-chains/ChainsCollection.ts","../src/domain/entities/DrawingEntitiesManager.ts","../src/application/editor/EditorHistory.ts","../src/application/editor/Editor.ts","../src/domain/entities/Nucleoside.ts","../src/domain/entities/monomer-chains/types.ts","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rgroupAttachmentPoint/RGroupAttachmentPointAdd.ts","../src/application/editor/operations/rgroupAttachmentPoint/RGroupAttachmentPointRemove.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowRotate.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/operations/sgroup/sgroupAttachmentPoints.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/rgroupAttachmentPoint.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/index.ts","../src/infrastructure/services/helpers.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types';\n\ntype ElementColorType = {\n  [key in ElementLabel]: string;\n};\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000',\n} as const;\n\ntype Keys = keyof typeof ElementColor;\nexport type AtomColor = typeof ElementColor[Keys];\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types';\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794,\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022,\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94,\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315,\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81,\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011,\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007,\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999,\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636,\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976,\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282,\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305,\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857,\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085,\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985,\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06,\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45,\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481,\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831,\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784,\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085,\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671,\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151,\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616,\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443,\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452,\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944,\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344,\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463,\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382,\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231,\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308,\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956,\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718,\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904,\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982,\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783,\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621,\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842,\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242,\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372,\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951,\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98,\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072,\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502,\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421,\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822,\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144,\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181,\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107,\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601,\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603,\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473,\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936,\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966,\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277,\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477,\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161,\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662,\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423,\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145,\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362,\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641,\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253,\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352,\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001,\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332,\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593,\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222,\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451,\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681,\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492,\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882,\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841,\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071,\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233,\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173,\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849,\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695,\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923,\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38,\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21,\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401,\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209,\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210,\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222,\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223,\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226,\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227,\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774,\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882,\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913,\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237,\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244,\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243,\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247,\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247,\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251,\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252,\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257,\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258,\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259,\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266,\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267,\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268,\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269,\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270,\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269,\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278,\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281,\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282,\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285,\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286,\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289,\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289,\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293,\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294,\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294,\n  },\n];\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element);\n  acc.set(element.number, element);\n  return acc;\n}, new Map<string | number, Element>());\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate);\n  },\n  getAll: () => [...elementsArray],\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string;\n  description?: string;\n};\n\nexport type GenItemSet = {\n  items: GenItem[];\n  displayName?: string;\n};\n\nexport type GenGroup = {\n  itemSets: GenItemSet[];\n  title: string;\n};\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType };\n};\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' },\n        ],\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)',\n          },\n          { label: 'QH', description: 'Any atom except C' },\n        ],\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' },\n        ],\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' },\n        ],\n      },\n    ],\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' },\n        ],\n      },\n    ],\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group',\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen',\n          },\n        ],\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure',\n          },\n          {\n            label: 'GH*',\n            description: 'Any group with a ring closure or hydrogen',\n          },\n        ],\n      },\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' },\n            ],\n          },\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' },\n                ],\n              },\n            ],\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' },\n                ],\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' },\n                ],\n              },\n            ],\n          },\n        },\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' },\n            ],\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms',\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen',\n              },\n            ],\n          },\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'aryl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen',\n                  },\n                ],\n              },\n            ],\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' },\n                ],\n              },\n            ],\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction getGenericsList(generics: GenericsType | GenGroup) {\n  if (Array.isArray(generics) && !generics[0]?.items) {\n    return generics.map((item) => item.label);\n  } else {\n    let result: string[] = [];\n    for (const subGroup of Object.values(generics)) {\n      if (typeof generics === 'string') continue;\n      result = [...result, ...getGenericsList(subGroup)];\n    }\n    return result;\n  }\n}\n\nexport const genericsList = getGenericsList(Generics);\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants';\n\nexport interface AtomListParams {\n  readonly notList: boolean;\n  readonly ids: Array<number>;\n}\n\nexport class AtomList {\n  notList: boolean;\n  ids: Array<number>;\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList;\n    this.ids = params.ids;\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = [];\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id);\n      currenElement && labels.push(currenElement!.label);\n    }\n\n    return labels;\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']';\n    if (this.notList) {\n      label = '!' + label;\n    }\n    return label;\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue,\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value;\n  }\n}\n","// TODO add tests and rename to toFixed\n// https://github.com/epam/ketcher/issues/2675\nexport function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number;\n  if (typeof value === 'number') {\n    parsedValue = value;\n  } else {\n    parsedValue = parseFloat(value);\n  }\n  return parsedValue.toFixed(8);\n}\n","export enum LogLevel {\n  ERROR = 0,\n  WARN = 1,\n  INFO = 2,\n  LOG = 3,\n}\n\nexport interface LogSettings {\n  enabled?: boolean;\n  showTrace?: boolean;\n  level?: LogLevel;\n}\n\nexport class KetcherLogger {\n  static get settings(): LogSettings {\n    if (!window?.ketcher) {\n      throw new Error(\n        'Ketcher needs to be initialized before KetcherLogger is used',\n      );\n    }\n\n    return window.ketcher.logging;\n  }\n\n  static set settings(newSettings: LogSettings) {\n    for (const [settingName, settingValue] of Object.entries(newSettings)) {\n      this.settings[settingName] = settingValue;\n    }\n  }\n\n  static log(...messages: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.LOG)) {\n      return;\n    }\n\n    const { showTrace } = this.settings;\n\n    if (showTrace) {\n      window.console.trace(messages);\n    } else {\n      window.console.log(messages);\n    }\n  }\n\n  static info(...messages: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.INFO)) {\n      return;\n    }\n\n    const { showTrace } = this.settings;\n\n    if (showTrace) {\n      window.console.trace(messages);\n    } else {\n      window.console.info(messages);\n    }\n  }\n\n  static warn(...warnings: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.WARN)) {\n      return;\n    }\n\n    window.console.warn(warnings);\n  }\n\n  static error(...errors: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.ERROR)) {\n      return;\n    }\n\n    window.console.error(errors);\n  }\n\n  private static isMinimumLogLevel(minimumLevel: LogLevel): boolean {\n    const { enabled, level } = this.settings;\n\n    if (!enabled || level == null) {\n      return false;\n    }\n\n    return level >= minimumLevel;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events';\nimport { KetcherLogger } from './KetcherLogger';\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter,\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING);\n  try {\n    const res = await action();\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS);\n    return res;\n  } catch (e) {\n    KetcherLogger.error('runAsyncAction.ts::runAsyncAction', e);\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE);\n    return undefined;\n  }\n};\n","export function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Blob {\n  const byteCharacters: string = window.atob(b64Data);\n  const byteArrays: Array<Uint8Array> = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice: string = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers: Array<number> = new Array(slice.length);\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray: Uint8Array = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob: Blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n}\n","/**\n * Dispatch event when request is completed\n * Used only for QAs to prevent long delays in test cases\n * Triggers on Add to canvas / Aromatize / Dearomatize\n * Clean Up / Calculate CIP / Paste from clipboard\n * maybe somewhere else\n */\nexport function notifyRequestCompleted(): void {\n  const event = new Event('requestCompleted');\n  window.dispatchEvent(event);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetcherLogger } from './KetcherLogger';\n\nexport const KETCHER_SAVED_SETTINGS_KEY = 'ketcher_editor_saved_settings';\nexport const KETCHER_SAVED_OPTIONS_KEY = 'ketcher-opts';\n\ninterface SavedSettings {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectionTool?: any;\n  disableCustomQuery?: boolean;\n}\n\ninterface SavedOptions {\n  ignoreChiralFlag?: boolean;\n}\n\nexport class SettingsManager {\n  static _disableCustomQuery?: boolean;\n\n  static getSettings(): SavedSettings {\n    try {\n      return JSON.parse(\n        localStorage.getItem(KETCHER_SAVED_SETTINGS_KEY) || '{}',\n      );\n    } catch (e) {\n      KetcherLogger.error(\n        'settingsManager.ts::SettingsManager::getSettings',\n        e,\n      );\n      return {} as SavedSettings;\n    }\n  }\n\n  static saveSettings(settings: SavedSettings) {\n    if (!settings) {\n      return;\n    }\n    localStorage.setItem(KETCHER_SAVED_SETTINGS_KEY, JSON.stringify(settings));\n  }\n\n  static getOptions(): SavedOptions {\n    try {\n      return JSON.parse(\n        localStorage.getItem(KETCHER_SAVED_OPTIONS_KEY) || '{}',\n      );\n    } catch (e) {\n      KetcherLogger.error('SettingsManager.ts::SettingsManager::getOptions', e);\n      return {} as SavedOptions;\n    }\n  }\n\n  static saveOptions(options: SavedOptions) {\n    if (!options) {\n      return;\n    }\n    localStorage.setItem(KETCHER_SAVED_OPTIONS_KEY, JSON.stringify(options));\n  }\n\n  static get selectionTool() {\n    const { selectionTool } = this.getSettings();\n    return selectionTool;\n  }\n\n  static set selectionTool(selectionTool) {\n    const settings = this.getSettings();\n\n    this.saveSettings({\n      ...settings,\n      selectionTool,\n    });\n  }\n\n  static get disableCustomQuery() {\n    return this._disableCustomQuery;\n  }\n\n  static set disableCustomQuery(disableCustomQuery: boolean | undefined) {\n    this._disableCustomQuery = disableCustomQuery;\n  }\n\n  static get ignoreChiralFlag() {\n    const { ignoreChiralFlag } = this.getOptions();\n    return ignoreChiralFlag;\n  }\n\n  static set ignoreChiralFlag(ignoreChiralFlag: boolean | undefined) {\n    const options = this.getOptions();\n\n    this.saveOptions({\n      ...options,\n      ignoreChiralFlag,\n    });\n  }\n}\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport * as KN from 'w3c-keyname';\n\nconst mac =\n  typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false; // eslint-disable-line no-undef\n\nfunction normalizeKeyName(name) {\n  const parts = name.split(/\\+(?!$)/);\n  let result = parts[parts.length - 1];\n  if (result === 'Space') result = ' ';\n  let alt;\n  let ctrl;\n  let shift;\n  let meta;\n\n  for (let i = 0; i < parts.length - 1; i++) {\n    const mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true;\n    else if (/^a(lt)?$/i.test(mod)) alt = true;\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true;\n    else if (/^s(hift)?$/i.test(mod)) shift = true;\n    else if (/^mod$/i.test(mod))\n      if (mac) meta = true;\n      else ctrl = true;\n    else throw new Error('Unrecognized modifier name: ' + mod);\n  }\n\n  if (alt) result = 'Alt+' + result;\n  if (ctrl) result = 'Ctrl+' + result;\n  if (meta) result = 'Meta+' + result;\n  if (shift) result = 'Shift+' + result;\n\n  return result;\n}\n\nfunction normalizeKeyMap(map) {\n  const copy = Object.create(null);\n\n  Object.keys(map).forEach((prop) => {\n    copy[normalizeKeyName(prop)] = map[prop];\n  });\n\n  return copy;\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = 'Alt+' + name;\n  if (event.ctrlKey) name = 'Ctrl+' + name;\n  if (event.metaKey) name = 'Meta+' + name;\n  if (shift !== false && event.shiftKey) name = 'Shift+' + name;\n\n  return name;\n}\n\nfunction rusToEng(name, event) {\n  return name\n    .replace(/[а-я]/, KN.base[event.keyCode])\n    .replace(/[А-Я]/, KN.shift[event.keyCode]);\n}\n\nfunction normalizeKeyEvent(event, base = false) {\n  const name = rusToEng(KN.keyName(event), event);\n  const isChar = name.length === 1 && name !== ' ';\n\n  return isChar && !base\n    ? modifiers(name, event, !isChar)\n    : modifiers(KN.base[event.keyCode], event, true);\n}\n\nexport function isControlKey(event) {\n  return mac ? event.metaKey : event.ctrlKey;\n}\n\n// TODO rename and unify after moving all hotkeys to core editor\n//  to handle all events in same way and to have same structure for all hotkey configs\nfunction keyNorm(obj) {\n  if (obj instanceof KeyboardEvent) {\n    return normalizeKeyEvent(obj);\n  }\n\n  return typeof obj === 'object' ? normalizeKeyMap(obj) : normalizeKeyName(obj);\n}\n\nfunction setHotKey(key, actName, hotKeys) {\n  if (Array.isArray(hotKeys[key])) hotKeys[key].push(actName);\n  else hotKeys[key] = [actName];\n}\n\nexport function initHotKeys(actions) {\n  const hotKeys = {};\n  let act;\n\n  Object.keys(actions).forEach((actName) => {\n    act = actions[actName];\n    if (!act.shortcut) return;\n\n    if (Array.isArray(act.shortcut)) {\n      act.shortcut.forEach((key) => {\n        setHotKey(key, actName, hotKeys);\n      });\n    } else {\n      setHotKey(act.shortcut, actName, hotKeys);\n    }\n  });\n\n  return keyNorm(hotKeys);\n}\n\nfunction lookup(map, event) {\n  let name = rusToEng(KN.keyName(event), event);\n  if (name === 'Add') name = '+'; // numpad '+' and '-'\n  if (name === 'Subtract') name = '-';\n  const isChar = name.length === 1 && name !== ' ';\n  let res = map[modifiers(name, event, !isChar)];\n  let baseName;\n\n  if (event.shiftKey && isChar && (baseName = KN.base[event.keyCode]))\n    res = map[modifiers(baseName, event, true)] || res;\n\n  return res;\n}\n\nkeyNorm.lookup = lookup;\n\nexport { keyNorm };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { isMacOs } from 'react-device-detect';\n\nconst shortcutAliasMap = {\n  Escape: 'Esc',\n  Delete: 'Del',\n  Mod: isMacOs ? '⌘' : 'Ctrl',\n};\n\nexport function shortcutStr(shortcut?: string | string[]) {\n  if (!shortcut) {\n    return '';\n  }\n\n  const shortcutKey = Array.isArray(shortcut) ? shortcut[0] : shortcut;\n  return shortcutKey.replace(\n    /(\\b[a-z]\\b$|Mod|Escape|Delete)/g,\n    (key) => shortcutAliasMap[key] || key.toUpperCase(),\n  );\n}\n\nexport const generateMenuShortcuts = <T>(obj) =>\n  Object.keys(obj).reduce((acc, key) => {\n    if (obj[key]?.shortcut) {\n      const shortcut = obj[key].shortcut;\n      const processedShortcut = shortcutStr(shortcut);\n      acc[key] = processedShortcut;\n    }\n    return acc;\n  }, {}) as { [key in keyof T]: string };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert';\nimport { tfx } from 'utilities';\n\nexport interface Point {\n  x?: number;\n  y?: number;\n  z?: number;\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0);\n  static UNIT = new Vec2(1, 1);\n\n  x: number;\n  y: number;\n  z: number;\n\n  constructor(point: Point);\n  constructor(x?: number, y?: number, z?: number);\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0);\n      this.y = parseFloat(args[0].y || 0);\n      this.z = parseFloat(args[0].z || 0);\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0);\n      this.y = parseFloat(args[1] || 0);\n      this.z = 0;\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0]);\n      this.y = parseFloat(args[1]);\n      this.z = parseFloat(args[2]);\n    } else {\n      throw new Error('Vec2(): invalid arguments');\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length();\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z),\n    );\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z),\n    );\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x;\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2));\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2();\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number);\n    }\n    return v;\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2,\n    );\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5);\n  }\n\n  static getLinePoint(lineStart: Vec2, lineEnd: Vec2, length) {\n    const difference = lineStart.sub(lineEnd);\n    const distance = difference.length();\n    const ratio = length / distance;\n    return new Vec2(\n      lineStart.x + difference.x * ratio,\n      lineStart.y + difference.y * ratio,\n    );\n  }\n\n  static crossProduct(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x;\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y);\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s);\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z);\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0;\n    return new Vec2(this.x, y1 - this.y, this.z);\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f);\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length());\n  }\n\n  normalize(): boolean {\n    const l = this.length();\n\n    if (l < 0.000001) return false;\n\n    this.x /= l;\n    this.y /= l;\n\n    return true;\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z);\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString();\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')';\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null);\n\n    return Vec2.max(this, v);\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v);\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    return this.rotateSC(sin, cos);\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin);\n    assert(cos === 0 || !!cos);\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z,\n    );\n  }\n\n  rotateAroundOrigin(angleInDegrees: number, origin: Vec2) {\n    const angleInRadians = (angleInDegrees * Math.PI) / 180;\n    const offsetX = this.x - origin.x;\n    const offsetY = this.y - origin.y;\n\n    const rotatedX =\n      Math.cos(angleInRadians) * offsetX - Math.sin(angleInRadians) * offsetY;\n    const rotatedY =\n      Math.sin(angleInRadians) * offsetX + Math.cos(angleInRadians) * offsetY;\n\n    const x = rotatedX + origin.x;\n    const y = rotatedY + origin.y;\n\n    return new Vec2(Number(tfx(x)), Number(tfx(y)), this.z || 0);\n  }\n\n  isInsidePolygon(points: Vec2[]) {\n    // ray-casting algorithm based on\n    // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n    const { x, y } = this;\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i].x || 0;\n      const yi = points[i].y || 0;\n      const xj = points[j].x || 0;\n      const yj = points[j].y || 0;\n\n      const intersect =\n        yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  static radiansToDegrees(radians) {\n    return radians * (180 / Math.PI);\n  }\n\n  static degrees_to_radians(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n\n  static oxAngleForVector(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(v2.y - v1.y, v2.x - v1.x);\n  }\n\n  static findSecondPoint(\n    startPoint: { x: number; y: number },\n    lineLength: number,\n    lineAngleRadians: number,\n  ) {\n    const cos = Math.cos(lineAngleRadians);\n    const sin = Math.sin(lineAngleRadians);\n\n    const deltaX = lineLength * cos;\n    const deltaY = lineLength * sin;\n\n    const endPoint = {\n      x: startPoint.x + deltaX,\n      y: startPoint.y + deltaY,\n    };\n    return endPoint;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item;\n    }\n\n    return null;\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this);\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false;\n    }\n\n    return true;\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression));\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this);\n\n    for (const item of setB) union.add(item);\n\n    return union;\n  }\n\n  intersection(setB: Pile): Pile<TValue> {\n    const thisSet = new Pile(this);\n    return new Pile([...thisSet].filter((item) => setB.has(item)));\n  }\n\n  /**\n   * Union multiple sets which have intersections\n   * @example ```\n   * const setA = new Pile([0, 1])\n   * const setB = new Pile([1, 2])\n   * const setC = new Pile([2, 3])\n   * const setD = new Pile([4, 5])\n   * console.log(Pile.unionMultiple([setA, setB, setC, setD]))\n   * // [{0, 1, 2, 3}, {4, 5}]\n   * ```\n   */\n  static unionIntersections<T>(sets: Array<Pile<T>>): Array<Pile<T>> {\n    let unionized = false;\n\n    // Union two of sets\n    const setsToReturn = sets.reduce((prevSets, curSet) => {\n      let isCurSetMerged = false;\n\n      const newSets = prevSets.map((set) => {\n        const intersec = set.intersection(curSet);\n        if (intersec.size > 0) {\n          unionized = true;\n          isCurSetMerged = true;\n          return set.union(curSet);\n        }\n        return set;\n      });\n\n      if (!isCurSetMerged) newSets.push(curSet);\n      return newSets;\n    }, new Array<Pile<T>>());\n\n    // Recursively union two of sets === union all sets\n    return unionized ? Pile.unionIntersections(setsToReturn) : setsToReturn;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const INVALID = 'invalid';\nexport type initiallySelectedType = boolean | 'invalid';\nexport abstract class BaseMicromoleculeEntity {\n  initiallySelected?: initiallySelectedType;\n\n  protected constructor(initiallySelected?: initiallySelectedType) {\n    this.initiallySelected = initiallySelected;\n  }\n\n  getInitiallySelected(): boolean | undefined {\n    if (this.initiallySelected === INVALID) {\n      throw new Error(\n        'this field is used only for serialization/deserialization',\n      );\n    }\n    return this.initiallySelected;\n  }\n\n  setInitiallySelected(value?: boolean): void {\n    if (this.initiallySelected === INVALID) {\n      throw new Error(\n        'this field is used only for serialization/deserialization',\n      );\n    }\n    this.initiallySelected = value;\n  }\n\n  resetInitiallySelected(invalidate?: boolean): void {\n    this.initiallySelected = invalidate ? INVALID : undefined;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList';\nimport { Point, Vec2 } from './vec2';\n\nimport { Elements } from 'domain/constants';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\n/**\n * Return unions of Pick.\n * Difference with <Partial<Pick<O,P>>>  that this type always require at least one property\n *\n * Example:\n * interface O {\n *   field1 : 1;\n *   field2: 2;\n *   field3: 3\n * }\n * SubsetOfFields<O, 'field1'| 'field2'>\n * @returns Pick<O, \"field1\"> | Pick<O, \"field2\">\n */\ntype SubsetOfFields<O, P extends keyof O> = P extends P ? Pick<O, P> : never;\n\nexport enum AttachmentPoints {\n  None = 0,\n  FirstSideOnly = 1,\n  SecondSideOnly = 2,\n  BothSides = 3,\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or',\n}\n\nenum CIP {\n  S = 'S',\n  R = 'R',\n  s = 's',\n  r = 'r',\n}\n\nexport type Aromaticity = 'aromatic' | 'aliphatic';\nexport type Chirality = 'clockwise' | 'anticlockwise';\n\nexport interface AtomQueryProperties {\n  aromaticity?: Aromaticity | null;\n  ringMembership?: number | null;\n  ringSize?: number | null;\n  connectivity?: number | null;\n  chirality?: Chirality | null;\n  customQuery?: string | null;\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number;\n  stereoLabel?: string | null;\n  exactChangeFlag?: number;\n  rxnFragmentType?: number;\n  invRet?: number;\n  aam?: number;\n  hCount?: number;\n  isPreview?: boolean;\n  unsaturatedAtom?: number;\n  substitutionCount?: number;\n  ringBondCount?: number;\n  queryProperties?: AtomQueryProperties;\n  explicitValence?: number;\n  /**\n   * Rgroup member attachment points\n   * Its value is indigo-converted `ATTCHPT`\n   * Ref: https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf P15\n   * Note: value `-1` has been converted to `3` by indigo.\n   */\n  attachmentPoints?: AttachmentPoints | null;\n  rglabel?: string | null;\n  charge?: number | null;\n  radical?: number;\n  cip?: CIP | null;\n  isotope?: number | null;\n  alias?: string | null;\n  pseudo?: string;\n  atomList?: AtomListParams | null;\n  label: string;\n  fragment?: number;\n  pp?: Point;\n  implicitH?: number;\n  implicitHCount?: number | null;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport type AtomPropertiesInContextMenu = SubsetOfFields<\n  AtomAttributes,\n  | 'hCount'\n  | 'ringBondCount'\n  | 'substitutionCount'\n  | 'unsaturatedAtom'\n  | 'implicitHCount'\n>;\n\nexport class Atom extends BaseMicromoleculeEntity {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3,\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3,\n    },\n  };\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: null,\n    radical: 0,\n    cip: null,\n    charge: null,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    queryProperties: {\n      aromaticity: null,\n      ringMembership: null,\n      ringSize: null,\n      connectivity: null,\n      chirality: null,\n      customQuery: null,\n    },\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attachmentPoints: null,\n    aam: 0,\n    isPreview: false,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0,\n    implicitHCount: null,\n  };\n\n  label: string;\n  fragment: number;\n  atomList: AtomList | null;\n  attachmentPoints: AttachmentPoints | null;\n  isotope: number | null;\n  isPreview: boolean;\n  hCount: number;\n  radical: number;\n  cip: CIP | null;\n  charge: number | null;\n  explicitValence: number;\n  ringBondCount: number;\n  queryProperties: AtomQueryProperties;\n  unsaturatedAtom: number;\n  substitutionCount: number;\n  valence: number;\n  implicitH: number;\n  implicitHCount: number | null;\n  pp: Vec2;\n  neighbors: Array<number>;\n  sgs: Pile<number>;\n  badConn: boolean;\n  alias: string | null;\n  rglabel: string | null;\n  aam: number;\n  invRet: number;\n  exactChangeFlag: number;\n  rxnFragmentType: number;\n  stereoLabel?: string | null;\n  stereoParity: number;\n  hasImplicitH?: boolean;\n  pseudo!: string;\n\n  /** @deprecated */\n  get attpnt() {\n    return this.attachmentPoints;\n  }\n\n  constructor(attributes: AtomAttributes) {\n    super(attributes?.initiallySelected);\n    this.label = attributes.label;\n    this.fragment = getValueOrDefault(attributes.fragment, -1);\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias);\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope);\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical);\n    this.cip = getValueOrDefault(attributes.cip, Atom.attrlist.cip);\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge);\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel);\n    this.attachmentPoints = getValueOrDefault(\n      attributes.attachmentPoints,\n      Atom.attrlist.attachmentPoints,\n    );\n    this.implicitHCount = getValueOrDefault(attributes.implicitHCount, null);\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence,\n    );\n    this.isPreview = getValueOrDefault(\n      attributes.isPreview,\n      Atom.attrlist.isPreview,\n    );\n\n    this.valence = 0;\n    this.implicitH = attributes.implicitHCount || attributes.implicitH || 0; // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2();\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile();\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount,\n    );\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount,\n    );\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom,\n    );\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount);\n    this.queryProperties = {};\n    for (const property in Atom.attrlist.queryProperties) {\n      this.queryProperties[property] = getValueOrDefault(\n        attributes.queryProperties?.[property],\n        Atom.attrlist.queryProperties[property],\n      );\n    }\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam);\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet);\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag,\n    );\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1);\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel,\n    );\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity,\n    );\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null;\n    this.neighbors = []; // set of half-bonds having this atom as their origin\n    this.badConn = false;\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label);\n      },\n      set: function (value) {\n        if (isCorrectPseudo(value)) {\n          this.label = value;\n        }\n      },\n    });\n  }\n\n  get isRGroupAttachmentPointEditDisabled() {\n    return this.label === 'R#' && this.rglabel !== null;\n  }\n\n  /**\n   * Trick: used for cloned struct for tooltips, for preview, for templates\n   *\n   * Why?\n   * Currently, tooltips are implemented with removing sgroups (wrong implementation)\n   * That's why we need to mark atoms as sgroup attachment points.\n   *\n   * If we change preview approach to flagged (option for showing sgroups without abbreviation),\n   * then we will be able to remove this hack.\n   */\n  setRGAttachmentPointForDisplayPurpose() {\n    this.attachmentPoints = AttachmentPoints.FirstSideOnly;\n  }\n\n  static getConnectedBondIds(struct: Struct, atomId: number): number[] {\n    const result: number[] = [];\n    for (const [bondId, bond] of struct.bonds.entries()) {\n      if (bond.begin === atomId || bond.end === atomId) {\n        result.push(bondId);\n      }\n    }\n    return result;\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {};\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr];\n    }\n    return attrs;\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr];\n    }\n  }\n\n  static isHeteroAtom(label: string): boolean {\n    return label !== 'C' && label !== 'H';\n  }\n\n  static isInAromatizedRing(struct: Struct, atomId: number): boolean {\n    const atom = struct.atoms.get(atomId);\n    if (atom && Atom.isHeteroAtom(atom.label)) {\n      for (const [_, loop] of struct.loops) {\n        const halfBondIds = loop.hbs;\n        if (loop.aromatic) {\n          for (const halfBondId of halfBondIds) {\n            const halfBond = struct.halfBonds.get(halfBondId);\n            if (!halfBond) return false;\n            const { begin, end } = halfBond;\n            if (begin === atomId || end === atomId) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clone(fidMap?: Map<number, number>): Atom {\n    const ret = new Atom(this);\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!;\n    }\n    return ret;\n  }\n\n  isQuery(): boolean {\n    const { queryProperties } = this;\n    const isAnyAtom = this.label === 'A';\n    const isAnyMetal = this.label === 'M' || this.label === 'MH';\n    const isAnyHalogen = this.label === 'X' || this.label === 'XH';\n    const isAnyGroup =\n      this.label === 'G' ||\n      this.label === 'G*' ||\n      this.label === 'GH' ||\n      this.label === 'GH*';\n    return Boolean(\n      this.substitutionCount !== 0 ||\n        this.unsaturatedAtom !== 0 ||\n        this.ringBondCount !== 0 ||\n        isAnyAtom ||\n        isAnyMetal ||\n        isAnyHalogen ||\n        isAnyGroup ||\n        this.hCount !== 0 ||\n        this.atomList !== null ||\n        Object.values(queryProperties).some((value) => value),\n    );\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0;\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === null &&\n      this.radical === 0 &&\n      this.charge === null &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    );\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label);\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attachmentPoints !== null ||\n      this.aam\n    );\n  }\n\n  calcValence(connectionCount: number): boolean {\n    const label = this.label;\n    const charge = this.charge || 0;\n    if (this.isQuery() || this.attachmentPoints) {\n      this.implicitH = 0;\n      return true;\n    }\n    const element = Elements.get(label);\n\n    const groupno = element?.group;\n    const radicalCount = radicalElectrons(this.radical);\n    let valence = connectionCount;\n    let hydrogenCount: any = 0;\n    const absCharge = Math.abs(charge);\n\n    if (groupno === undefined) {\n      if (label === 'D' || label === 'T') {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      } else {\n        this.implicitH = 0;\n        return true;\n      }\n    } else if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      }\n    } else if (groupno === 2) {\n      if (\n        connectionCount + radicalCount + absCharge === 2 ||\n        connectionCount + radicalCount + absCharge === 0\n      ) {\n        valence = 2;\n      } else hydrogenCount = -1;\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount;\n        } else {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (radicalCount + connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount;\n          }\n        } else if (charge === -2) {\n          if (radicalCount + connectionCount <= 3) {\n            valence = 3;\n            hydrogenCount = 3 - radicalCount - connectionCount;\n          } else {\n            valence = 5;\n            hydrogenCount = 5 - radicalCount - connectionCount;\n          }\n        } else if (radicalCount + connectionCount + absCharge <= 1) {\n          valence = 1;\n          hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4;\n        hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount;\n        } else if (charge === 2) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else if (\n          label === 'N' ||\n          radicalCount + connectionCount + absCharge <= 3\n        ) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5;\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (radicalCount + connectionCount <= 2 && label !== 'As') {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount;\n          }\n        } else if (charge === 2) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else if (radicalCount + connectionCount <= 3) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 5;\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (connectionCount <= 3) {\n            valence = 3;\n            hydrogenCount = 3 - radicalCount - connectionCount;\n          } else {\n            valence = 5;\n            hydrogenCount = 5 - radicalCount - connectionCount;\n          }\n        } else if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        } else if (connectionCount + radicalCount + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6;\n          hydrogenCount = 6 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n          } else if (connectionCount <= 4) {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n          } else if (charge === 0 && connectionCount <= 6) {\n            valence = 6;\n            hydrogenCount = 6 - radicalCount - connectionCount - absCharge;\n          } else {\n            hydrogenCount = -1;\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else if (\n            connectionCount === 3 ||\n            connectionCount === 5 ||\n            connectionCount >= 7\n          ) {\n            hydrogenCount = -1;\n          }\n        } else if (charge === 0) {\n          if (connectionCount <= 1) {\n            valence = 1;\n            hydrogenCount = 1 - radicalCount - connectionCount;\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (\n            connectionCount === 2 ||\n            connectionCount === 4 ||\n            connectionCount === 6\n          ) {\n            if (radicalCount === 1) {\n              valence = connectionCount;\n              hydrogenCount = 0;\n            } else {\n              hydrogenCount = -1; // will throw an error in the end\n            }\n          } else if (connectionCount > 7) {\n            hydrogenCount = -1; // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (connectionCount + radicalCount + absCharge === 0) valence = 1;\n      else hydrogenCount = -1;\n    }\n    if (Atom.isHeteroAtom(label) && this.implicitHCount !== null) {\n      hydrogenCount = this.implicitHCount;\n    }\n    this.valence = valence;\n    this.implicitH = hydrogenCount;\n    if (this.implicitH < 0) {\n      this.valence = connectionCount;\n      this.implicitH = 0;\n      this.badConn = true;\n      return false;\n    }\n    return true;\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge || 0;\n    const label = this.label;\n    const element = Elements.get(this.label);\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0;\n      return 0;\n    }\n\n    const groupno = element.group;\n    const rad = radicalElectrons(this.radical);\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn;\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn;\n        if (charge === 2) return rad + conn;\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn;\n        else if (charge === 2) return rad + conn;\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn;\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn;\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn;\n      }\n    }\n\n    return rad + conn + Math.abs(charge);\n  }\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0;\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1;\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2;\n  } else {\n    return 0;\n  }\n}\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue;\n}\n\nfunction isCorrectPseudo(label) {\n  return (\n    !Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#'\n  );\n}\n\nfunction getPseudo(label: string) {\n  return isCorrectPseudo(label) ? label : '';\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport { Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nenum CIP {\n  E = 'E',\n  Z = 'Z',\n  M = 'M',\n  P = 'P',\n}\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number | null;\n  topology?: number | null;\n  customQuery?: string | null;\n  stereo?: number;\n  xxx?: string;\n  type: number;\n  end: number;\n  begin: number;\n  cip?: CIP | null;\n  isPreview?: boolean;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class Bond extends BaseMicromoleculeEntity {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10,\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3,\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2,\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12,\n    },\n  };\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED,\n    cip: null,\n    customQuery: null,\n  };\n\n  begin: number;\n  end: number;\n  readonly type: number;\n  readonly xxx: string;\n  readonly stereo: number;\n  readonly topology: number | null;\n  readonly reactingCenterStatus: number | null;\n  customQuery: string | null;\n  len: number;\n  sb: number;\n  sa: number;\n  cip?: CIP | null;\n  hb1?: number;\n  hb2?: number;\n  angle: number;\n  center: Vec2;\n  isPreview: boolean;\n\n  constructor(attributes: BondAttributes) {\n    super(attributes.initiallySelected);\n    this.begin = attributes.begin;\n    this.end = attributes.end;\n    this.type = attributes.type;\n    this.xxx = attributes.xxx || '';\n    this.stereo = Bond.PATTERN.STEREO.NONE;\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER;\n    this.customQuery = null;\n    this.reactingCenterStatus = 0;\n    this.cip = attributes.cip ?? null;\n    this.len = 0;\n    this.sb = 0;\n    this.sa = 0;\n    this.angle = 0;\n    this.isPreview = false;\n\n    if (attributes.stereo) this.stereo = attributes.stereo;\n    if (attributes.topology) this.topology = attributes.topology;\n    if (attributes.customQuery) {\n      this.customQuery = attributes.customQuery;\n      this.type = Bond.PATTERN.TYPE.ANY;\n      this.reactingCenterStatus = null;\n      this.topology = null;\n    }\n\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus;\n    }\n\n    this.center = new Vec2();\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {};\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr];\n      }\n    }\n    return attrs;\n  }\n\n  static getBondNeighbourIds(struct: Struct, bondId: number) {\n    const bond = struct.bonds.get(bondId)!;\n    const { begin, end } = bond;\n    const beginBondIds = Atom.getConnectedBondIds(struct, begin).filter(\n      (id) => id !== bondId,\n    );\n    const endBondIds = Atom.getConnectedBondIds(struct, end).filter(\n      (id) => id !== bondId,\n    );\n    return { beginBondIds, endBondIds };\n  }\n\n  static getFusingConditions(bond: Bond, bondBegin: Bond, bondEnd: Bond) {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const isFusingToDoubleBond =\n      bondBegin.type === SINGLE &&\n      bond.type === DOUBLE &&\n      bondEnd.type === SINGLE;\n    const isFusingToSingleBond =\n      bondBegin.type === DOUBLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === DOUBLE;\n    const isFusingDoubleSingleSingle =\n      bondBegin.type === DOUBLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === SINGLE;\n    const isFusingSingleSingleDouble =\n      bondBegin.type === SINGLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === DOUBLE;\n    const isAllSingle =\n      bondBegin.type === SINGLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === SINGLE;\n    return {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n      isFusingSingleSingleDouble,\n      isAllSingle,\n    };\n  }\n\n  static getBenzeneConnectingBondType(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ): number | null {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const { isFusingToSingleBond, isFusingToDoubleBond } =\n      Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToDoubleBond) {\n      return DOUBLE;\n    } else if (isFusingToSingleBond) {\n      return SINGLE;\n    }\n    return null;\n  }\n\n  static getCyclopentadieneFusingBondType(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ): number | null {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n      isAllSingle,\n    } = Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToDoubleBond) {\n      return DOUBLE;\n    } else if (\n      isFusingToSingleBond ||\n      isAllSingle ||\n      isFusingDoubleSingleSingle\n    ) {\n      return SINGLE;\n    }\n    return null;\n  }\n\n  static getCyclopentadieneDoubleBondIndexes(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ) {\n    const {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n    } = Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToSingleBond || isFusingToDoubleBond) {\n      return [3];\n    }\n\n    if (isFusingDoubleSingleSingle) {\n      return [2, 4];\n    }\n\n    return [1, 3];\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr];\n    }\n  }\n\n  isQuery(): boolean {\n    const TYPES = Bond.PATTERN.TYPE;\n    const QUERY_BOND_TYPES = [\n      TYPES.ANY,\n      TYPES.SINGLE_OR_DOUBLE,\n      TYPES.SINGLE_OR_AROMATIC,\n      TYPES.DOUBLE_OR_AROMATIC,\n      TYPES.AROMATIC,\n    ];\n    return (\n      this.customQuery !== null ||\n      QUERY_BOND_TYPES.includes(this.type) ||\n      (TYPES.SINGLE === this.type && this.stereo === Bond.PATTERN.STEREO.EITHER)\n    );\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus;\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp;\n    const p2 = struct.atoms.get(this.end).pp;\n    return Vec2.lc2(p1, 0.5, p2, 0.5);\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp;\n    const p2 = struct.atoms.get(this.end)!.pp;\n    return p2.sub(p1).normalized();\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this);\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!;\n      cp.end = aidMap.get(cp.end)!;\n    }\n    return cp;\n  }\n\n  getAttachedSGroups(struct: Struct) {\n    const sGroupsWithBeginAtom =\n      struct.atoms.get(this.begin)?.sgs || new Pile();\n    const sGroupsWithEndAtom = struct.atoms.get(this.end)?.sgs || new Pile();\n    return sGroupsWithBeginAtom?.intersection(sGroupsWithEndAtom);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\n\nimport { Bond } from './bond';\nimport { StereoLabel } from './atom';\nimport { Struct, StructProperty } from './struct';\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR',\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>,\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined;\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel);\n  if (!filteredStereoAtoms.length) return undefined;\n\n  const atom = filteredStereoAtoms[0]!;\n  const stereoLabel = atom.stereoLabel!; // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel,\n  );\n\n  let stereoFlag: StereoFlag;\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed;\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0];\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs;\n        break;\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And;\n        break;\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or;\n        break;\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`);\n      }\n    }\n  }\n  return stereoFlag;\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag;\n  stereoFlagPosition?: Vec2;\n  properties?: Array<StructProperty>;\n  #stereoAtoms: Array<number>;\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms];\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag;\n  }\n\n  constructor(\n    stereoAtoms: Array<number> = [],\n    stereoFlagPosition?: Point | null,\n    properties?: Array<StructProperty>,\n  ) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition);\n    }\n    if (properties) {\n      this.properties = properties;\n    }\n    this.#stereoAtoms = stereoAtoms;\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number,\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId);\n    if (!fragment) return undefined;\n    const bb = fragment.getCoordBoundingBox();\n    return new Vec2(bb.max.x, bb.min.y - 1);\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!);\n    const fr = new Fragment(\n      stereoAtoms,\n      this.stereoFlagPosition,\n      this.properties,\n    );\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag;\n    return fr;\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\n    return this.#enhancedStereoFlag;\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid);\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE,\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid);\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId);\n      return true;\n    }\n    return false;\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number,\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId);\n      return true;\n    }\n    return false;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities';\n\nexport interface ScaleOptions {\n  microModeScale: number;\n  macroModeScale: number;\n}\n\nfunction canvasToModel(point: Vec2, options: ScaleOptions): Vec2 {\n  return point.scaled(1 / options.microModeScale);\n}\n\nfunction modelToCanvas(vector: Vec2, options: ScaleOptions): Vec2 {\n  return vector.scaled(options.microModeScale);\n}\n\nexport const Scale = {\n  canvasToModel,\n  modelToCanvas,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities';\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct,\n) {\n  const beginAtom = struct.atoms.get(bond.begin);\n\n  let EndAtomNeigh: number | undefined = NaN;\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid;\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false;\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false;\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities';\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider;\n  functionalGroupsList: Struct[];\n  constructor() {\n    this.functionalGroupsList = [];\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider();\n    }\n    return FunctionalGroupsProvider.instance;\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList;\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list;\n  }\n\n  public addToFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = [...this.functionalGroupsList, ...list];\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities';\n\nexport class SaltsAndSolventsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: SaltsAndSolventsProvider;\n  saltsAndSolventsList: Struct[];\n  constructor() {\n    this.saltsAndSolventsList = [];\n  }\n\n  public static getInstance(): SaltsAndSolventsProvider {\n    if (!SaltsAndSolventsProvider.instance) {\n      SaltsAndSolventsProvider.instance = new SaltsAndSolventsProvider();\n    }\n    return SaltsAndSolventsProvider.instance;\n  }\n\n  public getSaltsAndSolventsList() {\n    return this.saltsAndSolventsList;\n  }\n\n  public setSaltsAndSolventsList(list: Struct[]): void {\n    this.saltsAndSolventsList = list;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2';\nimport assert from 'assert';\n\nexport class Box2Abs {\n  readonly p0: Vec2;\n  readonly p1: Vec2;\n\n  constructor();\n  constructor(p: Vec2);\n  constructor(p0: Vec2, p1: Vec2);\n  constructor(x0: number, y0: number, x1: number, y1: number);\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min;\n      this.p1 = args[0].max;\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0];\n      this.p1 = args[1];\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1]);\n      this.p1 = new Vec2(args[2], args[3]);\n    } else if (args.length === 0) {\n      this.p0 = new Vec2();\n      this.p1 = new Vec2();\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!',\n      );\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString();\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1);\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp;\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb));\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null);\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p));\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null);\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    );\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d));\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function');\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options));\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0);\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1);\n  }\n\n  pos() {\n    return this.p0;\n  }\n\n  hasZeroArea() {\n    const size = this.sz();\n    return size.x === 0 && size.y === 0;\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height,\n    );\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1));\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x);\n\n    if (dc === 0 && dd === 0 && da === 0 && db === 0) {\n      // Check for collinearity and overlapping cases\n      return (\n        Box2Abs.#isPointOnSegment(a, b, c) ||\n        Box2Abs.#isPointOnSegment(a, b, d) ||\n        Box2Abs.#isPointOnSegment(c, d, a) ||\n        Box2Abs.#isPointOnSegment(c, d, b)\n      );\n    } else return dc * dd < 0 && da * db < 0;\n  }\n\n  // Helper function to check if a point is on a line segment\n  static #isPointOnSegment(\n    segPointA: Vec2,\n    segPointB: Vec2,\n    point: Vec2,\n  ): boolean {\n    const minX = Math.min(segPointA.x, segPointB.x);\n    const maxX = Math.max(segPointA.x, segPointB.x);\n    const minY = Math.min(segPointA.y, segPointB.y);\n    const maxY = Math.max(segPointA.y, segPointB.y);\n\n    return (\n      point.x >= minX && point.x <= maxX && point.y >= minY && point.y <= maxY\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group',\n};\n\nexport const selectionKeys = [\n  'atoms',\n  'bonds',\n  'frags',\n  'sgroups',\n  'rgroups',\n  'rgroupAttachmentPoints',\n  'rxnArrows',\n  'rxnPluses',\n  'simpleObjects',\n  'texts',\n] as const;\n\nexport const defaultBondThickness = 2;\n\nexport enum MonomerGroups {\n  SUGARS = 'Sugars',\n  BASES = 'Bases',\n  PHOSPHATES = 'Phosphates',\n}\n\nexport enum MonomerGroupCodes {\n  R = 'R',\n  A = 'A',\n  C = 'C',\n  G = 'G',\n  T = 'T',\n  U = 'U',\n  X = 'X',\n  P = 'P',\n}\n\nexport const MonomerCodeToGroup: Record<MonomerGroupCodes, MonomerGroups> = {\n  R: MonomerGroups.SUGARS,\n  A: MonomerGroups.BASES,\n  C: MonomerGroups.BASES,\n  G: MonomerGroups.BASES,\n  T: MonomerGroups.BASES,\n  U: MonomerGroups.BASES,\n  X: MonomerGroups.BASES,\n  P: MonomerGroups.PHOSPHATES,\n} as const;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom';\nimport { Bond } from './bond';\nimport { Box2Abs } from './box2Abs';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport { SaltsAndSolventsProvider } from '../helpers';\nimport { Vec2 } from './vec2';\nimport { ReStruct } from '../../application/render';\nimport { FunctionalGroup, Pool, SGroupAttachmentPoint } from 'domain/entities';\nimport { ReSGroup } from 'application/render';\nimport { SgContexts } from 'application/editor/shared/constants';\nimport assert from 'assert';\n\nexport class SGroupBracketParams {\n  readonly c: Vec2;\n  readonly d: Vec2;\n  readonly n: Vec2;\n  readonly w: number;\n  readonly h: number;\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c;\n    this.d = d;\n    this.n = d.rotateSC(1, 0);\n    this.w = w;\n    this.h = h;\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN',\n    queryComponent: 'queryComponent',\n  };\n\n  type: string;\n  id: number;\n  label: number;\n  bracketBox: any;\n  bracketDirection: Vec2;\n  areas: any;\n  hover: boolean;\n  hovering: any;\n  selected: boolean;\n  selectionPlate: any;\n  atoms: any;\n  atomSet: any;\n  parentAtomSet: any;\n  patoms?: any;\n  allAtoms: any;\n  bonds: any;\n  xBonds: any;\n  neiAtoms: any;\n  pp: Vec2 | null;\n  data: any;\n  dataArea: any;\n  functionalGroup: FunctionalGroup | undefined;\n  private readonly attachmentPoints: SGroupAttachmentPoint[];\n\n  constructor(type: string) {\n    this.type = type;\n    this.id = -1;\n    this.label = -1;\n    this.bracketBox = null;\n    this.bracketDirection = new Vec2(1, 0);\n    this.areas = [];\n\n    this.hover = false;\n    this.hovering = null;\n    this.selected = false;\n    this.selectionPlate = null;\n\n    this.atoms = [];\n    this.patoms = [];\n    this.bonds = [];\n    this.xBonds = [];\n    this.neiAtoms = [];\n    this.attachmentPoints = [];\n    this.pp = null;\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: '',\n    };\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr];\n  }\n\n  setFunctionalGroup(functionalGroup: FunctionalGroup) {\n    this.functionalGroup = functionalGroup;\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {};\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr];\n    });\n    return attrs;\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr];\n    this.data[attr] = value;\n    return oldValue;\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value;\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset);\n  }\n\n  isExpanded(): boolean {\n    // flag \".data.expanded\" exists only for the SuperAtom\n    if (SGroup.isSuperAtom(this)) {\n      return Boolean(this.data.expanded);\n    } else {\n      return true;\n    }\n  }\n\n  isContracted(): boolean {\n    return !this.isExpanded();\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint;\n\n    const isAtomContext = this.data.context === SgContexts.Atom;\n    const isBondContent = this.data.context === SgContexts.Bond;\n    if (isAtomContext || isBondContent) {\n      const contentBoxes: Array<any> = [];\n      let contentBB: Box2Abs | null = null;\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid);\n        const pos = new Vec2(atom!.pp);\n\n        const ext = new Vec2(0.05 * 3, 0.05 * 3);\n        const bba = new Box2Abs(pos, pos).extend(ext, ext);\n        contentBoxes.push(bba);\n      });\n\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null;\n        [bba.p0.x, bba.p1.x].forEach((x) => {\n          [bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y);\n            bbb = !bbb ? new Box2Abs(v, v) : bbb!.include(v);\n          });\n        });\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!);\n      });\n\n      topLeftPoint = isBondContent ? contentBB!.centre() : contentBB!.p0;\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5));\n    }\n\n    const sgroups = Array.from(struct.sgroups.values());\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break;\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5));\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0];\n        const sAtomPP = struct.atoms.get(sAtom)?.pp;\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP;\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms);\n      }\n    }\n\n    this.pp = topLeftPoint;\n  }\n\n  isGroupAttached(struct: Struct): boolean {\n    return this.getConnectionPointsCount(struct) >= 1;\n  }\n\n  addAttachmentPoint(attachmentPoint: SGroupAttachmentPoint): void {\n    const isAttachmentPointAlreadyExist = this.attachmentPoints.some(\n      ({ atomId }) => attachmentPoint.atomId === atomId,\n    );\n\n    if (isAttachmentPointAlreadyExist) {\n      throw new Error(\n        'The same attachment point cannot be added to an S-group more than once',\n      );\n    }\n\n    this.attachmentPoints.push(attachmentPoint);\n  }\n\n  addAttachmentPoints(\n    attachmentPoints:\n      | ReadonlyArray<SGroupAttachmentPoint>\n      | SGroupAttachmentPoint[],\n  ): void {\n    for (const attachmentPoint of attachmentPoints) {\n      this.addAttachmentPoint(attachmentPoint);\n    }\n  }\n\n  removeAttachmentPoint(attachmentPointAtomId: number): boolean {\n    const index = this.attachmentPoints.findIndex(\n      ({ atomId }) => attachmentPointAtomId === atomId,\n    );\n    if (index !== -1) {\n      this.attachmentPoints.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  getAttachmentPoints(): ReadonlyArray<SGroupAttachmentPoint> {\n    return this.attachmentPoints;\n  }\n\n  /**\n   * Connection point - is not! the same as Attachment point.\n   * Connection point is a fact for the sgroup - is the atom that has connected bond to an external atom.\n   * So it doesn't matter how it happens (connection atom).\n   * When we talk about \"Attachment point\" it is a hypothetical, suitable place to connect to sgroup.\n   * But there are cases when sgroup doesn't have attachment points but have connection (read from external file)\n   */\n  private getConnectionPointsCount(struct: Struct): number {\n    const connectionAtoms = new Set<number>();\n    for (const atomId of this.atoms) {\n      const neighbors = struct.atomGetNeighbors(atomId) ?? [];\n      for (const { aid } of neighbors) {\n        if (!this.atoms.includes(aid)) {\n          connectionAtoms.add(atomId);\n          break;\n        }\n      }\n    }\n    return connectionAtoms.size;\n  }\n\n  isNotContractible(struct: Struct): boolean {\n    return this.getConnectionPointsCount(struct) > 1;\n  }\n\n  /**\n   * Why only one?\n   * Currently other parts of application don't support several attachment points for sgroup.\n   * So to support it - it's required to refactor almost every peace of code with sgroups.\n   *\n   *\n   * Why return 'undefined' without fallback?\n   * If sgroup doesn't have attachment points it can't be attached, (salt and solvents for example).\n   */\n  getAttachmentAtomId(): number | undefined {\n    return this.attachmentPoints[0]?.atomId;\n  }\n\n  /**\n   * WHY? When group is contracted we need to understand the represent atom to calculate position.\n   * It is not always the attachmentPoint!! if no attachment point - use the first atom\n   */\n  getContractedPosition(struct: Struct): {\n    atomId: number;\n    position: Vec2;\n  } {\n    let atomId = this.attachmentPoints[0]?.atomId;\n    let representAtom = struct.atoms.get(atomId);\n    if (!representAtom) {\n      atomId = this.atoms[0];\n      representAtom = struct.atoms.get(this.atoms[0]);\n    }\n    assert(representAtom != null);\n    return { atomId, position: representAtom.pp };\n  }\n\n  cloneAttachmentPoints(\n    atomIdMap: Map<number, number>,\n  ): ReadonlyArray<SGroupAttachmentPoint> {\n    return this.attachmentPoints.map((point) => point.clone(atomIdMap));\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp || !sgroup.bracketBox) return null;\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1);\n  }\n\n  static isSaltOrSolvent(moleculeName: string): boolean {\n    const saltsAndSolventsProvider = SaltsAndSolventsProvider.getInstance();\n    const saltsAndSolvents = saltsAndSolventsProvider.getSaltsAndSolventsList();\n    return saltsAndSolvents.some(\n      ({ name, abbreviation }) =>\n        name === moleculeName || moleculeName === abbreviation,\n    );\n  }\n\n  static isAtomInSaltOrSolvent(\n    atomId: number,\n    sgroupsOnCanvas: SGroup[],\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name),\n    );\n    return onlySaltsOrSolvents.some(({ atoms }) =>\n      atoms.some((atomIdInSaltOrSolvent) => atomIdInSaltOrSolvent === atomId),\n    );\n  }\n\n  static isBondInSaltOrSolvent(\n    bondId: number,\n    sgroupsOnCanvas: SGroup[],\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name),\n    );\n    return onlySaltsOrSolvents.some(({ bonds }) =>\n      bonds.some((bondIdInSaltOrSolvent) => bondIdInSaltOrSolvent === bondId),\n    );\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = [];\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i];\n      if (typeof map[aid] !== 'number') newAtoms.push(aid);\n      else if (map[aid] >= 0) newAtoms.push(map[aid]);\n      else newAtoms.push(-1);\n    }\n    return newAtoms;\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = [];\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j]);\n    }\n    return newAtoms;\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap));\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type);\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field];\n    });\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem));\n    cp.pp = sgroup.pp;\n    cp.bracketBox = sgroup.bracketBox;\n    cp.patoms = null;\n    cp.bonds = null;\n    cp.allAtoms = sgroup.allAtoms;\n    cp.data.expanded = sgroup.data.expanded;\n    cp.addAttachmentPoints(sgroup.cloneAttachmentPoints(aidMap));\n    return cp;\n  }\n\n  static addAtom(sgroup: SGroup, aid: number, struct: Struct): void {\n    sgroup.atoms.push(aid);\n    if (sgroup.isNotContractible(struct)) {\n      sgroup.setAttr('expanded', true);\n    }\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    if (!sgroup) {\n      return;\n    }\n\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>,\n  ): { [key: number]: Array<number> } {\n    const crossBonds: { [key: number]: Array<number> } = {};\n    mol.bonds.forEach((bond, bid: number) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = [];\n        }\n        crossBonds[bond.begin].push(bid);\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = [];\n        }\n        crossBonds[bond.end].push(bid);\n      }\n    });\n    return crossBonds;\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom?: { [key: number]: Array<number> },\n    remol?: ReStruct,\n    render?,\n  ): void {\n    const BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3);\n    const PADDING_VECTOR = new Vec2(0.2, 0.4);\n    const atoms = sGroup.atoms;\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null;\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDirection = new Vec2(1, 0);\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol);\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol);\n      sGroup.bracketDirection = Vec2.diff(p2, p1).normalized();\n    }\n    const d = sGroup.bracketDirection;\n\n    let braketBox: Box2Abs | null = null;\n    const contentBoxes: Array<any> = [];\n    const getAtom = (aid) => {\n      if (remol && render) {\n        return remol.atoms.get(aid);\n      }\n      return mol.atoms.get(aid);\n    };\n    atoms.forEach((aid) => {\n      const atom = getAtom(aid);\n      let position;\n      let structBoundingBox;\n      if ('getVBoxObj' in atom && render) {\n        structBoundingBox = atom.getVBoxObj(render);\n      } else {\n        position = new Vec2(atom.pp);\n        structBoundingBox = new Box2Abs(position, position);\n      }\n      contentBoxes.push(structBoundingBox.extend(BORDER_EXT, BORDER_EXT));\n    });\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null;\n      [bba.p0.x, bba.p1.x].forEach((x) => {\n        [bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y);\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)));\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p);\n        });\n      });\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!);\n    });\n    if (!render) render = window.ketcher!.editor.render;\n    let attachmentPointsVBox =\n      render.ctab.getRGroupAttachmentPointsVBoxByAtomIds(atoms);\n    attachmentPointsVBox = attachmentPointsVBox\n      ? attachmentPointsVBox.extend(BORDER_EXT, BORDER_EXT)\n      : attachmentPointsVBox;\n    braketBox =\n      attachmentPointsVBox && braketBox\n        ? Box2Abs.union(braketBox, attachmentPointsVBox)\n        : braketBox;\n    if (braketBox)\n      braketBox = (braketBox as Box2Abs).extend(PADDING_VECTOR, PADDING_VECTOR);\n    sGroup.bracketBox = braketBox;\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n,\n  ): Array<any> {\n    const brackets: Array<any> = [];\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom);\n    const crossBonds = crossBondsPerAtomValues.flat();\n    if (crossBonds.length < 2) {\n      (function () {\n        d = d || new Vec2(1, 0);\n        n = n || d.rotateSC(1, 0);\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3);\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y));\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y));\n        const bracketHeight = bb.sz().y;\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight),\n        );\n      })();\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      (function () {\n        const b1 = mol.bonds.get(crossBonds[0]);\n        const b2 = mol.bonds.get(crossBonds[1]);\n        const cl0 = b1.getCenter(mol);\n        const cr0 = b2.getCenter(mol);\n        const dr = Vec2.diff(cr0, cl0).normalized();\n        const dl = dr.negated();\n\n        const bracketWidth = 0.25;\n        const bracketHeight = 1.5;\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight,\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight,\n          ),\n        );\n      })();\n    } else {\n      (function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i]);\n          const c = b.getCenter(mol);\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated();\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0));\n        }\n      })();\n    }\n    return brackets;\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp;\n    let bb = new Box2Abs(a0, a0);\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i];\n      const atom = mol.atoms.get(aid);\n      const p = atom.pp;\n      bb = bb.include(p);\n    }\n    return bb;\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms;\n    const atoms: Array<any> = [];\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid);\n    });\n    return atoms;\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg);\n    const bonds: Array<any> = [];\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid);\n      }\n    });\n    return bonds;\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b);\n    sgroup.atomSet = new Pile(sgroup.atoms);\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet);\n    const inBonds: Array<any> = [];\n    const xBonds: Array<any> = [];\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid);\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid);\n      }\n    });\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number');\n    }\n\n    let xAtom1 = -1;\n    let xAtom2 = -1;\n    let crossBond = null;\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0]);\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end;\n\n      const bond2 = mol.bonds.get(xBonds[1]);\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end;\n      crossBond = bond2;\n    }\n\n    let tailAtom = xAtom2;\n\n    const newAtoms: Array<any> = [];\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {};\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid);\n        const aid2 = mol.atoms.add(new Atom(atom));\n        newAtoms.push(aid2);\n        sgroup.atomSet.add(aid2);\n        amap[aid] = aid2;\n      });\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid);\n        const newBond = new Bond(bond);\n        newBond.begin = amap[newBond.begin];\n        newBond.end = amap[newBond.end];\n        mol.bonds.add(newBond);\n      });\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond);\n        newCrossBond.begin = tailAtom;\n        newCrossBond.end = amap[xAtom1];\n        mol.bonds.add(newCrossBond);\n        tailAtom = amap[xAtom2];\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1]);\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom;\n      else xBond2.end = tailAtom;\n    }\n    sgroup.bonds = xBonds;\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid);\n        });\n    });\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2(); // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length);\n    }\n    return c;\n  }\n\n  static isAtomInContractedSGroup = (atom, sGroups) => {\n    const contractedSGroup: number[] = [];\n\n    sGroups.forEach((sGroupOrReSGroup) => {\n      const sGroup =\n        'item' in sGroupOrReSGroup ? sGroupOrReSGroup.item : sGroupOrReSGroup;\n      if (sGroup.isContracted()) {\n        contractedSGroup.push(sGroup.id);\n      }\n    });\n    return contractedSGroup.some((sg) => atom.sgs.has(sg));\n  };\n\n  static isBondInContractedSGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n  ) {\n    return [...sGroups.values()].some((sGroupOrReSGroup) => {\n      const sGroup: SGroup | undefined =\n        'item' in sGroupOrReSGroup ? sGroupOrReSGroup.item : sGroupOrReSGroup;\n      const atomsInSGroup = sGroup?.atoms;\n      return (\n        sGroup?.isContracted() &&\n        atomsInSGroup.includes(bond?.begin) &&\n        atomsInSGroup.includes(bond?.end)\n      );\n    });\n  }\n\n  static isSuperAtom(sGroup?: SGroup): boolean {\n    if (!sGroup) {\n      return false;\n    }\n    return sGroup?.type === SGroup.TYPES.SUP;\n  }\n\n  static isDataSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.DAT;\n  }\n\n  static isQuerySGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.queryComponent;\n  }\n\n  static isSRUSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.SRU;\n  }\n\n  static isMulSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.MUL;\n  }\n}\n\nfunction descriptorIntersects(sgroups: SGroup[], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false;\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5));\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5));\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint,\n    );\n  });\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ReSGroup } from 'application/render';\nimport assert from 'assert';\nimport { FunctionalGroupsProvider } from '../helpers';\nimport { Atom } from './atom';\nimport { Bond } from './bond';\nimport { Pool } from './pool';\nimport { SGroup } from './sgroup';\nimport { Struct } from './struct';\nimport { HalfBond } from './halfBond';\n\nexport class FunctionalGroup {\n  #sgroup: SGroup;\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null);\n\n    this.#sgroup = sgroup;\n    sgroup.setFunctionalGroup(this);\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name;\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id;\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded;\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup;\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance();\n    const functionalGroups = provider.getFunctionalGroupsList();\n    const {\n      data: { name },\n      type,\n    } = sgroup;\n    return (\n      type === 'SUP' &&\n      (functionalGroups.some((type) => type.name === name) ||\n        SGroup.isSaltOrSolvent(name))\n    );\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null;\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom;\n    }\n    return null;\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond,\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null;\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup);\n      if (bonds.includes(bond)) return bond;\n    }\n    return null;\n  }\n\n  static isRGroupAttachmentPointInsideFunctionalGroup(\n    molecule: Struct,\n    id: number,\n  ) {\n    const rgroupAttachmentPoint = molecule.rgroupAttachmentPoints.get(id);\n    assert(rgroupAttachmentPoint != null);\n    const attachedAtom = rgroupAttachmentPoint.atomId;\n    return FunctionalGroup.atomsInFunctionalGroup(\n      molecule.functionalGroups,\n      attachedAtom,\n    );\n  }\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n  ): number | null;\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned: true,\n  ): FunctionalGroup | null;\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned?: boolean,\n  ): number | FunctionalGroup | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atomId))\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId;\n    }\n    return null;\n  }\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n  ): number | null;\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned: true,\n  ): FunctionalGroup | null;\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned?: boolean,\n  ): FunctionalGroup | number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup);\n      if (bonds.includes(bondId)) {\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId;\n      }\n    }\n    return null;\n  }\n\n  static findFunctionalGroupBySGroup(\n    functionalGroups: Pool<FunctionalGroup>,\n    sGroup?: SGroup,\n  ) {\n    const key = functionalGroups.find(\n      (_, functionalGroup) => functionalGroup.relatedSGroupId === sGroup?.id,\n    );\n    return key !== null ? functionalGroups.get(key) : undefined;\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup);\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom: Atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean,\n  ): boolean {\n    const contractedFunctionalGroups: number[] = [];\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.item, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.item.id);\n        }\n      });\n    } else {\n      sgroups.forEach((sg) => {\n        if (FunctionalGroup.isContractedFunctionalGroup(sg, functionalGroups)) {\n          contractedFunctionalGroups.push(sg.id);\n        }\n      });\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg));\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n    functionalGroups: Pool<FunctionalGroup>,\n  ) {\n    return [...sGroups.values()].some((_sGroup) => {\n      const sGroup = 'item' in _sGroup ? _sGroup?.item : _sGroup;\n      const atomsInSGroup = sGroup?.atoms;\n      const isContracted = FunctionalGroup.isContractedFunctionalGroup(\n        sGroup,\n        functionalGroups,\n      );\n      return (\n        isContracted &&\n        atomsInSGroup.includes(bond.begin) &&\n        atomsInSGroup.includes(bond.end)\n      );\n    });\n  }\n\n  static isHalfBondInContractedFunctionalGroup(\n    halfBond: HalfBond,\n    struct: Struct,\n  ) {\n    const bond = struct.bonds.get(halfBond.bid);\n    assert(bond != null);\n    return this.isBondInContractedFunctionalGroup(\n      bond,\n      struct.sgroups,\n      struct.functionalGroups,\n    );\n  }\n\n  static isContractedFunctionalGroup(sgroup, functionalGroups): boolean {\n    let isFunctionalGroup = false;\n    let expanded = false;\n\n    if (sgroup instanceof SGroup) {\n      if (sgroup.functionalGroup) {\n        isFunctionalGroup = true;\n        expanded = sgroup.functionalGroup.isExpanded;\n      }\n    } else {\n      functionalGroups.forEach((fg) => {\n        if (fg.relatedSGroupId === sgroup) {\n          isFunctionalGroup = true;\n          expanded = fg.isExpanded;\n        }\n      });\n    }\n    return !expanded && isFunctionalGroup;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2';\nimport assert from 'assert';\n\n/** @internal */\nexport class HalfBond {\n  begin: number;\n  end: number;\n  bid: number;\n  dir: Vec2;\n  norm: Vec2;\n  ang: number;\n  p: Vec2;\n  loop: number;\n  contra: number;\n  next: number;\n  leftSin: number;\n  leftCos: number;\n  leftNeighbor: number;\n  rightSin: number;\n  rightCos: number;\n  rightNeighbor: number;\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.');\n\n    this.begin = begin;\n    this.end = end;\n    this.bid = bid;\n\n    // rendering properties\n    this.dir = new Vec2(); // direction\n    this.norm = new Vec2(); // left normal\n    this.ang = 0; // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2(); // corrected origin position\n    this.loop = -1; // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1; // the half bond contrary to this one\n    this.next = -1; // the half-bond next ot this one in CCW order\n    this.leftSin = 0;\n    this.leftCos = 0;\n    this.leftNeighbor = 0;\n    this.rightSin = 0;\n    this.rightCos = 0;\n    this.rightNeighbor = 0;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond';\nimport { Struct } from './struct';\n\nexport class Loop {\n  hbs: number[];\n  dblBonds: number;\n  aromatic: boolean;\n  convex: boolean;\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs; // set of half-bonds involved\n    this.dblBonds = 0; // number of double bonds in the loop\n    this.aromatic = true;\n    this.convex = isConvex || false;\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!;\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false;\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++;\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile';\nimport { Pool } from './pool';\n\nexport interface RGroupAttributes {\n  index?: number;\n  ifthen?: number;\n  resth?: boolean;\n  range?: string;\n}\nexport class RGroup {\n  frags: Pile<number>;\n  resth: boolean;\n  range: string;\n  ifthen: number;\n  index: number;\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>();\n    this.resth = atrributes?.resth || false;\n    this.range = atrributes?.range || '';\n    this.ifthen = atrributes?.ifthen || 0;\n    this.index = atrributes?.index || -1;\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid));\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index,\n    };\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this);\n    this.frags.forEach((fid) => {\n      if (!fidMap || fidMap.has(fid)) {\n        ret.frags.add(fidMap ? fidMap.get(fid)! : fid);\n      }\n    });\n    return ret;\n  }\n}\n","import {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport type RGroupAttachmentPointType = 'primary' | 'secondary';\n\nexport class RGroupAttachmentPoint extends BaseMicromoleculeEntity {\n  atomId: number;\n  type: RGroupAttachmentPointType;\n\n  constructor(\n    atomId: number,\n    type: RGroupAttachmentPointType,\n    initiallySelected?: initiallySelectedType,\n  ) {\n    super(initiallySelected);\n    this.atomId = atomId;\n    this.type = type;\n  }\n\n  clone(atomToNewAtom?: Map<number, number> | null) {\n    const newAtomId = atomToNewAtom?.get(this.atomId);\n    return new RGroupAttachmentPoint(\n      newAtomId ?? this.atomId,\n      this.type,\n      this.initiallySelected,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle',\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode;\n  pos?: Array<Point>;\n  height?: number;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class RxnArrow extends BaseMicromoleculeEntity {\n  mode: RxnArrowMode;\n  pos: Array<Vec2>;\n  height?: number;\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle,\n    ].includes(arrow.mode);\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = [];\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i];\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2();\n      }\n    }\n    this.mode = attributes.mode;\n    const defaultHeight = 2;\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight;\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this);\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1]);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport interface RxnPlusAttributes {\n  pp?: Point;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class RxnPlus extends BaseMicromoleculeEntity {\n  pp: Vec2;\n\n  constructor(attributes?: RxnPlusAttributes) {\n    super(attributes?.initiallySelected);\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2();\n  }\n\n  clone() {\n    return new RxnPlus(this);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile';\nimport { SGroup } from './sgroup';\nimport assert from 'assert';\nimport { Struct } from './struct';\nimport { KetcherLogger } from 'utilities';\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>;\n  /** node id -> list of child ids */\n  children: Map<number, number[]>;\n  atomSets: Map<number, any>;\n\n  constructor() {\n    this.parent = new Map();\n    this.children = new Map();\n\n    this.children.set(-1, []); // extra root node\n    this.atomSets = new Map();\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = [];\n    const queue = Array.from(this.children.get(-1) as Array<number>);\n    while (queue.length > 0) {\n      const id = queue.shift();\n      if (typeof id !== 'number') {\n        break;\n      }\n      const children = this.children.get(id);\n      if (typeof children === 'undefined') {\n        break;\n      }\n\n      children.forEach((id) => {\n        queue.push(id);\n      });\n\n      order.push(id);\n    }\n\n    return order;\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map();\n    const isSubset = new Map();\n\n    this.atomSets.delete(newId);\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms));\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms),\n      );\n    });\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false;\n      }\n      const childs = this.children.get(sgid);\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0;\n    });\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id)),\n    );\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0],\n    };\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = [];\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id);\n    }\n    return path;\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest');\n    assert(!this.children.has(id), 'sgid already present in the forest');\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms));\n      parent = guess.parent;\n      children = guess.children;\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id);\n    });\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id)),\n    );\n    this.parent.set(id, parent);\n    this.children.get(parent)?.push(id);\n    this.atomSets.set(id, new Pile(atoms));\n\n    return { parent, children };\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId);\n    if (typeof parentId === 'undefined') {\n      return;\n    }\n\n    const childs = this.children.get(parentId);\n    if (!childs) {\n      return;\n    }\n\n    const childIndex = childs.indexOf(childId);\n    childs.splice(childIndex, 1);\n    this.parent.set(childId, id);\n  }\n\n  remove(id) {\n    try {\n      assert(this.parent.has(id), 'sgid is not in the forest');\n      assert(this.children.has(id), 'sgid is not in the forest');\n    } catch (e) {\n      KetcherLogger.error('sgroupForest.ts::SGroupForest::remove', e);\n      console.info('error: sgid is not in the forest');\n    }\n\n    const parentId = this.parent.get(id) as any;\n    const childs = this.children.get(parentId) as any;\n\n    if (!parentId || !childs) return;\n\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId);\n      this.children.get(parentId)?.push(childId);\n    });\n\n    const i = childs.indexOf(id);\n    childs.splice(i, 1);\n\n    this.children.delete(id);\n    this.parent.delete(id);\n    this.atomSets.delete(id);\n  }\n}\n\nexport function checkOverlapping(\n  struct: Struct,\n  atoms: number[] = [],\n  sGroupType: 'queryComponent' | 'common',\n) {\n  const searchFunction = {\n    common: (sid: number) => {\n      const sg = struct.sgroups.get(sid);\n      if (sg?.type === 'DAT') return false;\n      const sgAtoms = SGroup.getAtoms(struct, sg);\n\n      return sgAtoms.length < atoms.length\n        ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n        : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0;\n    },\n    queryComponent: (sid: number) => {\n      const sg = struct.sgroups.get(sid);\n      if (sg?.type !== 'queryComponent') return false;\n      const sgAtoms = SGroup.getAtoms(struct, sg);\n\n      return atoms.some((aid) => sgAtoms.includes(aid));\n    },\n  };\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid);\n    return atom ? res.union(atom.sgs) : res;\n  }, new Pile());\n\n  return Array.from(sgroups).some(searchFunction[sGroupType]);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line',\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode;\n  pos?: Array<Point>;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class SimpleObject extends BaseMicromoleculeEntity {\n  pos: Array<Vec2>;\n  mode: SimpleObjectMode;\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = [];\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i];\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2();\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line;\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this);\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1]);\n      }\n      default:\n        return this.pos[0];\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0;\n\n  add(item: TValue): number {\n    const id = this.nextId++;\n    super.set(id, item);\n    return id;\n  }\n\n  newId(): number {\n    return this.nextId++;\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key;\n    }\n\n    return null;\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key;\n    }\n\n    return null;\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value)),\n    );\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  changeInitiallySelectedPropertiesForPool(invalidate?: boolean): void {\n    this.forEach((value, key) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      if (typeof value.resetInitiallySelected === 'function') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        value.resetInitiallySelected(invalidate);\n        this.set(key, value);\n      }\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { SGroup } from 'domain/entities/sgroup';\nimport { Struct } from 'domain/entities/struct';\nimport assert from 'assert';\n\nexport class MonomerMicromolecule extends SGroup {\n  constructor(type: string, public monomer) {\n    super(type);\n    this.data.absolute = false;\n    this.data.attached = false;\n  }\n\n  public override getContractedPosition(struct: Struct) {\n    assert(this.pp);\n    const sgroupContractedPosition = super.getContractedPosition(struct);\n    return { position: this.pp, atomId: sgroupContractedPosition.atomId };\n  }\n\n  public static clone(monomerMicromolecule: MonomerMicromolecule) {\n    const monomerMicromoleculeClone = new MonomerMicromolecule(\n      monomerMicromolecule.type,\n      monomerMicromolecule.monomer,\n    );\n    monomerMicromoleculeClone.pp = monomerMicromolecule.pp;\n    monomerMicromoleculeClone.atoms = monomerMicromolecule.atoms;\n\n    return monomerMicromoleculeClone;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert';\nimport { Atom, radicalElectrons } from './atom';\nimport { EditorSelection } from 'application/editor';\nimport { Bond } from './bond';\nimport { Box2Abs } from './box2Abs';\nimport { Elements } from 'domain/constants';\nimport { Fragment } from './fragment';\nimport { FunctionalGroup } from './functionalGroup';\nimport { HalfBond } from './halfBond';\nimport { Loop } from './loop';\nimport { Pile } from './pile';\nimport { Pool } from './pool';\nimport { RGroup } from './rgroup';\nimport { RxnArrow } from './rxnArrow';\nimport { RxnPlus } from './rxnPlus';\nimport { SGroup } from './sgroup';\nimport { SGroupForest } from './sgroupForest';\nimport { SimpleObject } from './simpleObject';\nimport { Text } from './text';\nimport { Vec2 } from './vec2';\nimport { Highlight } from './highlight';\nimport { RGroupAttachmentPoint } from './rgroupAttachmentPoint';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\nexport type Neighbor = {\n  aid: number;\n  bid: number;\n};\n\nexport type StructProperty = {\n  key: string;\n  value: string;\n};\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false;\n  }\n  array.push(item);\n  return true;\n}\n\nexport class Struct {\n  atoms: Pool<Atom>;\n  bonds: Pool<Bond>;\n  sgroups: Pool<SGroup>;\n  halfBonds: Pool<HalfBond>;\n  loops: Pool<Loop>;\n  isReaction: boolean;\n  rxnArrows: Pool<RxnArrow>;\n  rxnPluses: Pool<RxnPlus>;\n  frags: Pool<Fragment | null>;\n  rgroups: Pool<RGroup>;\n  rgroupAttachmentPoints: Pool<RGroupAttachmentPoint>;\n  name: string;\n  abbreviation?: string;\n  sGroupForest: SGroupForest;\n  simpleObjects: Pool<SimpleObject>;\n  texts: Pool<Text>;\n  functionalGroups: Pool<FunctionalGroup>;\n  highlights: Pool<Highlight>;\n\n  constructor() {\n    this.atoms = new Pool<Atom>();\n    this.bonds = new Pool<Bond>();\n    this.sgroups = new Pool<SGroup>();\n    this.halfBonds = new Pool<HalfBond>();\n    this.loops = new Pool<Loop>();\n    this.isReaction = false;\n    this.rxnArrows = new Pool<RxnArrow>();\n    this.rxnPluses = new Pool<RxnPlus>();\n    this.frags = new Pool<Fragment>();\n    this.rgroups = new Pool<RGroup>();\n    this.rgroupAttachmentPoints = new Pool<RGroupAttachmentPoint>();\n    this.name = '';\n    this.abbreviation = '';\n    this.sGroupForest = new SGroupForest();\n    this.simpleObjects = new Pool<SimpleObject>();\n    this.texts = new Pool<Text>();\n    this.functionalGroups = new Pool<FunctionalGroup>();\n    this.highlights = new Pool<Highlight>();\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    );\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1;\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0;\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses();\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    );\n  }\n\n  isSingleGroup(): boolean {\n    if (!this.sgroups.size || this.sgroups.size > 1) return false;\n    const sgroup = this.sgroups.values().next().value; // get sgroup from map\n    return this.atoms.size === sgroup.atoms.length;\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null,\n    rgroupAttachmentPointSet?: Pile<number> | null,\n    bidMap?: Map<number, number> | null,\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet,\n      rgroupAttachmentPointSet,\n      bidMap,\n    );\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>();\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid);\n    });\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid);\n        });\n      });\n    });\n\n    return this.clone(atomSet);\n  }\n\n  getFragmentIds(_fid: number | number[]): Pile<number> {\n    const atomSet = new Pile<number>();\n    const fid = Array.isArray(_fid) ? _fid : [_fid];\n    this.atoms.forEach((atom, aid) => {\n      if (fid.includes(atom.fragment)) atomSet.add(aid);\n    });\n\n    return atomSet;\n  }\n\n  getFragment(fid: number | number[], copyNonFragmentObjects = true): Struct {\n    return this.clone(\n      this.getFragmentIds(fid),\n      null,\n      true,\n      undefined,\n      copyNonFragmentObjects ? undefined : new Pile(),\n      copyNonFragmentObjects ? undefined : new Pile(),\n      copyNonFragmentObjects ? undefined : new Pile(),\n    );\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null,\n    rgroupAttachmentPointSet?: Pile<number> | null,\n    bidMapEntity?: Map<number, number> | null,\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys());\n    bondSet = bondSet || new Pile<number>(this.bonds.keys());\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys());\n    textsSet = textsSet || new Pile<number>(this.texts.keys());\n    rgroupAttachmentPointSet =\n      rgroupAttachmentPointSet ||\n      new Pile<number>(this.rgroupAttachmentPoints.keys());\n    aidMap = aidMap || new Map();\n    const bidMap = bidMapEntity || new Map();\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!;\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end);\n    });\n\n    const fidMask = new Pile();\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment);\n    });\n\n    const fidMap = new Map();\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null));\n    });\n\n    const rgroupsIds: Array<number> = [];\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups;\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid);\n          if (fidMask.has(fid)) keepGroup = true;\n        });\n\n        if (!keepGroup) return;\n      }\n\n      const rg = cp.rgroups.get(rgid);\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid);\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid));\n        });\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap));\n      }\n    });\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)));\n      }\n    });\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)));\n      }\n    });\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid);\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)); // clone Fragments\n      }\n    });\n\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)));\n    });\n\n    const sgroupIdMap = {};\n    this.sgroups.forEach((sg, sgroupId) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return;\n      const oldSgroup = sg;\n\n      sg =\n        oldSgroup instanceof MonomerMicromolecule\n          ? MonomerMicromolecule.clone(oldSgroup)\n          : SGroup.clone(sg, aidMap!);\n\n      const id = cp.sgroups.add(sg);\n      sg.id = id;\n\n      sgroupIdMap[sgroupId] = id;\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid);\n        if (atom) {\n          atom.sgs.add(id);\n        }\n      });\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, []);\n      else cp.sGroupForest.insert(sg);\n    });\n\n    this.functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroup.atoms.some((aid) => !atomSet!.has(aid))) return;\n      const sgroup = cp.sgroups.get(sgroupIdMap[fg.relatedSGroupId]);\n      // It is possible that there is no sgroup in case of templates library rendering\n      // Sgroup is deleteing before render to show templates without brackets (see RenderStruct.prepareStruct method)\n      fg = sgroup ? new FunctionalGroup(sgroup) : FunctionalGroup.clone(fg);\n      cp.functionalGroups.add(fg);\n    });\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone());\n    });\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone());\n    });\n\n    rgroupAttachmentPointSet.forEach((id) => {\n      const rgroupAttachmentPoint = this.rgroupAttachmentPoints.get(id);\n      assert(rgroupAttachmentPoint != null);\n      cp.rgroupAttachmentPoints.add(rgroupAttachmentPoint.clone(aidMap));\n    });\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction;\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone());\n      });\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone());\n      });\n    }\n\n    cp.name = this.name;\n\n    return cp;\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds();\n    this.initNeighbors();\n    this.updateHalfBonds(Array.from(this.atoms.keys()));\n    this.sortNeighbors(Array.from(this.atoms.keys()));\n    this.findLoops();\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid, this);\n    this.atoms.get(aid)!.sgs.add(sgid);\n  }\n\n  calcConn(atom) {\n    let conn = 0;\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!;\n      const bond = this.bonds.get(hb.bid)!;\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1;\n          break;\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2;\n          break;\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3;\n          break;\n        case Bond.PATTERN.TYPE.DATIVE:\n          break;\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break;\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true];\n          return [atom.neighbors.length, true];\n        default:\n          return [-1, false];\n      }\n    }\n    return [conn, false];\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin),\n    );\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = [];\n    });\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!;\n      const a2 = this.atoms.get(bond.end)!;\n      a1.neighbors.push(bond.hb1!);\n      a2.neighbors.push(bond.hb2!);\n    });\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!;\n    bond.hb1 = 2 * bid;\n    bond.hb2 = 2 * bid + 1; // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid));\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid));\n    const hb1 = this.halfBonds.get(bond.hb1)!;\n    const hb2 = this.halfBonds.get(bond.hb2)!;\n    hb1.contra = bond.hb2;\n    hb2.contra = bond.hb1;\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!;\n    const sgroup1 = this.getGroupFromAtomId(halfBond.begin);\n    const sgroup2 = this.getGroupFromAtomId(halfBond.end);\n    const startCoords =\n      sgroup1 instanceof MonomerMicromolecule\n        ? (sgroup1.pp as Vec2)\n        : this.atoms.get(halfBond.begin)!.pp;\n    const endCoords =\n      sgroup2 instanceof MonomerMicromolecule\n        ? (sgroup2.pp as Vec2)\n        : this.atoms.get(halfBond.end)!.pp;\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized();\n\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0);\n    halfBond.norm = halfBond.dir.turnLeft();\n    halfBond.ang = halfBond.dir.oxAngle();\n    if (halfBond.loop < 0) halfBond.loop = -1;\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear();\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond);\n    });\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next;\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!;\n    const hbl = this.halfBonds.get(left)!;\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir);\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir);\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir);\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir);\n\n    hb.leftNeighbor = left;\n    hbl.rightNeighbor = hbid;\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!;\n    const atom = this.atoms.get(hb.begin)!;\n\n    let i;\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break;\n    }\n    atom.neighbors.splice(i, 0, hbid);\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length];\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length];\n    this.setHbNext(il, hbid);\n    this.setHbNext(hbid, ir);\n    this.halfBondSetAngle(hbid, il);\n    this.halfBondSetAngle(ir, hbid);\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!;\n    const halfBonds = this.halfBonds;\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length];\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei;\n        this.halfBondSetAngle(nextNei, nei);\n      });\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid);\n      });\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid);\n      });\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid);\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra);\n    });\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId);\n      });\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId);\n      });\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = [];\n      sg.neiAtoms = [];\n    });\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!;\n      const a2 = this.atoms.get(bond.end)!;\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!;\n          sg.xBonds.push(bid);\n          arrayAddIfMissing(sg.neiAtoms, bond.end);\n        }\n      });\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!;\n          sg.xBonds.push(bid);\n          arrayAddIfMissing(sg.neiAtoms, bond.begin);\n        }\n      });\n    });\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid);\n    });\n\n    this.sGroupForest.remove(sgid);\n    this.sgroups.delete(sgid);\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!;\n    item.pp = pp;\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!;\n    item.pp = pp;\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id);\n    if (item) {\n      item.pos = pos;\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!;\n    item.pos = pos;\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id);\n\n    if (item) {\n      item.position = position;\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null;\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp,\n        };\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec);\n            bb.max = Vec2.max(bb.max, vec);\n          });\n        } else {\n          bb.min = Vec2.min(bb.min, pp);\n          bb.max = Vec2.max(bb.max, pp);\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0;\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp);\n    });\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp);\n      });\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos);\n      });\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos);\n      });\n      this.texts.forEach((item) => {\n        extend(item.position);\n      });\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1),\n      };\n    }\n    return bb;\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null;\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp),\n        };\n      } else {\n        bb.min = Vec2.min(bb.min, pp);\n        bb.max = Vec2.max(bb.max, pp);\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp);\n    });\n    return bb;\n  }\n\n  getBondLengthData() {\n    let totalLength = 0;\n    let cnt = 0;\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp,\n      );\n      cnt++;\n    });\n    return { cnt, totalLength };\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData();\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1;\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0;\n    let minDist;\n    let dist = 0;\n    const keys = Array.from(this.atoms.keys());\n    let k;\n    let j;\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1;\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue; // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp,\n        );\n        if (minDist < 0 || minDist > dist) minDist = dist;\n      }\n      totalDist += minDist;\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1;\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end),\n    );\n\n    return key !== undefined;\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid];\n    const ids = new Pile<number>();\n    while (list.length > 0) {\n      const aid = list.pop()!;\n      ids.add(aid);\n      const atom = this.atoms.get(aid)!;\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end;\n        if (!ids.has(neiId)) list.push(neiId);\n      });\n    }\n\n    return ids;\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds();\n      this.initNeighbors();\n      this.updateHalfBonds(Array.from(this.atoms.keys()));\n      this.sortNeighbors(Array.from(this.atoms.keys()));\n    }\n\n    let addedAtoms = new Pile<number>();\n\n    const components: Array<any> = [];\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid);\n        components.push(component);\n        addedAtoms = addedAtoms.union(component);\n      }\n    });\n\n    return components;\n  }\n\n  markFragment(idSet: Pile<number>, properties: [StructProperty]) {\n    const frag = new Fragment([], undefined, properties);\n    const fid = this.frags.add(frag);\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!;\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true);\n      atom.fragment = fid;\n    });\n  }\n\n  markFragments(properties?) {\n    const components = this.findConnectedComponents();\n    components.forEach((comp) => {\n      const [firstAtom] = comp;\n      const sgroup = this.getGroupFromAtomId(firstAtom);\n      if (sgroup instanceof MonomerMicromolecule) {\n        return;\n      }\n      this.markFragment(comp, properties);\n    });\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return;\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale);\n    });\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale);\n    });\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale));\n    });\n\n    this.sgroups.forEach((item) => {\n      if (item instanceof MonomerMicromolecule) {\n        return;\n      }\n      item.pp = item.pp ? item.pp.scaled(scale) : null;\n    });\n\n    this.texts.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale));\n      item.position = item.position.scaled(scale);\n    });\n\n    this.simpleObjects.forEach((simpleObjects) => {\n      simpleObjects.pos = simpleObjects.pos.map((p) => p.scaled(scale));\n    });\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength();\n    if (avg <= 0) {\n      return;\n    }\n    if (avg < 1e-3) avg = 1;\n\n    const scale = 1 / avg;\n    this.scale(scale);\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!;\n      const ai = this.atoms.get(hbi.begin)!.pp;\n      const bi = this.atoms.get(hbi.end)!.pp;\n      const set = new Pile([hbi.begin, hbi.end]);\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!;\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue; // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp;\n        const bj = this.atoms.get(hbj.end)!.pp;\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = [];\n    let continueFlag = true;\n    while (continueFlag) {\n      const atomToHalfBond = {}; // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false;\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l];\n        const aid1 = this.halfBonds.get(hbid)!.begin;\n        const aid2 = this.halfBonds.get(hbid)!.end;\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2]; // where the subloop begins\n          const subloop = loop.slice(s, l + 1);\n          subloops.push(subloop);\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1);\n          }\n          continueFlag = true;\n          break;\n        }\n        atomToHalfBond[aid1] = l;\n      }\n      if (!continueFlag) subloops.push(loop); // we're done, no more subloops found\n    }\n    return subloops;\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!;\n    const hbb = this.halfBonds.get(hbid2)!;\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir));\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length]);\n      return angle <= 0;\n    });\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI;\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length];\n      const hbb = this.halfBonds.get(hbidb)!;\n      const angle = this.halfBondAngle(hbida, hbidb);\n      totalAngle += hbb.contra === hbida ? Math.PI : angle; // back and forth along the same edge\n    });\n    return Math.abs(totalAngle) < Math.PI;\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = [];\n    const bondsToMark = new Pile<number>();\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop;\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return;\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext);\n          continue; // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop);\n        subloops.forEach((loop) => {\n          let loopId;\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop);\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop)),\n            );\n          } else {\n            loopId = -2;\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId;\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid);\n          });\n\n          if (loopId >= 0) newLoops.push(loopId);\n        });\n        break;\n      }\n    });\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark),\n    };\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!;\n    const charge = atom.charge || 0;\n    const [conn, isAromatic] = this.calcConn(atom);\n    let correctConn = conn;\n    atom.badConn = false;\n\n    if (isAromatic) {\n      if (atom.label === 'C' && charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical);\n          return;\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical);\n          return;\n        }\n      } else if (\n        (atom.label === 'O' && charge === 0) ||\n        (atom.label === 'N' && charge === 0 && conn === 3) ||\n        (atom.label === 'N' && charge === 1 && conn === 3) ||\n        (atom.label === 'S' && charge === 0 && conn === 3) ||\n        !atom.implicitH\n      ) {\n        atom.implicitH = 0;\n        return;\n      } else if (!atom.hasImplicitH) {\n        correctConn++;\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery() || atom.attachmentPoints) {\n      atom.implicitH = 0;\n      return;\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label);\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0;\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0;\n        atom.badConn = true;\n      }\n    } else {\n      atom.calcValence(correctConn);\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true;\n      }\n    });\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid);\n      });\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid);\n        }\n      });\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!;\n      return {\n        aid: hb.end,\n        bid: hb.bid,\n      };\n    });\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true);\n    const barriers: Array<any> = [];\n    let arrowPos: number | null = null;\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x;\n    });\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x);\n    });\n\n    if (arrowPos !== null) barriers.push(arrowPos);\n\n    barriers.sort((a, b) => a - b);\n\n    const components: Array<any> = [];\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component);\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5);\n      let j = 0;\n\n      while (c.x > barriers[j]) ++j;\n\n      components[j] = components[j] || new Pile();\n      components[j] = components[j].union(component);\n    });\n\n    const submolTexts: Array<string> = [];\n    const reactants: Array<any> = [];\n    const products: Array<any> = [];\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('');\n        return;\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0,\n      );\n\n      if (rxnFragmentType === 1) reactants.push(component);\n      else products.push(component);\n    });\n\n    return {\n      reactants,\n      products,\n    };\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset);\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5);\n    return c.x < arrowpos ? 1 : 2;\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin;\n    return aid && this.atoms.get(aid)?.fragment;\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (\n        FunctionalGroup.isFunctionalGroup(sgroup) ||\n        SGroup.isSuperAtom(sgroup)\n      ) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup));\n      }\n    });\n  }\n\n  getGroupIdFromAtomId(atomId: number): number | null {\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (sgroup.atoms.includes(atomId)) return groupId;\n    }\n    return null;\n  }\n\n  getGroupFromAtomId(atomId: number | undefined): SGroup | undefined {\n    const sgroupId = this.getGroupIdFromAtomId(atomId as number);\n    return this.sgroups?.get(sgroupId as number);\n  }\n\n  // TODO: simplify if bonds ids ever appear in sgroup\n  // ! deprecate\n  getGroupIdFromBondId(bondId: number): number | null {\n    const bond = this.bonds.get(bondId);\n    if (!bond) return null;\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        return groupId;\n      }\n    }\n    return null;\n  }\n\n  getGroupsIdsFromBondId(bondId: number): number[] {\n    const bond = this.bonds.get(bondId);\n    if (!bond) return [];\n\n    const groupsIds: number[] = [];\n\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        groupsIds.push(groupId);\n      }\n    }\n    return groupsIds;\n  }\n\n  getBondIdByHalfBond(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId);\n    if (halfBond) {\n      return halfBond.bid;\n    }\n    return undefined;\n  }\n\n  /**\n   * @returns visibleAtoms = selected atoms\n   *                       - atoms in contracted functional groups\n   *                       + functional groups's attachment atoms\n   */\n  getSelectedVisibleAtoms(selection: EditorSelection | null) {\n    return (\n      selection?.atoms?.filter((atomId) => {\n        const atom = this.atoms.get(atomId);\n        if (!atom) {\n          return false;\n        }\n        const isAtomNotInContractedGroup =\n          !FunctionalGroup.isAtomInContractedFunctionalGroup(\n            atom,\n            this.sgroups,\n            this.functionalGroups,\n            false,\n          );\n        if (isAtomNotInContractedGroup) {\n          return true;\n        }\n        const groupId = this.getGroupIdFromAtomId(atomId);\n        const sgroup = this.sgroups.get(groupId as number);\n        return sgroup?.getAttachmentAtomId() === atomId;\n      }) || []\n    );\n  }\n\n  getRGroupAttachmentPointsByAtomId(atomId: number) {\n    const rgroupAttachmentPoints = this.rgroupAttachmentPoints.filter(\n      (_id, attachmentPoint) => attachmentPoint.atomId === atomId,\n    );\n    return [...rgroupAttachmentPoints.keys()];\n  }\n\n  isAtomFromMacromolecule(atomId: number) {\n    const sgroup = this.getGroupFromAtomId(atomId);\n    return sgroup instanceof MonomerMicromolecule;\n  }\n\n  isBondFromMacromolecule(bondId: number) {\n    const bond = this.bonds.get(bondId);\n\n    assert(bond);\n\n    return (\n      this.isAtomFromMacromolecule(bond.begin) ||\n      this.isAtomFromMacromolecule(bond.end)\n    );\n  }\n\n  isFunctionalGroupFromMacromolecule(functionalGroupId: number) {\n    const functionalGroup = this.functionalGroups.get(functionalGroupId);\n\n    return functionalGroup?.relatedSGroup instanceof MonomerMicromolecule;\n  }\n\n  isTargetFromMacromolecule(target?: { id: number; map: string }) {\n    return (\n      target &&\n      ((target.map === 'functionalGroups' &&\n        this.isFunctionalGroupFromMacromolecule(target.id)) ||\n        (target.map === 'atoms' && this.isAtomFromMacromolecule(target.id)) ||\n        (target.map === 'bonds' && this.isBondFromMacromolecule(target.id)))\n    );\n  }\n\n  disableInitiallySelected(): void {\n    // Those fields are used only in serialization/deserialization phase\n    // so we are disabling them to avoid confusion\n    this.atoms.changeInitiallySelectedPropertiesForPool(true);\n    this.bonds.changeInitiallySelectedPropertiesForPool(true);\n    this.rxnPluses.changeInitiallySelectedPropertiesForPool(true);\n    this.rxnArrows.changeInitiallySelectedPropertiesForPool(true);\n    this.texts.changeInitiallySelectedPropertiesForPool(true);\n  }\n\n  enableInitiallySelected(): void {\n    this.atoms.changeInitiallySelectedPropertiesForPool();\n    this.bonds.changeInitiallySelectedPropertiesForPool();\n    this.rxnPluses.changeInitiallySelectedPropertiesForPool();\n    this.rxnArrows.changeInitiallySelectedPropertiesForPool();\n    this.texts.changeInitiallySelectedPropertiesForPool();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE',\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string;\n  position: Point;\n  pos: Array<Point>;\n  initiallySelected?: initiallySelectedType;\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n  }\n\n  return positions.map((position) => new Vec2(position));\n}\n\nexport class Text extends BaseMicromoleculeEntity {\n  content: string;\n  position: Vec2;\n  pos: Array<Vec2>;\n\n  constructor(attributes?: TextAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = preparePositions(attributes?.pos);\n    this.content = attributes?.content || '';\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2();\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || [];\n  }\n\n  clone(): Text {\n    return new Text(this);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n}\n\nexport class Highlight {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes;\n    this.color = color;\n    this.atoms = atoms;\n    this.bonds = bonds;\n  }\n}\n","import assert from 'assert';\nimport { RGroupAttachmentPoint } from './rgroupAttachmentPoint';\n\n/**\n * This is data model for Sgrou attachment point.\n * each of the property is according to the specification of CT files for \"SAP\" instruction.\n * Implemented under requirements: https://github.com/epam/ketcher/issues/2467\n */\nexport class SGroupAttachmentPoint {\n  /**\n   * This is the index of the atom in the S-group that serves as the attachment point.\n   */\n  public readonly atomId: number;\n  /**\n   * This is the index of the atom that is being replaced or removed at the attachment point\n   * when the S-group is connected to another structure.\n   * If no atom is being replaced, this value should be set to zero.\n   *\n   * NOTE: The logic is not supported in the current implementation of Ketcher.\n   * Only reading from file and saving to file.\n   */\n  public readonly leaveAtomId: number | undefined;\n  /**\n   * 2 character attachment identifier (for example, H or T for head/tail).\n   * No validation of any kind is performed, and ‘ ’ is allowed.\n   * ISIS/Desktop uses the first character as the ID of the leaving group\n   * to attach if the bond between ooo and iii is deleted, and uses the second character\n   * to indicate the sequence polarity: l for left, r for right, and x for none (a crosslink).\n   *\n   * NOTE: The logic is not supported in the current implementation of Ketcher.\n   * Only reading from file and saving to file.\n   */\n  public readonly attachmentId: string | undefined;\n\n  constructor(\n    atomId: number,\n    leaveAtomId: number | undefined,\n    attachmentId: string | undefined,\n  ) {\n    this.atomId = atomId;\n    this.leaveAtomId = leaveAtomId;\n    this.attachmentId = attachmentId;\n  }\n\n  clone(atomIdMap: Map<number, number>): SGroupAttachmentPoint {\n    const newAtomId = atomIdMap.get(this.atomId);\n    assert(newAtomId != null);\n    const newLeaveAtomId = atomIdMap.get(this.leaveAtomId as number);\n    return new SGroupAttachmentPoint(\n      newAtomId,\n      newLeaveAtomId,\n      this.attachmentId,\n    );\n  }\n\n  /**\n   * Trick: used for cloned struct for tooltips, for preview, for templates\n   *\n   * Why?\n   * Currently, tooltips are implemented with removing sgroups (wrong implementation)\n   * That's why we need to mark atoms as sgroup attachment points.\n   *\n   * If we change preview approach to flagged (option for showing sgroups without abbreviation),\n   * then we will be able to remove this hack.\n   */\n  convertToRGroupAttachmentPointForDisplayPurpose(attachedAtomId: number) {\n    return new RGroupAttachmentPoint(attachedAtomId, 'primary');\n  }\n}\n","const editorSettings = {\n  microModeScale: 40, // Angstroms To Pixels Factor\n  macroModeScale: 40, // Angstroms To Pixels Factor\n};\n\nexport function provideEditorSettings() {\n  return editorSettings;\n}\n","export const canvasSelector = '#polymer-editor-canvas';\nexport const drawnStructuresSelector = '.drawn-structures';\n","import _ from 'lodash';\n\nexport const notifyRenderComplete = _.debounce(() => {\n  const event = new Event('renderComplete');\n  window.dispatchEvent(event);\n}, 750);\n\nexport const notifyItemsToMergeInitializationComplete = () => {\n  const event = new Event('itemsToMergeInitializationComplete');\n  window.dispatchEvent(event);\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { zoom, select, ZoomTransform, ZoomBehavior, drag } from 'd3';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { canvasSelector, drawnStructuresSelector } from '../constants';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { clamp } from 'lodash';\nimport { notifyRenderComplete } from 'application/render/internal';\n\ninterface ScrollBar {\n  name: string;\n  offsetStart: number;\n  offsetEnd: number;\n  maxWidth: number;\n  maxHeight: number;\n  bar?: D3SvgElementSelection<SVGRectElement, void> | undefined;\n}\n\n// in percents\nconst AUTO_SCROLL_OFFSET_X = 10;\nconst AUTO_SCROLL_OFFSET_Y = 10;\n\nclass ZoomTool implements BaseTool {\n  public canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  public canvasWrapper: D3SvgElementSelection<SVGSVGElement, void>;\n  private zoom!: ZoomBehavior<SVGSVGElement, void> | null;\n  private zoomLevel: number;\n  private zoomTransform: ZoomTransform;\n  private resizeObserver: ResizeObserver | null = null;\n  drawingEntitiesManager: DrawingEntitiesManager;\n  private zoomEventHandlers: Array<(transform?) => void> = [];\n  private scrollBars!: {\n    horizontal: ScrollBar;\n    vertical: ScrollBar;\n  };\n\n  COLOR = '#a5afb9';\n  MIN_LENGTH = 40;\n  RADIUS = 2;\n  MARGIN = 5;\n  HORIZONTAL_DIST_TO_EDGE = 16;\n  VERTICAL_DIST_TO_EDGE = 4;\n  WIDTH = 4;\n  MINZOOMSCALE = 0.2;\n  MAXZOOMSCALE = 4;\n\n  // eslint-disable-next-line no-use-before-define\n  private static _instance: ZoomTool;\n  public static get instance() {\n    return ZoomTool._instance;\n  }\n\n  static initInstance(drawingEntitiesManager: DrawingEntitiesManager) {\n    ZoomTool._instance = new ZoomTool(drawingEntitiesManager);\n    return ZoomTool._instance;\n  }\n\n  private constructor(drawingEntitiesManager: DrawingEntitiesManager) {\n    this.canvasWrapper = select(canvasSelector);\n    this.canvas = select(drawnStructuresSelector);\n\n    this.zoomLevel = 1;\n    this.zoomTransform = new ZoomTransform(1, 0, 0);\n    this.drawingEntitiesManager = drawingEntitiesManager;\n\n    this.initActions();\n  }\n\n  initActions() {\n    this.zoom = zoom<SVGSVGElement, void>()\n      .scaleExtent([this.MINZOOMSCALE, this.MAXZOOMSCALE])\n      .wheelDelta(this.defaultWheelDelta)\n      .filter((e) => {\n        e.preventDefault();\n        if (e.ctrlKey && e.type === 'wheel') {\n          return true;\n        }\n        return false;\n      })\n      .on('zoom', this.zoomAction.bind(this))\n      .on('end', () => {\n        notifyRenderComplete();\n      });\n    this.canvasWrapper.call(this.zoom);\n\n    this.canvasWrapper.on('wheel', (event) => {\n      if (event.ctrlKey) {\n        event.preventDefault();\n      } else {\n        this.mouseWheeled(event);\n      }\n    });\n    this.initMenuZoom();\n  }\n\n  setZoom(zoomLevel: number) {\n    this.zoomLevel = zoomLevel;\n  }\n\n  getZoomLevel() {\n    return this.zoomLevel;\n  }\n\n  setZoomTransform(transform: ZoomTransform) {\n    this.zoomTransform = transform;\n  }\n\n  zoomAction({ transform }) {\n    this.canvas.attr('transform', transform);\n    this.zoomLevel = transform.k;\n    this.zoomTransform = transform;\n    this.drawScrollBars();\n    requestAnimationFrame(() => {\n      this.dispatchZoomEventHandlers(transform);\n    });\n  }\n\n  subscribeOnZoomEvent(zoomEventHandler: (transform?) => void) {\n    this.zoomEventHandlers.push(zoomEventHandler);\n  }\n\n  dispatchZoomEventHandlers(transform) {\n    this.zoomEventHandlers.forEach((zoomEventHandler) => {\n      zoomEventHandler(transform);\n    });\n  }\n\n  drawScrollBars() {\n    if (this.canvas.node() && this.canvasWrapper.node()) {\n      this.initScrollBars();\n      this.renderScrollBar(this.scrollBars.horizontal);\n      this.renderScrollBar(this.scrollBars.vertical);\n    }\n  }\n\n  renderScrollBar(scrollBar: ScrollBar) {\n    const hasOffset = scrollBar.offsetStart < 0 || scrollBar.offsetEnd < 0;\n    if (hasOffset) {\n      if (scrollBar.bar) {\n        this.updateScrollBarAttrs(scrollBar);\n      } else {\n        this.drawScrollBar(scrollBar);\n      }\n    } else {\n      scrollBar.bar?.remove();\n      scrollBar.bar = undefined;\n    }\n  }\n\n  drawScrollBar(scrollBar: ScrollBar) {\n    scrollBar.bar = this.canvasWrapper.append('rect');\n    const dragged = drag().on(\n      'drag',\n      this.dragged(scrollBar.name).bind(this),\n    ) as never;\n    scrollBar.bar?.call(dragged);\n    this.updateScrollBarAttrs(scrollBar);\n  }\n\n  updateScrollBarAttrs(scrollBar: ScrollBar) {\n    const { start, length } = this.calculateDynamicAttr(scrollBar);\n\n    if (scrollBar.name === 'horizontal') {\n      scrollBar.bar\n        ?.attr('x', start)\n        .attr('y', scrollBar.maxHeight - this.HORIZONTAL_DIST_TO_EDGE)\n        .attr('width', length)\n        .attr('height', this.WIDTH);\n    } else {\n      scrollBar.bar\n        ?.attr('x', scrollBar.maxHeight - this.VERTICAL_DIST_TO_EDGE)\n        .attr('y', start)\n        .attr('width', this.WIDTH)\n        .attr('height', length);\n    }\n\n    scrollBar.bar\n      ?.attr('rx', this.RADIUS)\n      .attr('draggable', true)\n      .attr('cursor', 'pointer')\n      .attr('stroke', this.COLOR)\n      .attr('fill', this.COLOR)\n      .attr('data-testid', scrollBar.name + '-bar');\n  }\n\n  calculateDynamicAttr(scrollBar: ScrollBar) {\n    const start = clamp(\n      -scrollBar.offsetStart,\n      this.MARGIN,\n      scrollBar.maxWidth - this.MIN_LENGTH - this.MARGIN,\n    );\n    const end =\n      scrollBar.maxWidth -\n      clamp(-scrollBar.offsetEnd, this.MARGIN, scrollBar.maxWidth);\n    const length = Math.max(end - start, this.MIN_LENGTH);\n    return { start, length };\n  }\n\n  dragged = (name: string) => (event) => {\n    if (name === 'horizontal') {\n      this.zoom?.translateBy(this.canvasWrapper, -event.dx, 0);\n    } else {\n      this.zoom?.translateBy(this.canvasWrapper, 0, -event.dy);\n    }\n  };\n\n  public scrollTo(position: Vec2) {\n    const canvasWrapperHeight =\n      this.canvasWrapper.node()?.height.baseVal.value || 0;\n\n    const canvasWrapperWidth =\n      this.canvasWrapper.node()?.width.baseVal.value || 0;\n\n    this.zoom?.translateTo(\n      this.canvasWrapper,\n      position.x +\n        canvasWrapperWidth / 2 -\n        (canvasWrapperWidth * AUTO_SCROLL_OFFSET_X) / 100,\n      position.y +\n        canvasWrapperHeight / 2 -\n        (canvasWrapperHeight * AUTO_SCROLL_OFFSET_Y) / 100,\n    );\n  }\n\n  mouseWheeled(event) {\n    const isShiftKeydown = event.shiftKey;\n    const boxNode = this.canvasWrapper.node();\n    if (boxNode && (event.deltaX || event.deltaY)) {\n      const x = -event.deltaX / this.zoomLevel;\n      const y = -event.deltaY / this.zoomLevel;\n      if (isShiftKeydown) {\n        this.zoom?.translateBy(this.canvasWrapper, x - y, 0);\n      } else {\n        this.zoom?.translateBy(this.canvasWrapper, x, y);\n      }\n    }\n  }\n\n  initScrollBars() {\n    const boundingBox = this.canvas.node()?.getBoundingClientRect() as DOMRect;\n    const wrapperBoundingBox = this.canvasWrapper\n      .node()\n      ?.getBoundingClientRect() as DOMRect;\n    const canvasWrapperHeight =\n      this.canvasWrapper.node()?.height.baseVal.value || 0;\n\n    const canvasWrapperWidth =\n      this.canvasWrapper.node()?.width.baseVal.value || 0;\n    this.scrollBars = {\n      horizontal: {\n        name: 'horizontal',\n        offsetStart: boundingBox.left - wrapperBoundingBox.left,\n        offsetEnd: wrapperBoundingBox.width - boundingBox.right,\n        maxWidth: canvasWrapperWidth,\n        maxHeight: canvasWrapperHeight,\n        bar: this.scrollBars?.horizontal?.bar,\n      },\n      vertical: {\n        name: 'vertical',\n        offsetStart: boundingBox.top - wrapperBoundingBox.top,\n        offsetEnd: wrapperBoundingBox.height - boundingBox.bottom,\n        maxWidth: canvasWrapperHeight,\n        maxHeight: canvasWrapperWidth,\n        bar: this.scrollBars?.vertical?.bar,\n      },\n    };\n  }\n\n  private get zoomStep() {\n    return 0.1;\n  }\n\n  public zoomIn(zoomStep = this.zoomStep) {\n    this.zoom?.scaleTo(this.canvasWrapper, this.zoomLevel + zoomStep);\n  }\n\n  public zoomOut(zoomStep = this.zoomStep) {\n    this.zoom?.scaleTo(this.canvasWrapper, this.zoomLevel - zoomStep);\n  }\n\n  public resetZoom() {\n    this.zoom?.transform(this.canvasWrapper, new ZoomTransform(1, 0, 0));\n  }\n\n  initMenuZoom() {\n    select('.zoom-in').on('click', () => {\n      this.zoomIn();\n    });\n    select('.zoom-out').on('click', () => {\n      this.zoomOut();\n    });\n    select('.zoom-reset').on('click', () => {\n      this.resetZoom();\n    });\n  }\n\n  observeCanvasResize = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.drawScrollBars();\n    });\n    this.resizeObserver.observe(this.canvasWrapper.node() as SVGSVGElement);\n  };\n\n  defaultWheelDelta(event) {\n    return (\n      -event.deltaY *\n      (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002)\n    );\n  }\n\n  scaleCoordinates(position: Vec2) {\n    const newX = this.zoomTransform.applyX(position.x);\n    const newY = this.zoomTransform.applyY(position.y);\n    return new Vec2(newX, newY);\n  }\n\n  invertZoom(position: Vec2) {\n    const newX = this.zoomTransform.invertX(position.x);\n    const newY = this.zoomTransform.invertY(position.y);\n    return new Vec2(newX, newY);\n  }\n\n  unzoomValue(value: number) {\n    return value / this.zoomLevel;\n  }\n\n  destroy() {\n    this.scrollBars.horizontal?.bar?.remove();\n    this.scrollBars.vertical?.bar?.remove();\n    this.resizeObserver?.unobserve(this.canvasWrapper.node() as SVGSVGElement);\n    this.zoom = null;\n    this.zoomEventHandlers = [];\n  }\n}\n\nexport default ZoomTool;\n","import { Vec2 } from 'domain/entities';\nimport { provideEditorSettings } from '../editorSettings';\nimport ZoomTool from '../tools/Zoom';\n/**\n * `model` -- The original coordinates of entities, namely angstroms\n * `canvas` -- The real coordinates used to draw entities\n * `view` -- The zoomed canvas coordinates\n */\nexport class Coordinates {\n  static canvasToModel(position: Vec2) {\n    const settings = provideEditorSettings();\n    return position.scaled(1 / settings.macroModeScale);\n  }\n\n  static viewToModel(position: Vec2) {\n    const settings = provideEditorSettings();\n    const pos = ZoomTool.instance.invertZoom(position);\n    return pos.scaled(1 / settings.macroModeScale);\n  }\n\n  static modelToView(position: Vec2) {\n    const settings = provideEditorSettings();\n    return ZoomTool.instance.scaleCoordinates(\n      position.scaled(settings.macroModeScale),\n    );\n  }\n\n  static modelToCanvas(position: Vec2) {\n    const settings = provideEditorSettings();\n    return position.scaled(settings.macroModeScale);\n  }\n\n  // convert the original coordinates to transformed coordinates after the d3 transformation\n  static canvasToView(position: Vec2) {\n    return ZoomTool.instance.scaleCoordinates(position);\n  }\n\n  // convert the transformed coordinates to coordinates before the d3 transformation\n  static viewToCanvas(position: Vec2) {\n    return ZoomTool.instance.invertZoom(position);\n  }\n}\n","import { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { provideEditorSettings } from 'application/editor/editorSettings';\nimport ZoomTool from 'application/editor/tools/Zoom';\nimport { select } from 'd3';\nimport {\n  canvasSelector,\n  drawnStructuresSelector,\n} from 'application/editor/constants';\n\nexport interface IBaseRenderer {\n  show(theme): void;\n  remove(): void;\n}\n\nexport abstract class BaseRenderer implements IBaseRenderer {\n  protected rootElement?: D3SvgElementSelection<SVGGElement, void>;\n\n  public bodyElement?: D3SvgElementSelection<SVGElement, this>;\n\n  protected hoverElement?: D3SvgElementSelection<\n    SVGUseElement & SVGGElement,\n    void\n  >;\n\n  protected hoverAreaElement?: D3SvgElementSelection<\n    SVGGElement | SVGLineElement,\n    void\n  >;\n\n  protected canvasWrapper: D3SvgElementSelection<SVGSVGElement, void>;\n\n  protected canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  protected constructor(public drawingEntity: DrawingEntity) {\n    this.canvasWrapper =\n      ZoomTool.instance?.canvasWrapper || select(canvasSelector);\n    this.canvas = ZoomTool.instance?.canvas || select(drawnStructuresSelector);\n  }\n\n  protected get editorSettings() {\n    return provideEditorSettings();\n  }\n\n  public get rootBBox() {\n    const rootNode = this.rootElement?.node();\n    if (!rootNode) return;\n\n    return rootNode.getBBox();\n  }\n\n  public get width() {\n    return this.rootBBox?.width || 0;\n  }\n\n  public get height() {\n    return this.rootBBox?.height || 0;\n  }\n\n  public get x() {\n    return this.rootBBox?.x || 0;\n  }\n\n  public get y() {\n    return this.rootBBox?.y || 0;\n  }\n\n  public abstract show(theme): void;\n  public abstract drawSelection(): void;\n  public abstract moveSelection(): void;\n  protected abstract appendHover(\n    hoverArea,\n  ): D3SvgElementSelection<SVGUseElement, void> | void;\n\n  protected abstract removeHover(): void;\n  protected abstract appendHoverAreaElement(): void;\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n  }\n\n  public redrawHover() {\n    if (this.drawingEntity.hovered) {\n      const hoverElement = this.appendHover(this.hoverAreaElement);\n      if (hoverElement) {\n        this.hoverElement = hoverElement;\n      }\n    } else {\n      this.removeHover();\n      this.hoverElement = undefined;\n    }\n  }\n\n  move() {}\n}\n","import { BaseRenderer } from 'application/render/renderers/internal';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities/vec2';\n\nexport class BaseSequenceRenderer extends BaseRenderer {\n  protected appendHover(\n    _hoverArea,\n  ): D3SvgElementSelection<SVGUseElement, void> | void {\n    return undefined;\n  }\n\n  protected appendHoverAreaElement(): void {}\n\n  drawSelection(): void {}\n\n  moveSelection(): void {}\n\n  protected removeHover(): void {}\n\n  show(_theme?): void {}\n\n  get center() {\n    return new Vec2(0, 0, 0);\n  }\n}\n","import { Vec2 } from 'domain/entities/vec2';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport assert from 'assert';\nimport { Coordinates } from 'application/editor/shared/coordinates';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nlet id = 0;\n\nexport abstract class DrawingEntity {\n  public selected = false;\n  public hovered = false;\n  public id = 0;\n  public baseRenderer?: BaseRenderer;\n\n  protected constructor(private _position: Vec2 = new Vec2(0, 0)) {\n    this._position = _position || new Vec2(0, 0);\n    this.id = id;\n    id++;\n  }\n\n  moveRelative(position: Vec2) {\n    this._position.x += position.x;\n    this._position.y += position.y;\n  }\n\n  public moveAbsolute(position: Vec2) {\n    this._position = position;\n  }\n\n  get position() {\n    return this._position;\n  }\n\n  public turnOnHover() {\n    this.hovered = true;\n  }\n\n  public turnOffHover() {\n    this.hovered = false;\n  }\n\n  public turnOnSelection() {\n    this.selected = true;\n  }\n\n  public turnOffSelection() {\n    this.selected = false;\n  }\n\n  public abstract get center(): Vec2;\n\n  public selectIfLocatedInRectangle(\n    rectangleTopLeftPoint: Vec2,\n    rectangleBottomRightPoint: Vec2,\n    isPreviousSelected = false,\n    shiftKey = false,\n  ) {\n    assert(this.baseRenderer);\n    const prevSelectedValue = this.selected;\n    let center = Coordinates.modelToCanvas(this.center);\n    if (this.baseRenderer instanceof BaseSequenceRenderer) {\n      center = this.baseRenderer.center;\n    }\n    const locatedInRectangle =\n      rectangleBottomRightPoint.x > center.x &&\n      rectangleBottomRightPoint.y > center.y &&\n      rectangleTopLeftPoint.x < center.x &&\n      rectangleTopLeftPoint.y < center.y;\n    if ((shiftKey && !isPreviousSelected) || !shiftKey) {\n      if (locatedInRectangle) {\n        this.turnOnSelection();\n      } else {\n        this.turnOffSelection();\n      }\n    }\n\n    return prevSelectedValue !== this.selected;\n  }\n\n  public setBaseRenderer(renderer: BaseRenderer) {\n    this.baseRenderer = renderer;\n  }\n\n  public get isPartOfRna() {\n    return false;\n  }\n}\n","import {\n  BaseMonomer,\n  Chem,\n  Peptide,\n  Phosphate,\n  RNABase,\n  Struct,\n  Sugar,\n} from 'domain/entities';\nimport { IKetAttachmentPoint } from 'application/formatters/types/ket';\nimport { D3SvgElementSelection } from 'application/render/types';\n\nexport type MonomerColorScheme = {\n  regular: string;\n  hover: string;\n};\n\nexport type MonomerItemType = {\n  label: string;\n  colorScheme?: MonomerColorScheme;\n  favorite?: boolean;\n  struct: Struct;\n  props: {\n    id?: string;\n    MonomerNaturalAnalogCode: string;\n    MonomerName: string;\n    MonomerFullName?: string;\n    Name: string;\n    // TODO determine whenever these props are optional or not\n    BranchMonomer?: string;\n    MonomerCaps?: { [key: string]: string };\n    MonomerCode?: string;\n    MonomerType?: string;\n    MonomerClass?: string;\n    isMicromoleculeFragment?: boolean;\n  };\n  attachmentPoints?: IKetAttachmentPoint[];\n  seqId?: number;\n};\n\nexport enum AttachmentPointName {\n  R1 = 'R1',\n  R2 = 'R2',\n  R3 = 'R3',\n  R4 = 'R4',\n  R5 = 'R5',\n  R6 = 'R6',\n  R7 = 'R7',\n  R8 = 'R8',\n}\n\nexport const attachmentPointNames = [\n  'R1',\n  'R2',\n  'R3',\n  'R4',\n  'R5',\n  'R6',\n  'R7',\n  'R8',\n];\n\nexport type LeavingGroup = 'O' | 'OH' | 'H';\n\nexport type AttachmentPointConstructorParams = {\n  rootElement: D3SvgElementSelection<SVGGElement, void>;\n  monomer: BaseMonomer;\n  bodyWidth: number;\n  bodyHeight: number;\n  canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  attachmentPointName: AttachmentPointName;\n  isUsed: boolean;\n  isPotentiallyUsed: boolean;\n  angle: number;\n  isSnake: boolean;\n};\n\nexport type ConcreteMonomer = Peptide | Sugar | RNABase | Phosphate | Chem;\n","import { Coordinates as CoordinatesTool } from 'application/editor/shared/coordinates';\nimport { BaseMonomer } from 'domain/entities';\nimport { Vec2 } from 'domain/entities/vec2';\n\nexport type Coordinates = { x: number; y: number };\n\n// eslint-disable-next-line camelcase\nexport function canvasToMonomerCoordinates(\n  coordinatesOnCanvas: Coordinates,\n  centerOFMonomer: Coordinates,\n  monomerWidth: number,\n  monomerHeight: number,\n) {\n  const zeroPointCoord = {\n    x: centerOFMonomer.x - monomerWidth / 2,\n    y: centerOFMonomer.y - monomerHeight / 2,\n  };\n\n  const monomerCoord = {\n    x: coordinatesOnCanvas.x - zeroPointCoord.x,\n    y: coordinatesOnCanvas.y - zeroPointCoord.y,\n  };\n\n  return monomerCoord;\n}\n\nexport function findLabelPoint(\n  pointOnBorder: Coordinates,\n  angle: number,\n  lineLength: number,\n  lineOffset: number,\n  labelSize: { x: number; y: number },\n  isUsed: boolean,\n) {\n  // based on https://ru.stackoverflow.com/a/1442905\n\n  const angleRadians = Vec2.degrees_to_radians(angle);\n\n  const pointOfAttachment = Vec2.findSecondPoint(\n    pointOnBorder,\n    lineLength,\n    angleRadians,\n  );\n\n  // find vector between pointOnBorder and pointOfAttachment\n\n  const attachmentVector = {\n    x: pointOfAttachment.x - pointOnBorder.x,\n    y: pointOfAttachment.y - pointOnBorder.y,\n  };\n\n  // rotate this vector at 90 degrees - change x and y, then make one negative\n  const rotatedVector = { x: -attachmentVector.y, y: attachmentVector.x };\n\n  // normalize vector\n  const normalizedVector = {\n    x: rotatedVector.x / lineLength,\n    y: rotatedVector.y / lineLength,\n  };\n\n  const normalizedAttachmentVector = {\n    x: attachmentVector.x / lineLength,\n    y: attachmentVector.y / lineLength,\n  };\n\n  // find vector for Label, using normalized vector and length\n\n  let addedOrtogonalOffset = 0;\n  const addedParallelOffset =\n    lineOffset + Math.max(labelSize.x, labelSize.y) + 1;\n  if (isUsed) {\n    if (angle >= -270 && angle <= 0) {\n      addedOrtogonalOffset = 5;\n    } else if (angle >= -360 && angle < -270) {\n      addedOrtogonalOffset = -5;\n    }\n  }\n\n  const ortogonalOffset = {\n    x: normalizedVector.x * addedOrtogonalOffset,\n    y: normalizedVector.y * addedOrtogonalOffset,\n  };\n\n  const parallelOffset = {\n    x: normalizedAttachmentVector.x * addedParallelOffset,\n    y: normalizedAttachmentVector.y * addedParallelOffset,\n  };\n\n  // add this vector to point of attachment\n  const labelCoordinates = {\n    x: pointOfAttachment.x + ortogonalOffset.x + parallelOffset.x - labelSize.x,\n    y: pointOfAttachment.y + ortogonalOffset.y + parallelOffset.y + labelSize.y,\n  };\n\n  return [labelCoordinates, pointOfAttachment];\n}\n\nexport function getSearchFunction(\n  initialAngle: number,\n  canvasOffset: Coordinates,\n  monomer: BaseMonomer,\n) {\n  return function findPointOnMonomerBorder(\n    coordStart: Coordinates,\n    length: number,\n    angle = initialAngle,\n  ) {\n    const angleRadians = Vec2.degrees_to_radians(angle);\n\n    const secondPoint = Vec2.findSecondPoint(coordStart, length, angleRadians);\n\n    const diff = Vec2.diff(\n      new Vec2(coordStart.x, coordStart.y),\n      new Vec2(secondPoint.x, secondPoint.y),\n    );\n\n    // exit recursion\n    if (diff.length() < 1.01) {\n      return secondPoint;\n    }\n\n    const newLength = Math.round(diff.length() / 1.4);\n    const newCoordStart = { x: secondPoint.x, y: secondPoint.y };\n\n    const zoomedCoordinateOfSecondPoint = CoordinatesTool.canvasToView(\n      new Vec2(secondPoint),\n    );\n\n    const newPointCoord = {\n      x: Math.round(zoomedCoordinateOfSecondPoint.x) + canvasOffset.x,\n      y: Math.round(zoomedCoordinateOfSecondPoint.y) + canvasOffset.y,\n    };\n    let newAngle: number = initialAngle;\n\n    const elementsAtPoint = document.elementsFromPoint(\n      newPointCoord.x,\n      newPointCoord.y,\n    );\n\n    const isCurrentMonomerAtNewPoint = elementsAtPoint.some(\n      (element) => element === monomer.renderer?.bodyElement?.node(),\n    );\n    if (isCurrentMonomerAtNewPoint) {\n      newAngle = initialAngle;\n    } else {\n      newAngle = initialAngle - 180;\n    }\n\n    return findPointOnMonomerBorder(newCoordStart, newLength, newAngle);\n  };\n}\n\nexport const anglesToSector = {\n  '45': {\n    min: 23,\n    max: 68,\n    center: 45,\n  },\n  '90': {\n    min: 68,\n    max: 113,\n    center: 90,\n  },\n  '135': {\n    min: 113,\n    max: 148,\n    center: 135,\n  },\n  '180': {\n    min: 148,\n    max: 203,\n    center: 180,\n  },\n  '225': {\n    min: 203,\n    max: 248,\n    center: 225,\n  },\n  '270': {\n    min: 248,\n    max: 293,\n    center: 270,\n  },\n  '315': {\n    min: 293,\n    max: 228,\n    center: 315,\n  },\n  '360': {\n    min: 338,\n    max: 360,\n    center: 360,\n  },\n  '0': {\n    min: 0,\n    max: 23,\n    center: 0,\n  },\n};\n\nexport enum attachmentPointNumberToAngle {\n  'R1' = 0,\n  'R2' = 180,\n  'R3' = 90,\n  'R4' = 270,\n  'R5' = 45,\n  'R6' = 135,\n  'R7' = 315,\n  'R8' = 225,\n}\n\nexport const sectorsList = [45, 90, 135, 180, 225, 270, 315, 0, 360];\n\nexport function checkFor0and360(sectorsList: number[]) {\n  if (!sectorsList.includes(0) && sectorsList.includes(360)) {\n    return sectorsList.filter((item) => item !== 360);\n  }\n  if (!sectorsList.includes(360) && sectorsList.includes(0)) {\n    return sectorsList.filter((item) => item !== 0);\n  }\n  return sectorsList;\n}\n\nexport function convertAttachmentPointNumberToLabel(\n  attachmentPointNumber: number,\n) {\n  let attachmentPointLabel = '';\n  for (let rgi = 0; rgi < 32; rgi++) {\n    if (attachmentPointNumber & (1 << rgi)) {\n      attachmentPointLabel = 'R' + (rgi + 1).toString();\n    }\n  }\n  return attachmentPointLabel;\n}\n","import { DrawingEntity } from './DrawingEntity';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { convertAttachmentPointNumberToLabel } from 'domain/helpers/attachmentPointCalculations';\nimport assert from 'assert';\nimport {\n  IKetAttachmentPoint,\n  IKetAttachmentPointType,\n} from 'application/formatters/types/ket';\nimport { Bond } from 'domain/entities/bond';\nimport { isNumber } from 'lodash';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport abstract class BaseMonomer extends DrawingEntity {\n  public renderer?: BaseMonomerRenderer | BaseSequenceItemRenderer = undefined;\n  public attachmentPointsToBonds: Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > = {};\n\n  public chosenFirstAttachmentPointForBond: AttachmentPointName | null;\n  public potentialSecondAttachmentPointForBond: AttachmentPointName | null;\n  public chosenSecondAttachmentPointForBond: AttachmentPointName | null;\n\n  public potentialAttachmentPointsToBonds: {\n    [key: string]: PolymerBond | null | undefined;\n  } = {};\n\n  public attachmentPointsVisible = false;\n  public monomerItem: MonomerItemType;\n  public isMonomerInRnaChainRow = false;\n\n  constructor(monomerItem: MonomerItemType, _position?: Vec2) {\n    super(_position);\n\n    this.monomerItem = { ...monomerItem };\n    if (!this.monomerItem.props.isMicromoleculeFragment) {\n      this.attachmentPointsToBonds = this.getAttachmentPointDict();\n      this.potentialAttachmentPointsToBonds = this.getAttachmentPointDict();\n      this.monomerItem.attachmentPoints =\n        this.monomerItem.attachmentPoints ||\n        this.getMonomerDefinitionAttachmentPoints();\n    }\n    this.chosenFirstAttachmentPointForBond = null;\n    this.potentialSecondAttachmentPointForBond = null;\n    this.chosenSecondAttachmentPointForBond = null;\n  }\n\n  public get label() {\n    return this.monomerItem.label;\n  }\n\n  public get center() {\n    return this.position;\n  }\n\n  public get listOfAttachmentPoints() {\n    const maxAttachmentPointNumber = this.getMaxAttachmentPointNumber();\n    const attachmentPointList: string[] = [];\n    for (let i = 1; i <= maxAttachmentPointNumber; i++) {\n      if (this.attachmentPointsToBonds[`R${i}`] !== undefined) {\n        attachmentPointList.push(`R${i}`);\n      }\n    }\n    return attachmentPointList;\n  }\n\n  public turnOnAttachmentPointsVisibility() {\n    this.attachmentPointsVisible = true;\n  }\n\n  public turnOffAttachmentPointsVisibility() {\n    this.attachmentPointsVisible = false;\n  }\n\n  public setChosenFirstAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.chosenFirstAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setChosenSecondAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.chosenSecondAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setPotentialSecondAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.potentialSecondAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setPotentialBond(\n    attachmentPoint: string | undefined,\n    potentialBond?: PolymerBond | null,\n  ) {\n    if (attachmentPoint !== undefined) {\n      this.potentialAttachmentPointsToBonds[attachmentPoint] = potentialBond;\n    }\n  }\n\n  public getAttachmentPointByBond(\n    bond: PolymerBond,\n  ): AttachmentPointName | undefined {\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[attachmentPointName] === bond) {\n        return attachmentPointName as AttachmentPointName;\n      }\n    }\n\n    return undefined;\n  }\n\n  public abstract getValidSourcePoint(\n    monomer?: BaseMonomer,\n  ): AttachmentPointName | undefined;\n\n  public abstract getValidTargetPoint(monomer: BaseMonomer): string | undefined;\n\n  public getPotentialAttachmentPointByBond(bond: PolymerBond) {\n    for (const attachmentPointName in this.potentialAttachmentPointsToBonds) {\n      if (this.potentialAttachmentPointsToBonds[attachmentPointName] === bond) {\n        return attachmentPointName;\n      }\n    }\n\n    return undefined;\n  }\n\n  public get firstFreeAttachmentPoint() {\n    const maxAttachmentPointNumber = this.getMaxAttachmentPointNumber();\n    for (let i = 1; i <= maxAttachmentPointNumber; i++) {\n      const attachmentPoint = `R${i}` as AttachmentPointName;\n      if (\n        this.hasAttachmentPoint(attachmentPoint) &&\n        this.attachmentPointsToBonds[attachmentPoint] === null\n      ) {\n        return attachmentPoint;\n      }\n    }\n\n    return undefined;\n  }\n\n  private getMaxAttachmentPointNumber() {\n    let maxAttachmentPointNumber = 1;\n    for (const attachmentPoint in this.attachmentPointsToBonds) {\n      const match = attachmentPoint.match(/R(\\d+)/);\n      if (match) {\n        const pointNumber = parseInt(match[1]);\n        if (!isNaN(pointNumber) && pointNumber > maxAttachmentPointNumber) {\n          maxAttachmentPointNumber = pointNumber;\n        }\n      }\n    }\n    return maxAttachmentPointNumber;\n  }\n\n  public get R1AttachmentPoint(): AttachmentPointName | undefined {\n    if (this.attachmentPointsToBonds.R1 === null) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public get R2AttachmentPoint(): AttachmentPointName | undefined {\n    if (this.attachmentPointsToBonds.R2 === null) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public get hasFreeAttachmentPoint() {\n    return Boolean(this.firstFreeAttachmentPoint);\n  }\n\n  public isAttachmentPointExistAndFree(attachmentPoint: AttachmentPointName) {\n    return (\n      this.hasAttachmentPoint(attachmentPoint) &&\n      !this.isAttachmentPointUsed(attachmentPoint)\n    );\n  }\n\n  public setRenderer(renderer: BaseMonomerRenderer) {\n    super.setBaseRenderer(renderer as BaseRenderer);\n    this.renderer = renderer;\n  }\n\n  public forEachBond(\n    callback: (\n      polymerBond: PolymerBond,\n      attachmentPointName: AttachmentPointName,\n    ) => void,\n  ) {\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[attachmentPointName]) {\n        callback(\n          this.attachmentPointsToBonds[attachmentPointName],\n          attachmentPointName as AttachmentPointName,\n        );\n      }\n    }\n  }\n\n  public setBond(attachmentPointName: string, bond: PolymerBond) {\n    this.attachmentPointsToBonds[attachmentPointName] = bond;\n  }\n\n  public unsetBond(attachmentPointName: string) {\n    this.attachmentPointsToBonds[attachmentPointName] = null;\n  }\n\n  public get hasBonds() {\n    let hasBonds = false;\n    for (const bondName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[bondName]) {\n        hasBonds = true;\n      }\n    }\n    return hasBonds;\n  }\n\n  public hasPotentialBonds() {\n    return Object.values(this.potentialAttachmentPointsToBonds).some(\n      (bond) => !!bond,\n    );\n  }\n\n  public getPotentialBond(attachmentPointName: string) {\n    return this.potentialAttachmentPointsToBonds[attachmentPointName];\n  }\n\n  public removeBond(polymerBond: PolymerBond) {\n    const attachmentPointName = this.getAttachmentPointByBond(polymerBond);\n    if (!attachmentPointName) return;\n    this.unsetBond(attachmentPointName);\n  }\n\n  public removePotentialBonds(clearSelectedPoints = false) {\n    if (clearSelectedPoints) {\n      this.chosenFirstAttachmentPointForBond = null;\n      this.chosenSecondAttachmentPointForBond = null;\n      this.potentialSecondAttachmentPointForBond = null;\n    }\n\n    for (const attachmentPointName in this.potentialAttachmentPointsToBonds) {\n      this.potentialAttachmentPointsToBonds[attachmentPointName] = null;\n    }\n  }\n\n  public get availableAttachmentPointForBondEnd() {\n    if (this.chosenSecondAttachmentPointForBond) {\n      return this.chosenSecondAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public hasAttachmentPoint(attachmentPointName: AttachmentPointName) {\n    return this.attachmentPointsToBonds[attachmentPointName] !== undefined;\n  }\n\n  public get usedAttachmentPointsNamesList() {\n    const list: AttachmentPointName[] = [];\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (\n        this.isAttachmentPointUsed(attachmentPointName as AttachmentPointName)\n      ) {\n        list.push(attachmentPointName as AttachmentPointName);\n      }\n    }\n    return list;\n  }\n\n  public get unUsedAttachmentPointsNamesList() {\n    const list: AttachmentPointName[] = [];\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (\n        !this.isAttachmentPointUsed(attachmentPointName as AttachmentPointName)\n      ) {\n        list.push(attachmentPointName as AttachmentPointName);\n      }\n    }\n    return list;\n  }\n\n  public getBondByAttachmentPoint(attachmentPointName: AttachmentPointName) {\n    return this.attachmentPointsToBonds[attachmentPointName];\n  }\n\n  public getPotentialBondByAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return this.potentialAttachmentPointsToBonds[attachmentPointName];\n  }\n\n  public isAttachmentPointUsed(attachmentPointName: AttachmentPointName) {\n    return Boolean(this.getBondByAttachmentPoint(attachmentPointName));\n  }\n\n  public isAttachmentPointPotentiallyUsed(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return Boolean(this.getPotentialBondByAttachmentPoint(attachmentPointName));\n  }\n\n  private getAttachmentPointDict(): Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > {\n    if (this.monomerItem.attachmentPoints) {\n      const { attachmentPointDictionary } =\n        BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n          this.monomerItem.attachmentPoints,\n        );\n      return attachmentPointDictionary;\n    } else {\n      return this.getAttachmentPointDictFromAtoms();\n    }\n  }\n\n  public static getAttachmentPointDictFromMonomerDefinition(\n    attachmentPoints: IKetAttachmentPoint[],\n  ): {\n    attachmentPointDictionary: Partial<\n      Record<AttachmentPointName, PolymerBond | null>\n    >;\n    attachmentPointsList: AttachmentPointName[];\n  } {\n    const attachmentPointDictionary = {};\n    const attachmentPointsList: AttachmentPointName[] = [];\n    const attachmentPointTypeToNumber: {\n      [key in IKetAttachmentPointType]: (\n        attachmentPointNumber?: number,\n      ) => number;\n    } = {\n      left: () => 1,\n      right: () => 2,\n      side: (attachmentPointNumber) => {\n        assert(attachmentPointNumber);\n        return (\n          attachmentPointNumber +\n          Number(!('R1' in attachmentPointDictionary)) +\n          Number(!('R2' in attachmentPointDictionary))\n        );\n      },\n    };\n    attachmentPoints.forEach((attachmentPoint, attachmentPointIndex) => {\n      const attachmentPointNumber = attachmentPointIndex + 1;\n      let calculatedAttachmentPointNumber;\n      if (attachmentPoint.type) {\n        const getLabelByTypeAction =\n          attachmentPointTypeToNumber[attachmentPoint.type];\n        calculatedAttachmentPointNumber =\n          typeof getLabelByTypeAction === 'function'\n            ? attachmentPointTypeToNumber[attachmentPoint.type](\n                attachmentPointNumber,\n              )\n            : attachmentPointNumber;\n      } else {\n        calculatedAttachmentPointNumber = attachmentPointNumber;\n      }\n      const calculatedLabel =\n        attachmentPoint.label || `R${calculatedAttachmentPointNumber}`;\n      attachmentPointDictionary[calculatedLabel] = null;\n      attachmentPointsList.push(calculatedLabel as AttachmentPointName);\n    });\n    return { attachmentPointDictionary, attachmentPointsList };\n  }\n\n  public get attachmentPointNumberToType() {\n    return {\n      1: 'left',\n      2: 'right',\n      moreThanTwo: 'side',\n    };\n  }\n\n  private getMonomerDefinitionAttachmentPoints() {\n    const monomerDefinitionAttachmentPoints: IKetAttachmentPoint[] = [];\n    this.leavingGroupsAtoms.forEach((leavingGroupsAtom) => {\n      const bondId = this.monomerItem.struct.bonds.find((_, bond) => {\n        return (\n          bond.begin === leavingGroupsAtom.id ||\n          bond.end === leavingGroupsAtom.id\n        );\n      });\n      let attachmentAtomId: number;\n      let leavingGroupsAtomId: number | undefined;\n\n      if (isNumber(bondId)) {\n        const bond = this.monomerItem.struct.bonds.get(bondId) as Bond;\n        attachmentAtomId =\n          bond.begin === leavingGroupsAtom.id ? bond.end : bond.begin;\n        leavingGroupsAtomId = leavingGroupsAtom.id;\n      } else {\n        attachmentAtomId = leavingGroupsAtom.id;\n      }\n\n      monomerDefinitionAttachmentPoints.push({\n        attachmentAtom: attachmentAtomId,\n        leavingGroup: {\n          atoms: leavingGroupsAtomId ? [leavingGroupsAtomId] : [],\n        },\n        type:\n          this.attachmentPointNumberToType[leavingGroupsAtom.rglabel] ||\n          this.attachmentPointNumberToType.moreThanTwo,\n      });\n    });\n    return monomerDefinitionAttachmentPoints;\n  }\n\n  get leavingGroupsAtoms() {\n    const leavingGroupsAtoms = this.monomerItem.struct.atoms.filter(\n      (_, value) => {\n        return Boolean(value.rglabel);\n      },\n    );\n    const leavingGroupsAtomsArray: { id: number; rglabel: number }[] = [];\n    leavingGroupsAtoms.forEach((attachmentAtom, attachmentAtomId) => {\n      leavingGroupsAtomsArray.push({\n        id: attachmentAtomId,\n        rglabel: Number(attachmentAtom.rglabel),\n      });\n    });\n    leavingGroupsAtomsArray.sort((atom1, atom2) =>\n      Number(atom1.rglabel) > Number(atom2.rglabel) ? 1 : -1,\n    );\n    return leavingGroupsAtomsArray;\n  }\n\n  public getAttachmentPointDictFromAtoms(): Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > {\n    const attachmentPointNameToBond = {};\n\n    this.leavingGroupsAtoms.forEach(({ rglabel }, _) => {\n      const label = convertAttachmentPointNumberToLabel(Number(rglabel));\n      attachmentPointNameToBond[label] = null;\n    });\n\n    return attachmentPointNameToBond;\n  }\n\n  public get startBondAttachmentPoint() {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    if (this.attachmentPointsToBonds.R2 === null) {\n      return 'R2';\n    }\n\n    if (this.attachmentPointsToBonds.R1 === null) {\n      return 'R1';\n    }\n\n    return this.firstFreeAttachmentPoint;\n  }\n\n  abstract get SubChainConstructor():\n    | typeof RnaSubChain\n    | typeof ChemSubChain\n    | typeof PhosphateSubChain\n    | typeof PeptideSubChain;\n\n  public isMonomerTypeDifferentForChaining(\n    monomerToChain: SubChainNode | BaseMonomer,\n  ) {\n    return this.SubChainConstructor !== monomerToChain.SubChainConstructor;\n  }\n\n  public get isPartOfRna() {\n    return false;\n  }\n}\n","import { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PolymerBond } from '../PolymerBond';\n\nexport class BaseSubChain {\n  public nodes: Array<SubChainNode> = [];\n  public bonds: Array<PolymerBond> = [];\n\n  constructor() {}\n\n  public get lastNode() {\n    return this.nodes[this.nodes.length - 1];\n  }\n\n  public get firstNode() {\n    return this.nodes[0];\n  }\n\n  public add(node: SubChainNode) {\n    this.nodes.push(node);\n  }\n\n  public get length() {\n    return this.nodes.length;\n  }\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class PeptideSubChain extends BaseSubChain {}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class ChemSubChain extends BaseSubChain {}\n","import { BaseMonomer } from './BaseMonomer';\nimport { AttachmentPointName } from 'domain/types';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\n\nexport class Peptide extends BaseMonomer {\n  public getValidSourcePoint(secondMonomer?: BaseMonomer) {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n    if (secondMonomer?.potentialSecondAttachmentPointForBond) {\n      if (\n        secondMonomer?.potentialSecondAttachmentPointForBond ===\n          AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      }\n      if (\n        secondMonomer?.potentialSecondAttachmentPointForBond ===\n          AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      }\n      return;\n    }\n    if (\n      (!secondMonomer ||\n        secondMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1)) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n    if (\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      secondMonomer?.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n    if (firstMonomer?.chosenFirstAttachmentPointForBond) {\n      if (\n        firstMonomer?.chosenFirstAttachmentPointForBond ===\n          AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      }\n      if (\n        firstMonomer?.chosenFirstAttachmentPointForBond ===\n          AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      }\n      return;\n    }\n    if (\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      firstMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R1;\n    }\n    if (\n      firstMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return PeptideSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\n\nexport class Chem extends BaseMonomer {\n  public getValidSourcePoint(monomer?: BaseMonomer) {\n    return Peptide.prototype.getValidSourcePoint.call(this, monomer);\n  }\n\n  public getValidTargetPoint(monomer: BaseMonomer) {\n    return Peptide.prototype.getValidTargetPoint.call(this, monomer);\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\n\nexport class RNABase extends BaseMonomer {\n  public getValidSourcePoint() {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public getValidTargetPoint() {\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public get isPartOfRna(): boolean {\n    return (\n      this.attachmentPointsToBonds.R1?.getAnotherMonomer(this) instanceof Sugar\n    );\n  }\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class PhosphateSubChain extends BaseSubChain {}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class RnaSubChain extends BaseSubChain {}\n","import { BaseMonomer } from './BaseMonomer';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { Vec2 } from './vec2';\nimport { Sugar } from './Sugar';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\n\nexport class Phosphate extends BaseMonomer {\n  constructor(monomerItem: MonomerItemType, _position?: Vec2) {\n    super(monomerItem, _position);\n  }\n\n  public getValidSourcePoint(secondMonomer: BaseMonomer) {\n    return this.getValidPoint(\n      secondMonomer,\n      secondMonomer.potentialSecondAttachmentPointForBond,\n    );\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    // same implementation for both source and target attachment points\n    return this.getValidPoint(\n      firstMonomer,\n      firstMonomer.chosenFirstAttachmentPointForBond,\n    );\n  }\n\n  private getValidPoint(\n    otherMonomer: BaseMonomer,\n    potentialPointOnOther: string | null,\n  ) {\n    // If we chose specific start AP on this monomer, return it\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n\n    // If we want to choose specific end AP on this monomer, return it\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n\n    // If this is the only available AP on this monomer, return it\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n\n    // If other monomer is not a Sugar, we want to open modal\n    if (!(otherMonomer instanceof Sugar)) {\n      return;\n    }\n    // If we chose a specific AP on other monomer, we want to determine the correct AP on this one\n    if (potentialPointOnOther) {\n      if (\n        potentialPointOnOther === AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      } else if (\n        potentialPointOnOther !== AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      } else {\n        return;\n      }\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    if (\n      !otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PhosphateSubChain, RnaSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n\n  public get SubChainConstructor() {\n    return PhosphateSubChain;\n  }\n\n  get isPartOfRna() {\n    const previousMonomer =\n      this.attachmentPointsToBonds.R1?.getAnotherMonomer(this);\n    const isPreviousMonomerSugar = previousMonomer instanceof Sugar;\n    const isSugarConnectedToBase =\n      previousMonomer?.attachmentPointsToBonds.R3?.getAnotherMonomer(\n        previousMonomer,\n      ) instanceof RNABase;\n    const nextMonomer =\n      this.attachmentPointsToBonds.R2?.getAnotherMonomer(this);\n    const isNextMonomerRna = nextMonomer?.isPartOfRna;\n\n    // isNextMonomerRna used here because we need to interpret last phosphate of rna chain\n    // as not a part of nucleoTide but as phosphate connected to nucleoSide\n    return isPreviousMonomerSugar && isSugarConnectedToBase && isNextMonomerRna;\n  }\n}\n","import { BaseMonomer } from './BaseMonomer';\nimport { RNABase } from './RNABase';\nimport { Phosphate } from './Phosphate';\nimport { AttachmentPointName } from 'domain/types';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\n\nexport class Sugar extends BaseMonomer {\n  public getValidSourcePoint(secondMonomer: BaseMonomer) {\n    return this.getValidPoint(\n      secondMonomer,\n      secondMonomer.potentialSecondAttachmentPointForBond,\n    );\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    // same implementation for both source and target attachment points\n    return this.getValidPoint(\n      firstMonomer,\n      firstMonomer.chosenFirstAttachmentPointForBond,\n    );\n  }\n\n  private getValidPoint(\n    otherMonomer: BaseMonomer,\n    potentialPointOnOther: string | null,\n  ) {\n    // If we chose specific start AP on this monomer, return it\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    // If we want to choose specific end AP on this monomer, return it\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    // If this is the only available AP on this monomer, return it\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n\n    // If other monomer is neither a Phosphate nor RNABase, open modal\n    if (\n      !(otherMonomer instanceof Phosphate) &&\n      !(otherMonomer instanceof RNABase)\n    ) {\n      return;\n    }\n\n    // If other monomer is RNABase, attach it to R3 or open modal\n    if (otherMonomer instanceof RNABase) {\n      if (this.isAttachmentPointExistAndFree(AttachmentPointName.R3)) {\n        return AttachmentPointName.R3;\n      } else return;\n    }\n\n    // If we chose a specific AP on some Phosphate, we want to determine the correct AP on this Sugar\n    if (potentialPointOnOther) {\n      if (\n        potentialPointOnOther === AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      } else if (\n        potentialPointOnOther !== AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      } else {\n        return;\n      }\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    if (\n      !otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return RnaSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PhosphateSubChain, RnaSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n\n  public get isPartOfRna(): boolean {\n    return (\n      this.attachmentPointsToBonds.R3?.getAnotherMonomer(this) instanceof\n      RNABase\n    );\n  }\n}\n","export enum Axis {\n  x = 'x',\n  y = 'y',\n  z = 'z',\n}\n\nexport type Axises = 'x' | 'y' | 'z';\n","import {\n  BaseMonomer,\n  Peptide,\n  Phosphate,\n  RNABase,\n  Sugar,\n} from 'domain/entities';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\n\nexport function getMonomerUniqueKey(monomer: MonomerItemType) {\n  return `${monomer.props.MonomerName}___${monomer.props.Name}`;\n}\n\nexport function checkIsR2R1Connection(\n  monomer: BaseMonomer,\n  nextMonomer: BaseMonomer,\n) {\n  return (\n    nextMonomer.attachmentPointsToBonds.R1?.getAnotherMonomer(nextMonomer) ===\n    monomer\n  );\n}\n\nexport function getNextMonomerInChain(\n  monomer?: BaseMonomer,\n  firstMonomer?: BaseMonomer | null,\n) {\n  if (!monomer) return undefined;\n\n  const r2PolymerBond = monomer.attachmentPointsToBonds.R2;\n  const nextMonomer = r2PolymerBond?.getAnotherMonomer(monomer);\n\n  if (nextMonomer === firstMonomer && r2PolymerBond) return undefined;\n\n  return r2PolymerBond &&\n    nextMonomer?.getAttachmentPointByBond(r2PolymerBond) ===\n      AttachmentPointName.R1\n    ? nextMonomer\n    : undefined;\n}\n\nexport function getRnaBaseFromSugar(monomer?: BaseMonomer) {\n  if (!monomer) return undefined;\n  const r3PolymerBond = monomer.attachmentPointsToBonds.R3;\n  const r3ConnectedMonomer = r3PolymerBond?.getAnotherMonomer(monomer);\n\n  return r3ConnectedMonomer instanceof RNABase ? r3ConnectedMonomer : undefined;\n}\n\nexport function getSugarFromRnaBase(monomer?: BaseMonomer) {\n  if (!monomer) return undefined;\n  const r1PolymerBond = monomer.attachmentPointsToBonds.R1;\n  const r1ConnectedMonomer = r1PolymerBond?.getAnotherMonomer(monomer);\n\n  return r1ConnectedMonomer instanceof Sugar ? r1ConnectedMonomer : undefined;\n}\n\nexport function getPhosphateFromSugar(monomer?: BaseMonomer) {\n  if (!monomer) return undefined;\n  const nextMonomerInChain = getNextMonomerInChain(monomer);\n\n  return nextMonomerInChain instanceof Phosphate\n    ? nextMonomerInChain\n    : undefined;\n}\n\nexport function isMonomerBeginningOfChain(\n  monomer: BaseMonomer,\n  MonomerTypes: Array<typeof Peptide | typeof Phosphate | typeof Sugar>,\n) {\n  const r1PolymerBond = monomer.attachmentPointsToBonds.R1;\n  const previousMonomer = r1PolymerBond?.getAnotherMonomer(monomer);\n  const isPreviousMonomerPartOfChain =\n    previousMonomer &&\n    !MonomerTypes.some((MonomerType) => previousMonomer instanceof MonomerType);\n  const previousConnectionNotR2 =\n    r1PolymerBond &&\n    previousMonomer?.getAttachmentPointByBond(r1PolymerBond) !== 'R2';\n\n  return (\n    ((monomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) ||\n      !monomer.hasAttachmentPoint(AttachmentPointName.R1)) &&\n      monomer.hasBonds) ||\n    previousConnectionNotR2 ||\n    isPreviousMonomerPartOfChain\n  );\n}\n\nexport function isValidNucleotide(sugar: Sugar) {\n  const phosphate = getPhosphateFromSugar(sugar);\n  const nextMonomerAfterPhosphate = getNextMonomerInChain(phosphate);\n\n  return Boolean(\n    getRnaBaseFromSugar(sugar) &&\n      getPhosphateFromSugar(sugar) &&\n      nextMonomerAfterPhosphate instanceof Sugar &&\n      getRnaBaseFromSugar(nextMonomerAfterPhosphate),\n  );\n}\n\nexport function isValidNucleoside(sugar: Sugar) {\n  const phosphate = getPhosphateFromSugar(sugar);\n  const nextMonomerAfterPhosphate = getNextMonomerInChain(phosphate);\n\n  return (\n    getRnaBaseFromSugar(sugar) &&\n    (!phosphate ||\n      !(\n        nextMonomerAfterPhosphate instanceof Sugar &&\n        getRnaBaseFromSugar(nextMonomerAfterPhosphate)\n      ))\n  );\n}\n","function Handler(f, once, priority) {\n  this.f = f\n  this.once = once\n  this.priority = priority\n}\n\nfunction Subscription() {\n  this.handlers = []\n}\nexports.Subscription = Subscription\n\nfunction insert(s, handler) {\n  var pos = 0\n  for (; pos < s.handlers.length; pos++)\n    if (s.handlers[pos].priority < handler.priority) break\n  s.handlers = s.handlers.slice(0, pos).concat(handler).concat(s.handlers.slice(pos))\n}\n\nSubscription.prototype.handlersForDispatch = function() {\n  var handlers = this.handlers, updated = null\n  for (var i = handlers.length - 1; i >= 0; i--) if (handlers[i].once) {\n    if (!updated) updated = handlers.slice()\n    updated.splice(i, 1)\n  }\n  if (updated) this.handlers = updated\n  return handlers\n}\n\nSubscription.prototype.add = function(f, priority) {\n  insert(this, new Handler(f, false, priority || 0))\n}\n\nSubscription.prototype.addOnce = function(f, priority) {\n  insert(this, new Handler(f, true, priority || 0))\n}\n\nSubscription.prototype.remove = function(f) {\n  for (var i = 0; i < this.handlers.length; i++) if (this.handlers[i].f == f) {\n    this.handlers = this.handlers.slice(0, i).concat(this.handlers.slice(i + 1))\n    return\n  }\n}\n\nSubscription.prototype.hasHandler = function() {\n  return this.handlers.length > 0\n}\n\nSubscription.prototype.dispatch = function() {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    handlers[i].f.apply(null, arguments)\n}\n\nfunction PipelineSubscription() {\n  Subscription.call(this)\n}\nexports.PipelineSubscription = PipelineSubscription\n\nPipelineSubscription.prototype = new Subscription\n\nPipelineSubscription.prototype.dispatch = function(value) {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    value = handlers[i].f(value)\n  return value\n}\n\nfunction StoppableSubscription() {\n  Subscription.call(this)\n}\nexports.StoppableSubscription = StoppableSubscription\n\nStoppableSubscription.prototype = new Subscription\n\nStoppableSubscription.prototype.dispatch = function() {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++) {\n    var result = handlers[i].f.apply(null, arguments)\n    if (result) return result\n  }\n}\n\nfunction DOMSubscription() {\n  Subscription.call(this)\n}\nexports.DOMSubscription = DOMSubscription\n\nDOMSubscription.prototype = new Subscription\n\nDOMSubscription.prototype.dispatch = function(event) {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    if (handlers[i].f(event) || event.defaultPrevented) return true\n  return false\n}\n","import { MonomerItemType } from 'domain/types';\n\ninterface ToolEventHandler {\n  click?(event: Event): void;\n\n  dblclick?(event: Event): void;\n\n  mousedown?(event: Event): void;\n\n  mousemove?(event: Event): void;\n\n  mouseup?(event: Event): void;\n\n  mouseleave?(event: Event): void;\n\n  mouseLeaveClientArea?(event: Event): void;\n\n  mouseover?(event: Event): void;\n\n  mouseOverPolymerBond?(event: Event): void;\n\n  mouseLeavePolymerBond?(event: Event): void;\n\n  mouseOverMonomer?(event: Event): void;\n\n  mouseOverAttachmentPoint?(event: Event): void;\n\n  mouseLeaveAttachmentPoint?(event: Event): void;\n\n  mouseUpAttachmentPoint?(event: Event): void;\n\n  mouseDownAttachmentPoint?(event: Event): void;\n\n  mouseOnMoveMonomer?(event: Event): void;\n\n  mouseLeaveMonomer?(event: Event): void;\n\n  mouseOverDrawingEntity?(event: Event): void;\n\n  mouseLeaveDrawingEntity?(event: Event): void;\n\n  mouseUpMonomer?(event: Event): void;\n\n  rightClickSequence?(event: Event): void;\n\n  rightClickCanvas?(event: Event): void;\n\n  editSequence?(): void;\n\n  startNewSequence?(): void;\n\n  mouseOverSequenceItem?(event: Event): void;\n\n  mouseOnMoveSequenceItem?(event: Event): void;\n\n  mouseLeaveSequenceItem?(event: Event): void;\n\n  changeSequenceTypeEnterMode?(event: Event): void;\n\n  toggleSequenceEditMode?(event: Event): void;\n}\n\nexport interface IRnaPreset {\n  name?: string;\n  base?: MonomerItemType;\n  sugar?: MonomerItemType;\n  phosphate?: MonomerItemType;\n  presetInList?: IRnaPreset;\n}\n\nexport interface Tool extends ToolEventHandler {\n  cancel?(): void;\n\n  isSelectionRunning?(): boolean;\n\n  isNotActiveTool?: boolean;\n}\n\nexport interface BaseTool extends Tool {\n  destroy(): void;\n}\n\nexport type PeptideToolOptions = MonomerItemType;\n\n// export type ToolOptions = MonomerItemType;\n// !todo\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ToolOptions = any;\nexport type ToolConstructorInterface = {\n  new (editor, ...args: ToolOptions[]): Tool | BaseTool;\n};\n\nexport type ToolEventHandlerName = keyof ToolEventHandler;\n\nexport function isBaseTool(\n  tool: Tool | BaseTool | undefined,\n): tool is BaseTool {\n  return (tool as BaseTool)?.destroy !== undefined;\n}\n","import { Subscription } from 'subscription';\nimport { ToolEventHandlerName } from 'application/editor/tools/Tool';\nimport { CoreEditor } from 'application/editor/Editor';\nimport ZoomTool from 'application/editor/tools/Zoom';\n\nexport let editorEvents;\n\nexport function resetEditorEvents() {\n  editorEvents = {\n    selectMonomer: new Subscription(),\n    selectPreset: new Subscription(),\n    selectTool: new Subscription(),\n    createBondViaModal: new Subscription(),\n    cancelBondCreationViaModal: new Subscription(),\n    selectMode: new Subscription(),\n    layoutModeChange: new Subscription(),\n    selectHistory: new Subscription(),\n    error: new Subscription(),\n    openMonomerConnectionModal: new Subscription(),\n    mouseOverPolymerBond: new Subscription(),\n    mouseLeavePolymerBond: new Subscription(),\n    mouseOverMonomer: new Subscription(),\n    mouseOnMoveMonomer: new Subscription(),\n    mouseLeaveMonomer: new Subscription(),\n    mouseOverAttachmentPoint: new Subscription(),\n    mouseLeaveAttachmentPoint: new Subscription(),\n    mouseUpAttachmentPoint: new Subscription(),\n    mouseDownAttachmentPoint: new Subscription(),\n    mouseOverDrawingEntity: new Subscription(),\n    mouseLeaveDrawingEntity: new Subscription(),\n    mouseUpMonomer: new Subscription(),\n    rightClickSequence: new Subscription(),\n    rightClickCanvas: new Subscription(),\n    editSequence: new Subscription(),\n    startNewSequence: new Subscription(),\n    mouseOverSequenceItem: new Subscription(),\n    mouseOnMoveSequenceItem: new Subscription(),\n    mouseLeaveSequenceItem: new Subscription(),\n    changeSequenceTypeEnterMode: new Subscription(),\n    toggleSequenceEditMode: new Subscription(),\n  };\n}\nresetEditorEvents();\nexport const renderersEvents: ToolEventHandlerName[] = [\n  'mouseOverPolymerBond',\n  'mouseLeavePolymerBond',\n  'mouseOverMonomer',\n  'mouseOnMoveMonomer',\n  'mouseOverAttachmentPoint',\n  'mouseLeaveAttachmentPoint',\n  'mouseUpAttachmentPoint',\n  'mouseDownAttachmentPoint',\n  'mouseLeaveMonomer',\n  'mouseOverDrawingEntity',\n  'mouseLeaveDrawingEntity',\n  'mouseUpMonomer',\n  'rightClickSequence',\n  'rightClickCanvas',\n  'editSequence',\n  'startNewSequence',\n  'mouseOverSequenceItem',\n  'mouseOnMoveSequenceItem',\n  'mouseLeaveSequenceItem',\n  'changeSequenceTypeEnterMode',\n  'toggleSequenceEditMode',\n];\n\nexport const hotkeysConfiguration = {\n  exit: {\n    shortcut: ['Shift+Tab', 'Escape'],\n    handler: (editor: CoreEditor) => {\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  undo: {\n    shortcut: 'Mod+z',\n    handler: (editor: CoreEditor) => {\n      editor.onSelectHistory('undo');\n    },\n  },\n  redo: {\n    shortcut: ['Mod+Shift+z', 'Mod+y'],\n    handler: (editor: CoreEditor) => {\n      editor.onSelectHistory('redo');\n    },\n  },\n  erase: {\n    shortcut: ['Delete', 'Backspace'],\n    handler: (editor: CoreEditor) => {\n      // TODO create an ability to stop event propagation from mode event handlers to keyboard shortcuts handlers\n      if (editor.isSequenceEditMode) return;\n      editor.events.selectTool.dispatch('erase');\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  clear: {\n    shortcut: ['Mod+Delete', 'Mod+Backspace'],\n    handler: (editor: CoreEditor) => {\n      editor.events.selectTool.dispatch('clear');\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  'zoom-plus': {\n    shortcut: 'Mod+=',\n    handler: () => {\n      ZoomTool.instance.zoomIn();\n    },\n  },\n  'zoom-minus': {\n    shortcut: 'Mod+-',\n    handler: () => {\n      ZoomTool.instance.zoomOut();\n    },\n  },\n  'zoom-reset': {\n    shortcut: 'Mod+0',\n    handler: () => {\n      ZoomTool.instance.resetZoom();\n    },\n  },\n  'select-all': {\n    shortcut: 'Mod+a',\n    handler: (editor: CoreEditor) => {\n      const modelChanges =\n        editor.drawingEntitiesManager.selectAllDrawingEntities();\n      editor.renderersContainer.update(modelChanges);\n    },\n  },\n};\n","import { Vec2 } from 'domain/entities/vec2';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Selection, line } from 'd3';\nimport { BaseMonomer } from './entities/BaseMonomer';\nimport assert from 'assert';\nimport {\n  canvasToMonomerCoordinates,\n  findLabelPoint,\n  Coordinates,\n  getSearchFunction,\n} from './helpers/attachmentPointCalculations';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport { AttachmentPointConstructorParams, AttachmentPointName } from './types';\n\nexport class AttachmentPoint {\n  static attachmentPointVector = 6;\n  static attachmentPointLength = Math.hypot(\n    AttachmentPoint.attachmentPointVector,\n    AttachmentPoint.attachmentPointVector,\n  );\n\n  static labelOffset = 3.5;\n  static radius = 3;\n  static labelSize = { x: 3.5, y: 2.5 };\n  static colors = {\n    fillUsed: '#0097A8',\n    fill: 'white',\n    fillPotentially: '#167782',\n    strokeUsed: '#0097A8',\n    stroke: '#167782',\n    strokePotentially: '#167782',\n  };\n\n  private rootElement: D3SvgElementSelection<SVGGElement, void>;\n  private attachmentPoint: D3SvgElementSelection<SVGGElement, void> | null;\n  private monomer: BaseMonomer;\n  private bodyWidth: number;\n  private bodyHeight: number;\n  private attachmentPointName: string;\n  private canvasOffset: Coordinates;\n  private centerOfMonomer: Coordinates;\n  private element: Selection<SVGGElement, void, HTMLElement, never> | undefined;\n  private hoverableArea:\n    | Selection<SVGGElement, void, HTMLElement, never>\n    | undefined;\n\n  private initialAngle = 0;\n  private isUsed: boolean;\n  private fill: string;\n  private stroke: string;\n  private isSnake;\n  private editorEvents: typeof editorEvents;\n\n  constructor(constructorParams: AttachmentPointConstructorParams) {\n    this.rootElement = constructorParams.rootElement;\n    this.monomer = constructorParams.monomer;\n    this.bodyWidth = constructorParams.bodyWidth;\n    this.bodyHeight = constructorParams.bodyHeight;\n    this.canvasOffset =\n      constructorParams.canvas.node()?.getBoundingClientRect() ||\n      new DOMRect(0, 0, 0, 0);\n    this.attachmentPointName = constructorParams.attachmentPointName;\n    this.centerOfMonomer =\n      constructorParams.monomer.renderer?.center || new Vec2(0, 0, 0);\n    this.isSnake = constructorParams.isSnake;\n    this.isUsed = constructorParams.isUsed;\n    this.initialAngle = constructorParams.angle;\n    this.editorEvents = editorEvents;\n    this.attachmentPoint = null;\n\n    if (constructorParams.isPotentiallyUsed) {\n      this.fill = AttachmentPoint.colors.fillPotentially;\n      this.stroke = AttachmentPoint.colors.strokePotentially;\n    } else if (constructorParams.isUsed) {\n      this.fill = AttachmentPoint.colors.fillUsed;\n      this.stroke = AttachmentPoint.colors.strokeUsed;\n    } else {\n      this.fill = AttachmentPoint.colors.fill;\n      this.stroke = AttachmentPoint.colors.stroke;\n    }\n\n    this.appendAttachmentPoint();\n  }\n\n  public removeAttachmentPoint() {\n    const remove = () => {\n      this.element?.remove();\n    };\n    setTimeout(remove, 1);\n  }\n\n  private renderAttachmentPointByCoordinates(\n    attachmentOnBorder: Coordinates,\n    attachmentPointCoordinates: Coordinates,\n    labelCoordinatesOnMonomer: Coordinates,\n  ) {\n    const fill = this.fill;\n    const stroke = this.stroke;\n\n    this.attachmentPoint = this.rootElement.insert('g', ':first-child');\n\n    const attachmentPointElement = this.attachmentPoint.append('g');\n\n    attachmentPointElement\n      .append('line')\n      .attr('x1', attachmentOnBorder.x)\n      .attr('y1', attachmentOnBorder.y)\n      .attr('x2', attachmentPointCoordinates.x)\n      .attr('y2', attachmentPointCoordinates.y)\n      .attr('stroke', stroke)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', '1px');\n\n    attachmentPointElement\n      .append('circle')\n      .attr('r', AttachmentPoint.radius)\n      .attr('cx', attachmentPointCoordinates.x)\n      .attr('cy', attachmentPointCoordinates.y)\n      .attr('stroke', fill === 'white' ? '#0097A8' : 'white')\n      .attr('stroke-width', '1px')\n      .attr('fill', fill);\n\n    const labelGroup = this.attachmentPoint.append('text');\n\n    labelGroup\n      .text(this.attachmentPointName)\n      .attr('x', labelCoordinatesOnMonomer.x)\n      .attr('y', labelCoordinatesOnMonomer.y)\n      .style('font-size', '6px')\n      .style('fill', '#585858')\n      .style('user-select', 'none');\n\n    return this.attachmentPoint;\n  }\n\n  private renderHoverableArea(\n    monomerCenter: Coordinates,\n    attachmentPointCenter: Coordinates,\n    angleDegrees: number,\n  ) {\n    if (!this.element) {\n      return;\n    }\n\n    const rotation = angleDegrees + 90;\n    const halfWidth = 20;\n\n    const areaHeight = Math.sqrt(\n      (monomerCenter.x - attachmentPointCenter.x) ** 2 +\n        (monomerCenter.y - attachmentPointCenter.y) ** 2,\n    );\n\n    const points: Coordinates[] = [\n      { x: -AttachmentPoint.radius, y: AttachmentPoint.radius },\n      { x: AttachmentPoint.radius, y: AttachmentPoint.radius },\n      {\n        x: halfWidth,\n        y: -areaHeight + 10,\n      },\n      {\n        x: -halfWidth,\n        y: -areaHeight + 10,\n      },\n      { x: -AttachmentPoint.radius, y: AttachmentPoint.radius },\n    ];\n\n    const lineFunction = line<Coordinates>()\n      .x(({ x }) => x)\n      .y(({ y }) => y);\n\n    const hoverableAreaElement = this.element.append('g');\n\n    hoverableAreaElement\n      .append('path')\n      .attr('d', lineFunction(points) + 'z')\n      .attr('stroke', 'black')\n      .attr('stroke-width', '1px')\n      .attr('fill', '#0097A8')\n      .style('opacity', '0')\n      .attr(\n        'transform',\n        `translate(${attachmentPointCenter.x},${attachmentPointCenter.y})rotate(${rotation})`,\n      );\n\n    hoverableAreaElement\n      .on('mouseover', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseOverAttachmentPoint.dispatch(event);\n      })\n      .on('mouseleave', (event) => {\n        this.editorEvents.mouseLeaveAttachmentPoint.dispatch(event);\n      })\n      .on('mousedown', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseDownAttachmentPoint.dispatch(event);\n      })\n      .on('mouseup', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseUpAttachmentPoint.dispatch(event);\n      });\n\n    return hoverableAreaElement;\n  }\n\n  public appendAttachmentPoint() {\n    let angleDegrees;\n    let angleRadians: number;\n    const flip =\n      this.monomer.id ===\n      this.monomer.attachmentPointsToBonds[this.attachmentPointName]\n        ?.firstMonomer?.id;\n    const isAttachmentpointR1 = this.attachmentPointName === 'R1';\n    if (!this.isUsed) {\n      angleDegrees = this.initialAngle;\n    } else if (\n      this.isSnake &&\n      !this.monomer.attachmentPointsToBonds[\n        this.attachmentPointName\n      ]?.renderer.isMonomersOnSameHorizontalLine()\n    ) {\n      angleRadians = isAttachmentpointR1 ? 0 : Math.PI;\n      angleDegrees = Vec2.radiansToDegrees(angleRadians);\n    } else {\n      angleRadians = this.rotateToAngle(\n        this.monomer.attachmentPointsToBonds[this.attachmentPointName],\n        flip,\n      );\n\n      angleDegrees = Vec2.radiansToDegrees(angleRadians);\n    }\n\n    const [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ] = this.getCoordinates(angleDegrees);\n\n    const attachmentToCenterCoordinates = canvasToMonomerCoordinates(\n      this.centerOfMonomer,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const attachmentPoint = this.renderAttachmentPointByCoordinates(\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    );\n\n    this.element = attachmentPoint;\n\n    const hoverableArea = this.renderHoverableArea(\n      attachmentToCenterCoordinates,\n      attachmentPointCoordinates,\n      angleDegrees,\n    );\n\n    this.hoverableArea = hoverableArea;\n\n    return attachmentPoint;\n  }\n\n  public updateAttachmentPointStyleForHover() {\n    const isAttachmentPointUsed = this.monomer.isAttachmentPointUsed(\n      this.attachmentPointName as AttachmentPointName,\n    );\n    if (isAttachmentPointUsed) {\n      this.attachmentPoint\n        ?.select('line')\n        .style('stroke', AttachmentPoint.colors.fillUsed);\n      this.attachmentPoint\n        ?.select('circle')\n        .style('fill', AttachmentPoint.colors.fillUsed)\n        .attr('stroke', 'white');\n    }\n  }\n\n  public rotateToAngle(polymerBond: PolymerBond, flip = false) {\n    let angleRadians = 0;\n    if (flip) {\n      angleRadians = Vec2.oxAngleForVector(\n        polymerBond.endPosition,\n        polymerBond.position,\n      );\n    } else {\n      angleRadians = Vec2.oxAngleForVector(\n        polymerBond.position,\n        polymerBond.endPosition,\n      );\n    }\n\n    return angleRadians;\n  }\n\n  private getCoordinates(angleDegrees) {\n    const [pointOnBorder, pointOfAttachment, labelPoint] =\n      this.catchThePoint(angleDegrees);\n\n    const attachmentToBorderCoordinates = canvasToMonomerCoordinates(\n      pointOnBorder,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const attachmentPointCoordinates = canvasToMonomerCoordinates(\n      pointOfAttachment,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const labelCoordinates = canvasToMonomerCoordinates(\n      labelPoint,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    return [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ];\n  }\n\n  public updateCoords() {\n    const flip =\n      this.monomer.id ===\n      this.monomer.attachmentPointsToBonds[this.attachmentPointName]\n        ?.firstMonomer?.id;\n\n    const angleRadians = this.rotateToAngle(\n      this.monomer.attachmentPointsToBonds[this.attachmentPointName],\n      flip,\n    );\n    const angleDegrees = Vec2.radiansToDegrees(angleRadians);\n\n    const [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ] = this.getCoordinates(angleDegrees);\n\n    this.attachmentPoint\n      ?.select('line')\n      .attr('x1', attachmentToBorderCoordinates.x)\n      .attr('y1', attachmentToBorderCoordinates.y)\n      .attr('x2', attachmentPointCoordinates.x)\n      .attr('y2', attachmentPointCoordinates.y);\n\n    this.attachmentPoint\n      ?.select('circle')\n      .attr('cx', attachmentPointCoordinates.x)\n      .attr('cy', attachmentPointCoordinates.y)\n      .attr('stroke', 'white')\n      .attr('fill', AttachmentPoint.colors.fillPotentially);\n\n    this.attachmentPoint\n      ?.select('text')\n      .attr('x', labelCoordinates.x)\n      .attr('y', labelCoordinates.y);\n  }\n\n  private catchThePoint(rotationAngle: number): Coordinates[] {\n    assert(this.monomer.renderer);\n\n    const currentMonomerCenter = {\n      x: this.monomer.renderer.center.x,\n      y: this.monomer.renderer.center.y,\n    };\n\n    this.initialAngle = rotationAngle;\n\n    const findPointOnMonomerBorder = getSearchFunction(\n      this.initialAngle - 180,\n      this.canvasOffset,\n      this.monomer,\n    );\n\n    const pointOnBorder = findPointOnMonomerBorder(\n      currentMonomerCenter,\n      (this.bodyWidth + this.bodyHeight) / 2,\n    );\n\n    const [labelPoint, pointOfAttachment] = findLabelPoint(\n      pointOnBorder,\n      this.initialAngle - 180,\n      AttachmentPoint.attachmentPointLength,\n      AttachmentPoint.labelOffset,\n      AttachmentPoint.labelSize,\n      this.isUsed,\n    );\n    return [pointOnBorder, pointOfAttachment, labelPoint];\n  }\n\n  public getElement() {\n    return this.element;\n  }\n\n  public getAttachmentPointName() {\n    return this.attachmentPointName;\n  }\n\n  public getHoverableArea() {\n    return this.hoverableArea;\n  }\n\n  public getAngle() {\n    if (this.initialAngle < 0 && this.isUsed) {\n      return this.initialAngle + 360;\n    }\n    return this.initialAngle;\n  }\n}\n","import { BaseRenderer } from './BaseRenderer';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport assert from 'assert';\nimport {\n  attachmentPointNumberToAngle,\n  anglesToSector,\n  sectorsList,\n  checkFor0and360,\n} from 'domain/helpers/attachmentPointCalculations';\nimport { AttachmentPoint } from 'domain/AttachmentPoint';\nimport { Vec2 } from 'domain/entities/vec2';\nimport {\n  AttachmentPointConstructorParams,\n  AttachmentPointName,\n} from 'domain/types';\nimport { Coordinates } from 'application/editor/shared/coordinates';\n\nconst labelPositions: { [key: string]: { x: number; y: number } | undefined } =\n  {};\n\nexport abstract class BaseMonomerRenderer extends BaseRenderer {\n  private editorEvents: typeof editorEvents;\n  private selectionCircle?: D3SvgElementSelection<SVGCircleElement, void>;\n  private selectionBorder?: D3SvgElementSelection<SVGUseElement, void>;\n\n  private freeSectorsList: number[] = sectorsList;\n\n  private attachmentPoints: AttachmentPoint[] | [] = [];\n  private hoveredAttachmenPoint: AttachmentPointName | null = null;\n\n  private monomerSymbolElement?: SVGUseElement | SVGRectElement;\n  public monomerSize: { width: number; height: number };\n\n  private enumerationElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public enumeration: number | null = null;\n\n  private beginningElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public beginning: string | null = null;\n\n  static isSelectable() {\n    return true;\n  }\n\n  protected constructor(\n    public monomer: BaseMonomer,\n    private monomerSelectedElementId: string,\n    private monomerHoveredElementId: string,\n    monomerSymbolElementId: string,\n    private scale?: number,\n  ) {\n    super(monomer as DrawingEntity);\n    this.monomer.setRenderer(this);\n    this.editorEvents = editorEvents;\n    this.monomerSymbolElement = document.querySelector(\n      `${monomerSymbolElementId} .monomer-body`,\n    ) as SVGUseElement | SVGRectElement;\n    // Cross-browser width and height detection via getAttribute()\n    // as getBoundingClientRect() and getBBox() return 0 values in Firefox\n    // in this case (<path> inside <symbol>, <defs>)\n    this.monomerSize = {\n      width: +(\n        this.monomerSymbolElement?.getAttribute('data-actual-width') || 0\n      ),\n      height: +(\n        this.monomerSymbolElement?.getAttribute('data-actual-height') || 0\n      ),\n    };\n  }\n\n  private isSnakeBondForAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return (\n      this.monomer.attachmentPointsToBonds[attachmentPointName]?.renderer\n        ?.isSnake &&\n      !this.monomer.attachmentPointsToBonds[\n        attachmentPointName\n      ]?.renderer?.isMonomersOnSameHorizontalLine()\n    );\n  }\n\n  public get center() {\n    return new Vec2(\n      this.scaledMonomerPosition.x + this.monomerSize.width / 2,\n      this.scaledMonomerPosition.y + this.monomerSize.height / 2,\n    );\n  }\n\n  public get textColor() {\n    const WHITE = 'white';\n    const colorsMap = {\n      D: WHITE,\n      F: WHITE,\n      K: WHITE,\n      Q: WHITE,\n      R: WHITE,\n      W: WHITE,\n      Y: WHITE,\n    };\n    return (\n      colorsMap[this.monomer.monomerItem.props.MonomerNaturalAnalogCode] ||\n      'black'\n    );\n  }\n\n  protected getMonomerColor(theme) {\n    return (\n      theme.monomer.color[\n        this.monomer.monomerItem.props.MonomerNaturalAnalogCode\n      ]?.regular || theme.monomer.color.default.regular\n    );\n  }\n\n  public redrawAttachmentPoints() {\n    this.hoveredAttachmenPoint = null;\n    if (!this.rootElement) return;\n    if (this.monomer.attachmentPointsVisible) {\n      this.removeAttachmentPoints();\n      this.drawAttachmentPoints();\n    } else {\n      this.removeAttachmentPoints();\n    }\n  }\n\n  public updateAttachmentPoints() {\n    this.hoveredAttachmenPoint = null;\n    if (!this.rootElement) return;\n    if (this.attachmentPoints.length > 0) {\n      this.attachmentPoints.forEach((point) => {\n        point.updateAttachmentPointStyleForHover();\n      });\n    } else {\n      this.drawAttachmentPoints();\n    }\n  }\n\n  public redrawAttachmentPointsCoordinates() {\n    const chosenAttachmentPointName =\n      this.monomer.chosenFirstAttachmentPointForBond;\n    const chosenAttachmentPoint = this.attachmentPoints.find(\n      (item) => item.getAttachmentPointName() === chosenAttachmentPointName,\n    );\n    const angle = chosenAttachmentPoint?.getAngle();\n    const allAngles = this.attachmentPoints.map((item) => {\n      return item.getAngle();\n    });\n    const isSectorOccupied = allAngles.some((item) => {\n      if (angle !== item && typeof angle === 'number') {\n        return Math.abs(angle - item) < 20 || Math.abs(angle - item) > 340;\n      }\n      return false;\n    });\n\n    if (isSectorOccupied) {\n      this.redrawAttachmentPoints();\n      return;\n    }\n\n    const attachmentPoint = this.attachmentPoints.find(\n      (item) => item.getAttachmentPointName() === chosenAttachmentPointName,\n    );\n\n    assert(attachmentPoint);\n    attachmentPoint.updateCoords();\n  }\n\n  public drawAttachmentPoints() {\n    if (this.attachmentPoints.length) {\n      return;\n    }\n\n    // draw used attachment points\n    this.monomer.usedAttachmentPointsNamesList.forEach((item) => {\n      const attachmentPoint = this.appendAttachmentPoint(item);\n      const angle = attachmentPoint.getAngle();\n\n      this.attachmentPoints.push(attachmentPoint as never);\n\n      if (typeof angle === 'number') {\n        // remove this sector from list of free sectors\n        const newList = this.freeSectorsList.filter((item) => {\n          return (\n            anglesToSector[item].min > angle ||\n            anglesToSector[item].max <= angle\n          );\n        });\n        this.freeSectorsList = checkFor0and360(newList);\n      }\n    });\n\n    const unrenderedAtPoints: AttachmentPointName[] = [];\n\n    // draw free attachment points\n    this.monomer.unUsedAttachmentPointsNamesList.forEach((item) => {\n      const properAngleForFreeAttachmentPoint =\n        attachmentPointNumberToAngle[item];\n\n      // if this angle is free for unused att point, draw it\n      if (this.freeSectorsList.includes(properAngleForFreeAttachmentPoint)) {\n        const attachmentPoint = this.appendAttachmentPoint(\n          item,\n          properAngleForFreeAttachmentPoint,\n        );\n        this.attachmentPoints.push(attachmentPoint as never);\n\n        // remove this sector from list\n        const newList = this.freeSectorsList.filter((item) => {\n          return item !== properAngleForFreeAttachmentPoint;\n        });\n        this.freeSectorsList = checkFor0and360(newList);\n      } else {\n        // if this sector is already taken - add name to unrendered list\n        unrenderedAtPoints.push(item);\n      }\n    });\n\n    unrenderedAtPoints.forEach((item) => {\n      const customAngle = this.freeSectorsList.shift();\n      const attachmentPoint = this.appendAttachmentPoint(item, customAngle);\n      this.attachmentPoints.push(attachmentPoint as never);\n    });\n  }\n\n  public appendAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n    customAngle?: number,\n  ) {\n    let rotation;\n\n    if (!this.monomer.isAttachmentPointUsed(attachmentPointName)) {\n      rotation = attachmentPointNumberToAngle[attachmentPointName];\n    }\n    const attachmentPointParams: AttachmentPointConstructorParams = {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      rootElement: this.rootElement!,\n      monomer: this.monomer,\n      bodyWidth: this.monomerSize.width,\n      bodyHeight: this.monomerSize.height,\n      canvas: this.canvasWrapper,\n      attachmentPointName,\n      isUsed: this.monomer.isAttachmentPointUsed(attachmentPointName),\n      isPotentiallyUsed:\n        this.monomer.isAttachmentPointPotentiallyUsed(attachmentPointName) ||\n        this.hoveredAttachmenPoint === attachmentPointName,\n      angle: customAngle || rotation,\n      isSnake: !!this.isSnakeBondForAttachmentPoint(attachmentPointName),\n    };\n\n    const attPointInstance = new AttachmentPoint(attachmentPointParams);\n    return attPointInstance;\n  }\n\n  public removeAttachmentPoints() {\n    this.attachmentPoints.forEach((item) => {\n      item.removeAttachmentPoint();\n    });\n    this.attachmentPoints = [];\n    this.freeSectorsList = sectorsList;\n  }\n\n  public hoverAttachmenPoint(attachmentPointName: AttachmentPointName) {\n    this.hoveredAttachmenPoint = attachmentPointName;\n  }\n\n  private appendRootElement(\n    canvas: D3SvgElementSelection<SVGSVGElement, void>,\n  ) {\n    return canvas\n      .append('g')\n      .data([this])\n      .attr('transition', 'transform 0.2s')\n      .attr(\n        'transform',\n        `translate(${this.scaledMonomerPosition.x}, ${\n          this.scaledMonomerPosition.y\n        }) scale(${this.scale || 1})`,\n      ) as never as D3SvgElementSelection<SVGGElement, void>;\n  }\n\n  private appendLabel(rootElement: D3SvgElementSelection<SVGGElement, void>) {\n    const fontSize = 6;\n    const textElement = rootElement\n      .append('text')\n      .text(this.monomer.label)\n      .attr('fill', this.textColor)\n      .attr('font-size', `${fontSize}px`)\n      .attr('line-height', `${fontSize}px`)\n      .attr('font-weight', '700')\n      .style('cursor', 'pointer')\n      .style('user-select', 'none')\n      .attr('pointer-events', 'none');\n\n    // cache label position to reuse it form other monomers with same label\n    // need to improve performance for large amount of monomers\n    // getBBox triggers reflow\n    const monomerUniqueKey =\n      this.monomer.label + this.monomer.monomerItem.props.MonomerType;\n\n    if (!labelPositions[monomerUniqueKey]) {\n      const textBBox = (textElement.node() as SVGTextElement).getBBox();\n      labelPositions[monomerUniqueKey] = {\n        x: this.width / 2 - textBBox.width / 2,\n        y: this.height / 2,\n      };\n    }\n    textElement\n      .attr('x', labelPositions[monomerUniqueKey]?.x || 0)\n      .attr('y', labelPositions[monomerUniqueKey]?.y || 0);\n\n    if (this.scale && this.scale !== 1) {\n      labelPositions[monomerUniqueKey] = undefined;\n    }\n  }\n\n  public appendHover(\n    hoverAreaElement: D3SvgElementSelection<SVGGElement, void>,\n  ) {\n    if (this.hoverElement) this.hoverElement.remove();\n    return hoverAreaElement\n      .append('use')\n      .attr('href', this.monomerHoveredElementId)\n      .attr('pointer-events', 'none');\n  }\n\n  public removeHover() {\n    if (!this.hoverElement) return;\n    this.hoverElement.remove();\n  }\n\n  public static getScaledMonomerPosition(\n    positionInAngstoms: Vec2,\n    monomerSize: { width: number; height: number } = { width: 0, height: 0 },\n  ) {\n    // we need to convert monomer coordinates(stored in angstroms) to pixels.\n    // it needs to be done in view layer of application (like renderers)\n    const monomerPositionInPixels =\n      Coordinates.modelToCanvas(positionInAngstoms);\n\n    return new Vec2(\n      monomerPositionInPixels.x - monomerSize.width / 2,\n      monomerPositionInPixels.y - monomerSize.height / 2,\n    );\n  }\n\n  public get scaledMonomerPosition() {\n    return BaseMonomerRenderer.getScaledMonomerPosition(\n      this.monomer.position,\n      this.monomerSize,\n    );\n  }\n\n  public appendSelection() {\n    if (this.selectionCircle) {\n      this.selectionCircle.attr('cx', this.center.x).attr('cy', this.center.y);\n    } else {\n      this.selectionBorder = this.rootElement\n        ?.append('use')\n        .attr('href', this.monomerSelectedElementId)\n        .attr('stroke', '#57FF8F')\n        .attr('pointer-events', 'none');\n\n      this.selectionCircle = this.canvas\n        ?.insert('circle', ':first-child')\n        .attr('r', '21px')\n        .attr('opacity', '0.7')\n        .attr('cx', this.center.x)\n        .attr('cy', this.center.y)\n        .attr('fill', '#57FF8F');\n    }\n  }\n\n  public removeSelection() {\n    this.selectionCircle?.remove();\n    this.selectionBorder?.remove();\n    this.selectionCircle = undefined;\n    this.selectionBorder = undefined;\n  }\n\n  protected abstract appendBody(\n    rootElement: D3SvgElementSelection<SVGGElement, void>,\n    theme?,\n  );\n\n  protected appendHoverAreaElement() {\n    this.hoverAreaElement = this.rootElement;\n  }\n\n  private appendEvents() {\n    assert(this.bodyElement);\n    this.bodyElement\n      .on('mouseover', (event) => {\n        this.editorEvents.mouseOverDrawingEntity.dispatch(event);\n        this.editorEvents.mouseOverMonomer.dispatch(event);\n      })\n      .on('mousemove', (event) => {\n        this.editorEvents.mouseOnMoveMonomer.dispatch(event);\n      })\n      .on('mouseleave', (event) => {\n        this.editorEvents.mouseLeaveDrawingEntity.dispatch(event);\n        this.editorEvents.mouseLeaveMonomer.dispatch(event);\n      })\n      .on('mouseup', (event) => {\n        this.editorEvents.mouseUpMonomer.dispatch(event);\n      });\n  }\n\n  protected abstract get enumerationElementPosition(): {\n    x: number;\n    y: number;\n  } | void;\n\n  protected abstract get beginningElementPosition(): {\n    x: number;\n    y: number;\n  } | void;\n\n  public setEnumeration(enumeration: number | null) {\n    this.enumeration = enumeration;\n  }\n\n  protected appendEnumeration() {\n    assert(this.rootElement);\n    assert(this.enumerationElementPosition);\n    this.enumerationElement = this.rootElement\n      .append('text')\n      .attr('direction', 'rtl')\n      .attr('fill', '#7C7C7F')\n      .attr('font-size', '6px')\n      .attr('line-height', '7px')\n      .attr('font-weight', '500')\n      .attr('text-align', 'right')\n      .attr('x', this.enumerationElementPosition.x)\n      .attr('y', this.enumerationElementPosition.y)\n      .text(this.enumeration);\n  }\n\n  public redrawEnumeration() {\n    assert(this.enumerationElement);\n    this.enumerationElement.text(this.enumeration);\n  }\n\n  public setBeginning(beginning: string | null) {\n    this.beginning = beginning;\n  }\n\n  protected appendChainBeginning() {\n    assert(this.rootElement);\n    assert(this.beginningElementPosition);\n    this.beginningElement = this.rootElement\n      .append('text')\n      .attr('direction', 'rtl')\n      .attr('fill', '#0097A8')\n      .attr('font-size', '6px')\n      .attr('line-height', '7px')\n      .attr('font-weight', '700')\n      .attr('text-align', 'right')\n      .attr('x', this.beginningElementPosition.x)\n      .attr('y', this.beginningElementPosition.y)\n      .text(this.beginning);\n  }\n\n  public reDrawChainBeginning() {\n    assert(this.beginningElement);\n    assert(this.beginningElementPosition);\n    this.beginningElement\n      .attr('x', this.beginningElementPosition.x)\n      .attr('y', this.beginningElementPosition.y)\n      .text(this.beginning);\n  }\n\n  public show(theme?) {\n    this.rootElement =\n      this.rootElement ||\n      this.appendRootElement(this.scale ? this.canvasWrapper : this.canvas);\n    this.bodyElement = this.appendBody(this.rootElement, theme);\n    this.appendEvents();\n\n    this.appendLabel(this.rootElement);\n    this.appendHoverAreaElement();\n    if (this.monomer.selected) {\n      this.drawSelection();\n    }\n    this.redrawAttachmentPoints();\n  }\n\n  public drawSelection() {\n    if (!this.rootElement) {\n      return;\n    }\n    if (this.monomer.selected) {\n      this.appendSelection();\n      this.raiseElement();\n    } else {\n      this.removeSelection();\n    }\n  }\n\n  private raiseElement() {\n    this.selectionCircle?.raise();\n    this.rootElement?.raise();\n  }\n\n  public moveSelection() {\n    assert(this.rootElement);\n    this.appendSelection();\n    this.move();\n  }\n\n  public move() {\n    this.rootElement?.attr(\n      'transform',\n      `translate(${this.scaledMonomerPosition.x}, ${\n        this.scaledMonomerPosition.y\n      }) scale(${this.scale || 1})`,\n    );\n  }\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n    this.removeSelection();\n    if (this.monomer.hovered) {\n      this.editorEvents.mouseLeaveMonomer.dispatch();\n    }\n  }\n}\n","import { Selection } from 'd3';\nimport { Chem } from 'domain/entities/Chem';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst CHEM_SELECTED_ELEMENT_ID = '#chem-selection';\nconst CHEM_SYMBOL_ELEMENT_ID = '#chem';\n\nexport class ChemRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: Chem, scale?: number) {\n    super(\n      monomer,\n      CHEM_SELECTED_ELEMENT_ID,\n      CHEM_SELECTED_ELEMENT_ID,\n      CHEM_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', CHEM_SYMBOL_ELEMENT_ID)\n      .style('cursor', 'pointer')\n      .attr('stroke', theme.monomer.color.CHEM.regular);\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Selection } from 'd3';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst PEPTIDE_SELECTED_ELEMENT_ID = '#peptide-selection';\nconst PEPTIDE_HOVERED_ELEMENT_ID = '#peptide-hover';\nconst PEPTIDE_SYMBOL_ELEMENT_ID = '#peptide';\n\nexport class PeptideRenderer extends BaseMonomerRenderer {\n  public CHAIN_BEGINNING = 'N';\n\n  constructor(public monomer: Peptide, scale?: number) {\n    super(\n      monomer,\n      PEPTIDE_SELECTED_ELEMENT_ID,\n      PEPTIDE_HOVERED_ELEMENT_ID,\n      PEPTIDE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', PEPTIDE_SYMBOL_ELEMENT_ID)\n      .style('cursor', 'pointer')\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendEnumeration();\n    this.appendChainBeginning();\n  }\n\n  protected get enumerationElementPosition() {\n    return { x: 10, y: -1 };\n  }\n\n  protected get beginningElementPosition() {\n    return { x: -6, y: 10 };\n  }\n}\n","import { Selection } from 'd3';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst PHOSPHATE_SELECTED_ELEMENT_ID = '#phosphate-selection';\nconst PHOSPHATE_SYMBOL_ELEMENT_ID = '#phosphate';\n\nexport class PhosphateRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: Phosphate, scale?: number) {\n    super(\n      monomer,\n      PHOSPHATE_SELECTED_ELEMENT_ID,\n      PHOSPHATE_SELECTED_ELEMENT_ID,\n      PHOSPHATE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', PHOSPHATE_SYMBOL_ELEMENT_ID)\n      .style('cursor', 'pointer')\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Selection } from 'd3';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst SUGAR_SELECTED_ELEMENT_ID = '#sugar-selection';\nconst SUGAR_SYMBOL_ELEMENT_ID = '#sugar';\n\nexport class SugarRenderer extends BaseMonomerRenderer {\n  public CHAIN_BEGINNING = '’5';\n\n  constructor(public monomer: Sugar, scale?: number) {\n    super(\n      monomer,\n      SUGAR_SELECTED_ELEMENT_ID,\n      SUGAR_SELECTED_ELEMENT_ID,\n      SUGAR_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', SUGAR_SYMBOL_ELEMENT_ID)\n      .style('cursor', 'pointer')\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendChainBeginning();\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return { x: -5, y: 7 };\n  }\n}\n","import { Selection } from 'd3';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst RNABASE_SELECTED_ELEMENT_ID = '#rna-base-selection';\nconst RNABASE_SYMBOL_ELEMENT_ID = '#rna-base';\n\nexport class RNABaseRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: RNABase, scale?: number) {\n    super(\n      monomer,\n      RNABASE_SELECTED_ELEMENT_ID,\n      RNABASE_SELECTED_ELEMENT_ID,\n      RNABASE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', RNABASE_SYMBOL_ELEMENT_ID)\n      .style('cursor', 'pointer')\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendEnumeration();\n  }\n\n  protected get enumerationElementPosition() {\n    return { x: 11, y: 5 };\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Operation } from 'domain/entities/Operation';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\n\nexport class Command {\n  public operations: Operation[] = [];\n  private undoOperationReverse = false;\n\n  public addOperation(operation: Operation) {\n    this.operations.push(operation);\n  }\n\n  public merge(command: Command) {\n    this.operations = [...this.operations, ...command.operations];\n  }\n\n  public setUndoOperationReverse() {\n    // this method marks command that operations should be invoked in opposite sequence during invert()\n    this.undoOperationReverse = true;\n  }\n\n  public invert(renderersManagers: RenderersManager) {\n    const operations = this.undoOperationReverse\n      ? this.operations.slice().reverse()\n      : this.operations;\n    operations.forEach((operation) => operation.invert(renderersManagers));\n    renderersManagers.runPostRenderMethods();\n  }\n\n  public execute(renderersManagers: RenderersManager) {\n    this.operations.forEach((operation) =>\n      operation.execute(renderersManagers),\n    );\n    renderersManagers.runPostRenderMethods();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class PolymerBondAddOperation implements Operation {\n  public polymerBond;\n  constructor(\n    private addPolymerBondChangeModel: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n    private deletePolymerBondChangeModel: (polymerBond) => void,\n  ) {\n    this.polymerBond = this.addPolymerBondChangeModel();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.polymerBond = this.addPolymerBondChangeModel(this.polymerBond);\n    renderersManager.addPolymerBond(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.deletePolymerBondChangeModel(this.polymerBond);\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n}\n\nexport class PolymerBondDeleteOperation implements Operation {\n  constructor(\n    public polymerBond: PolymerBond,\n    private deletePolymerBondChangeModel: () => void,\n    private finishPolymerBondCreationModelChange: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    this.deletePolymerBondChangeModel();\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange(\n      this.polymerBond,\n    );\n    renderersManager.addPolymerBond(this.polymerBond);\n  }\n}\n\nexport class PolymerBondMoveOperation implements Operation {\n  constructor(public polymerBond: PolymerBond) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.movePolymerBond(this.polymerBond);\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondShowInfoOperation implements Operation {\n  constructor(public polymerBond: PolymerBond) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.showPolymerBondInformation(this.polymerBond);\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondCancelCreationOperation implements Operation {\n  constructor(\n    public polymerBond: PolymerBond,\n    private secondMonomer?: BaseMonomer,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.cancelPolymerBondCreation(\n      this.polymerBond,\n      this.secondMonomer,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondFinishCreationOperation implements Operation {\n  public polymerBond;\n  constructor(\n    private finishPolymerBondCreationModelChange: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n    private deletePolymerBondCreationModelChange: (polymerBond) => void,\n  ) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange(\n      this.polymerBond,\n    );\n    renderersManager.finishPolymerBondCreation(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.deletePolymerBondCreationModelChange(this.polymerBond);\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n}\n\nexport class SelectLayoutModeOperation implements Operation {\n  private onExecute;\n  private onInvert;\n\n  constructor(\n    public _onExecute: () => void,\n    public _onInvert: () => void,\n    public mode,\n    public prevMode,\n  ) {\n    this.onExecute = _onExecute;\n    this.onInvert = _onInvert;\n  }\n\n  public execute(): void {\n    this.onExecute();\n  }\n\n  public invert(): void {\n    this.onInvert();\n  }\n}\n","import { Command } from 'domain/entities/Command';\nimport { SelectLayoutModeOperation } from '../operations/polymerBond';\nimport { CoreEditor } from '../internal';\nimport { LayoutMode, modesMap } from 'application/editor/modes';\n\nexport abstract class BaseMode {\n  protected constructor(\n    public modeName: LayoutMode,\n    public previousMode: LayoutMode = 'flex-layout-mode',\n  ) {}\n\n  private changeMode(editor: CoreEditor, modeName: LayoutMode) {\n    editor.events.layoutModeChange.dispatch(modeName);\n    const ModeConstructor = modesMap[modeName];\n    editor.setMode(new ModeConstructor());\n    editor.mode.initialize();\n  }\n\n  public initialize() {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n\n    command.addOperation(\n      new SelectLayoutModeOperation(\n        this.changeMode.bind(this, editor, this.modeName),\n        this.changeMode.bind(this, editor, this.previousMode),\n        this.modeName,\n        this.previousMode,\n      ),\n    );\n\n    editor.events.selectTool.dispatch('select-rectangle');\n\n    return command;\n  }\n\n  abstract onKeyDown(event: KeyboardEvent): void;\n\n  public destroy() {}\n}\n","import { CoreEditor } from 'application/editor/internal';\nimport { LayoutMode } from 'application/editor/modes/types';\nimport { BaseMode } from 'application/editor/modes/internal';\nexport class FlexMode extends BaseMode {\n  constructor(previousMode?: LayoutMode) {\n    super('flex-layout-mode', previousMode);\n  }\n\n  initialize() {\n    const command = super.initialize();\n    const editor = CoreEditor.provideEditorInstance();\n\n    const modelChanges =\n      editor.drawingEntitiesManager.applyFlexLayoutMode(true);\n\n    editor.renderersContainer.update(modelChanges);\n\n    return command;\n  }\n\n  public onKeyDown(_event: KeyboardEvent) {}\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class EmptySubChain extends BaseSubChain {}\n","import { BaseMonomer } from './BaseMonomer';\nimport { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { Struct } from 'domain/entities/struct';\n\nfunction getEmptyMonomerItem() {\n  return {\n    label: '',\n    struct: new Struct(),\n    props: {\n      MonomerNaturalAnalogCode: '',\n      MonomerName: '',\n      Name: '',\n    },\n  };\n}\n\nexport class EmptyMonomer extends BaseMonomer {\n  constructor() {\n    super(getEmptyMonomerItem());\n  }\n\n  public getValidSourcePoint() {\n    return undefined;\n  }\n\n  public getValidTargetPoint() {\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return EmptySubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining() {\n    return true;\n  }\n}\n","import { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { EmptyMonomer } from 'domain/entities/EmptyMonomer';\n\nexport class EmptySequenceNode {\n  public renderer?: BaseSequenceItemRenderer = undefined;\n  public monomer = new EmptyMonomer();\n  constructor() {}\n\n  public get SubChainConstructor() {\n    return EmptySubChain;\n  }\n\n  public get firstMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get lastMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get hovered() {\n    return false;\n  }\n\n  public get selected() {\n    return false;\n  }\n\n  public get monomerItem() {\n    return { props: { MonomerNaturalAnalogCode: null } };\n  }\n\n  public get monomers() {\n    return [];\n  }\n\n  public setRenderer(renderer) {\n    this.renderer = renderer;\n    this.monomer.setRenderer(renderer);\n  }\n\n  public get modified() {\n    return false;\n  }\n}\n","import { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { CoreEditor } from 'application/editor/internal';\nimport { SequenceMode } from 'application/editor/modes';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport assert from 'assert';\n\nconst CHAIN_START_ARROW_SYMBOL_ID = 'sequence-start-arrow';\n\nexport abstract class BaseSequenceItemRenderer extends BaseSequenceRenderer {\n  private editorEvents: typeof editorEvents;\n  public textElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public counterElement?: D3SvgElementSelection<SVGTextElement, void>;\n  private selectionRectangle?: D3SvgElementSelection<SVGRectElement, void>;\n  private selectionBorder?: D3SvgElementSelection<SVGUseElement, void>;\n  public spacerElement?: D3SvgElementSelection<SVGGElement, void>;\n  public backgroundElement?: D3SvgElementSelection<SVGRectElement, void>;\n\n  constructor(\n    public node: SubChainNode,\n    private firstNodeInChainPosition: Vec2,\n    private monomerIndexInChain: number,\n    private isLastMonomerInChain: boolean,\n    private subChain: BaseSubChain,\n    private _isEditingSymbol: boolean,\n    public monomerSize: { width: number; height: number },\n    public scaledMonomerPosition: Vec2,\n  ) {\n    super(node.monomer);\n    this.editorEvents = editorEvents;\n  }\n\n  abstract get symbolToDisplay(): string;\n\n  public get isEditingSymbol() {\n    return this._isEditingSymbol;\n  }\n\n  public set isEditingSymbol(isEditingSymbol: boolean) {\n    this._isEditingSymbol = isEditingSymbol;\n  }\n\n  protected appendHover(): D3SvgElementSelection<SVGUseElement, void> | void {\n    return undefined;\n  }\n\n  protected appendHoverAreaElement(): void {}\n  moveSelection(): void {}\n\n  public get currentSubChain() {\n    return this.subChain;\n  }\n\n  public get scaledMonomerPositionForSequence() {\n    const indexInRow = this.monomerIndexInChain % this.symbolsInRow;\n    const rowIndex = Math.floor(this.monomerIndexInChain / this.symbolsInRow);\n\n    return new Vec2(\n      this.firstNodeInChainPosition.x +\n        indexInRow * 20 +\n        Math.floor(indexInRow / this.nthSeparationInRow) * 10,\n      this.firstNodeInChainPosition.y + 47 * rowIndex,\n    );\n  }\n\n  public get center() {\n    return this.scaledMonomerPositionForSequence.add(new Vec2(4.5, 0, 0));\n  }\n\n  private get isSequenceEditModeTurnedOn() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    return editor.mode instanceof SequenceMode && editor.mode.isEditMode;\n  }\n\n  private appendRootElement() {\n    return this.canvas\n      .append('g')\n      .data([this])\n      .attr('transition', 'transform 0.2s')\n      .attr(\n        'transform',\n        `translate(${this.scaledMonomerPositionForSequence.x}, ${this.scaledMonomerPositionForSequence.y})`,\n      ) as never as D3SvgElementSelection<SVGGElement, void>;\n  }\n\n  private appendBackgroundElement() {\n    const backgroundElement = this.rootElement\n      ?.append('rect')\n      .attr('width', 16)\n      .attr('height', 20)\n      .attr('y', -16)\n      .attr('x', -2)\n      .attr('rx', 2)\n      .attr('cursor', 'text');\n\n    if (this.node.modified) {\n      backgroundElement?.attr('stroke', '#585858').attr('stroke-width', '1px');\n    }\n\n    backgroundElement?.attr(\n      'fill',\n      this.isSequenceEditModeTurnedOn ? '#FF7A001A' : 'transparent',\n    );\n\n    return backgroundElement;\n  }\n\n  private appendSpacerElement() {\n    const spacerGroupElement = this.rootElement\n      ?.append('g')\n      .attr('transform', 'translate(14, -16)');\n\n    spacerGroupElement\n      ?.append('rect')\n      .attr('width', 4)\n      .attr('height', 20)\n      .attr('cursor', 'text')\n      .attr('fill', 'transparent');\n\n    return spacerGroupElement;\n  }\n\n  private get nthSeparationInRow() {\n    return 10;\n  }\n\n  private get symbolsInRow() {\n    return 30;\n  }\n\n  private appendCounterElement(\n    rootElement: D3SvgElementSelection<SVGGElement, void>,\n  ) {\n    return rootElement\n      .append('text')\n      .attr('x', '-2')\n      .attr('y', '-24')\n      .text(this.monomerIndexInChain + 1)\n      .attr('font-family', 'Courier New')\n      .attr('font-size', '12px')\n      .attr('font-weight', '700')\n      .attr('fill', '#7C7C7F');\n  }\n\n  private get needDisplayCounter() {\n    return (\n      ((this.monomerIndexInChain + 1) % this.nthSeparationInRow === 0 ||\n        this.isLastMonomerInChain) &&\n      !(this.node instanceof EmptySequenceNode)\n    );\n  }\n\n  private get isBeginningOfChain() {\n    return this.monomerIndexInChain === 0;\n  }\n\n  public appendCaretElement() {\n    this.spacerElement\n      ?.append('line')\n      .attr('x1', -16)\n      .attr('y1', -1)\n      .attr('x2', -16)\n      .attr('y2', 21)\n      .attr('stroke', '#333')\n      .attr('class', 'blinking');\n  }\n\n  private drawHover() {\n    this.backgroundElement?.attr(\n      'fill',\n      this.isSequenceEditModeTurnedOn ? '#FF7A0033' : '#EFF2F5',\n    );\n  }\n\n  protected removeHover() {\n    this.backgroundElement?.attr(\n      'fill',\n      this.isSequenceEditModeTurnedOn ? '#FF7A001A' : 'transparent',\n    );\n  }\n\n  private appendChainStartArrow() {\n    this.rootElement\n      ?.append('use')\n      .attr('x', -17)\n      .attr('y', -27)\n      .attr('href', `#${CHAIN_START_ARROW_SYMBOL_ID}`);\n  }\n\n  show(): void {\n    this.rootElement = this.appendRootElement();\n    if (this.isBeginningOfChain && this.isSequenceEditModeTurnedOn) {\n      this.appendChainStartArrow();\n    }\n    this.spacerElement = this.appendSpacerElement();\n    this.backgroundElement = this.appendBackgroundElement();\n\n    if (this.isSequenceEditModeTurnedOn) {\n      if (this.isEditingSymbol) {\n        this.appendCaretElement();\n      }\n      this.drawSelection();\n    }\n\n    this.textElement = this.rootElement\n      .append('text')\n      .text(this.symbolToDisplay)\n      .attr('font-family', 'Courier New')\n      .attr('font-size', '20px')\n      .attr('font-weight', '700')\n      .attr('fill', '#333333');\n\n    this.appendEvents();\n    if (this.needDisplayCounter) {\n      this.counterElement = this.appendCounterElement(this.rootElement);\n    }\n\n    this.rootElement.on('mouseover', () => {\n      if (!this.node.monomer.selected) {\n        this.drawHover();\n      }\n    });\n\n    this.rootElement.on('mouseleave', () => {\n      this.removeHover();\n    });\n  }\n\n  drawSelection(): void {\n    if (!this.rootElement) {\n      return;\n    }\n    if (this.node.monomer.selected) {\n      this.appendSelection();\n      this.removeHover();\n      this.raiseElement();\n    } else {\n      this.removeSelection();\n    }\n  }\n\n  public appendSelection() {\n    if (this.selectionRectangle) {\n      this.selectionRectangle\n        .attr('x', this.scaledMonomerPositionForSequence.x - 4)\n        .attr('y', this.scaledMonomerPositionForSequence.y - 16)\n        .attr('width', 20)\n        .attr('height', 20);\n    } else {\n      this.selectionBorder = this.rootElement\n        ?.append('use')\n        .attr('href', this.monomerIndexInChain)\n        .attr('stroke', '#57FF8F')\n        .attr('pointer-events', 'none');\n\n      this.selectionRectangle = this.canvas\n        ?.insert('rect', ':first-child')\n        .attr('opacity', '0.7')\n        .attr('fill', '#57FF8F')\n        .attr('x', this.scaledMonomerPositionForSequence.x - 4)\n        .attr('y', this.scaledMonomerPositionForSequence.y - 16)\n        .attr('width', 20)\n        .attr('height', 20);\n    }\n  }\n\n  public removeSelection() {\n    this.selectionRectangle?.remove();\n    this.selectionBorder?.remove();\n    this.selectionRectangle = undefined;\n    this.selectionBorder = undefined;\n  }\n\n  private raiseElement() {\n    this.selectionRectangle?.raise();\n    this.rootElement?.raise();\n  }\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n    this.removeSelection();\n  }\n\n  public setEnumeration() {}\n  public redrawEnumeration() {}\n  public redrawAttachmentPoints() {}\n  public redrawAttachmentPointsCoordinates() {}\n  public get enumeration() {\n    return null;\n  }\n\n  public hoverAttachmenPoint() {}\n  public updateAttachmentPoints() {}\n  private appendEvents() {\n    assert(this.textElement);\n\n    this.textElement.on('mouseover', (event) => {\n      this.editorEvents.mouseOverSequenceItem.dispatch(event);\n    });\n    this.textElement.on('mousemove', (event) => {\n      this.editorEvents.mouseOnMoveSequenceItem.dispatch(event);\n    });\n    this.textElement.on('mouseleave', (event) => {\n      this.editorEvents.mouseLeaveSequenceItem.dispatch(event);\n    });\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PeptideSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return this.node.monomer.monomerItem.props.MonomerNaturalAnalogCode || '@';\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class ChemSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return '@';\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PhosphateSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return 'p';\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class NucleotideSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return (\n      this.node.monomer.attachmentPointsToBonds.R3?.getAnotherMonomer(\n        this.node.monomer,\n      )?.monomerItem?.props.MonomerNaturalAnalogCode || '@'\n    );\n  }\n}\n","export enum RNA_DNA_NON_MODIFIED_PART {\n  SUGAR_RNA = 'R',\n  SUGAR_DNA = 'dR',\n  PHOSPHATE = 'P',\n}\n\nexport const rnaDnaNaturalAnalogues = ['A', 'T', 'G', 'C', 'U'];\nexport const peptideNaturalAnalogues = [\n  'A',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'K',\n  'L',\n  'M',\n  'N',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'V',\n  'W',\n  'Y',\n];\n","import { CoreEditor } from 'application/editor/internal';\nimport { SequenceType } from 'domain/entities';\nimport { RNA_DNA_NON_MODIFIED_PART } from 'domain/constants/monomers';\n\nexport function getRnaPartLibraryItem(editor: CoreEditor, rnaBaseName: string) {\n  return editor.monomersLibrary.RNA.find(\n    (libraryItem) => libraryItem.props.MonomerName === rnaBaseName,\n  );\n}\n\nexport function getPeptideLibraryItem(editor: CoreEditor, peptideName: string) {\n  return editor.monomersLibrary.PEPTIDE.find(\n    (libraryItem) => libraryItem.props.MonomerName === peptideName,\n  );\n}\n\nexport function getSugarBySequenceType(sequenceType: SequenceType) {\n  switch (sequenceType) {\n    case SequenceType.DNA:\n      return RNA_DNA_NON_MODIFIED_PART.SUGAR_DNA;\n    case SequenceType.RNA:\n      return RNA_DNA_NON_MODIFIED_PART.SUGAR_RNA;\n    default:\n      return undefined;\n  }\n}\n","import { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Sugar } from 'domain/entities/Sugar';\nimport assert from 'assert';\nimport {\n  getPhosphateFromSugar,\n  getRnaBaseFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { CoreEditor } from 'application/editor/internal';\nimport { Vec2 } from 'domain/entities/vec2';\nimport {\n  getRnaPartLibraryItem,\n  getSugarBySequenceType,\n} from 'domain/helpers/rna';\nimport { RNA_DNA_NON_MODIFIED_PART } from 'domain/constants/monomers';\n\nexport class Nucleotide {\n  constructor(\n    public sugar: Sugar,\n    public rnaBase: RNABase,\n    public phosphate: Phosphate,\n  ) {}\n\n  static fromSugar(sugar: Sugar, needValidation = true) {\n    if (needValidation) {\n      assert(\n        isValidNucleotide(sugar),\n        'Nucleotide is not valid. Please check nucleotide parts connections.',\n      );\n\n      const isNucleoside = isValidNucleoside(sugar);\n      assert(\n        !isNucleoside,\n        'Nucleotide is nucleoside because it is a last sugar+base of rna chain',\n      );\n    }\n\n    return new Nucleotide(\n      sugar,\n      getRnaBaseFromSugar(sugar) as RNABase,\n      getPhosphateFromSugar(sugar) as Phosphate,\n    );\n  }\n\n  static createOnCanvas(rnaBaseName: string, position: Vec2) {\n    const editor = CoreEditor.provideEditorInstance();\n    const rnaBaseLibraryItem = getRnaPartLibraryItem(editor, rnaBaseName);\n    const phosphateLibraryItem = getRnaPartLibraryItem(\n      editor,\n      RNA_DNA_NON_MODIFIED_PART.PHOSPHATE,\n    );\n    const sugarName = getSugarBySequenceType(editor.sequenceTypeEnterMode);\n    assert(sugarName);\n\n    const sugarLibraryItem = getRnaPartLibraryItem(editor, sugarName);\n\n    assert(sugarLibraryItem);\n    assert(rnaBaseLibraryItem);\n    assert(phosphateLibraryItem);\n\n    const { command: modelChanges, monomers } =\n      editor.drawingEntitiesManager.addRnaPreset({\n        sugar: sugarLibraryItem,\n        sugarPosition: position,\n        rnaBase: rnaBaseLibraryItem,\n        rnaBasePosition: position,\n        phosphate: phosphateLibraryItem,\n        phosphatePosition: position,\n      });\n\n    const sugar = monomers.find((monomer) => monomer instanceof Sugar) as Sugar;\n\n    return { modelChanges, node: Nucleotide.fromSugar(sugar, false) };\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return this.sugar.isMonomerTypeDifferentForChaining(monomerToChain);\n  }\n\n  public get SubChainConstructor() {\n    return this.sugar.SubChainConstructor;\n  }\n\n  public get monomer() {\n    return this.sugar;\n  }\n\n  public get monomers() {\n    return [this.sugar, this.rnaBase, this.phosphate];\n  }\n\n  public get firstMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get lastMonomerInNode() {\n    return this.phosphate;\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return this.sugar.label !== RNA_DNA_NON_MODIFIED_PART.SUGAR_RNA;\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class EmptySequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return '';\n  }\n}\n","import { Chem, Peptide, Phosphate, Vec2 } from 'domain/entities';\nimport { PeptideSequenceItemRenderer } from 'application/render/renderers/sequence/PeptideSequenceItemRenderer';\nimport { ChemSequenceItemRenderer } from 'application/render/renderers/sequence/ChemSequenceItemRenderer';\nimport { PhosphateSequenceItemRenderer } from 'application/render/renderers/sequence/PhosphateSequenceItemRenderer';\nimport { NucleotideSequenceItemRenderer } from 'application/render/renderers/sequence/NucleotideSequenceItemRenderer';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { EmptySequenceItemRenderer } from 'application/render/renderers/sequence/EmptySequenceItemRenderer';\nimport { BaseMonomerRenderer } from 'application/render';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class SequenceNodeRendererFactory {\n  static fromNode(\n    node: SubChainNode,\n    firstMonomerInChainPosition: Vec2,\n    monomerIndexInChain: number,\n    isLastMonomerInChain: boolean,\n    subChain: BaseSubChain,\n    isEditingSymbol: boolean,\n    renderer?: BaseMonomerRenderer | BaseSequenceItemRenderer,\n  ) {\n    let RendererClass;\n\n    switch (node.constructor) {\n      case Nucleotide:\n        RendererClass = NucleotideSequenceItemRenderer;\n        break;\n      case Nucleoside:\n        RendererClass = NucleotideSequenceItemRenderer;\n        break;\n      case EmptySequenceNode:\n        RendererClass = EmptySequenceItemRenderer;\n        break;\n      default:\n        switch (node.monomer.constructor) {\n          case Phosphate:\n            RendererClass = PhosphateSequenceItemRenderer;\n            break;\n          case Peptide:\n            RendererClass = PeptideSequenceItemRenderer;\n            break;\n          case Chem:\n            RendererClass = ChemSequenceItemRenderer;\n            break;\n          default:\n            RendererClass = ChemSequenceItemRenderer;\n            break;\n        }\n    }\n\n    return new RendererClass(\n      node,\n      firstMonomerInChainPosition,\n      monomerIndexInChain,\n      isLastMonomerInChain,\n      subChain,\n      isEditingSymbol,\n      renderer?.monomerSize,\n      renderer?.scaledMonomerPosition,\n    );\n  }\n}\n","import { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { SubChainNode, Vec2 } from 'domain/entities';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PolymerBondSequenceRenderer extends BaseSequenceRenderer {\n  private selectionElement:\n    | D3SvgElementSelection<SVGPathElement, void>\n    | undefined;\n\n  constructor(\n    public polymerBond: PolymerBond,\n    private firstNode?: SubChainNode,\n    private secondNode?: SubChainNode,\n  ) {\n    super(polymerBond);\n  }\n\n  private get firstMonomer() {\n    return this.firstNode?.monomer || this.polymerBond.firstMonomer;\n  }\n\n  private get secondMonomer() {\n    return this.secondNode?.monomer || this.polymerBond.secondMonomer;\n  }\n\n  private get areMonomersOnSameRow() {\n    assert(this.firstMonomer.renderer instanceof BaseSequenceItemRenderer);\n    assert(this.secondMonomer?.renderer instanceof BaseSequenceItemRenderer);\n\n    return (\n      this.firstMonomer.renderer?.scaledMonomerPositionForSequence.y ===\n      this.secondMonomer?.renderer?.scaledMonomerPositionForSequence.y\n    );\n  }\n\n  public get scaledPosition() {\n    assert(this.firstMonomer.renderer instanceof BaseSequenceItemRenderer);\n    assert(this.secondMonomer?.renderer instanceof BaseSequenceItemRenderer);\n    const firstMonomerY =\n      this.firstMonomer.renderer.scaledMonomerPositionForSequence.y;\n    const firstMonomerX =\n      this.firstMonomer.renderer.scaledMonomerPositionForSequence.x;\n    const secondMonomerY =\n      this.secondMonomer.renderer.scaledMonomerPositionForSequence.y;\n    const secondMonomerX =\n      this.secondMonomer.renderer.scaledMonomerPositionForSequence.x;\n\n    return {\n      startPosition: new Vec2(firstMonomerX, firstMonomerY),\n      endPosition: new Vec2(secondMonomerX, secondMonomerY),\n    };\n  }\n\n  public get center() {\n    return Vec2.centre(\n      new Vec2(\n        this.scaledPosition.startPosition.x + 6,\n        this.mainLineY.mainLineY1,\n      ),\n      new Vec2(\n        this.scaledPosition.startPosition.x + 6,\n        this.mainLineY.mainLineY2,\n      ),\n    );\n  }\n\n  private get mainLineY() {\n    const mainLineY1 =\n      this.scaledPosition.startPosition.y -\n      (this.scaledPosition.startPosition.y > this.scaledPosition.endPosition.y\n        ? 15\n        : -3) +\n      (this.areMonomersOnSameRow ? -25 : 0);\n\n    const mainLineY2 =\n      this.scaledPosition.endPosition.y -\n      (this.scaledPosition.endPosition.y > this.scaledPosition.startPosition.y\n        ? 15\n        : -3) +\n      (this.areMonomersOnSameRow ? -25 : 0);\n    return { mainLineY1, mainLineY2 };\n  }\n\n  public show() {\n    this.rootElement = this.canvas\n      .insert('g', `:first-child`)\n      .data([this]) as never as D3SvgElementSelection<SVGGElement, void>;\n\n    this.rootElement\n      ?.append('path')\n      .attr('stroke', 'black')\n      .attr('fill', 'none')\n      .attr('d', this.getBondPath());\n  }\n\n  public drawSelection() {\n    assert(this.rootElement);\n    if (this.polymerBond.selected) {\n      this.selectionElement?.remove();\n      this.selectionElement = this.rootElement\n        ?.insert('path', ':first-child')\n        .attr('stroke', '#57FF8F')\n        .attr('stroke-width', '6')\n        .attr('fill', 'none');\n\n      this.selectionElement.attr('d', this.getBondPath());\n    } else {\n      this.selectionElement?.remove();\n    }\n  }\n\n  private getBondPath() {\n    let path = '';\n    if (this.areMonomersOnSameRow) {\n      path = `M ${this.scaledPosition.startPosition.x + 6},\n      ${this.mainLineY.mainLineY1 + 5} \n      L ${this.scaledPosition.startPosition.x + 6}, ${\n        this.mainLineY.mainLineY1\n      } \n      L ${this.scaledPosition.endPosition.x + 6}, ${this.mainLineY.mainLineY2}\n      L ${this.scaledPosition.endPosition.x + 6}, ${\n        this.mainLineY.mainLineY2 + 5\n      }`;\n    } else {\n      path = `M ${this.scaledPosition.startPosition.x + 6}, ${\n        this.mainLineY.mainLineY1\n      } L ${this.scaledPosition.endPosition.x + 6}, ${\n        this.mainLineY.mainLineY2\n      }`;\n    }\n    return path;\n  }\n\n  public moveStart() {}\n\n  public moveEnd() {}\n\n  public get isSnake() {\n    return false;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return false;\n  }\n}\n","import { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\n\nexport class BackBoneBondSequenceRenderer extends BaseSequenceRenderer {\n  constructor(polymerBond: PolymerBond) {\n    super(polymerBond);\n  }\n\n  public get isSnake() {\n    return false;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return false;\n  }\n\n  public moveStart() {}\n\n  public moveEnd() {}\n}\n","import { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { BaseMonomer } from './BaseMonomer';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { AttachmentPointName } from 'domain/types';\nimport { BackBoneBondSequenceRenderer } from 'application/render/renderers/sequence/BackBoneBondSequenceRenderer';\nimport { PolymerBondSequenceRenderer } from 'application/render/renderers/sequence/PolymerBondSequenceRenderer';\n\nexport class PolymerBond extends DrawingEntity {\n  public secondMonomer?: BaseMonomer;\n  public renderer?:\n    | PolymerBondRenderer\n    | BackBoneBondSequenceRenderer\n    | PolymerBondSequenceRenderer = undefined;\n\n  public endPosition: Vec2 = new Vec2();\n\n  constructor(public firstMonomer: BaseMonomer, secondMonomer?: BaseMonomer) {\n    super();\n    this.firstMonomer = firstMonomer;\n    this.secondMonomer = secondMonomer;\n  }\n\n  public setFirstMonomer(monomer: BaseMonomer) {\n    this.firstMonomer = monomer;\n  }\n\n  public setSecondMonomer(monomer: BaseMonomer) {\n    this.secondMonomer = monomer;\n  }\n\n  public setRenderer(\n    renderer:\n      | PolymerBondRenderer\n      | BackBoneBondSequenceRenderer\n      | PolymerBondSequenceRenderer,\n  ) {\n    super.setBaseRenderer(renderer as BaseRenderer);\n    this.renderer = renderer;\n  }\n\n  public get finished() {\n    return Boolean(this.firstMonomer && this.secondMonomer);\n  }\n\n  public get center() {\n    return Vec2.centre(this.startPosition, this.endPosition);\n  }\n\n  public moveToLinkedMonomers() {\n    const firstMonomerCenter = this.firstMonomer.position;\n    const secondMonomerCenter = this.secondMonomer?.position;\n    this.moveBondStartAbsolute(firstMonomerCenter.x, firstMonomerCenter.y);\n    if (secondMonomerCenter) {\n      this.moveBondEndAbsolute(secondMonomerCenter.x, secondMonomerCenter.y);\n    }\n  }\n\n  public moveBondStartAbsolute(x, y) {\n    this.moveAbsolute(new Vec2(x, y));\n  }\n\n  public moveBondEndAbsolute(x, y) {\n    this.endPosition = new Vec2(x, y);\n  }\n\n  public get startPosition() {\n    return this.position;\n  }\n\n  public getAnotherMonomer(monomer: BaseMonomer) {\n    return this.firstMonomer === monomer\n      ? this.secondMonomer\n      : this.firstMonomer;\n  }\n\n  public static get backBoneChainAttachmentPoints() {\n    return [AttachmentPointName.R1, AttachmentPointName.R2];\n  }\n\n  public get isBackBoneChainConnection() {\n    return !this.isSideChainConnection;\n  }\n\n  public get isSideChainConnection() {\n    const firstMonomerAttachmentPoint =\n      this.firstMonomer.getAttachmentPointByBond(this);\n    const secondMonomerAttachmentPoint =\n      this.secondMonomer?.getAttachmentPointByBond(this);\n\n    if (!firstMonomerAttachmentPoint || !secondMonomerAttachmentPoint) {\n      return false;\n    }\n\n    return (\n      !(\n        PolymerBond.backBoneChainAttachmentPoints.includes(\n          firstMonomerAttachmentPoint,\n        ) &&\n        PolymerBond.backBoneChainAttachmentPoints.includes(\n          secondMonomerAttachmentPoint,\n        )\n      ) || firstMonomerAttachmentPoint === secondMonomerAttachmentPoint\n    );\n  }\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class MonomerSequenceNode {\n  constructor(public monomer: BaseMonomer) {}\n\n  public get SubChainConstructor() {\n    return this.monomer.SubChainConstructor;\n  }\n\n  public get firstMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get lastMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get monomers() {\n    return [this.monomer];\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return false;\n  }\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { BaseMonomer, Sugar } from 'domain/entities';\nimport {\n  getNextMonomerInChain,\n  getPhosphateFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { MonomerSequenceNode } from 'domain/entities/MonomerSequenceNode';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\n\nexport class Chain {\n  public subChains: BaseSubChain[] = [];\n\n  public firstMonomer: BaseMonomer | null;\n\n  public isCyclic = false;\n\n  constructor(firstMonomer?: BaseMonomer, isCyclic?: boolean) {\n    this.firstMonomer = null;\n\n    if (firstMonomer) {\n      this.firstMonomer = firstMonomer;\n\n      this.fillSubChains(firstMonomer);\n    }\n\n    if (isCyclic) {\n      this.isCyclic = isCyclic;\n    }\n  }\n\n  public add(monomer: BaseMonomer) {\n    const needCreateNewSubchain =\n      !this.lastNode?.monomer ||\n      monomer.isMonomerTypeDifferentForChaining(this.lastNode.monomer);\n\n    if (needCreateNewSubchain) {\n      this.subChains.push(new monomer.SubChainConstructor());\n    }\n\n    if (!(monomer instanceof Sugar)) {\n      this.lastSubChain.add(new MonomerSequenceNode(monomer));\n    } else if (isValidNucleoside(monomer)) {\n      this.lastSubChain.add(Nucleoside.fromSugar(monomer));\n    } else if (isValidNucleotide(monomer)) {\n      this.lastSubChain.add(Nucleotide.fromSugar(monomer));\n    } else {\n      this.lastSubChain.add(new MonomerSequenceNode(monomer));\n    }\n  }\n\n  private fillSubChains(monomer?: BaseMonomer) {\n    if (!monomer) return;\n\n    this.add(monomer);\n    if (this.lastNode instanceof Nucleotide) {\n      this.fillSubChains(\n        getNextMonomerInChain(\n          getPhosphateFromSugar(monomer),\n          this.firstMonomer,\n        ),\n      );\n    } else {\n      this.fillSubChains(getNextMonomerInChain(monomer, this.firstMonomer));\n    }\n  }\n\n  public get lastSubChain() {\n    return this.subChains[this.subChains.length - 1];\n  }\n\n  public get lastNode() {\n    return this.lastSubChain?.lastNode;\n  }\n\n  public get firstSubChain() {\n    return this.subChains[0];\n  }\n\n  public get firstNode() {\n    return this.firstSubChain?.firstNode;\n  }\n\n  public get length() {\n    let length = 0;\n    this.subChains.forEach((subChain) => {\n      length += subChain.length;\n    });\n\n    return length;\n  }\n\n  public get isEmpty() {\n    return (\n      this.subChains.length === 1 &&\n      this.subChains[0].nodes.length === 1 &&\n      this.subChains[0].nodes[0] instanceof EmptySequenceNode\n    );\n  }\n\n  public forEachNode(callback: ({ node, subChain }) => void) {\n    this.subChains.forEach((subChain) => {\n      subChain.nodes.forEach((node) => {\n        callback({ node, subChain });\n      });\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { CoreEditor } from 'application/editor/internal';\nimport { SequenceMode } from 'application/editor/modes';\nimport {\n  SequencePointer,\n  SequenceRenderer,\n} from 'application/render/renderers/sequence/SequenceRenderer';\nimport assert from 'assert';\n\nexport class ReinitializeSequenceModeCommand implements Operation {\n  constructor() {}\n\n  public execute(_renderersManager: RenderersManager) {\n    const editor = CoreEditor.provideEditorInstance();\n    assert(editor.mode instanceof SequenceMode);\n    editor.mode.initialize(false);\n  }\n\n  public invert(_renderersManager: RenderersManager) {\n    const editor = CoreEditor.provideEditorInstance();\n    assert(editor.mode instanceof SequenceMode);\n    editor.mode.initialize(false);\n  }\n}\n\nexport class RestoreSequenceCaretPositionCommand implements Operation {\n  constructor(\n    private previousPosition: SequencePointer,\n    private nextPosition: SequencePointer,\n  ) {\n    this.execute();\n  }\n\n  public execute() {\n    SequenceRenderer.setCaretPosition(this.nextPosition);\n  }\n\n  public invert(_renderersManager: RenderersManager) {\n    SequenceRenderer.setCaretPosition(this.previousPosition);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael';\nimport { Vec2 } from 'domain/entities';\n\n// TODO: refactor ugly prototype extensions to plain old functions\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: remove any for raphael\n(Raphael.el as any).translateAbs = function (x: number, y: number): void {\n  this.delta = this.delta || new Vec2();\n  // TODO check that only numbers might be passed to this function\n  this.delta.x += x - 0;\n  this.delta.y += y - 0;\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString());\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: remove any for raphael\n(Raphael.st as any).translateAbs = function (x: number, y: number): void {\n  this.forEach((el) => {\n    el.translateAbs(x, y);\n  });\n};\n\nexport default Raphael;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs } from 'domain/entities/box2Abs';\nimport { Vec2 } from 'domain/entities/vec2';\n\nclass Visel {\n  constructor(type) {\n    this.type = type;\n    this.paths = [];\n    /** @type {Box2Abs[]} */\n    this.boxes = [];\n    /** @type {Box2Abs | null} */\n    this.boundingBox = null;\n    this.oldBoundingBox = null;\n    this.exts = [];\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path);\n    if (bb) {\n      this.boxes.push(bb);\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb);\n    }\n    if (ext) this.exts.push(ext);\n  }\n\n  clear() {\n    this.paths = [];\n    this.boxes = [];\n    this.exts = [];\n    if (this.boundingBox !== null) {\n      this.oldBoundingBox = this.boundingBox.clone();\n    }\n    this.boundingBox = null;\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected');\n    }\n    if (args.length === 1) {\n      const vector = args[0];\n      this.translate(vector.x, vector.y);\n    } else {\n      const x = args[0];\n      const y = args[1];\n      const delta = new Vec2(x, y);\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y);\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta);\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta);\n      }\n    }\n  }\n\n  /**\n   * @param {number} degree\n   * @param {Vec2} center\n   */\n  rotate(degree, center) {\n    for (let i = 0; i < this.paths.length; ++i) {\n      this.paths[i].rotate(degree, center.x, center.y);\n    }\n\n    for (let j = 0; j < this.boxes.length; ++j) {\n      this.boxes[j] = this.boxes[j].transform((point) =>\n        point.rotateAroundOrigin(degree, center),\n      );\n    }\n    if (this.boundingBox !== null) {\n      this.boundingBox = this.boundingBox.transform((point) =>\n        point.rotateAroundOrigin(degree, center),\n      );\n    }\n  }\n}\n\nexport default Visel;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport Visel from './visel';\n\nclass ReObject {\n  public visel: Visel;\n  public hover = false;\n  public hovering: any = null;\n  public selected = false;\n  public selectionPlate: any = null;\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType);\n  }\n\n  changeSelectionStyle(options: any) {\n    const { hoverStyle } = options;\n    if (this.visel.type === 'simpleObject') {\n      this.hovering?.attr({\n        'fill-opacity': this.selected ? 1 : 0,\n      });\n    } else {\n      this.hovering?.attr({\n        fill: hoverStyle.fill,\n        'fill-opacity': this.selected ? 1 : 0,\n      });\n    }\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox;\n    if (vbox === null) return null;\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated());\n    }\n    return vbox.transform(Scale.canvasToModel, render.options);\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    const { options } = render;\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return;\n          noredraw = !this.hovering[0].removed;\n        } else {\n          noredraw = !this.hovering.removed;\n        }\n      }\n      if (noredraw) {\n        this.changeSelectionStyle(options);\n        this.hovering.show();\n      } else {\n        render.paper.setStart();\n        this.drawHover(render);\n        this.hovering = render.paper.setFinish();\n      }\n    } else if (this.hovering) {\n      this.changeSelectionStyle(options);\n      this.hovering.hide();\n    }\n\n    this.hover = hover;\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.');\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden');\n  }\n}\n\nexport default ReObject;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/*\n  This map is used to draw anything on 'layers'\n  You can treat these values as z-index: background has the lowest z-index, indices has the highest\n*/\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  atom = 'atom',\n  bondSkeleton = 'bondSkeleton',\n  warnings = 'warnings',\n  data = 'data',\n  additionalInfo = 'additionalInfo',\n  indices = 'indices',\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off',\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off',\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelAxisAlignedBoundingBox, RaphaelPaper } from 'raphael';\nimport { Atom, Bond, Box2Abs, HalfBond, Vec2 } from 'domain/entities';\nimport assert from 'assert';\nimport { ReStruct, LayerMap } from './restruct';\nimport Visel from './restruct/visel';\nimport { RelativeBox, RenderOptions } from './render.types';\n\nfunction relBox(box: RaphaelAxisAlignedBoundingBox): RelativeBox {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height,\n  };\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n */\nfunction shiftRayBox(p: Vec2, d: Vec2, bb: Box2Abs) {\n  assert(!!p);\n  assert(!!d);\n  assert(!!bb);\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y),\n  ];\n\n  const r = b.map((v) => v.sub(p)); // b relative to p\n\n  d = d.normalized();\n\n  const rc = r.map((v) => Vec2.cross(v, d)); // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)); // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1;\n  let nid = -1;\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i;\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i;\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0;\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid;\n  const id1 = rd[pid] > rd[nid] ? pid : nid;\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  );\n}\nfunction calcCoordinates(aPoint: Vec2, bPoint: Vec2, lengthHyp: number) {\n  const obj: {\n    pos1: null | { x: number; y: number };\n    pos2: null | { x: number; y: number };\n  } = { pos1: null, pos2: null };\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y };\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2;\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y;\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c;\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x;\n    const D = b * b - 4 * a * e;\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 };\n      obj.pos2 = { x: 0, y: 0 };\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a);\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a);\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x;\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x;\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 };\n    obj.pos2 = { x: 0, y: 0 };\n    obj.pos1.y = c / oPos2.y;\n    obj.pos2.y = c / oPos2.y;\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2);\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2);\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x;\n    obj.pos1.y += aPoint.y;\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x;\n    obj.pos2.y += aPoint.y;\n  }\n  return obj;\n}\n\nfunction getCIPValuePath({\n  paper,\n  cipLabelPosition,\n  atomOrBond,\n  options,\n}: {\n  paper: RaphaelPaper;\n  cipLabelPosition: Vec2;\n  atomOrBond: Atom | Bond;\n  options: RenderOptions;\n}) {\n  const text = paper\n    .text(cipLabelPosition.x, cipLabelPosition.y, `(${atomOrBond.cip})`)\n    .attr({\n      font: options.font,\n      'font-size': options.fontsz,\n    });\n  const box = text.getBBox();\n  const path = paper.set();\n  const rect = paper\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    .rect(box.x - 1, box.y - 1, box.width + 2, box.height + 2, 3, 3)\n    .attr({ fill: '#fff', stroke: '#fff' });\n  path.push(rect.toFront(), text.toFront());\n\n  return {\n    path,\n    text,\n    rectangle: rect,\n  };\n}\n\nfunction drawCIPLabel({\n  atomOrBond,\n  position,\n  restruct,\n  visel,\n}: {\n  atomOrBond: Bond | Atom;\n  position: Vec2;\n  restruct: ReStruct;\n  visel: Visel;\n}) {\n  const { options, paper } = restruct.render;\n  const path = paper.set();\n\n  const cipLabelPosition = position.scaled(options.microModeScale);\n  const cipValuePath = getCIPValuePath({\n    paper,\n    cipLabelPosition,\n    atomOrBond,\n    options,\n  });\n  const box = relBox(cipValuePath.path.getBBox());\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  cipValuePath.path.translateAbs(0.5 * box.width, -0.5 * box.height);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  path.push(cipValuePath.path.toFront());\n\n  restruct.addReObjectPath(LayerMap.additionalInfo, visel, path, null, true);\n\n  return cipValuePath;\n}\n\nfunction updateHalfBondCoordinates(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  xShift: number,\n): [HalfBond, HalfBond] {\n  if (hb1.p.y !== hb2.p.y) return [hb1, hb2];\n  if (hb1.p.x < hb2.p.x && hb1.p.y === hb2.p.y) {\n    hb1.p.x = hb1.p.x + xShift;\n  } else if (hb1.p.x > hb2.p.x) {\n    hb1.p.x = hb1.p.x - xShift;\n  }\n\n  return [hb1, hb2];\n}\nconst util = {\n  relBox,\n  shiftRayBox,\n  calcCoordinates,\n  drawCIPLabel,\n  updateHalfBondCoordinates,\n};\n\nexport default util;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelPaper, VMLElement as Element } from 'raphael';\nimport { HalfBond, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport Raphael from './raphael-ext';\nimport svgPath from 'svgpath';\nimport util from './util';\nimport { ArrowItem, RelativeBox, RenderOptions } from './render.types';\nimport { tfx } from 'utilities';\n\nfunction rectangle(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  return paper.rect(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    tfx(Math.min(points[0].x, points[1].x)),\n    tfx(Math.min(points[0].y, points[1].y)),\n    tfx(Math.abs(points[1].x - points[0].x)),\n    tfx(Math.abs(points[1].y - points[0].y)),\n  );\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  _paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  length: number,\n  angle: number,\n) {\n  const endX = start.x + length;\n  const [wOffset, hOffset] = [5, height || 8];\n\n  const path =\n    `M${tfx(start.x - wOffset)},${tfx(start.y)}` +\n    `L${tfx(start.x - wOffset)},${tfx(start.y - hOffset)}` +\n    `L${tfx(endX + wOffset)},${tfx(start.y - hOffset)}` +\n    `L${tfx(endX + wOffset)},${tfx(start.y + (!height ? hOffset : 0))}` +\n    `L${tfx(start.x - wOffset)},${tfx(start.y + (!height ? hOffset : 0))}Z`;\n\n  return svgPath(path).rotate(angle, start.x, start.y).toString();\n}\n\nfunction ellipse(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const rad = Vec2.diff(points[1], points[0]);\n  const rx = rad.x / 2;\n  const ry = rad.y / 2;\n  return paper.ellipse(\n    points[0].x + rx,\n    points[0].y + ry,\n    Math.abs(rx),\n    Math.abs(ry),\n  );\n}\n\nfunction polyline(paper: RaphaelPaper, points: Vec2[]) {\n  const path = ['M', points[0].x, points[0].y];\n  for (let i = 1; i < points.length; i++)\n    path.push('L', points[i].x, points[i].y);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(path);\n}\n\nfunction line(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const path = ['M', points[0].x, points[0].y];\n  path.push('L', points[1].x, points[1].y);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(path);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: raphael typing issues\nfunction arrow(\n  paper: RaphaelPaper,\n  item: ArrowItem,\n  length: number,\n  angle: number,\n  options: RenderOptions,\n  isResizing: boolean,\n) {\n  const shouldApplySnappingStyle =\n    isResizing &&\n    ['0', '-0', '90', '-90', '180', '-180'].includes(angle.toFixed());\n\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const arrowHeadLength = direction * 10;\n  const arrowHeadWidth = direction * 5;\n  const arrowHeadAttr = direction * 4;\n\n  const endX = start.x + arrowLength;\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadWidth)},${tfx(start.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const triangleLength = direction * 10;\n  const triangleWidth = direction * 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - triangleWidth)},${tfx(start.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const width = direction * 5;\n  const length = direction * 7;\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - width)},${tfx(start.y - length)}` +\n    `M${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX + width)}, ${tfx(start.y - length)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const width = direction * 5;\n  const length = direction * 7;\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX + width)}, ${tfx(start.y - length)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - length)},${tfx(start.y - width)}` +\n    `M${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - length)}, ${tfx(start.y + width)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}Z`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowFilledBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowHeadLength = 10;\n  const arrowHeadWidth = 5;\n  const arrowHeadAttr = 4;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadLength)},${tfx(start.y + arrowHeadWidth)}` +\n    `L${tfx(endX - arrowHeadLength + arrowHeadAttr)},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadLength)},${tfx(start.y - arrowHeadWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}Z`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowDashedOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n  const dashInterval = 3.5;\n\n  const path: string[] = [];\n\n  const endX = start.x + arrowLength;\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(start.x + i * dashInterval)},${tfx(start.y)}`);\n    } else {\n      path.push(`M${tfx(start.x + i * dashInterval)},${tfx(start.y)}`);\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n      `M${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowFailed(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowHeadLength = 10;\n  const arrowHeadWidth = 5;\n  const arrowHeadAttr = 4;\n  const failSignWidth = 8;\n\n  const endX = start.x + arrowLength;\n\n  const arrowCenter = endX - (endX - start.x) / 2;\n\n  const path: string[] = [];\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y)}` +\n      `L${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - arrowHeadLength)},${tfx(start.y + arrowHeadWidth)}` +\n      `L${tfx(endX - arrowHeadLength + arrowHeadAttr)},${tfx(start.y)}` +\n      `L${tfx(endX - arrowHeadLength)},${tfx(start.y - arrowHeadWidth)}` +\n      `L${tfx(endX)},${tfx(start.y)}Z`,\n  );\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(start.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(start.y - failSignWidth)}`,\n  );\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(start.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(start.y + failSignWidth)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(start.x + triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(start.x + triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(start.x)},${tfx(start.y)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const arrowHeadAttr = 2;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // Arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Arrowhead\n  path.push(\n    `M${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + arrowOffset)}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + arrowOffset)}` +\n      `L${tfx(start.x + arrowLen)},${start.y + lineOffset}Z` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y)}` +\n      `L${tfx(start.x + arrowLen)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - length)},${tfx(start.y - width - lineOffset)}`,\n  );\n\n  // Second arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + lineOffset + width)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const arrowHeadAttr = 2;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        start.y + lineOffset\n      }Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - length)},${tfx(start.y - width - lineOffset)}`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + lineOffset + width,\n      )}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 10;\n  const arrowHeadAttr = 2;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        start.y + lineOffset\n      }Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction plus(paper: RaphaelPaper, point: Vec2, options: RenderOptions) {\n  const s = options.microModeScale / 5;\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(point.x),\n      tfx(point.y),\n      tfx(point.x - s),\n      tfx(point.x + s),\n      tfx(point.y - s),\n      tfx(point.y + s),\n    )\n    .attr(options.lineattr);\n}\n\nfunction bondSingle(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleUp(\n  paper: RaphaelPaper,\n  a: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y),\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleStereoBold(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  a3: Vec2,\n  a4: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y),\n    )\n    .attr(options.lineattr)\n    .attr({\n      stroke: color,\n      fill: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  return bond;\n}\n\nfunction bondDoubleStereoBold(\n  paper: RaphaelPaper,\n  sgBondPath: Element,\n  b1: Vec2,\n  b2: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color,\n      })\n      .attr(isSnapping ? options.bondSnappingStyle : {}),\n  ]);\n}\n\nfunction bondSingleDown(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p;\n  const n = halfBond1.norm;\n  const bsp = 0.7 * options.stereoBond;\n\n  let path = '';\n  let p;\n  let q;\n  let r;\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i);\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5));\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5));\n    path += makeStroke(p, q);\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleEither(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p;\n  const n = halfBond1.norm;\n  const bsp = 0.7 * options.stereoBond;\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y);\n  let r = a;\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5));\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y);\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondDouble(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  b1: Vec2,\n  b2: Vec2,\n  cisTrans: boolean,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y),\n    )\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleOrDouble(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  nSect: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-statements, max-params\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  const n = halfBond1.norm;\n  const bsp = options.bondSpace / 2;\n\n  let path = '';\n  let pi;\n  let pp = a;\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect);\n    if (i & 1) {\n      path += makeStroke(pp, pi);\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp));\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp));\n    }\n    pp = pi;\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondTriple(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  const n = halfBond1.norm;\n  const a2 = a.addScaled(n, options.bondSpace);\n  const b2 = b.addScaled(n, options.bondSpace);\n  const a3 = a.addScaled(n, -options.bondSpace);\n  const b3 = b.addScaled(n, -options.bondSpace);\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondAromatic(\n  paper: RaphaelPaper,\n  paths: string[],\n  bondShift: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const l1 = paper\n    .path(paths[0])\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  const l2 = paper\n    .path(paths[1])\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  if (bondShift !== undefined && bondShift !== null) {\n    (bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' });\n  }\n\n  return paper.set([l1, l2]);\n}\n\nfunction bondAny(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondHydrogen(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({\n      'stroke-dasharray': '.',\n      'stroke-linecap': 'square',\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondDative(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction reactingCenter(\n  paper: RaphaelPaper,\n  points: Vec2[],\n  options: RenderOptions,\n) {\n  let pathDesc = '';\n  for (let i = 0; i < points.length / 2; ++i) {\n    pathDesc += makeStroke(points[2 * i], points[2 * i + 1]);\n  }\n  return paper.path(pathDesc).attr(options.lineattr);\n}\n\nfunction bondMark(\n  paper: RaphaelPaper,\n  point: Vec2,\n  mark: string | null,\n  options: RenderOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  const path = paper.text(point.x, point.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000',\n  });\n  const rbb = util.relBox(path.getBBox());\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  recenterText(path, rbb);\n  return path;\n}\n\nfunction radicalCap(paper: RaphaelPaper, point1: Vec2, options: RenderOptions) {\n  const s = options.lineWidth * 0.9;\n  const dw = s;\n  const dh = 2 * s;\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(point1.x - dw),\n      tfx(point1.y + dh),\n      tfx(point1.x),\n      tfx(point1.y),\n      tfx(point1.x + dw),\n      tfx(point1.y + dh),\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter',\n    });\n}\n\nfunction radicalBullet(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  options: RenderOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.circle(tfx(point1.x), tfx(point1.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000',\n  });\n}\n\nfunction bracket(\n  paper: RaphaelPaper,\n  bracketAngleDirection: Vec2,\n  bracketDirection: Vec2,\n  bondCenter: Vec2,\n  bracketWidth: number,\n  bracketHeight: number,\n  options: RenderOptions,\n  isBracketContainAttachment = false,\n) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25;\n  bracketHeight = bracketHeight || 1.0;\n  const halfBracketHeight = 0.5;\n  let bracketPoint0, bracketPoint1;\n  if (isBracketContainAttachment) {\n    const longHalfBracketHeight = -0.8;\n    const shortHalfBracketHeight = 0.2;\n    bracketPoint0 = bondCenter.addScaled(\n      bracketDirection,\n      shortHalfBracketHeight * bracketHeight,\n    );\n    bracketPoint1 = bondCenter.addScaled(\n      bracketDirection,\n      longHalfBracketHeight * bracketHeight,\n    );\n  } else {\n    bracketPoint0 = bondCenter.addScaled(\n      bracketDirection,\n      -halfBracketHeight * bracketHeight,\n    );\n    bracketPoint1 = bondCenter.addScaled(\n      bracketDirection,\n      halfBracketHeight * bracketHeight,\n    );\n  }\n  const bracketArc0 = bracketPoint0.addScaled(\n    bracketAngleDirection,\n    -bracketWidth,\n  );\n  const bracketArc1 = bracketPoint1.addScaled(\n    bracketAngleDirection,\n    -bracketWidth,\n  );\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(bracketArc0.x),\n      tfx(bracketArc0.y),\n      tfx(bracketPoint0.x),\n      tfx(bracketPoint0.y),\n      tfx(bracketPoint1.x),\n      tfx(bracketPoint1.y),\n      tfx(bracketArc1.x),\n      tfx(bracketArc1.y),\n    )\n    .attr(options.sgroupBracketStyle);\n}\n\nfunction selectionRectangle(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions,\n) {\n  return paper\n    .rect(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(Math.min(point1.x, point2.x)),\n      tfx(Math.min(point1.y, point2.y)),\n      tfx(Math.abs(point2.x - point1.x)),\n      tfx(Math.abs(point2.y - point1.y)),\n    )\n    .attr(options.lassoStyle);\n}\n\nfunction selectionPolygon(\n  paper: RaphaelPaper,\n  r: Vec2[],\n  options: RenderOptions,\n) {\n  const v = r[r.length - 1];\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y);\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y);\n  }\n  return paper.path(pstr).attr(options.lassoStyle);\n}\n\nfunction selectionLine(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions,\n) {\n  return paper.path(makeStroke(point1, point2)).attr(options.lassoStyle);\n}\n\nfunction makeStroke(point1: Vec2, point2: Vec2) {\n  return (\n    'M' +\n    tfx(point1.x) +\n    ',' +\n    tfx(point1.y) +\n    'L' +\n    tfx(point2.x) +\n    ',' +\n    tfx(point2.y) +\n    '\t'\n  );\n}\n\nfunction dashedPath(point1: Vec2, point2: Vec2, dash: number[]) {\n  let t0 = 0;\n  const t1 = Vec2.dist(point1, point2);\n  const d = Vec2.diff(point2, point1).normalized();\n  let black = true;\n  let path = '';\n  let i = 0;\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length];\n    const t2 = t0 + Math.min(len, t1 - t0);\n    if (black) {\n      path +=\n        'M ' +\n        point1.addScaled(d, t0).coordStr() +\n        ' L ' +\n        point1.addScaled(d, t2).coordStr();\n    }\n    t0 += len;\n    black = !black;\n    i++;\n  }\n  return path;\n}\n\nfunction aromaticBondPaths(\n  a2: Vec2,\n  a3: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  mask: number,\n  dash: number[] | null,\n) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2);\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3);\n\n  return [l1, l2];\n}\n\nfunction recenterText(path: Element, relativeBox: RelativeBox) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = relativeBox.height * 0.16;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    path.translateAbs(0, gap);\n    relativeBox.y += gap;\n  }\n}\n\nfunction rgroupAttachmentPoint(\n  paper: RaphaelPaper,\n  shiftedAtomPositionVector: Vec2,\n  attachmentPointEnd: Vec2,\n  directionVector: Vec2,\n  options: RenderOptions,\n) {\n  const linePath = paper.path(\n    'M{0},{1}L{2},{3}',\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    tfx(shiftedAtomPositionVector.x),\n    tfx(shiftedAtomPositionVector.y),\n    tfx(attachmentPointEnd.x),\n    tfx(attachmentPointEnd.y),\n  );\n\n  const curvePath = paper.path(\n    getSvgCurveShapeAttachmentPoint(\n      attachmentPointEnd,\n      directionVector,\n      options.microModeScale,\n    ),\n  );\n\n  const resultShape = paper\n    .set([curvePath, linePath])\n    .attr(options.lineattr)\n    .attr({ 'stroke-width': options.lineWidth });\n\n  return resultShape;\n}\n\nfunction getSvgCurveShapeAttachmentPoint(\n  centerPosition: Vec2,\n  directionVector: Vec2,\n  basicSize: number,\n): string {\n  // declared here https://github.com/epam/ketcher/issues/2165\n  // this path has (0,0) in the position of attachment point atom\n  const attachmentPointSvgPathString = `M13 1.5l-1.5 3.7c-0.3 0.8-1.5 0.8-1.9 0l-1.7-4.4c-0.3-0.8-1.5-0.8-1.9 0l-1.7 4.4c-0.3 0.8-1.5 0.8-1.8 0l-1.8-4.4c-0.3-0.8-1.5-0.8-1.8 0l-1.7 4.4c-0.3 0.8-1.5 0.8-1.9 0l-1.7-4.4c-0.3-0.8-1.5-0.8-1.9 0l-1.6 4.2c-0.3 0.9-1.6 0.8-1.9 0l-1.2-3.5`;\n  const attachmentPointSvgPathSize = 39.8;\n\n  const shapeScale = basicSize / attachmentPointSvgPathSize;\n  const angleDegrees =\n    (Math.atan2(directionVector.y, directionVector.x) * 180) / Math.PI - 90;\n\n  return svgPath(attachmentPointSvgPathString)\n    .rotate(angleDegrees)\n    .scale(shapeScale)\n    .translate(centerPosition.x, centerPosition.y)\n    .toString();\n}\n\nfunction rgroupAttachmentPointLabel(\n  paper: RaphaelPaper,\n  labelPosition: Vec2,\n  labelText: string,\n  options: RenderOptions,\n  fill,\n) {\n  const labelPath = paper\n    .text(labelPosition.x, labelPosition.y, labelText)\n    .attr({\n      font: options.font,\n      'font-size': options.fontsz * 0.9,\n      fill,\n    });\n  return labelPath;\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  bondMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line,\n  rgroupAttachmentPoint,\n  rgroupAttachmentPointLabel,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { ElementColor, Elements } from 'domain/constants';\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType,\n} from './generalEnumTypes';\n\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\nimport { RenderOptions } from 'application/render/render.types';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { attachmentPointNames } from 'domain/types';\n\ninterface ElemAttr {\n  text: string;\n  path: any;\n  rbb: { x: number; y: number; width: number; height: number };\n}\n\nconst StereoLabelMinOpacity = 0.3;\nconst MAX_LABEL_LENGTH = 8;\n\nexport enum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'all',\n}\n\nexport enum ShowHydrogenLabelNames {\n  Off = 'Off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'On',\n}\n\nclass ReAtom extends ReObject {\n  a: Atom;\n  showLabel: boolean;\n  hydrogenOnTheLeft: boolean;\n  color: string;\n  component: number;\n  label?: ElemAttr;\n  cip?: {\n    // Raphael paths\n    path: any;\n    text: any;\n    rectangle: any;\n  };\n\n  constructor(atom: Atom) {\n    super('atom');\n    this.a = atom; // TODO rename a to item\n    this.showLabel = false;\n\n    this.hydrogenOnTheLeft = false;\n\n    this.color = '#000000';\n    this.component = -1;\n  }\n\n  static isSelectable(): true {\n    return true;\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render);\n    }\n    return new Box2Abs(this.a.pp, this.a.pp);\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.atom, this.visel, ret);\n    return ret;\n  }\n\n  getLabeledSelectionContour(render: Render) {\n    const { paper, ctab: restruct, options } = render;\n    const { fontsz, radiusScaleFactor } = options;\n    const padding = fontsz * radiusScaleFactor;\n    const radius = fontsz * radiusScaleFactor * 2;\n    const box = this.getVBoxObj(restruct.render)!;\n    const ps1 = Scale.modelToCanvas(box.p0, restruct.render.options);\n    const ps2 = Scale.modelToCanvas(box.p1, restruct.render.options);\n    const width = ps2.x - ps1.x;\n    const height = fontsz * 1.23;\n    return paper.rect(\n      ps1.x - padding,\n      ps1.y - padding,\n      width + padding * 2,\n      height + padding * 2,\n      radius,\n    );\n  }\n\n  getUnlabeledSelectionContour(render: Render) {\n    const { paper, options } = render;\n    const { atomSelectionPlateRadius } = options;\n    const ps = Scale.modelToCanvas(this.a.pp, options);\n    return paper.circle(ps.x, ps.y, atomSelectionPlateRadius);\n  }\n\n  getSelectionContour(render: Render) {\n    const hasLabel =\n      (this.a.pseudo && this.a.pseudo.length > 1 && !getQueryAttrsText(this)) ||\n      (this.showLabel && this.a.implicitH !== 0);\n    return hasLabel\n      ? this.getLabeledSelectionContour(render)\n      : this.getUnlabeledSelectionContour(render);\n  }\n\n  makeHoverPlate(render: Render) {\n    const atom = this.a;\n    const { options } = render;\n    const sgroups = render.ctab.sgroups;\n    const functionalGroups = render.ctab.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true,\n      )\n    ) {\n      return null;\n    }\n\n    return this.getSelectionContour(render).attr(options.hoverStyle);\n  }\n\n  makeSelectionPlate(restruct: ReStruct) {\n    const atom = this.a;\n    const { render } = restruct;\n    const { options } = render;\n    const sgroups = render.ctab.sgroups;\n    const functionalGroups = render.ctab.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true,\n      )\n    ) {\n      return null;\n    }\n\n    return this.getSelectionContour(render).attr(options.selectionStyle);\n  }\n\n  /**\n   * if atom is rendered as Abbreviation: O, NH, ...\n   * In this case we need to shift the bond render start position to free space for Atom,\n   * same for the Attachment point\n   */\n  getShiftedSegmentPosition(\n    renderOptions: RenderOptions,\n    direction: Vec2,\n    _atomPosition?: Vec2,\n  ): Vec2 {\n    const atomPosition = Scale.modelToCanvas(\n      _atomPosition || this.a.pp,\n      renderOptions,\n    );\n    let atomSymbolShift = 0;\n    const exts = this.visel.exts;\n    for (let k = 0; k < exts.length; ++k) {\n      const box = exts[k].translate(atomPosition);\n\n      atomSymbolShift = Math.max(\n        atomSymbolShift,\n        util.shiftRayBox(atomPosition, direction, box),\n      );\n    }\n    if (atomSymbolShift > 0) {\n      return atomPosition.addScaled(\n        direction,\n        atomSymbolShift + 3 * renderOptions.lineWidth,\n      );\n    } else {\n      return atomPosition;\n    }\n  }\n\n  hasAttachmentPoint(): boolean {\n    return Boolean(this.a.attachmentPoints);\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)!;\n    const sgroups = restruct.molecule.sgroups;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    const render = restruct.render;\n    const ps = Scale.modelToCanvas(this.a.pp, render.options);\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false,\n      )\n    ) {\n      const sgroup = restruct.molecule.getGroupFromAtomId(aid);\n\n      const isPositionAtom =\n        sgroup?.getContractedPosition(restruct.molecule).atomId === aid;\n      if (isPositionAtom) {\n        const position = Scale.modelToCanvas(\n          sgroup instanceof MonomerMicromolecule\n            ? (sgroup.pp as Vec2)\n            : this.a.pp,\n          render.options,\n        );\n        const path = render.paper\n          .text(position.x, position.y, sgroup.data.name)\n          .attr({\n            'font-weight': '700',\n            'font-size': 14,\n          });\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          path,\n          position,\n          true,\n        );\n      }\n      return;\n    }\n\n    this.hydrogenOnTheLeft = shouldHydrogenBeOnLeft(restruct.molecule, this);\n    this.showLabel = isLabelVisible(restruct, render.options, this);\n    this.color = 'black'; // reset color\n\n    let delta;\n    let rightMargin;\n    let leftMargin;\n    let implh;\n    let isHydrogen;\n    let label;\n    let index: any = null;\n\n    if (this.showLabel) {\n      const data = buildLabel(this, render.paper, ps, options);\n      delta = 0.5 * options.lineWidth;\n      label = data.label;\n      rightMargin = data.rightMargin;\n      leftMargin = data.leftMargin;\n      implh = Math.floor(this.a.implicitH);\n      isHydrogen = label.text === 'H';\n\n      if (label.background) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          label.background,\n          ps,\n          true,\n        );\n      }\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true);\n    }\n    if (options.showAtomIds) {\n      index = {};\n      index.text = aid.toString();\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6);\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6);\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070',\n      });\n      index.rbb = util.relBox(index.path.getBBox());\n      draw.recenterText(index.path, index.rbb);\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps);\n    }\n\n    if (this.showLabel) {\n      let hydroIndex: any = null;\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin);\n        rightMargin += hydroIndex.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true,\n        );\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render);\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true,\n        );\n      }\n      if (this.a.isotope !== null) {\n        const isotope = showIsotope(this, render, leftMargin);\n        leftMargin -= isotope.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true,\n        );\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(this, options.showHydrogenLabels)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin,\n        });\n        const hydrogen = data.hydrogen;\n        hydroIndex = data.hydroIndex;\n        rightMargin = data.rightMargin;\n        leftMargin = data.leftMargin;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true,\n        );\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true,\n          );\n        }\n      }\n\n      if (this.a.charge !== null && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin);\n        rightMargin += charge.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true,\n        );\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin);\n        rightMargin += valence.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true,\n        );\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin);\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true,\n        );\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height,\n        );\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    // draw hover after label is calculated\n    this.setHover(this.hover, render);\n\n    const stereoLabel = this.a.stereoLabel; // Enhanced Stereo\n    const aamText = getAamText(this);\n    const customQueryText = checkIsSmartPropertiesExist(this.a)\n      ? getOnlyQueryAttributesCustomQuery(this.a)\n      : getQueryAttrsText(this);\n    let shortenCustomQueryText = customQueryText;\n    let customQueryTooltipText: string | undefined;\n\n    if (shortenCustomQueryText.length > MAX_LABEL_LENGTH) {\n      customQueryTooltipText = shortenCustomQueryText;\n      shortenCustomQueryText = `${shortenCustomQueryText.substring(\n        0,\n        MAX_LABEL_LENGTH,\n      )}...`;\n    }\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment);\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId);\n\n    const displayStereoLabel = shouldDisplayStereoLabel(\n      stereoLabel,\n      options.stereoLabelStyle,\n      options.ignoreChiralFlag,\n      fragment?.enhancedStereoFlag,\n    );\n\n    let text = '';\n\n    if (displayStereoLabel) {\n      text = `${stereoLabel}\\n`;\n    }\n\n    if (shortenCustomQueryText.length > 0) {\n      text += `${shortenCustomQueryText}\\n`;\n    }\n\n    if (aamText.length > 0) {\n      text += `.${aamText}.`;\n    }\n\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label);\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill:\n          options.atomColoring && elem ? ElementColor[this.a.label] : '#000',\n      });\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        aamPath.node.childNodes[0].setAttribute('fill', color);\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity);\n      }\n      const aamBox = util.relBox(aamPath.getBBox());\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      draw.recenterText(aamPath, aamBox);\n      const visel = this.visel;\n      let t = 3;\n      let dir = this.bisectLargestSector(restruct.molecule);\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)));\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox));\n      dir = dir.scaled(8 + t);\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y);\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true);\n\n      if (customQueryTooltipText) {\n        addTooltip(aamPath.node, customQueryTooltipText);\n      }\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights;\n    let isHighlighted = false;\n    let highlightColor = '';\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid);\n      isHighlighted = isHighlighted || hasCurrentHighlight;\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color;\n      }\n    });\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' };\n\n      const ps = Scale.modelToCanvas(this.a.pp, restruct.render.options);\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style);\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path);\n    }\n\n    if (atom.cip) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: atom,\n        position: atom.pp,\n        restruct: render.ctab,\n        visel: this.visel,\n      });\n    }\n  }\n\n  getLargestSectorFromNeighbors(struct: Struct): {\n    neighborAngle: number;\n    largestAngle: number;\n  } {\n    let angles: Array<number> = [];\n    this.a.neighbors.forEach((halfBondId) => {\n      const halfBond = struct.halfBonds.get(halfBondId);\n      halfBond && angles.push(halfBond.ang);\n    });\n    angles = angles.sort((a, b) => a - b);\n    const largeAngles: Array<number> = [];\n    for (let i = 0; i < angles.length - 1; ++i) {\n      largeAngles.push(angles[(i + 1) % angles.length] - angles[i]);\n    }\n    largeAngles.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI);\n    let largestAngle = 0;\n    let neighborAngle = -Math.PI / 2;\n    for (let i = 0; i < angles.length; ++i) {\n      if (largeAngles[i] > largestAngle) {\n        largestAngle = largeAngles[i];\n        neighborAngle = angles[i];\n      }\n    }\n\n    return { neighborAngle, largestAngle };\n  }\n\n  bisectLargestSector(struct: Struct): Vec2 {\n    const { largestAngle, neighborAngle } =\n      this.getLargestSectorFromNeighbors(struct);\n    const bisectAngle = neighborAngle + largestAngle / 2;\n    return newVectorFromAngle(bisectAngle);\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000';\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel);\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters;\n    case StereoLabel.Or:\n      return options.colorOfOrCenters;\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters;\n    default:\n      return '#000';\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '');\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1;\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity);\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  ignoreChiralFlag,\n  flag: StereoFlag | undefined,\n): boolean {\n  if (!stereoLabel) {\n    return false;\n  }\n\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n\n  if (ignoreChiralFlag && stereoLabelType === StereoLabel.Abs) {\n    return false;\n  }\n  if (ignoreChiralFlag && stereoLabelType !== StereoLabel.Abs) {\n    return true;\n  }\n\n  switch (labelStyle) {\n    case StereLabelStyleType.Off:\n      return false;\n    case StereLabelStyleType.On:\n      return true;\n    case StereLabelStyleType.Classic:\n      return !!(\n        flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or\n      );\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      );\n    default:\n      return true;\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom: ReAtom) {\n  const isAttachmentPointAtom = Boolean(atom.a.attachmentPoints);\n  const isCarbon = atom.a.label.toLowerCase() === 'c';\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero;\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal);\n\n  if (isAttachmentPointAtom && isCarbon) {\n    return false;\n  }\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    options.showHydrogenLabels === ShowHydrogenLabels.On ||\n    atom.a.alias ||\n    atom.a.isotope !== null ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== null ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c';\n\n  if (shouldBeVisible) return true;\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0];\n    const nei2 = atom.a.neighbors[1];\n    const hb1 = restruct.molecule.halfBonds.get(nei1);\n    const hb2 = restruct.molecule.halfBonds.get(nei2);\n    const bond1 = restruct.bonds.get(hb1.bid);\n    const bond2 = restruct.bonds.get(hb2.bid);\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE;\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction displayHydrogen(atom: ReAtom, hydrogenLabels: ShowHydrogenLabels) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label?.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label?.text.toLowerCase() !== 'c'))\n  );\n}\n\nfunction shouldHydrogenBeOnLeft(struct, atom) {\n  if (atom.a.neighbors.length === 0) {\n    if (atom.a.label === 'D' || atom.a.label === 'T') {\n      return false;\n    } else {\n      const element = Elements.get(atom.a.label);\n      return !element || Boolean(element.leftH);\n    }\n  }\n\n  if (atom.a.neighbors.length === 1) {\n    const neighbor = atom.a.neighbors[0];\n    const neighborDirection = struct.halfBonds.get(neighbor).dir;\n\n    return neighborDirection.x > 0;\n  }\n\n  return false;\n}\n\nfunction getOnlyQueryAttributesCustomQuery(atom: Atom) {\n  const queryText =\n    atom.queryProperties.customQuery ||\n    getAtomCustomQuery(\n      {\n        ...atom,\n        ...atom.queryProperties,\n      },\n      true,\n    );\n  return queryText;\n}\n\nfunction addTooltip(node, text: string) {\n  const tooltip = `<p>${text.split(/(?<=[;,])/).join(' ')}</p>`;\n  node.childNodes[0].setAttribute('data-tooltip', tooltip);\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any,\n): {\n  rightMargin: number;\n  leftMargin: number;\n  label: ElemAttr;\n} {\n  // eslint-disable-line max-statements\n  const label: any = {\n    text: getLabelText(atom.a),\n  };\n  let tooltip: string | null = null;\n  if (!label.text) {\n    label.text = 'R#';\n  }\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text);\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000';\n    }\n  }\n\n  const isMonomerAttachmentPoint = attachmentPointNames.includes(label.text);\n  const isMonomerAttachmentPointSelected =\n    options.currentlySelectedMonomerAttachmentPoint === label.text;\n  const isMonomerAttachmentPointUsed =\n    options.connectedMonomerAttachmentPoints?.includes(label.text);\n\n  if (isMonomerAttachmentPoint && options.labelInMonomerConnectionsModal) {\n    atom.color = isMonomerAttachmentPointSelected\n      ? '#FFF'\n      : isMonomerAttachmentPointUsed\n      ? '#B4B9D6'\n      : '#585858';\n  }\n\n  if (label.text?.length > MAX_LABEL_LENGTH) {\n    tooltip = label.text;\n    label.text = `${label.text?.substring(0, 8)}...`;\n  }\n\n  const { previewOpacity } = options;\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : '',\n    'fill-opacity': atom.a.isPreview ? previewOpacity : 1,\n  });\n\n  if (isMonomerAttachmentPoint && options.labelInMonomerConnectionsModal) {\n    const fill = isMonomerAttachmentPointSelected\n      ? '#167782'\n      : isMonomerAttachmentPointUsed\n      ? '#E1E5EA'\n      : '#FFF';\n    const backgroundSize = options.fontsz * 2;\n\n    label.background = paper\n      .rect(\n        ps.x - backgroundSize / 2,\n        ps.y - backgroundSize / 2,\n        backgroundSize,\n        backgroundSize,\n        10,\n      )\n      .attr({ fill })\n      .attr({ stroke: isMonomerAttachmentPointUsed ? '#B4B9D6' : '#7C7C7F' });\n  }\n  if (tooltip) {\n    addTooltip(label.path.node, tooltip);\n  }\n\n  label.rbb = util.relBox(label.path.getBBox());\n  draw.recenterText(label.path, label.rbb);\n  let rightMargin =\n    (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom); //\n  let leftMargin =\n    (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom);\n\n  if (atom.a.atomList !== null) {\n    const xShift =\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n      2;\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      xShift,\n\n      0,\n    );\n    rightMargin += xShift;\n    leftMargin += xShift;\n  }\n\n  atom.label = label;\n  return { label, rightMargin, leftMargin };\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label();\n\n  if (atom.pseudo) return atom.pseudo;\n\n  if (atom.alias) return atom.alias;\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = '';\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString();\n      }\n    }\n\n    return text;\n  }\n\n  return atom.label;\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const hydroIndex: any = {};\n  hydroIndex.text = (implh + 1).toString();\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox());\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex;\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const paper: any = render.paper;\n  const radical: any = {};\n  let hshift;\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set();\n      hshift = 1.6 * options.lineWidth;\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options),\n      );\n      radical.path.attr('fill', atom.color);\n      break;\n    case 2:\n      radical.path = paper.set();\n      radical.path.push(draw.radicalBullet(paper, ps, options));\n      radical.path.attr('fill', atom.color);\n      break;\n    case 3:\n      radical.path = paper.set();\n      hshift = 1.6 * options.lineWidth;\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options),\n      );\n      radical.path.attr('stroke', atom.color);\n      break;\n    default:\n      break;\n  }\n  radical.rbb = util.relBox(radical.path.getBBox());\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height);\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2;\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift);\n  return radical;\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number,\n): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const isotope: any = {};\n  isotope.text = atom.a.isotope === null ? '' : atom.a.isotope.toString();\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  isotope.rbb = util.relBox(isotope.path.getBBox());\n  draw.recenterText(isotope.path, isotope.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return isotope;\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number,\n): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const charge: any = {};\n  charge.text = '';\n  if (atom.a.charge !== null) {\n    const absCharge = Math.abs(atom.a.charge);\n    if (absCharge !== 1) charge.text = absCharge.toString();\n    if (atom.a.charge < 0) charge.text += '\\u2013';\n    else charge.text += '+';\n  } else {\n    charge.text = '';\n  }\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  charge.rbb = util.relBox(charge.path.getBBox());\n  draw.recenterText(charge.path, charge.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return charge;\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number,\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV',\n  };\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const valence: any = {};\n  valence.text = mapValence[atom.a.explicitValence];\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString());\n  }\n  valence.text = '(' + valence.text + ')';\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  valence.rbb = util.relBox(valence.path.getBBox());\n  draw.recenterText(valence.path, valence.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return valence;\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any;\n    hydroIndex: number;\n    rightMargin: number;\n    leftMargin: number;\n  },\n): {\n  hydrogen: ElemAttr;\n  hydroIndex: ElemAttr;\n  rightMargin: number;\n  leftMargin: number;\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex;\n  const hydrogenLeft = atom.hydrogenOnTheLeft;\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const hydrogen = data.hydrogen;\n  hydrogen.text = 'H';\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n  });\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox());\n  draw.recenterText(hydrogen.path, hydrogen.rbb);\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0,\n    );\n    data.rightMargin += hydrogen.rbb.width + delta;\n  }\n  if (implh > 1) {\n    hydroIndex = {};\n    hydroIndex.text = implh.toString();\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color,\n    });\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox());\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb);\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height,\n      );\n      data.rightMargin += hydroIndex.rbb.width + delta;\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height,\n      );\n      data.leftMargin -= hydroIndex.rbb.width + delta;\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0,\n    );\n    data.leftMargin -= hydrogen.rbb.width + delta;\n  }\n  return Object.assign(data, { hydrogen, hydroIndex });\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin,\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const delta = 0.5 * render.options.lineWidth;\n  const warning: any = {};\n  const y = ps.y + atom.label.rbb.height / 2 + delta;\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y),\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' });\n  warning.rbb = util.relBox(warning.path.getBBox());\n  return warning;\n}\n\nfunction getAamText(atom) {\n  let aamText = '';\n  if (atom.a.aam > 0) aamText += atom.a.aam;\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ',';\n    if (atom.a.invRet === 1) aamText += 'Inv';\n    else if (atom.a.invRet === 2) aamText += 'Ret';\n    else throw new Error('Invalid value for the invert/retain flag');\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ',';\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext';\n    else throw new Error('Invalid value for the exact change flag');\n  }\n  return aamText;\n}\n\nfunction getRingBondCountAttrText(value: number) {\n  let attrText: string;\n  if (value > 0) {\n    attrText = 'rb' + value.toString();\n  } else if (value === -1) {\n    attrText = 'rb0';\n  } else if (value === -2) {\n    attrText = 'rb*';\n  } else {\n    throw new Error('Ring bond count invalid');\n  }\n  return attrText;\n}\n\nfunction getRingConnectivity(value: number) {\n  if (value > 0) {\n    return 'x' + value.toString();\n  } else if (value === -1 || value === -2) {\n    return 'x0';\n  } else {\n    return '';\n  }\n}\n\nfunction getDegree(value: number) {\n  if (value > 0) {\n    return 'D' + value.toString();\n  } else if (value === -1 || value === -2) {\n    return 'D0';\n  } else {\n    return '';\n  }\n}\n\nfunction getSubstitutionCountAttrText(value: number) {\n  let attrText: string;\n  if (value > 0) {\n    attrText = 's' + value.toString();\n  } else if (value === -1) {\n    attrText = 's0';\n  } else if (value === -2) {\n    attrText = 's*';\n  } else {\n    throw new Error('Substitution count invalid');\n  }\n  return attrText;\n}\n\nexport function getAtomType(atom: Atom) {\n  return atom.atomList\n    ? 'list'\n    : atom.pseudo === atom.label\n    ? 'pseudo'\n    : 'single';\n}\n\nexport function checkIsSmartPropertiesExist(atom) {\n  const smartsSpecificProperties = [\n    'ringMembership',\n    'ringSize',\n    'connectivity',\n    'chirality',\n    'aromaticity',\n    'customQuery',\n  ];\n  return smartsSpecificProperties.some((name) => atom.queryProperties?.[name]);\n}\n\nexport function getAtomCustomQuery(atom, includeOnlyQueryAttributes?: boolean) {\n  let queryAttrsText = '';\n  const nonQueryAttributes = ['charge', 'explicitValence', 'isotope'];\n\n  const addSemicolon = () => {\n    if (queryAttrsText.length > 0) queryAttrsText += ';';\n  };\n  const patterns: {\n    [key: string]: (value: string, atom) => string;\n  } = {\n    isotope: (value) => value,\n    aromaticity: (value) => (value === 'aromatic' ? 'a' : 'A'),\n    charge: (value) => {\n      if (value === '') return value;\n      const regExpResult = /^([+-]?)([0-9]{1,3}|1000)([+-]?)$/.exec(value);\n      const charge = regExpResult\n        ? parseInt(\n            regExpResult[1] + regExpResult[3] + regExpResult[2],\n          ).toString()\n        : value;\n      return charge[0] !== '-' ? `+${charge}` : charge;\n    },\n    unsaturatedAtom: (value) => (Number(value) === 1 ? 'u' : ''),\n    explicitValence: (value) => (Number(value) !== -1 ? `v${value}` : ''),\n    ringBondCount: (value) => getRingConnectivity(Number(value)),\n    substitutionCount: (value) => getDegree(Number(value)),\n    hCount: (value) =>\n      Number(value) > 0 ? 'H' + (Number(value) - 1).toString() : '',\n    implicitHCount: (value) => `h${value}`,\n    ringMembership: (value) => `R${value}`,\n    ringSize: (value) => `r${value}`,\n    connectivity: (value) => `X${value}`,\n    chirality: (value) => (value === 'clockwise' ? '@@' : '@'),\n  };\n\n  for (const propertyName in patterns) {\n    if (\n      includeOnlyQueryAttributes &&\n      nonQueryAttributes.includes(propertyName)\n    ) {\n      continue;\n    }\n\n    const value = atom[propertyName];\n    if (propertyName in atom && value !== null) {\n      const attrText = patterns[propertyName](value, atom);\n      if (attrText) {\n        addSemicolon();\n      }\n      queryAttrsText += attrText;\n    }\n  }\n\n  return queryAttrsText;\n}\n\nfunction getQueryAttrsText(atom): string {\n  let queryAttrsText = '';\n\n  const addSemicolon = () => {\n    if (queryAttrsText.length > 0) queryAttrsText += ';';\n  };\n\n  const { ringBondCount, substitutionCount, unsaturatedAtom, hCount } = atom.a;\n\n  if (ringBondCount !== 0) {\n    queryAttrsText += getRingBondCountAttrText(ringBondCount);\n  }\n  if (substitutionCount !== 0) {\n    addSemicolon();\n    queryAttrsText += getSubstitutionCountAttrText(substitutionCount);\n  }\n  if (unsaturatedAtom > 0) {\n    addSemicolon();\n    if (unsaturatedAtom === 1) queryAttrsText += 'u';\n    else throw new Error('Unsaturated atom invalid value');\n  }\n  if (hCount > 0) {\n    addSemicolon();\n    queryAttrsText += 'H' + (hCount - 1).toString();\n  }\n  return queryAttrsText;\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y);\n  rbb.x += x;\n  rbb.y += y;\n}\n\nfunction newVectorFromAngle(angle: number): Vec2 {\n  return new Vec2(Math.cos(angle), Math.sin(angle));\n}\n\nexport default ReAtom;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { LayerMap, StereoColoringType } from './generalEnumTypes';\nimport { getColorFromStereoLabel } from './reatom';\n\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\nclass ReBond extends ReObject {\n  b: Bond;\n  doubleBondShift: number;\n  path: any;\n  neihbid1 = -1;\n  neihbid2 = -1;\n  boldStereo?: boolean;\n  rbb?: { x: number; y: number; width: number; height: number };\n  cip?: {\n    // Raphael paths\n    path: any;\n    text: any;\n    rectangle: any;\n  };\n\n  constructor(bond: Bond) {\n    super('bond');\n    this.b = bond; // TODO rename b to item\n    this.doubleBondShift = 0;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  static bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n    const render = restruct.render;\n    const sgroup1 = restruct.molecule.getGroupFromAtomId(bond.b.begin);\n    const sgroup2 = restruct.molecule.getGroupFromAtomId(bond.b.end);\n    const beginAtom = restruct.atoms.get(\n      sgroup1 instanceof MonomerMicromolecule\n        ? (sgroup1.getAttachmentAtomId() as number)\n        : bond.b.begin,\n    );\n    const endAtom = restruct.atoms.get(\n      sgroup2 instanceof MonomerMicromolecule\n        ? (sgroup2.getAttachmentAtomId() as number)\n        : bond.b.end,\n    );\n\n    if (\n      !beginAtom ||\n      !endAtom ||\n      bond.b.hb1 === undefined ||\n      bond.b.hb2 === undefined\n    ) {\n      return;\n    }\n    const p1 =\n      sgroup1 instanceof MonomerMicromolecule\n        ? (sgroup1.pp as Vec2)\n        : beginAtom.a.pp;\n\n    const p2 =\n      sgroup2 instanceof MonomerMicromolecule\n        ? (sgroup2.pp as Vec2)\n        : endAtom.a.pp;\n    const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2);\n\n    if (!hb1?.dir || !hb2?.dir) return;\n\n    hb1.p = beginAtom.getShiftedSegmentPosition(options, hb1.dir, p1);\n    hb2.p = endAtom.getShiftedSegmentPosition(options, hb2.dir, p2);\n    bond.b.center = Vec2.lc2(p1, 0.5, p2, 0.5);\n    bond.b.len = Vec2.dist(\n      Scale.modelToCanvas(p1, render.options),\n      Scale.modelToCanvas(p2, render.options),\n    );\n    bond.b.sb = options.lineWidth * 5;\n    /* eslint-disable no-mixed-operators */\n    bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2);\n    /* eslint-enable no-mixed-operators */\n    bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI;\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  getSelectionPoints(render: Render) {\n    // please refer to: ketcher-core/docs/data/hover_selection_1.png\n    const bond: Bond = this.b;\n    const { ctab: restruct, options } = render;\n    const { bondThickness, doubleBondWidth, stereoBondWidth } = options;\n    const regularSelectionThikness = doubleBondWidth + bondThickness;\n\n    // get half-bond positions, this is where the actual bond\n    // image on the screen is drawn, it may be different e.g. if the\n    // bond is connected to an atom with a label as opposed\n    // to when it is connected to a Carbon atom w/o a label\n    // please refer to: ketcher-core/docs/data/hover_selection_2.png\n    const halfBondStart = restruct.molecule.halfBonds.get(bond.hb1!)!.p;\n    const halfBondEnd = restruct.molecule.halfBonds.get(bond.hb2!)!.p;\n\n    const isStereoBond =\n      bond.stereo !== Bond.PATTERN.STEREO.NONE &&\n      bond.stereo !== Bond.PATTERN.STEREO.CIS_TRANS;\n\n    const addPadding = isStereoBond ? 0 : -2;\n\n    // find the points on the line where we will be drawing the curves\n    const contourStart = Vec2.getLinePoint(\n      halfBondEnd,\n      halfBondStart,\n      addPadding,\n    );\n    const contourEnd = Vec2.getLinePoint(\n      halfBondStart,\n      halfBondEnd,\n      addPadding,\n    );\n\n    const stereoBondStartHeightCoef = 0.5;\n    const bondPadding = 0.5;\n    const addStart = isStereoBond\n      ? stereoBondWidth * stereoBondStartHeightCoef\n      : regularSelectionThikness + bondPadding;\n    const stereoBondEndHeightCoef = 1;\n    const addEnd = isStereoBond\n      ? stereoBondWidth +\n        (regularSelectionThikness * stereoBondEndHeightCoef) / stereoBondWidth\n      : regularSelectionThikness + bondPadding;\n\n    const contourPaddedStart = Vec2.getLinePoint(\n      contourStart,\n      contourEnd,\n      addEnd,\n    );\n    const contourPaddedEnd = Vec2.getLinePoint(\n      contourEnd,\n      contourStart,\n      addStart,\n    );\n\n    // we need four points for each bezier curve\n    // and two for each line that together form the selection contour\n    // the padded values are for the curve points and the rest of\n    // the values are for drawing the lines\n    // please refer to: ketcher-core/docs/data/hover_selection_3.png\n    const startPoint = contourStart.add(new Vec2(addEnd, 0));\n    const endPoint = contourEnd.add(new Vec2(addStart, 0));\n    const padStartPoint = contourPaddedStart.add(new Vec2(addEnd, 0));\n    const padEndPoint = contourPaddedEnd.add(new Vec2(addStart, 0));\n\n    const { angle } = bond;\n\n    // rotate the points +/-90 degrees to find the\n    // perpendicular points that will be used for actual drawing\n    // of selection contour on canvas\n    const startTop = startPoint.rotateAroundOrigin(\n      angle + 90,\n      new Vec2(contourStart.x, contourStart.y),\n    );\n    const startBottom = startPoint.rotateAroundOrigin(\n      angle - 90,\n      new Vec2(contourStart.x, contourStart.y),\n    );\n    const startPadTop = padStartPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedStart,\n    );\n    const startPadBottom = padStartPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedStart,\n    );\n    const endTop = endPoint.rotateAroundOrigin(angle + 90, contourEnd);\n    const endBottom = endPoint.rotateAroundOrigin(angle - 90, contourEnd);\n    const endPadTop = padEndPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedEnd,\n    );\n    const endPadBottom = padEndPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedEnd,\n    );\n\n    return [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom,\n    ];\n  }\n\n  getSelectionContour(render: Render) {\n    const { paper } = render;\n    const [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom,\n    ] = this.getSelectionPoints(render);\n\n    // for a visual representation of the points\n    // please refer to: ketcher-core/docs/data/hover_selection_exp.png\n    const pathString = `\n      M ${startTop.x} ${startTop.y}\n      L ${endTop.x} ${endTop.y}\n      C ${endPadTop.x} ${endPadTop.y}, ${endPadBottom.x} ${endPadBottom.y}, ${endBottom.x} ${endBottom.y}\n      L ${startBottom.x} ${startBottom.y}\n      C ${startPadBottom.x} ${startPadBottom.y}, ${startPadTop.x} ${startPadTop.y}, ${startTop.x} ${startTop.y}\n    `;\n\n    return paper.path(pathString);\n  }\n\n  makeHoverPlate(render: Render) {\n    const restruct = render.ctab;\n    const options = render.options;\n    ReBond.bondRecalc(this, restruct, options);\n    const bond = this.b;\n    const sgroups = restruct.sgroups;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      )\n    ) {\n      return null;\n    }\n\n    const rect = this.getSelectionContour(render);\n\n    return rect.attr({ ...options.hoverStyle });\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _: any, options: any) {\n    ReBond.bondRecalc(this, restruct, options);\n    const bond = this.b;\n    const sgroups = restruct.render.ctab.sgroups;\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      )\n    ) {\n      return null;\n    }\n\n    const rect = this.getSelectionContour(restruct.render);\n\n    return rect.attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render;\n    const struct = restruct.molecule;\n    const bond = restruct.molecule.bonds.get(bid)!;\n    const sgroups = restruct.molecule.sgroups;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    if (\n      bond &&\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      )\n    ) {\n      return;\n    }\n\n    const paper = render.paper;\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null;\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null;\n\n    checkStereoBold(bid, this, restruct);\n    ReBond.bondRecalc(this, restruct, options);\n    setDoubleBondShift(this, struct);\n    if (!hb1 || !hb2) return;\n    const isSnapping = restruct.isSnappingBond(bid);\n    this.path = getBondPath(restruct, this, hb1, hb2, isSnapping);\n    this.rbb = util.relBox(this.path.getBBox());\n    // add layer for bond's skeleton:\n    restruct.addReObjectPath(\n      LayerMap.bondSkeleton,\n      this.visel,\n      this.path,\n      null,\n      true,\n    );\n    const reactingCenter: any = {};\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2);\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox());\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true,\n      );\n    }\n    const topology: any = {};\n    topology.path = getBondMark(render, this, hb1, hb2);\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox());\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true,\n      );\n    }\n    this.setHover(this.hover, render);\n\n    let ipath = null;\n    const bondIdxOff = options.subFontSize * 0.6;\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights;\n    let isHighlighted = false;\n    let highlightColor = '';\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid);\n      isHighlighted = isHighlighted || hasCurrentHighlight;\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color;\n      }\n    });\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round',\n      };\n\n      const c = Scale.modelToCanvas(this.b.center, restruct.render.options);\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      highlightPath.attr(style);\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true,\n      );\n    }\n\n    if (bond.cip) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: bond,\n        position: bond.center,\n        restruct: render.ctab,\n        visel: this.visel,\n      });\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y };\n  const end = { x: hb2.p.x, y: hb2.p.y };\n\n  const paper = restruct.render.paper;\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`;\n\n  const path = paper.path(pathString);\n\n  return path;\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct,\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid);\n\n    if (!hb || hb.bid === bid0) return false;\n\n    const neibond = restruct.bonds.get(hb.bid);\n\n    if (!neibond) return false;\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP;\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      );\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    );\n  });\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct,\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    if (!atom) return -1;\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct);\n    return pos < 0 ? -1 : atom.neighbors[pos];\n  });\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0];\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1];\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct);\n    return pos < 0 ? -1 : atom.neighbors[pos];\n  });\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0;\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  isSnapping: boolean,\n) {\n  let path: any = null;\n  const render = restruct.render;\n  const struct = restruct.molecule;\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel;\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel;\n  let newHalfBonds: [HalfBond, HalfBond];\n  const xShiftMinus1 = -1;\n  const xShiftPlus1 = 1;\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct);\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(\n              render,\n              hb1,\n              hb2,\n              bond,\n              struct,\n              isSnapping,\n            );\n          } else\n            path = getBondSingleUpPath(\n              render,\n              hb1,\n              hb2,\n              bond,\n              struct,\n              isSnapping,\n            );\n          break;\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            struct,\n            isSnapping,\n          );\n          break;\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            struct,\n            isSnapping,\n          );\n          break;\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            isSnapping,\n            getStereoBondColor(render.options, bond, struct),\n          );\n          break;\n      }\n      break;\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct);\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB,\n          isSnapping,\n        );\n      } else\n        path = getBondDoublePath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          shiftA,\n          shiftB,\n          isSnapping,\n        );\n      break;\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(\n        render.paper,\n        hb1,\n        hb2,\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic);\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options, isSnapping)\n        : getBondAromaticPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            shiftA,\n            shiftB,\n            isSnapping,\n          );\n      break;\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftPlus1);\n      path = getSingleOrDoublePath(\n        render,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(\n        render,\n        hb1,\n        hb2,\n        bond,\n        shiftA,\n        shiftB,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftMinus1);\n      path = getBondAromaticPath(\n        render,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        bond,\n        shiftA,\n        shiftB,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.ANY:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftMinus1);\n      path = draw.bondAny(\n        render.paper,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftPlus1);\n      path = draw.bondHydrogen(\n        render.paper,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(\n        render.paper,\n        hb1,\n        hb2,\n        render.options,\n        isSnapping,\n      );\n      break;\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported');\n  }\n  if (path) {\n    const { previewOpacity } = render.options;\n    path.attr({ opacity: bond.b.isPreview ? previewOpacity : 1 });\n  }\n  return path;\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const options = render.options;\n  const bsp = 0.7 * options.stereoBond;\n  let b2 = b.addScaled(n, bsp);\n  let b3 = b.addScaled(n, -bsp);\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct,\n    );\n    b2 = coords[0];\n    b3 = coords[1];\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct,\n): string {\n  const defaultColor = '#000';\n\n  if (bond.b.stereo === 0) return defaultColor;\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel;\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel;\n\n  let stereoLabel = '';\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel;\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel;\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor;\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel);\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const options = render.options;\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct,\n  );\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct,\n  );\n  const a1 = coords1[0];\n  const a2 = coords1[1];\n  const a3 = coords2[0];\n  const a4 = coords2[1];\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const shift = bond.doubleBondShift;\n  const bsp = 1.5 * render.options.stereoBond;\n  let b1 = a.addScaled(n, bsp * shift);\n  let b2 = b.addScaled(n, bsp * shift);\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(\n    render,\n    hb1,\n    hb2,\n    bond,\n    struct,\n    isSnapping,\n  );\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    isSnapping,\n    getStereoBondColor(render.options, bond, struct),\n  );\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0;\n  return sin / (1 - cos);\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct,\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid);\n  const cos = Vec2.dot(hb.dir, neihb!.dir);\n  const sin = Vec2.cross(hb.dir, neihb!.dir);\n  const cosHalf = Math.sqrt(0.5 * (1 - cos));\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos)),\n  );\n\n  const denomAdd = 0.3;\n  const scale = 0.7;\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd));\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd),\n  );\n  return sin > 0 ? [a1, a2] : [a2, a1];\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n  let d = b.sub(a);\n  const len = d.length() + 0.2;\n  d = d.normalized();\n  const interval = 1.2 * options.lineWidth;\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0,\n    ) + 2;\n  const step = len / (nlines - 1);\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n  let d = b.sub(a);\n  const len = d.length();\n  d = d.normalized();\n  const interval = 0.6 * options.lineWidth;\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0,\n    ) + 2;\n  const step = len / (nlines - 0.5);\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS;\n\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const shift = cisTrans ? 0 : bond.doubleBondShift;\n\n  const options = render.options;\n  const bsp = options.bondSpace / 2;\n  const s1 = bsp + shift * bsp;\n  const s2 = -bsp + shift * bsp;\n\n  let a1 = a.addScaled(n, s1);\n  let b1 = b.addScaled(n, s1);\n  let a2 = a.addScaled(n, s2);\n  let b2 = b.addScaled(n, s2);\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n\n  return draw.bondDouble(\n    render.paper,\n    a1,\n    a2,\n    b1,\n    b2,\n    cisTrans,\n    options,\n    isSnapping,\n  );\n}\n\nfunction getSingleOrDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed());\n  if (!(nSect & 1)) nSect += 1;\n  return draw.bondSingleOrDouble(\n    render.paper,\n    hb1,\n    hb2,\n    nSect,\n    options,\n    isSnapping,\n  );\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125];\n  let mask = 0;\n  let dash: number[] | null = null;\n  const options = render.options;\n  const bondShift = bond.doubleBondShift;\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mask = bondShift > 0 ? 1 : 2;\n    dash = dashdotPattern.map((v) => v * options.microModeScale);\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mask = 3;\n    dash = dashdotPattern.map((v) => v * options.microModeScale);\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mask,\n    dash,\n  );\n  return draw.bondAromatic(render.paper, paths, bondShift, options, isSnapping);\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number,\n  dash: number[] | null,\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const bsp = bondSpace / 2;\n  const s1 = bsp + shift * bsp;\n  const s2 = -bsp + shift * bsp;\n  let a2 = a.addScaled(n, s1);\n  let b2 = b.addScaled(n, s1);\n  let a3 = a.addScaled(n, s2);\n  let b3 = b.addScaled(n, s2);\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash);\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p;\n  const b = hb2.p;\n  const c = b.add(a).scaled(0.5);\n  const d = b.sub(a).normalized();\n  const n = d.rotateSC(1, 0);\n\n  const p: Array<Vec2> = [];\n\n  const lw = render.options.lineWidth;\n  const bs = render.options.bondSpace / 2;\n  const alongIntRc = lw; // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw; // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs; // half size along for CENTER\n  const acrossInt = 1.5 * bs; // half interval across for CENTER\n  const acrossSz = 3.0 * bs; // half size across for all\n  const tiltTan = 0.2; // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc),\n      );\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt));\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt));\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt));\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt));\n      break;\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz));\n      p.push(c.addScaled(n, -acrossSz));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz));\n      p.push(c.addScaled(n, -acrossSz));\n      break;\n    default:\n      return null;\n  }\n  return draw.reactingCenter(render.paper, p, render.options);\n}\n\nfunction getBondMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n) {\n  // eslint-disable-line max-statements\n  const options = render.options;\n  let mark: string | null = null;\n  let tooltip: string | null = null;\n  if (bond.b.customQuery) {\n    mark = bond.b.customQuery;\n    if (bond.b.customQuery.length > 8) {\n      tooltip = bond.b.customQuery;\n      mark = `${bond.b.customQuery.substring(0, 8)}...`;\n    }\n  } else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) {\n    mark = 'rng';\n  } else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) {\n    mark = 'chn';\n  } else {\n    return null;\n  }\n\n  const a = hb1.p;\n  const b = hb2.p;\n  const c = b.add(a).scaled(0.5);\n  const d = b.sub(a).normalized();\n  let n = d.rotateSC(1, 0);\n  let fixed = options.lineWidth;\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift);\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2;\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace);\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace;\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)));\n  const path = draw.bondMark(render.paper, p, mark, options);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  tooltip && path.node.childNodes[0].setAttribute('data-tooltip', tooltip);\n\n  return path;\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2,\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff);\n  const ipath = paper.text(pb.x, pb.y, bid.toString());\n  const irbb = util.relBox(ipath.getBBox());\n  draw.recenterText(ipath, irbb);\n  return ipath;\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1;\n  const hb2 = bond.b.hb2;\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\n    return;\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop;\n  const loop2 = struct.halfBonds.get(hb2)!.loop;\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds;\n    const d2 = struct.loops.get(loop2)!.dblBonds;\n    const n1 = struct.loops.get(loop1)!.hbs.length;\n    const n2 = struct.loops.get(loop2)!.hbs.length;\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2);\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1;\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1;\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\n  }\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number,\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1;\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1;\n  if (n2 * d1 > n1 * d2) return -1;\n  if (n2 * d1 < n1 * d2) return 1;\n  if (n2 > n1) return -1;\n  return 1;\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0;\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1);\n  const hb2 = struct.halfBonds.get(bond.b.hb2);\n  if (!hb1 || !hb2) return 0;\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0);\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0);\n  if (nLeft > nRight) return -1;\n  if (nLeft < nRight) return 1;\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1)\n    return 1;\n  return 0;\n}\n\nexport default ReBond;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any;\n\n  constructor() {\n    super('enhancedFlag');\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox());\n    const sz = box.p1.sub(box.p0);\n    const p0 = box.p0.sub(render.options.offset);\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y);\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null;\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null;\n    return this.hoverPath(restruct.render).attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render;\n    const fragment = restruct.molecule.frags.get(fragmentId);\n\n    if (!fragment?.enhancedStereoFlag) {\n      return;\n    }\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!;\n\n    const paper = render.paper;\n    const ps = Scale.modelToCanvas(position, options);\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel,\n    };\n\n    if (options.showStereoFlags && !options.ignoreChiralFlag) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : '',\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000',\n        });\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true,\n    );\n  }\n}\n\nexport default ReEnhancedFlag;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities';\n\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag');\n    this.item = frag;\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid,\n    );\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b;\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment;\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment;\n\n      return firstFrag === fid && secondFrag === fid;\n    });\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret;\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return;\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox;\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp);\n        const ext = new Vec2(0.05 * 3, 0.05 * 3);\n        bba = bba.extend(ext, ext);\n      } else {\n        if (!render) render = global._ui_editor.render; // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.canvasToModel, render.options);\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba;\n    });\n\n    return ret;\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render);\n\n    if (bb) {\n      const p0 = Scale.modelToCanvas(\n        new Vec2(bb.p0.x, bb.p0.y),\n        render.options,\n      );\n      const p1 = Scale.modelToCanvas(\n        new Vec2(bb.p1.x, bb.p1.y),\n        render.options,\n      );\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs);\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(_render) {\n    // eslint-disable-line no-unused-vars\n    return null; // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(_render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this);\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render');\n      return;\n    }\n\n    fid = parseInt(fid, 10);\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render);\n    });\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render);\n      }\n    });\n  }\n}\nexport default ReFrag;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Render } from '../raphaelRender';\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3);\nconst PADDING_VECTOR = new Vec2(0.2, 0.4);\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup');\n    this.labelBox = null;\n    this.item = rgroup;\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  getAtoms(render) {\n    let ret = [];\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid),\n      );\n    });\n    return ret;\n  }\n\n  getBonds(render) {\n    let ret = [];\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid),\n      );\n    });\n    return ret;\n  }\n\n  /**\n   * @param {Render} render\n   */\n  calcBBox(render) {\n    /** @type {Box2Abs | null} */\n    let rGroupBoundingBox = null;\n    this.item.frags.forEach((fid) => {\n      const fragBox = render.ctab.frags\n        .get(fid)\n        .calcBBox(render.ctab, fid, render);\n      if (fragBox) {\n        rGroupBoundingBox = rGroupBoundingBox\n          ? Box2Abs.union(rGroupBoundingBox, fragBox)\n          : fragBox;\n      }\n    });\n\n    const rGroupAttachmentPointsVBox =\n      render.ctab.getRGroupAttachmentPointsVBoxByAtomIds(this.getAtoms(render));\n    if (rGroupBoundingBox && rGroupAttachmentPointsVBox) {\n      rGroupBoundingBox = Box2Abs.union(\n        rGroupBoundingBox,\n        rGroupAttachmentPointsVBox,\n      );\n    }\n\n    rGroupBoundingBox = rGroupBoundingBox\n      ? rGroupBoundingBox.extend(BORDER_EXT, BORDER_EXT)\n      : rGroupBoundingBox;\n\n    return rGroupBoundingBox;\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    let bb = this.calcBBox(render);\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools',\n      );\n      return {};\n    } else {\n      // add a little space between the attachment points and brackets\n      bb = bb.extend(PADDING_VECTOR, PADDING_VECTOR);\n    }\n\n    const ret = { data: [] };\n    const p0 = Scale.modelToCanvas(bb.p0, options);\n    const p1 = Scale.modelToCanvas(bb.p1, options);\n    const brackets = render.paper.set();\n\n    rGroupdrawBrackets(brackets, render, bb); // eslint-disable-line new-cap\n\n    ret.data.push(brackets);\n    const key = render.ctab.rgroups.keyOf(this);\n    const labelSet = render.paper.set();\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black',\n      });\n\n    const labelBox = util.relBox(label.getBBox());\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0);\n\n    labelSet.push(label);\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black',\n    };\n\n    const logic = [rLogicToString(key, this.item)];\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2;\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle);\n      const logicBox = util.relBox(logicPath.getBBox());\n      shift += logicBox.height / 2;\n      logicPath.translateAbs(\n        -logicBox.width / 2 - 6 * options.lineWidth,\n        shift,\n      );\n      shift += logicBox.height / 2 + options.lineWidth / 2;\n      ret.data.push(logicPath);\n      labelSet.push(logicPath);\n    }\n\n    ret.data.push(label);\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.canvasToModel,\n      render.options,\n    );\n    return ret;\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null;\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT); // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null;\n\n    const p0 = Scale.modelToCanvas(bb.p0, render.options);\n    const p1 = Scale.modelToCanvas(bb.p1, render.options);\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs);\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this);\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render',\n      );\n      return null;\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */,\n    ); // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render);\n    });\n\n    return ret;\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options);\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true,\n        );\n      }\n    });\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.modelToCanvas(d || new Vec2(1, 0), render.options);\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3);\n  const bracketHeight = bb.p1.y - bb.p0.y;\n  const cy = 0.5 * (bb.p1.y + bb.p0.y);\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.modelToCanvas(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options,\n  );\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.modelToCanvas(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options,\n  );\n\n  return set.push(leftBracket, rightBracket);\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : '';\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=');\n\n  let range = null;\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range;\n  } else range = '>0';\n\n  const restH = rLogic.resth ? ' (RestH)' : '';\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : '';\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`;\n}\n\nexport default ReRGroup;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport Raphael from '../raphael-ext';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\n\ntype Arrow = {\n  pos: Array<Vec2>;\n  mode: RxnArrowMode;\n  height?: number;\n};\n\ntype ArrowParams = {\n  length: number;\n  angle: number;\n};\ninterface MinDistanceWithReferencePoint {\n  minDist: number;\n  refPoint: Vec2 | null;\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow;\n  isResizing = false;\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow');\n    this.item = arrow;\n  }\n\n  static isSelectable(): boolean {\n    return true;\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y);\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p);\n    const item = this.item;\n    const pos = item.pos;\n\n    let dist: number = calculateDistanceToLine(pos, point);\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints();\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point),\n      );\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null;\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist);\n    return { minDist: dist, refPoint };\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = [];\n    const refPoints = this.getReferencePoints();\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\n    });\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null,\n    );\n\n    return minDist;\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection');\n\n    return render.paper.path(path);\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = [];\n    const item = this.item;\n    const [a, b] = item.pos;\n    const height = item.height;\n    refPoints.push(new Vec2(a.x, a.y));\n    refPoints.push(new Vec2(b.x, b.y));\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b);\n      refPoints.push(middlePoint);\n    }\n    return refPoints;\n  }\n\n  makeAdditionalInfo(restruct: ReStruct) {\n    const scaleFactor = restruct.render.options.microModeScale;\n    const refPoints = this.getReferencePoints();\n    const selectionSet = restruct.render.paper.set();\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.modelToCanvas(rp, restruct.render.options);\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' }),\n      );\n    });\n\n    return selectionSet;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render;\n    const options = restruct.render.options;\n    const selectionSet = restruct.render.paper.set();\n\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle),\n    );\n    return selectionSet;\n  }\n\n  generatePath(render: Render, options, type) {\n    let path;\n    const item = this.item;\n    const height =\n      RxnArrow.isElliptical(item) && item.height\n        ? item.height * options.microModeScale\n        : 0;\n    const pos = item.pos.map((p) => {\n      return Scale.modelToCanvas(p, options) || new Vec2();\n    });\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y,\n    );\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n        );\n        break;\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options,\n          this.isResizing,\n        );\n        break;\n    }\n\n    return path;\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1);\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180;\n\n    return { length, angle };\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow');\n\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number;\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point));\n  } else {\n    const a = Vec2.dist(pos[0], pos[1]);\n    const b = Vec2.dist(pos[0], point);\n    const c = Vec2.dist(pos[1], point);\n    const per = (a + b + c) / 2;\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c));\n  }\n  return dist;\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x);\n    const minY = Math.min(a.y, b.y);\n    const x = minX + Math.abs(a.x - b.x) / 2;\n    const y = minY + Math.abs(a.y - b.y) / 2;\n    return new Vec2(x, y);\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y);\n  const lengthHyp = Math.hypot(length / 2, height);\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1;\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2;\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y);\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y);\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y);\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y);\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y);\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y);\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y);\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y);\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y);\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y);\n      }\n    }\n  }\n  return new Vec2(a.x, a.y);\n}\n\nexport default ReRxnArrow;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities';\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus');\n    this.item = plus;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render) {\n    const p = Scale.modelToCanvas(this.item.pp, render.options);\n    const s = render.options.microModeScale;\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8);\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle);\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render;\n    const centre = Scale.modelToCanvas(this.item.pp, options);\n    const path = draw.plus(render.paper, centre, options);\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\n\nexport default ReRxnPlus;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData');\n    this.sgroup = sgroup;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea;\n    const p0 = Scale.modelToCanvas(box.p0, render.options);\n    const sz = Scale.modelToCanvas(box.p1, render.options).sub(p0);\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y);\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle);\n  }\n}\n\nexport default ReDataSGroupData;\n","import { Vec2 } from 'domain/entities';\n\nexport default class BracketParams {\n  center: Vec2;\n  bracketAngleDirection: Vec2;\n  bracketDirection: Vec2;\n  width: number;\n  height: number;\n  constructor(\n    center: Vec2,\n    bracketAngleDirection: Vec2,\n    width: number,\n    height: number,\n    bracketDirection?: Vec2,\n  ) {\n    this.center = center;\n    this.bracketAngleDirection = bracketAngleDirection;\n    this.bracketDirection =\n      bracketDirection || bracketAngleDirection.rotateSC(1, 0);\n    this.width = width;\n    this.height = height;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  SGroup,\n  Vec2,\n  Struct,\n} from 'domain/entities';\nimport { SgContexts } from 'application/editor/shared/constants';\nimport ReDataSGroupData from './redatasgroupdata';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\nimport BracketParams from '../bracket-params';\nimport { RaphaelPaper } from 'raphael';\nimport { RenderOptions } from '../render.types';\ninterface SGroupdrawBracketsOptions {\n  set: any;\n  render: Render;\n  sgroup: SGroup;\n  crossBonds: { [key: number]: Array<number> };\n  atomSet: Pile;\n  bracketBox: Box2Abs;\n  direction: Vec2;\n  lowerIndexText?: string | null;\n  upperIndexText?: string | null;\n  indexAttribute?: object;\n}\n\nclass ReSGroup extends ReObject {\n  public item: SGroup | undefined;\n  public render!: Render;\n\n  constructor(sgroup: SGroup) {\n    super('sgroup');\n    /** @type {SGroup} */\n    this.item = sgroup;\n  }\n\n  static isSelectable(): boolean {\n    return false;\n  }\n\n  /**\n   * @param remol {ReStruct}\n   * @param sgroup {SGroup}\n   * @returns {*}\n   */\n  draw(remol: ReStruct, sgroup: SGroup): any {\n    this.render = remol.render;\n    let set = this.render.paper.set();\n    const atomSet = new Pile(sgroup.atoms);\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet);\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds, remol, this.render);\n    const bracketBox = sgroup.bracketBox;\n    const direction = sgroup.bracketDirection;\n    sgroup.areas = [bracketBox];\n    if (sgroup.isExpanded()) {\n      const SGroupdrawBracketsOptions: SGroupdrawBracketsOptions = {\n        set,\n        render: this.render,\n        sgroup,\n        crossBonds,\n        atomSet,\n        bracketBox,\n        direction,\n      };\n      switch (sgroup.type) {\n        case 'MUL': {\n          SGroupdrawBracketsOptions.lowerIndexText = sgroup.data.mul;\n          break;\n        }\n        case 'queryComponent': {\n          break;\n        }\n        case 'SRU': {\n          let connectivity: string = sgroup.data.connectivity || 'eu';\n          if (connectivity === 'ht') connectivity = '';\n          const subscript = sgroup.data.subscript || 'n';\n          SGroupdrawBracketsOptions.lowerIndexText = subscript;\n          SGroupdrawBracketsOptions.upperIndexText = connectivity;\n          break;\n        }\n        case 'SUP': {\n          SGroupdrawBracketsOptions.lowerIndexText = sgroup.data.name;\n          SGroupdrawBracketsOptions.upperIndexText = null;\n          SGroupdrawBracketsOptions.indexAttribute = { 'font-style': 'italic' };\n          break;\n        }\n        case 'GEN': {\n          break;\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup);\n          break;\n        }\n        default:\n          break;\n      }\n\n      // DAT S-Groups do not have brackets\n      const sgroupTypesWithBrackets = [\n        'MUL',\n        'SRU',\n        'SUP',\n        'GEN',\n        'queryComponent',\n      ];\n      if (sgroupTypesWithBrackets.includes(sgroup.type)) {\n        SGroupdrawBrackets(SGroupdrawBracketsOptions);\n      }\n    }\n    return set;\n  }\n\n  getTextHighlightDimensions(\n    padding = 0,\n    render: Render,\n  ): { startX: number; startY: number; width: number; height: number } {\n    let startX = 0;\n    let startY = 0;\n    let width = 0;\n    let height = 0;\n    const sGroup = this.item;\n    if (sGroup) {\n      const { atomId, position } = sGroup.getContractedPosition(\n        render.ctab.molecule,\n      );\n      if (sGroup?.isContracted() && position) {\n        const reSGroupAtom = render.ctab.atoms.get(atomId);\n        const sGroupTextBoundingBox =\n          reSGroupAtom?.visel.boundingBox || reSGroupAtom?.visel.oldBoundingBox;\n        if (sGroupTextBoundingBox) {\n          const { x, y } = Scale.modelToCanvas(position, render.options);\n          const { p0, p1 } = sGroupTextBoundingBox;\n          width = p1.x - p0.x + padding * 2;\n          height = p1.y - p0.y + padding * 2;\n          startX = x - width / 2;\n          startY = y - height / 2;\n        }\n      }\n    }\n\n    return { startX, startY, width, height };\n  }\n\n  getContractedSelectionContour(render: Render): any {\n    const { paper, options } = render;\n    const { fontsz, radiusScaleFactor } = options;\n    const radius = fontsz * radiusScaleFactor * 2;\n    const { startX, startY, width, height } = this.getTextHighlightDimensions(\n      fontsz / 2,\n      render,\n    );\n    return paper.rect(startX, startY, width, height, radius);\n  }\n\n  makeSelectionPlate(\n    restruct: ReStruct,\n    _paper: RaphaelPaper,\n    options: any,\n  ): any | void {\n    const sgroup = this.item;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    const render = restruct.render;\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup?.id, functionalGroups)\n    ) {\n      return this.getContractedSelectionContour(render).attr(\n        options.selectionStyle,\n      );\n    }\n  }\n\n  drawHover(render: Render): void {\n    // eslint-disable-line max-statements\n    const options = render.options;\n    const paper = render.paper;\n    const sGroupItem = this.item;\n    if (sGroupItem) {\n      const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, render);\n      const functionalGroups = render.ctab.molecule.functionalGroups;\n      const set = paper.set();\n      if (\n        FunctionalGroup.isContractedFunctionalGroup(\n          sGroupItem.id,\n          functionalGroups,\n        )\n      ) {\n        sGroupItem.hovering = this.getContractedSelectionContour(render).attr(\n          options.hoverStyle,\n        );\n      } else if (!this.selected) {\n        sGroupItem.hovering = paper\n          .path(\n            'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(a0.x),\n            tfx(a0.y),\n            tfx(a1.x),\n            tfx(a1.y),\n            tfx(b1.x),\n            tfx(b1.y),\n            tfx(b0.x),\n            tfx(b0.y),\n          )\n          .attr(options.hoverStyle);\n      }\n      set.push(sGroupItem.hovering);\n\n      SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        set.push(render?.ctab?.atoms?.get(aid)?.makeHoverPlate(render));\n      }, this);\n      SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        set.push(render?.ctab?.bonds?.get(bid)?.makeHoverPlate(render));\n      }, this);\n      render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set);\n    }\n  }\n\n  show(restruct: ReStruct): void {\n    const render = restruct.render;\n    const sgroup = this.item;\n    if (sgroup && sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab;\n      const path = this.draw(remol, sgroup);\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true);\n      this.setHover(this.hover, render); // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets({\n  set,\n  render,\n  sgroup,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  direction,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute,\n}: SGroupdrawBracketsOptions): void {\n  const attachmentPoints = [...atomSet].reduce((arr, atomId) => {\n    const rgroupAttachmentPointIds =\n      render.ctab.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n    return [...arr, ...rgroupAttachmentPointIds];\n  }, []);\n  const crossBondsPerAtom = Object.values(crossBonds);\n  const crossBondsValues = crossBondsPerAtom.flat();\n  const brackets = getBracketParameters(\n    atomSet,\n    crossBondsPerAtom,\n    crossBondsValues,\n    attachmentPoints,\n    bracketBox,\n    direction,\n    render,\n    sgroup.id,\n  );\n  let rightBracketIndex = -1;\n  const isBracketContainAttachment =\n    crossBondsValues.length === 2 &&\n    crossBondsPerAtom.length === 1 &&\n    !!attachmentPoints.length;\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i];\n    const path = draw.bracket(\n      render.paper,\n      Scale.modelToCanvas(bracket.bracketAngleDirection, render.options),\n      Scale.modelToCanvas(bracket.bracketDirection, render.options),\n      Scale.modelToCanvas(bracket.center, render.options),\n      bracket.width,\n      bracket.height,\n      render.options,\n      isBracketContainAttachment,\n    );\n    set.push(path);\n    if (\n      rightBracketIndex < 0 ||\n      brackets[rightBracketIndex].bracketAngleDirection.x <\n        bracket.bracketAngleDirection.x ||\n      (brackets[rightBracketIndex].bracketAngleDirection.x ===\n        bracket.bracketAngleDirection.x &&\n        brackets[rightBracketIndex].bracketAngleDirection.y >\n          bracket.bracketAngleDirection.y)\n    ) {\n      rightBracketIndex = i;\n    }\n  }\n  const bracketR = brackets[rightBracketIndex];\n  function renderIndex(text: string, isLowerText = false): void {\n    let path: Vec2;\n    let lowerPath: Vec2;\n    const bracketPoint1 = new Vec2(\n      set[rightBracketIndex].getPath()[1][1],\n      set[rightBracketIndex].getPath()[1][2],\n      0,\n    );\n    const bracketPoint2 = new Vec2(\n      set[rightBracketIndex].getPath()[2][1],\n      set[rightBracketIndex].getPath()[2][2],\n      0,\n    );\n    if (bracketPoint2.y === bracketPoint1.y) {\n      lowerPath =\n        bracketPoint2.x > bracketPoint1.x ? bracketPoint1 : bracketPoint2;\n    } else {\n      lowerPath =\n        bracketPoint2.y > bracketPoint1.y ? bracketPoint2 : bracketPoint1;\n    }\n    if (isLowerText) {\n      path = lowerPath;\n    } else {\n      path =\n        lowerPath.x === bracketPoint1.x && lowerPath.y === bracketPoint1.y\n          ? bracketPoint2\n          : bracketPoint1;\n    }\n\n    const indexPos = new Vec2(path.x, path.y);\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub,\n    });\n    if (indexAttribute) indexPath.attr(indexAttribute);\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()));\n    const t =\n      Math.max(\n        util.shiftRayBox(\n          indexPos,\n          bracketR.bracketAngleDirection.negated(),\n          indexBox,\n        ),\n        3,\n      ) + 2;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    indexPath.translateAbs(\n      t * bracketR.bracketAngleDirection.x,\n      t * bracketR.bracketAngleDirection.y,\n    );\n    set.push(indexPath);\n  }\n  if (lowerIndexText) {\n    renderIndex(lowerIndexText, true);\n  }\n  if (upperIndexText) renderIndex(upperIndexText);\n}\n\nfunction showValue(\n  paper: RaphaelPaper,\n  pos: Vec2 | undefined,\n  sgroup: SGroup,\n  options: RenderOptions,\n): any {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  const text = paper.text(pos?.x, pos?.y, sgroup.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n  });\n  const box = text.getBBox();\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    3,\n  );\n  rect = sgroup.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' });\n  const set = paper.set();\n  set.push(rect, text.toFront());\n  return set;\n}\n\nfunction drawGroupDat(restruct: ReStruct, sgroup: SGroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule);\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : [];\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule);\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup);\n}\n\nfunction drawAbsoluteDat(restruct: ReStruct, sgroup: SGroup): any {\n  const render = restruct.render;\n  const options = render.options;\n  const paper = render.paper;\n  const set = paper.set();\n\n  const ps = sgroup?.pp?.scaled(options.microModeScale);\n  const name = showValue(paper, ps, sgroup, options);\n\n  if (sgroup.data.context !== SgContexts.Bond) {\n    const box = util.relBox(name.getBBox());\n    name.translateAbs(0.5 * box.width, -0.5 * box.height);\n  }\n\n  set.push(name);\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()));\n  sgroup.dataArea = sbox.transform(Scale.canvasToModel, render.options);\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup));\n  }\n\n  return set;\n}\n\nfunction drawAttachedDat(restruct: ReStruct, sgroup: SGroup): any {\n  const render = restruct.render;\n  const options = render.options;\n  const paper = render.paper;\n  const set = paper.set();\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid);\n    if (atom) {\n      const p = Scale.modelToCanvas(atom.a.pp, options);\n      const bb = atom.visel.boundingBox;\n      if (bb !== null) p.x = Math.max(p.x, bb.p1.x);\n      p.x += options.lineWidth; // shift a bit to the right\n      const nameI = showValue(paper, p, sgroup, options);\n      const boxI = util.relBox(nameI.getBBox());\n      nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height);\n      set.push(nameI);\n      let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()));\n      sboxI = sboxI.transform(Scale.canvasToModel, render.options);\n      sgroup.areas.push(sboxI);\n    }\n  });\n\n  return set;\n}\n\nfunction getBracketParameters(\n  atomSet: Pile,\n  crossBondsPerAtom: Array<Array<number>>,\n  crossBondsValues: Array<number>,\n  attachmentPoints: number[],\n  bracketBox: Box2Abs,\n  direction: Vec2,\n  render: Render,\n  id: number,\n) {\n  const mol = render.ctab.molecule;\n  const brackets: BracketParams[] = [];\n  const bracketDirection = direction.rotateSC(1, 0);\n\n  if (crossBondsValues.length < 2) {\n    getBracketParamersWithCrossBondsLessThan2(\n      direction,\n      bracketDirection,\n      bracketBox,\n      brackets,\n    );\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    getBracketParamersWithCrossBondsEquals2(\n      mol,\n      crossBondsValues,\n      id,\n      render,\n      attachmentPoints,\n      brackets,\n    );\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 1) {\n    getBracketParamersWithCrossBondsMoreThan2OnOneAtom(\n      crossBondsValues as [number, number],\n      mol,\n      attachmentPoints,\n      render,\n      brackets,\n    );\n  } else {\n    for (let i = 0; i < crossBondsValues.length; ++i) {\n      const bond = mol.bonds.get(Number(crossBondsValues[i]));\n      const center = bond?.getCenter(mol);\n      const direction = atomSet.has(bond?.begin)\n        ? bond?.getDir(mol)\n        : bond?.getDir(mol).negated();\n      if (center && direction) {\n        brackets.push(\n          new BracketParams(center, direction, 0.2, bracketBox.sz().y),\n        );\n      }\n    }\n  }\n  return brackets;\n}\n\nfunction getBracketParamersWithCrossBondsMoreThan2OnOneAtom(\n  crossBondsValues: [number, number],\n  mol: Struct,\n  attachmentPoints: number[],\n  render: Render,\n  brackets: BracketParams[],\n) {\n  let notTemplateShapeFirstAtom = false;\n  const bondDirections: Vec2[] = crossBondsValues.map((value) => {\n    const bond = mol.bonds.get(Number(value));\n    return bond?.getDir(mol) || new Vec2();\n  });\n  // if bonds direction is clockwise, then negated\n  const needNegated =\n    Vec2.crossProduct(bondDirections[0], bondDirections[1]) > 0;\n  notTemplateShapeFirstAtom =\n    Math.abs(Number(crossBondsValues[0]) - Number(crossBondsValues[1])) === 1;\n  if (notTemplateShapeFirstAtom && !needNegated) {\n    crossBondsValues.reverse();\n  }\n\n  for (let i = 0; i < crossBondsValues.length; ++i) {\n    const bond = mol.bonds.get(Number(crossBondsValues[i]));\n    let bondDirection = bond?.getDir(mol) || new Vec2();\n    let bracketDirection: Vec2;\n    let bracketAngleDirection: Vec2;\n    let attachmentDirection: Vec2;\n    if (attachmentPoints.length !== 2) {\n      if (needNegated && notTemplateShapeFirstAtom) {\n        bondDirection = bondDirection.negated();\n      }\n      bondDirection = i === 0 ? bondDirection : bondDirection.negated();\n      bracketDirection =\n        i === 0\n          ? bondDirection.rotateSC(1, 0).negated()\n          : bondDirection.rotateSC(1, 0);\n      bracketAngleDirection = bondDirection;\n    } else {\n      attachmentPoints = attachmentPoints.sort(\n        (point1, point2) => point1 - point2,\n      );\n      // if there are 2 attachment points then make brackets parallel to attachments\n      attachmentDirection =\n        render.ctab.rgroupAttachmentPoints.get(attachmentPoints[i])\n          ?.lineDirectionVector || new Vec2();\n      bracketDirection = attachmentDirection.negated();\n      bracketAngleDirection =\n        i === 0\n          ? bracketDirection.rotateSC(1, 0)\n          : bracketDirection.rotateSC(1, 0).negated();\n    }\n    brackets.push(\n      new BracketParams(\n        bond?.getCenter(mol) || new Vec2(),\n        bracketAngleDirection,\n        0.2,\n        attachmentPoints.length ? 1.8 : 1.0,\n        bracketDirection,\n      ),\n    );\n  }\n  return { crossBondsValues, attachmentPoints };\n}\n\nfunction getBracketParamersWithCrossBondsEquals2(\n  mol: Struct,\n  crossBondsValues: number[],\n  id: number,\n  render: Render,\n  attachmentPoints: number[],\n  brackets: BracketParams[],\n) {\n  const bond1 = mol.bonds.get(Number(crossBondsValues[0]));\n  const bond2 = mol.bonds.get(Number(crossBondsValues[1]));\n  if (bond1 && bond2) {\n    const leftCenter = bond1.getCenter(mol);\n    const rightCenter = bond2.getCenter(mol);\n    let leftShift = -1;\n    let rightShift = -1;\n    let bracketShift = -1;\n    let bracketShiftNegated = -1;\n    const centerConnection = Vec2.centre(leftCenter, rightCenter);\n    const rightDirection = Vec2.diff(rightCenter, leftCenter).normalized();\n    const leftDirection = rightDirection.negated();\n    const bracketDirection = rightDirection.rotateSC(1, 0);\n    const bracketDirectionNegated = bracketDirection.negated();\n\n    mol?.sGroupForest?.children?.get(id)?.forEach((sgid) => {\n      let boundingBox = render?.ctab?.sgroups?.get(sgid)?.visel.boundingBox;\n      boundingBox =\n        boundingBox\n          ?.translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.canvasToModel, render.options) || new Box2Abs();\n      leftShift = Math.max(\n        leftShift,\n        util.shiftRayBox(leftCenter, leftDirection, boundingBox),\n      );\n      rightShift = Math.max(\n        rightShift,\n        util.shiftRayBox(rightCenter, rightDirection, boundingBox),\n      );\n      bracketShift = Math.max(\n        bracketShift,\n        util.shiftRayBox(centerConnection, bracketDirection, boundingBox),\n      );\n      bracketShiftNegated = Math.max(\n        bracketShiftNegated,\n        util.shiftRayBox(\n          centerConnection,\n          bracketDirectionNegated,\n          boundingBox,\n        ),\n      );\n    });\n    leftShift = Math.max(leftShift + 0.2, 0);\n    rightShift = Math.max(rightShift + 0.2, 0);\n    bracketShift = Math.max(\n      Math.max(bracketShift, bracketShiftNegated) + 0.1,\n      0,\n    );\n    const bracketWidth = 0.25;\n    let bracketHeight = 1.5 + bracketShift;\n    if (attachmentPoints.length) {\n      bracketHeight = 2 + 2 * Math.sin(Math.PI / 6) + bracketShift;\n    }\n    brackets.push(\n      new BracketParams(\n        leftCenter.addScaled(leftDirection, leftShift),\n        leftDirection,\n        bracketWidth,\n        bracketHeight,\n      ),\n      new BracketParams(\n        rightCenter.addScaled(rightDirection, rightShift),\n        rightDirection,\n        bracketWidth,\n        bracketHeight,\n      ),\n    );\n  }\n}\n\nfunction getBracketParamersWithCrossBondsLessThan2(\n  direction: Vec2,\n  bracketDirection: Vec2,\n  bracketBox: Box2Abs,\n  brackets: BracketParams[],\n) {\n  direction = direction || new Vec2(1, 0);\n  bracketDirection = bracketDirection || direction.rotateSC(1, 0);\n  const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3);\n  const leftCenter = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    0.5 * (bracketBox.p0.y + bracketBox.p1.y),\n  );\n  const rightCenter = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    0.5 * (bracketBox.p0.y + bracketBox.p1.y),\n  );\n  const bracketHeight = bracketBox.sz().y;\n\n  brackets.push(\n    new BracketParams(\n      leftCenter,\n      direction.negated(),\n      bracketWidth,\n      bracketHeight,\n    ),\n    new BracketParams(rightCenter, direction, bracketWidth, bracketHeight),\n  );\n}\n\n/**\n * @param sgroup {SGroup}\n * @param render {Render}\n * @returns {{a1: Vec2, size: number | number, startY: number, startX: number, b0: Vec2, a0: Vec2, b1: Vec2}}\n */\nfunction getHighlighPathInfo(\n  sgroup: SGroup,\n  render: Render,\n): {\n  a0: Vec2;\n  a1: Vec2;\n  b0: Vec2;\n  b1: Vec2;\n  startX: number;\n  startY: number;\n  size: number;\n} {\n  const options = render.options;\n  let bracketBox = sgroup.bracketBox.transform(Scale.modelToCanvas, options);\n  const lineWidth = options.lineWidth;\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6);\n  bracketBox = bracketBox.extend(vext, vext);\n  const direction = sgroup.bracketDirection;\n  const bracketDirection = direction.rotateSC(1, 0);\n  const a0 = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    bracketBox.p0.y,\n  );\n  const a1 = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    bracketBox.p1.y,\n  );\n  const b0 = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    bracketBox.p0.y,\n  );\n  const b1 = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    bracketBox.p1.y,\n  );\n  const size = options.contractedFunctionalGroupSize;\n  let startX = (b0.x + a0.x) / 2 - size / 2;\n  let startY = (a1.y + a0.y) / 2 - size / 2;\n  const { position: contractedPosition } = sgroup.getContractedPosition(\n    render.ctab.molecule,\n  );\n  if (contractedPosition) {\n    const shift = new Vec2(size / 2, size / 2, 0);\n    const hoverPp = Vec2.diff(contractedPosition.scaled(40), shift);\n    startX = hoverPp.x;\n    startY = hoverPp.y;\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size,\n  };\n}\n\nexport default ReSGroup;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\n\ninterface MinDistanceWithReferencePoint {\n  minDist: number;\n  refPoint: Vec2 | null;\n}\ninterface StyledPath {\n  path: any;\n  stylesApplied: boolean;\n}\nclass ReSimpleObject extends ReObject {\n  private item: any;\n  private selectionSet: any;\n  private selectionPointsSet: any;\n\n  constructor(simpleObject: any) {\n    super('simpleObject');\n    this.item = simpleObject;\n  }\n\n  static isSelectable(): boolean {\n    return true;\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y);\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p);\n    const item = this.item;\n    const mode = item.mode;\n    const pos = item.pos;\n    let dist: number;\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0]);\n        const rx = rad.x / 2;\n        const ry = rad.y / 2;\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry));\n        const pointToCenter = Vec2.diff(point, center);\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry),\n          );\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point);\n        }\n        break;\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x);\n        const topY = Math.min(pos[0].y, pos[1].y);\n        const bottomX = Math.max(pos[0].x, pos[1].x);\n        const bottomY = Math.max(pos[0].y, pos[1].y);\n\n        const distances: Array<number> = [];\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y);\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY);\n          } else {\n            distances.push(point.y - topY, bottomY - point.y);\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point));\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point));\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point));\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point));\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x);\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX);\n          } else {\n            distances.push(point.x - topX, bottomX - point.x);\n          }\n        }\n        dist = Math.min(...distances);\n        break;\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point);\n        break;\n      }\n\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null;\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist);\n    return { minDist: dist, refPoint };\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = [];\n    const refPoints = this.getReferencePoints();\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\n    });\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null,\n    );\n\n    return minDist;\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = [];\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y),\n        );\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x);\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y);\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h),\n        );\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y),\n          );\n        }\n        break;\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)));\n        break;\n      }\n\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n    return refPoints;\n  }\n\n  getHoverPathStyle(\n    path: any,\n    render: Render,\n    isOuterShapeOfHoverPath: boolean,\n  ) {\n    if (isOuterShapeOfHoverPath) {\n      return path.attr(render.options.hoverStyle);\n    } else {\n      return path.attr({ ...render.options.hoverStyle, fill: '#fff' });\n    }\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = [];\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.modelToCanvas(p, render.options);\n    });\n    const scaleFactor = render.options.microModeScale;\n\n    const paths: Array<StyledPath> = [];\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0]);\n        const rx = rad.x / 2;\n        const ry = rad.y / 2;\n        const outerEllipse = render.paper.ellipse(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          tfx(point[0].x + rx),\n          tfx(point[0].y + ry),\n          tfx(Math.abs(rx) + scaleFactor / 8),\n          tfx(Math.abs(ry) + scaleFactor / 8),\n        );\n        paths.push({\n          path: this.getHoverPathStyle(outerEllipse, render, true),\n          stylesApplied: true,\n        });\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          const innerEllipse = render.paper.ellipse(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) - scaleFactor / 8),\n            tfx(Math.abs(ry) - scaleFactor / 8),\n          );\n          paths.push({\n            path: this.getHoverPathStyle(innerEllipse, render, false),\n            stylesApplied: true,\n          });\n        }\n        break;\n      }\n\n      case SimpleObjectMode.rectangle: {\n        const outerRect = render.paper.rect(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n          tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n          tfx(\n            Math.max(point[0].x, point[1].x) -\n              Math.min(point[0].x, point[1].x) +\n              scaleFactor / 4,\n          ),\n          tfx(\n            Math.max(point[0].y, point[1].y) -\n              Math.min(point[0].y, point[1].y) +\n              scaleFactor / 4,\n          ),\n        );\n        paths.push({\n          path: this.getHoverPathStyle(outerRect, render, true),\n          stylesApplied: true,\n        });\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          const innerRect = render.paper.rect(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) -\n                scaleFactor / 4,\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) -\n                scaleFactor / 4,\n            ),\n          );\n          paths.push({\n            path: this.getHoverPathStyle(innerRect, render, false),\n            stylesApplied: true,\n          });\n        }\n\n        break;\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = [];\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x),\n        );\n\n        const p0 = { x: 0, y: 0 };\n        const p1 = { x: 0, y: 0 };\n\n        const k = point[0].x > point[1].x ? -1 : 1;\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle));\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle));\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle));\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle));\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        paths.push({\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          path: this.getHoverPathStyle(render.paper.path(poly), render, true),\n          stylesApplied: true,\n        });\n        break;\n      }\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n\n    return paths;\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle);\n      }\n      return enhPath.path;\n    });\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths);\n    return paths;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.modelToCanvas(p, restruct.render.options) || new Vec2();\n    });\n\n    const refPoints = this.getReferencePoints();\n    const scaleFactor = restruct.render.options.microModeScale;\n    this.selectionSet = restruct.render.paper.set();\n    this.selectionPointsSet = restruct.render.paper.set();\n    this.selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.selectionStyleSimpleObject,\n      ),\n    );\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.modelToCanvas(rp, restruct.render.options);\n      this.selectionPointsSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' }),\n      );\n    });\n    restruct.addReObjectPath(\n      LayerMap.selectionPlate,\n      this.visel,\n      this.selectionPointsSet,\n    );\n    return this.selectionSet;\n  }\n\n  togglePoints(displayFlag: boolean) {\n    displayFlag\n      ? this.selectionPointsSet?.show()\n      : this.selectionPointsSet?.hide();\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render;\n    const pos = this.item.pos.map((p) => {\n      return Scale.modelToCanvas(p, options) || new Vec2();\n    });\n\n    const path = generatePath(this.item.mode, render.paper, pos);\n\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number;\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point));\n  } else {\n    const a = Vec2.dist(pos[0], pos[1]);\n    const b = Vec2.dist(pos[0], point);\n    const c = Vec2.dist(pos[1], point);\n    const per = (a + b + c) / 2;\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c));\n  }\n  return dist;\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: [Vec2, Vec2]): any {\n  let path: any;\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos);\n      break;\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos);\n      break;\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos);\n      break;\n    }\n    default: {\n      throw new Error('Unsupported shape type');\n    }\n  }\n\n  return path;\n}\n\nexport default ReSimpleObject;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop');\n    this.loop = loop;\n    this.centre = new Vec2();\n    this.radius = new Vec2();\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render;\n    const paper = render.paper;\n    const molecule = restruct.molecule;\n    const loop = this.loop;\n    this.centre = new Vec2();\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid);\n      const bond = restruct.bonds.get(hb.bid);\n      const apos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.begin).a.pp,\n        options,\n      );\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false;\n      this.centre.add_(apos); // eslint-disable-line no-underscore-dangle\n    });\n    loop.convex = true;\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k]);\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir),\n      );\n      if (angle > 0) loop.convex = false;\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length);\n    this.radius = -1;\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid);\n      const apos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.begin).a.pp,\n        options,\n      );\n      const bpos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.end).a.pp,\n        options,\n      );\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized();\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n);\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist);\n    });\n    this.radius *= 0.7;\n    if (!loop.aromatic) return;\n    let path = null;\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n      });\n    } else {\n      let pathStr = '';\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k]);\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir),\n        );\n        const halfAngle = (Math.PI - angle) / 2;\n        const dir = hbb.dir.rotate(halfAngle);\n        const pi = Scale.modelToCanvas(\n          restruct.atoms.get(hbb.begin).a.pp,\n          options,\n        );\n        let sin = Math.sin(halfAngle);\n        const minSin = 0.1;\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin);\n        const offset = options.bondSpace / sin;\n        const qi = pi.addScaled(dir, -offset);\n        pathStr += k === 0 ? 'M' : 'L';\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y);\n      }\n      pathStr += 'Z';\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- ',\n      });\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true);\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds;\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid,\n    );\n  }\n}\n\nexport default ReLoop;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange,\n} from 'draft-js';\nimport { Box2Abs, Text, TextCommand, Vec2 } from 'domain/entities';\nimport { flatten, isEqual } from 'lodash/fp';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Scale } from 'domain/helpers';\nimport { RaphaelBaseElement } from 'raphael';\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize;\n}\n\nconst SCALE = 40; // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text;\n  paths: Array<Array<RaphaelBaseElement>> = [];\n\n  constructor(text: Text) {\n    super('text');\n    this.item = text;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return [];\n\n    const { p0, p1 } = this.getRelBox(this.paths);\n\n    const p = this.item.position;\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE;\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE;\n\n    const refPoints: Array<Vec2> = [];\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y),\n    );\n\n    return refPoints;\n  }\n\n  getVBoxObj(): Box2Abs {\n    const [leftTopPoint, _, rightBottomPoint] = this.getReferencePoints();\n    return new Box2Abs(leftTopPoint, rightBottomPoint);\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths);\n    const topLeft = p0.sub(render.options.offset);\n    const { x: width, y: height } = p1.sub(p0);\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5);\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0];\n    const leftEdge = firstElOfFirstRow.getBBox().x;\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0];\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y),\n    );\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0],\n    );\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1];\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width;\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1];\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height),\n    );\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge),\n    };\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width;\n      return rowWidth;\n    }, 0);\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null;\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null;\n    return this.hoverPath(restruct.render).attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render;\n    const paper = render.paper;\n    const paperScale = Scale.modelToCanvas(this.item.position!, options);\n\n    let shiftY = 0;\n    this.paths = [];\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null;\n    if (!rawContentState) {\n      return;\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options);\n      let shiftX = 0;\n      const row: Array<RaphaelBaseElement> = [];\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0');\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0',\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles,\n          });\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0));\n        row.push(path);\n        shiftX += path.getBBox().width;\n      });\n\n      this.paths.push(row);\n\n      const { p0, p1 } = this.getRelBox([row]);\n      shiftY += Math.abs(Vec2.diff(p0, p1).y);\n    });\n\n    this.item.setPos(this.getReferencePoints());\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true,\n    );\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any,\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = [];\n\n    let start = 0;\n    let styles: Record<string, any> = this.getStyles(block, start, options);\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options);\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles]);\n        styles = nextStyles;\n        start = i;\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles]);\n\n    return ranges;\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any,\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length,\n    );\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0];\n        }\n        return acc;\n      },\n      null,\n    );\n\n    // Sort to apply font size styles first and then override it by subscript/superscript styles\n    ranges.sort((_, nextRange) => {\n      return nextRange.style.includes(TextCommand.FontSize) ? 1 : -1;\n    });\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz;\n        const fontszsub = (customFontSize || options.fontszsub) * 0.5;\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold';\n            break;\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic';\n            break;\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px';\n            styles.shiftY = fontsz / 4;\n\n            break;\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px';\n            styles.shiftY = -fontsz / 3;\n            break;\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px';\n            break;\n\n          default:\n        }\n\n        return styles;\n      },\n      {},\n    );\n  }\n}\n\nexport default ReText;\n","import { RaphaelPaper } from 'raphael';\nimport {\n  AttachmentPoints,\n  Bond,\n  RGroupAttachmentPoint,\n  RGroupAttachmentPointType,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { Scale } from 'domain/helpers';\nimport { ReAtom, ReObject, ReStruct } from '.';\nimport draw from '../draw';\nimport { Render } from '../raphaelRender';\nimport { RenderOptions } from '../render.types';\nimport { LayerMap } from './generalEnumTypes';\nimport Visel from './visel';\n\nclass ReRGroupAttachmentPoint extends ReObject {\n  item: RGroupAttachmentPoint;\n  reAtom: ReAtom;\n  lineDirectionVector: Vec2 = new Vec2();\n\n  static LINE_OUTLINE_WIDTH = 0.36;\n  static OUTLINE_PADDING = 0.15;\n  static CURVE_OUTLINE_WIDTH = 1.0;\n  static CURVE_OUTLINE_HEIGHT = 0.42;\n\n  constructor(item: RGroupAttachmentPoint, reAtom: ReAtom) {\n    super('rgroupAttachmentPoint');\n    this.item = item;\n    this.reAtom = reAtom;\n  }\n\n  get normalizedLineDirectionVector() {\n    return this.lineDirectionVector.normalized();\n  }\n\n  get normalizedCurveDirectionVector() {\n    return this.lineDirectionVector.rotate(Math.PI / 2).normalized();\n  }\n\n  get startPoint() {\n    return this.reAtom.a.pp;\n  }\n\n  get middlePoint() {\n    return this.outlineEndPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_HEIGHT,\n    );\n  }\n\n  get endPoint() {\n    return this.startPoint.add(this.lineDirectionVector);\n  }\n\n  get outlineEndPoint() {\n    const length =\n      this.lineDirectionVector.length() +\n      ReRGroupAttachmentPoint.OUTLINE_PADDING;\n    return this.startPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      length,\n    );\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  getOutlinePoints() {\n    const topLeftPadPoint = this.outlineEndPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const topLeftPoint = topLeftPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const topRightPadPoint = this.outlineEndPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const topRightPoint = topRightPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleMostLeftPadPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const middleMostLeftPoint = middleMostLeftPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleMostRightPadPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const middleMostRightPoint = middleMostRightPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleLeftPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const middleRightPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomLeftPadPoint = this.startPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomLeftPoint = bottomLeftPadPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const bottomRightPadPoint = this.startPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomRightPoint = bottomRightPadPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n\n    return [\n      topLeftPadPoint,\n      topLeftPoint,\n      topRightPoint,\n      topRightPadPoint,\n      middleMostRightPadPoint,\n      middleMostRightPoint,\n      middleRightPoint,\n      bottomRightPoint,\n      bottomRightPadPoint,\n      bottomLeftPadPoint,\n      bottomLeftPoint,\n      middleLeftPoint,\n      middleMostLeftPoint,\n      middleMostLeftPadPoint,\n    ] as const;\n  }\n\n  getDistanceTo(destination: Vec2) {\n    return Vec2.dist(destination, this.middlePoint);\n  }\n\n  show(restruct: ReStruct) {\n    const directionVector = this.getAttachmentPointDirectionVector(\n      restruct.molecule,\n    );\n\n    if (!directionVector) {\n      return;\n    }\n    this.lineDirectionVector = directionVector;\n\n    showAttachmentPointShape(\n      this.reAtom,\n      restruct.render,\n      directionVector,\n      restruct.addReObjectPath.bind(restruct),\n      this.visel,\n    );\n\n    const showLabel = isAttachmentPointLabelRequired(restruct);\n    if (showLabel) {\n      // in case of isTrisectionRequired (trisection case) we should show labels '1' and '2' for those separated vectors\n      const labelText = this.item.type === 'primary' ? '1' : '2';\n      showAttachmentPointLabel(\n        this.reAtom,\n        restruct.render,\n        directionVector,\n        restruct.addReObjectPath.bind(restruct),\n        labelText,\n        this.visel,\n      );\n    }\n  }\n\n  private getHoverPlatePath(options: RenderOptions) {\n    const outlinePoints = this.getOutlinePoints();\n    const scaledOutlinePoints = outlinePoints.map((point) =>\n      Scale.modelToCanvas(point, options),\n    );\n    const [\n      topLeftPadPoint,\n      topLeftPoint,\n      topRightPoint,\n      topRightPadPoint,\n      middleMostRightPadPoint,\n      middleMostRightPoint,\n      middleRightPoint,\n      bottomRightPoint,\n      bottomRightPadPoint,\n      bottomLeftPadPoint,\n      bottomLeftPoint,\n      middleLeftPoint,\n      middleMostLeftPoint,\n      middleMostLeftPadPoint,\n    ] = scaledOutlinePoints;\n\n    // Docs: ketcher-core/docs/data/hover_selection_rgroup_attachment_point.png\n    const pathString = `\n      M ${topLeftPoint.x} ${topLeftPoint.y}\n      L ${topRightPoint.x} ${topRightPoint.y}\n      C ${topRightPadPoint.x} ${topRightPadPoint.y}, ${middleMostRightPadPoint.x} ${middleMostRightPadPoint.y}, ${middleMostRightPoint.x} ${middleMostRightPoint.y}\n      L ${middleRightPoint.x} ${middleRightPoint.y}\n      L ${bottomRightPoint.x} ${bottomRightPoint.y}\n      C ${bottomRightPadPoint.x} ${bottomRightPadPoint.y}, ${bottomLeftPadPoint.x} ${bottomLeftPadPoint.y}, ${bottomLeftPoint.x} ${bottomLeftPoint.y}\n      L ${middleLeftPoint.x} ${middleLeftPoint.y}\n      L ${middleMostLeftPoint.x} ${middleMostLeftPoint.y}\n      C ${middleMostLeftPadPoint.x} ${middleMostLeftPadPoint.y}, ${topLeftPadPoint.x} ${topLeftPadPoint.y}, ${topLeftPoint.x} ${topLeftPoint.y}\n    `;\n    return pathString;\n  }\n\n  makeHoverPlate(render: Render) {\n    const hoverPlatePath = this.getHoverPlatePath(render.options);\n    return render.paper.path(hoverPlatePath).attr(render.options.hoverStyle);\n  }\n\n  makeSelectionPlate(\n    _restruct: ReStruct,\n    paper: RaphaelPaper,\n    options: RenderOptions,\n  ) {\n    const hoverPlatePath = this.getHoverPlatePath(options);\n    return paper.path(hoverPlatePath).attr(options.selectionStyle);\n  }\n\n  drawHover(render: Render) {\n    const hoverPlate = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, hoverPlate);\n    return hoverPlate;\n  }\n\n  private getAttachmentPointDirectionVector(struct: Struct) {\n    if (!this.reAtom.hasAttachmentPoint()) {\n      return;\n    }\n    if (this.isTrisectionAttachmentPoint()) {\n      return trisectionLargestSector(this.reAtom, struct, this.item.type);\n    } else {\n      const hasOnlyOneBond = this.reAtom.a.neighbors.length === 1;\n      const directionVector = hasOnlyOneBond\n        ? getAttachmentDirectionForOnlyOneBond(this.reAtom, struct)\n        : this.reAtom.bisectLargestSector(struct);\n      return directionVector;\n    }\n  }\n\n  private isTrisectionAttachmentPoint(): boolean {\n    // in this case we should split the attachment point vector to two vectors\n    return this.reAtom.a.attachmentPoints === AttachmentPoints.BothSides;\n  }\n}\n\nfunction showAttachmentPointShape(\n  atom: ReAtom,\n  { options, paper }: Render,\n  directionVector: Vec2,\n  addReObjectPath: InstanceType<typeof ReStruct>['addReObjectPath'],\n  visel: Visel,\n): void {\n  const atomPositionVector = Scale.modelToCanvas(atom.a.pp, options);\n  const shiftedAtomPositionVector = atom.getShiftedSegmentPosition(\n    options,\n    directionVector,\n  );\n  const attachmentPointEnd = atomPositionVector.addScaled(\n    directionVector,\n    options.microModeScale * 0.85,\n  );\n\n  const resultShape = draw.rgroupAttachmentPoint(\n    paper,\n    shiftedAtomPositionVector,\n    attachmentPointEnd,\n    directionVector,\n    options,\n  );\n\n  addReObjectPath(\n    LayerMap.indices,\n    visel,\n    resultShape,\n    atomPositionVector,\n    true,\n  );\n}\n\nfunction trisectionLargestSector(\n  atom: ReAtom,\n  struct: Struct,\n  attachmentPointType: RGroupAttachmentPointType,\n) {\n  const { largestAngle, neighborAngle } =\n    atom.getLargestSectorFromNeighbors(struct);\n  const firstTrisectorAngle = neighborAngle + largestAngle / 3;\n  const secondTrisectorAngle = neighborAngle + (largestAngle * 2) / 3;\n\n  return attachmentPointType === 'primary'\n    ? newVectorFromAngle(firstTrisectorAngle)\n    : newVectorFromAngle(secondTrisectorAngle);\n}\n\nfunction newVectorFromAngle(angle: number): Vec2 {\n  return new Vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction isAttachmentPointLabelRequired(restruct: ReStruct) {\n  return restruct.molecule.atoms.some(\n    ({ attachmentPoints }) =>\n      attachmentPoints === AttachmentPoints.SecondSideOnly ||\n      attachmentPoints === AttachmentPoints.BothSides,\n  );\n}\n\nfunction getAttachmentDirectionForOnlyOneBond(\n  atom: ReAtom,\n  struct: Struct,\n): Vec2 {\n  const DEGREE_120_FOR_ONE_BOND = (2 * Math.PI) / 3;\n  const DEGREE_180_FOR_TRIPLE_BOND = Math.PI;\n  const onlyNeighbor = atom.a.neighbors[0];\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  const neighbour = struct.halfBonds.get(onlyNeighbor)!;\n  const angle = neighbour.ang;\n  const isTripleBond =\n    struct.bonds.get(neighbour.bid)?.type === Bond.PATTERN.TYPE.TRIPLE;\n  const finalAngle =\n    angle +\n    (isTripleBond ? DEGREE_180_FOR_TRIPLE_BOND : DEGREE_120_FOR_ONE_BOND);\n  return newVectorFromAngle(finalAngle);\n}\n\nfunction showAttachmentPointLabel(\n  atom: ReAtom,\n  { options, paper }: Render,\n  directionVector: Vec2,\n  addReObjectPath: InstanceType<typeof ReStruct>['addReObjectPath'],\n  labelText: string,\n  visel: Visel,\n): void {\n  const atomPositionVector = Scale.modelToCanvas(atom.a.pp, options);\n  const labelPosition = getLabelPositionForAttachmentPoint(\n    atomPositionVector,\n    directionVector,\n    options.microModeScale,\n  );\n  const labelPath = draw.rgroupAttachmentPointLabel(\n    paper,\n    labelPosition,\n    labelText,\n    options,\n    atom.color,\n  );\n  addReObjectPath(LayerMap.indices, visel, labelPath, atomPositionVector, true);\n}\n\nfunction getLabelPositionForAttachmentPoint(\n  atomPositionVector: Vec2,\n  directionVector: Vec2,\n  shapeHeight: number,\n): Vec2 {\n  const normal = directionVector.rotateSC(1, 0);\n  return atomPositionVector\n    .addScaled(normal, 0.17 * shapeHeight)\n    .addScaled(directionVector, shapeHeight * 0.7);\n}\n\nexport { ReRGroupAttachmentPoint };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  RGroupAttachmentPoint,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport assert from 'assert';\nimport { LayerMap } from './generalEnumTypes';\nimport ReAtom from './reatom';\nimport ReBond from './rebond';\nimport ReDataSGroupData from './redatasgroupdata';\nimport ReEnhancedFlag from './reenhancedFlag';\nimport ReFrag from './refrag';\nimport ReLoop from './reloop';\nimport ReRGroup from './rergroup';\nimport ReRxnArrow from './rerxnarrow';\nimport ReRxnPlus from './rerxnplus';\nimport ReSGroup from './resgroup';\nimport ReSimpleObject from './resimpleObject';\nimport ReText from './retext';\nimport { Render } from '../raphaelRender';\nimport Visel from './visel';\nimport util from '../util';\nimport { ReRGroupAttachmentPoint } from './rergroupAttachmentPoint';\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    rgroupAttachmentPoints: ReRGroupAttachmentPoint,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText,\n  } as const;\n\n  public render: Render;\n  public molecule: Struct;\n  public atoms: Map<number, ReAtom> = new Map();\n  public bonds: Map<number, ReBond> = new Map();\n  public reloops: Map<number, ReLoop> = new Map();\n  public rxnPluses: Map<number, ReRxnPlus> = new Map();\n  public rxnArrows: Map<number, ReRxnArrow> = new Map();\n  public frags: Pool = new Pool();\n  public rgroups: Pool = new Pool();\n  public rgroupAttachmentPoints: Pool<ReRGroupAttachmentPoint> = new Pool();\n\n  public sgroups: Map<number, ReSGroup> = new Map();\n  public sgroupData: Map<number, ReDataSGroupData> = new Map();\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map();\n  private simpleObjects: Map<number, ReSimpleObject> = new Map();\n  public texts: Map<number, ReText> = new Map();\n  private initialized = false;\n  private layers: Array<any> = [];\n  public connectedComponents: Pool = new Pool();\n  private ccFragmentType: Pool = new Pool();\n  private structChanged = false;\n\n  private atomsChanged: Map<number, 1> = new Map();\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map();\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map();\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map();\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map();\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map();\n  private textsChanged: Map<number, ReText> = new Map();\n  private snappingBonds: number[] = [];\n\n  constructor(\n    molecule,\n    render: Render | { skipRaphaelInitialization: boolean; theme },\n  ) {\n    // eslint-disable-line max-statements\n    this.render = render as Render;\n    this.molecule = molecule || new Struct();\n    this.initLayers();\n    this.clearMarks();\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom));\n    });\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond));\n    });\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop));\n    });\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item));\n    });\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item));\n    });\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item));\n    });\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item));\n    });\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item));\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag());\n    });\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item));\n    });\n\n    molecule.rgroupAttachmentPoints.forEach(\n      (item: RGroupAttachmentPoint, id: number) => {\n        const reAtom = this.atoms.get(item.atomId);\n        assert(reAtom != null);\n        this.rgroupAttachmentPoints.set(\n          id,\n          new ReRGroupAttachmentPoint(item, reAtom),\n        );\n      },\n    );\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item));\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item));\n      }\n    });\n  }\n\n  get visibleRGroupAttachmentPoints() {\n    const sgroups = this.molecule.sgroups;\n    const functionalGroups = this.molecule.functionalGroups;\n    return this.rgroupAttachmentPoints.filter((_id, reItem) => {\n      const atomId = reItem.item.atomId;\n      const atom = this.molecule.atoms.get(atomId);\n      assert(atom != null);\n      return !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false,\n      );\n    });\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid);\n    if (!atom || atom.component < 0) return;\n    const cc = this.connectedComponents.get(atom.component);\n\n    cc.delete(aid);\n    if (cc.size < 1) this.connectedComponents.delete(atom.component);\n\n    atom.component = -1;\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear();\n    this.atoms.forEach((atom) => {\n      atom.component = -1;\n    });\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile,\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid];\n    const ids = new Pile();\n\n    while (list.length > 0) {\n      const aid = list.pop()!;\n      ids.add(aid);\n      const atom = this.atoms.get(aid);\n      if (!atom) continue;\n      if (atom.component >= 0) adjacentComponents.add(atom.component);\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor);\n        if (!halfBond) return;\n        const neiId = halfBond.end;\n        if (!ids.has(neiId)) list.push(neiId);\n      });\n    }\n\n    return ids;\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet);\n    const adjacentComponents = new Pile();\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents,\n    );\n\n    adjacentComponents.delete(compId);\n\n    let type = -1;\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid);\n      if (!atom) return;\n      atom.component = compId;\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType;\n    });\n\n    this.ccFragmentType.set(compId, type);\n    return compId;\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid);\n      if (atom) atom.component = -1;\n    });\n\n    return this.connectedComponents.delete(ccid);\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return;\n\n      const adjacentComponents = new Pile();\n      const idSet = this.getConnectedComponent(aid, adjacentComponents);\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid);\n      });\n\n      this.addConnectedComponent(idSet);\n    });\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0',\n        })\n        .toFront();\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false,\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return;\n    const paths = Array.isArray(path) ? path : [path];\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset;\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null;\n      const ext = pos && bb ? bb.translate(pos.negated()) : null;\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y);\n        bb = bb ? bb.translate(offset) : null;\n      }\n      visel.add(path, bb, ext);\n      path.insertBefore(this.layers[LayerMap[group]]);\n    });\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map();\n    });\n\n    this.structChanged = false;\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true;\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark);\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark);\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed'];\n\n    const value = mapChanged.has(id)\n      ? Math.max(mark, mapChanged.get(id))\n      : mark;\n\n    mapChanged.set(id, value);\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel);\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove();\n    });\n    visel.clear();\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func);\n    });\n  }\n\n  /**\n   * Why?\n   * we can't use just getVBoxObj and the center for atoms\n   * because this will lead incorrect center position for the move atom around it\n   * because of atom's vBox contain text label with is not constant after flip/rotate\n   * and this lead to unstable flip tool work\n   */\n  // eslint-disable-next-line no-use-before-define\n  getSelectionBoxCenter(selection: SelectionMap): Vec2 | undefined {\n    let boundingBox: Box2Abs | null = null;\n\n    for (const atomId of selection.atoms ?? []) {\n      const atomPositionPoint = this.atoms.get(atomId)!.a.pp;\n      const atomBox = new Box2Abs(atomPositionPoint, atomPositionPoint);\n      boundingBox =\n        boundingBox == null ? atomBox : Box2Abs.union(boundingBox, atomBox);\n    }\n    const selectionExceptAtoms = { ...selection };\n    delete selectionExceptAtoms.atoms;\n\n    const selectionExceptAtomsBoundingBox =\n      this.getBoundingBoxForSelection(selectionExceptAtoms);\n    if (selectionExceptAtomsBoundingBox) {\n      boundingBox = boundingBox\n        ? Box2Abs.union(boundingBox, selectionExceptAtomsBoundingBox)\n        : selectionExceptAtomsBoundingBox;\n    }\n\n    return boundingBox?.centre();\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  getVBoxObj(selection?: SelectionMap): Box2Abs {\n    if (isSelectionEmpty(selection)) {\n      selection = this.getAllElementsAsSelectionMap();\n    }\n\n    let boundingBox = this.getBoundingBoxForSelection(selection);\n\n    boundingBox = boundingBox || new Box2Abs(0, 0, 0, 0);\n    return boundingBox;\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  private getAllElementsAsSelectionMap(): SelectionMap {\n    // eslint-disable-next-line no-use-before-define\n    const selection: SelectionMap = {};\n    Object.keys(ReStruct.maps).forEach((map) => {\n      selection[map] = Array.from(this[map].keys());\n    });\n    return selection;\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  private getBoundingBoxForSelection(selection: SelectionMap): Box2Abs | null {\n    let boundingBox: Box2Abs | null = null;\n    Object.keys(ReStruct.maps).forEach((elementKey) => {\n      selection[elementKey]?.forEach((elementId) => {\n        const box = this[elementKey].get(elementId).getVBoxObj(this.render);\n        if (box) {\n          boundingBox = boundingBox\n            ? Box2Abs.union(boundingBox, box)\n            : box.clone();\n        }\n      });\n    });\n    return boundingBox;\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d));\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s));\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel));\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized;\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed'];\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1));\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id);\n        });\n      }\n    });\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid),\n    );\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render),\n    );\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel);\n      this.frags.delete(fid);\n      this.molecule.frags.delete(fid);\n    });\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed'];\n\n      mapChanged.forEach((_value, id) => {\n        if (this[map].get(id).visel) {\n          this.clearVisel(this[map].get(id).visel);\n        }\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0;\n      });\n    });\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel);\n      sgroup.hovering = null;\n      sgroup.selectionPlate = null;\n    });\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel);\n    });\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel);\n    });\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents();\n      this.molecule.initHalfBonds();\n      this.molecule.initNeighbors();\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys());\n    this.molecule.updateHalfBonds(atomsChangedArray);\n    this.molecule.sortNeighbors(atomsChangedArray);\n\n    this.assignConnectedComponents();\n    this.initialized = true;\n\n    this.verifyLoops();\n    const updLoops = force || this.structChanged;\n    if (updLoops) this.updateLoops();\n    this.showAtoms();\n    this.showBonds();\n    this.showRgroupAttachmentPoints();\n    if (updLoops) this.showLoops();\n    this.showReactionSymbols();\n    this.showSGroups();\n\n    this.showFragments();\n    this.showRGroups();\n    this.showEnhancedFlags();\n    this.showSimpleObjects();\n    this.showTexts();\n    this.clearMarks();\n\n    return true;\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel);\n    });\n    const ret = this.molecule.findLoops();\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1);\n    });\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)));\n    });\n  }\n\n  showLoops(): void {\n    const options = this.render.options;\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options);\n    });\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options;\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id);\n      if (simpleObject) simpleObject.show(this, options);\n    });\n  }\n\n  showTexts() {\n    const options = this.render.options;\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id);\n      if (text) text.show(this, id, options);\n    });\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options;\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id);\n      if (arrow) arrow.show(this, id, options);\n    });\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id);\n      if (plus) plus.show(this, id, options);\n    });\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id);\n        if (!resgroup) return;\n        resgroup.show(this);\n      });\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id);\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true);\n      }\n      // TODO fragment selection & highlighting\n    });\n  }\n\n  showRGroups(): void {\n    const options = this.render.options;\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options);\n    });\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId);\n    if (!reloop) {\n      return;\n    }\n    this.clearVisel(reloop.visel);\n\n    const bondlist: Array<number> = [];\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid);\n      if (!hb) return;\n      hb.loop = -1;\n      this.markBond(hb.bid, 1);\n      this.markAtom(hb.begin, 1);\n      bondlist.push(hb.bid);\n    });\n\n    this.reloops.delete(loopId);\n    this.molecule.loops.delete(loopId);\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid);\n    });\n  }\n\n  getRGroupAttachmentPointsVBoxByAtomIds(atomsIds: number[]): Box2Abs | null {\n    let allAtomAttachmentPointsVBox: Box2Abs | null = null;\n\n    atomsIds.forEach((atomId) => {\n      const attachmentPointIds =\n        this.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n\n      const oneAtomAttachmentPointsVBox = attachmentPointIds.reduce(\n        (previousVBox, attachmentPointId) => {\n          const attachmentPoint =\n            this.rgroupAttachmentPoints.get(attachmentPointId);\n          assert(attachmentPoint != null);\n          const currentVBox = attachmentPoint.getVBoxObj(this.render);\n          return previousVBox && currentVBox\n            ? Box2Abs.union(previousVBox, currentVBox)\n            : currentVBox;\n        },\n        null as Box2Abs | null,\n      );\n\n      if (allAtomAttachmentPointsVBox && oneAtomAttachmentPointsVBox) {\n        allAtomAttachmentPointsVBox = Box2Abs.union(\n          allAtomAttachmentPointsVBox,\n          oneAtomAttachmentPointsVBox,\n        );\n      } else {\n        allAtomAttachmentPointsVBox =\n          allAtomAttachmentPointsVBox ?? oneAtomAttachmentPointsVBox;\n      }\n    });\n\n    return allAtomAttachmentPointsVBox;\n  }\n\n  private showRgroupAttachmentPoints() {\n    // why update all rgroupAttachmentPoints instead of changed ones?\n    // 1. The label of an R-Group attachment point may be affected by other R-Group attachment points\n    // 2. The visibility of an an R-Group attachment point may be affected by contracting/expanding an S-Group\n    this.rgroupAttachmentPoints.forEach((_value, id) => {\n      const rgroupAttachmentPoint = this.rgroupAttachmentPoints.get(id);\n      if (rgroupAttachmentPoint?.visel) {\n        this.clearVisel(rgroupAttachmentPoint.visel);\n      }\n\n      const attachedAtomId = rgroupAttachmentPoint?.item.atomId;\n      const sgroup = this.molecule.getGroupFromAtomId(attachedAtomId);\n      const isInsideContractedSGroup = Boolean(sgroup?.isContracted());\n      if (isInsideContractedSGroup) {\n        return;\n      }\n\n      rgroupAttachmentPoint?.show(this);\n    });\n  }\n\n  private showAtoms(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options;\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid);\n      if (atom) atom.show(this, aid, options);\n    });\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options;\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid);\n      if (flag) flag.show(this, chid, options);\n    });\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options;\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid);\n      if (bond) {\n        bond.show(this, bid, options);\n      }\n    });\n  }\n\n  setSelection(selection?) {\n    const atoms: { selected: boolean; sgroup: number }[] = [];\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values(); // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup;\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId;\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup,\n            });\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item?.item?.id,\n              this.molecule.functionalGroups,\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item?.item?.id,\n            );\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected;\n          }\n\n          let selected = selection?.[map]\n            ? selection[map].indexOf(id) > -1\n            : item.selected;\n\n          if (selection === null) {\n            selected = false;\n          }\n\n          this.showItemSelection(item, selected);\n          item.selectionPlate?.toBack();\n        });\n      }\n    });\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item);\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected;\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected;\n    if (selected) {\n      if (!exists) {\n        const render = this.render;\n        const options = render.options;\n        const paper = render.paper;\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options);\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate,\n        );\n\n        if (typeof item.makeAdditionalInfo === 'function') {\n          item.additionalInfo = item.makeAdditionalInfo(this);\n          this.addReObjectPath(\n            LayerMap.additionalInfo,\n            item.visel,\n            item.additionalInfo,\n          );\n        }\n      }\n      if (item.selectionPlate) {\n        item.selectionPlate.show();\n        item.additionalInfo?.show();\n        item.cip?.rectangle.attr({\n          fill: '#7f7',\n          stroke: '#7f7',\n        });\n        if (item.togglePoints) item.togglePoints(true);\n      }\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide();\n      if (item.togglePoints) item.togglePoints(false);\n      item.additionalInfo?.hide();\n      item.cip?.rectangle.attr({\n        fill: '#fff',\n        stroke: '#fff',\n      });\n    }\n  }\n\n  addSnappingBonds(bondId: number) {\n    this.snappingBonds.push(bondId);\n  }\n\n  clearSnappingBonds() {\n    this.snappingBonds = [];\n  }\n\n  isSnappingBond(bondId: number) {\n    return this.snappingBonds.includes(bondId);\n  }\n}\n\n// eslint-disable-next-line no-use-before-define\nfunction isSelectionEmpty(selection?: SelectionMap): selection is undefined {\n  if (!selection) return true;\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0,\n  );\n\n  return !anySelection;\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor);\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor);\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor);\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0);\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s);\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  );\n}\n\ntype SelectionMap = Partial<\n  Record<keyof typeof ReStruct.maps, number[] | undefined>\n>;\n\nexport default ReStruct;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities';\nimport { inRange } from 'lodash';\nimport { BondAtoms } from 'application/editor/shared/utils.types';\n\nlet FRAC = Math.PI / 12; // '15º'\n\nfunction setFracAngle(angle: number): void {\n  FRAC = (Math.PI / 180) * angle;\n}\n\nfunction calcAngle(pos0: Vec2, pos1: Vec2): number {\n  const v = Vec2.diff(pos1, pos0);\n  return Math.atan2(v.y, v.x);\n}\n\nfunction fracAngle(angle, angle2): number {\n  if (angle2) angle = calcAngle(angle, angle2);\n  return Math.round(angle / FRAC) * FRAC;\n}\n\nfunction calcNewAtomPos(pos0: Vec2, pos1: Vec2, ctrlKey: boolean): Vec2 {\n  const vector = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1),\n  );\n  vector.add_(pos0); // eslint-disable-line no-underscore-dangle\n  return vector;\n}\n\nfunction degrees(angle: number): number {\n  let degree = Math.round((angle / Math.PI) * 180);\n  if (degree > 180) degree -= 360;\n  else if (degree <= -180) degree += 360;\n  return degree;\n}\n\nconst BONDS_MERGE_ANGLE = 10; // 'º'\nconst BONDS_MERGE_SCALE = 0.2;\n\nfunction mergeBondsParams(\n  struct1: Struct,\n  bond1: BondAtoms,\n  struct2: Struct,\n  bond2: BondAtoms,\n) {\n  // TODO find a solution to remove not-null assertion from result atoms below\n  // https://github.com/epam/ketcher/issues/2652\n  const begin1 = struct1.atoms.get(bond1.begin)!;\n  const begin2 = struct2.atoms.get(bond2.begin)!;\n  const end1 = struct1.atoms.get(bond1.end)!;\n  const end2 = struct2.atoms.get(bond2.end)!;\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp);\n  const mergeAngle = Math.abs(degrees(angle) % 180);\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp);\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE);\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 };\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  degrees,\n  setFracAngle,\n  mergeBondsParams,\n  calcNewAtomPos,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities';\nimport utils from '../editor/shared/utils';\nimport { ShowHydrogenLabels } from './restruct/reatom';\nimport { RenderOptions } from './render.types';\n\nfunction defaultOptions(options: RenderOptions): RenderOptions {\n  const scaleFactorMicro = options.microModeScale || 100;\n  const scaleFactorMacro = options.macroModeScale || 200;\n\n  if (options.rotationStep) {\n    utils.setFracAngle(options.rotationStep);\n  }\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactorMicro / 6));\n  const subFontSize = Math.ceil(0.5 * labelFontSize);\n\n  const defaultOptions: Partial<RenderOptions> = {\n    'dearomatize-on-load': false,\n    ignoreChiralFlag: false,\n    disableQueryElements: null,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: ShowHydrogenLabels.TerminalAndHetero,\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    microModeScale: scaleFactorMicro,\n    macroModeScale: scaleFactorMacro,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactorMicro / 20,\n    bondSpace: options.doubleBondWidth || scaleFactorMicro / 7,\n    stereoBond: options.stereoBondWidth || scaleFactorMicro / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    radiusScaleFactor: 0.38,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': options.bondThickness || scaleFactorMicro / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round',\n    },\n    arrowSnappingStyle: {\n      fill: '#365CFF',\n      stroke: '#365CFF',\n    },\n    bondSnappingStyle: {\n      fill: '#365CFF',\n      stroke: '#365CFF',\n      'stroke-width': options.bondThickness * 1.5,\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#57FF8F',\n      stroke: '#57FF8F',\n    },\n    hoverStyle: {\n      stroke: '#0097A8',\n      fill: '#CCFFDD',\n      'stroke-width': (0.6 * scaleFactorMicro) / 20,\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactorMicro) / 20,\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px',\n    },\n    selectionStyleSimpleObject: {\n      stroke: '#57FF8F',\n      'stroke-width': scaleFactorMicro / 4,\n      'stroke-linecap': 'round',\n    },\n    movingStyle: {\n      cursor: 'all-scroll',\n    },\n    atomSelectionPlateRadius: labelFontSize,\n    contractedFunctionalGroupSize: 50,\n\n    previewOpacity: 0.5,\n  };\n\n  return Object.assign({}, defaultOptions, options);\n}\n\nexport default defaultOptions;\n","import { Vec2 } from 'domain/entities';\nimport { Render } from './raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nconst canvasToView = (point: Vec2, render: Render) => {\n  const offset = new Vec2(render.viewBox.minX, render.viewBox.minY);\n  return point.sub(offset).scaled(render.options.zoom);\n};\n\nconst modelToView = (vector: Vec2, render: Render) => {\n  const pointInCanvas = Scale.modelToCanvas(vector, render.options);\n  return canvasToView(pointInCanvas, render);\n};\n\nconst viewToCanvas = (point: Vec2, render: Render) => {\n  const offset = new Vec2(render.viewBox.minX, render.viewBox.minY);\n  return point.scaled(1 / render.options.zoom).add(offset);\n};\n\nconst pageToView = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  renderClientArea: HTMLElement,\n) => {\n  const { top: offsetTop, left: offsetLeft } =\n    renderClientArea.getBoundingClientRect();\n  return new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop);\n};\n\nconst pageToCanvas = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  render: Render,\n) => {\n  const pointInViewBox = pageToView(event, render.clientArea);\n  return viewToCanvas(pointInViewBox, render);\n};\n\nconst pageToModel = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  render: Render,\n) => {\n  const pointInCanvas = pageToCanvas(event, render);\n  return Scale.canvasToModel(pointInCanvas, render.options);\n};\n\n/**\n * @see ./__docs__/Coordinate-Origins.png\n * `model` - The original coordinates of entities.\n * `canvas` - The scaled `model`. The real coordinates Raphael uses to draw entities.\n * `page` - The part of the document you're viewing which is currently visible in the window.\n * `view` - The part of the canvas you're viewing which is currently visible in the window.\n * */\nexport const CoordinateTransformation = {\n  modelToView,\n  canvasToView,\n  viewToCanvas,\n  pageToCanvas,\n  pageToModel,\n};\n","import { Box2Abs, Vec2 } from 'domain/entities';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nexport class ScrollOffset {\n  #render: Render;\n  up = 0;\n  down = 0;\n  left = 0;\n  right = 0;\n\n  constructor(render: Render) {\n    this.#render = render;\n  }\n\n  getAbsViewBox(): Box2Abs {\n    const viewBox = this.#render.viewBox;\n    const viewBoxMinXY = new Vec2(viewBox.minX, viewBox.minY);\n    const viewBoxMaxXY = new Vec2(\n      viewBox.minX + viewBox.width,\n      viewBox.minY + viewBox.height,\n    );\n    return new Box2Abs(viewBoxMinXY, viewBoxMaxXY);\n  }\n\n  getAbsBoundingBox(): Box2Abs {\n    const protoBoundingBox = this.#render.ctab.getVBoxObj();\n    const boundingBoxMinXY = Scale.modelToCanvas(\n      protoBoundingBox.p0,\n      this.#render.options,\n    );\n    const boundingBoxMaxXY = Scale.modelToCanvas(\n      protoBoundingBox.p1,\n      this.#render.options,\n    );\n    return new Box2Abs(boundingBoxMinXY, boundingBoxMaxXY);\n  }\n\n  #calculateOffset() {\n    const absBoundingBox = this.getAbsBoundingBox();\n    if (absBoundingBox.hasZeroArea()) {\n      this.up = 0;\n      this.down = 0;\n      this.left = 0;\n      this.right = 0;\n    } else {\n      const absViewBox = this.getAbsViewBox();\n      this.up = absViewBox.p0.y - absBoundingBox.p0.y;\n      this.down = absBoundingBox.p1.y - absViewBox.p1.y;\n      this.left = absViewBox.p0.x - absBoundingBox.p0.x;\n      this.right = absBoundingBox.p1.x - absViewBox.p1.x;\n    }\n  }\n\n  update() {\n    this.#calculateOffset();\n  }\n\n  hasVerticalOffset() {\n    return this.up > 0 || this.down > 0;\n  }\n\n  hasHorizontalOffset() {\n    return this.left > 0 || this.right > 0;\n  }\n}\n","import { Render } from '../raphaelRender';\nimport { ViewBox } from '../render.types';\nimport { RaphaelElement, RaphaelRectAttr } from './types';\n\nexport abstract class Scrollbar {\n  protected bar: RaphaelElement | null = null;\n  protected render: Render;\n  protected viewBoxBeforeDrag: ViewBox | null = null;\n\n  protected MIN_LENGTH = 40;\n  protected RADIUS = 2;\n  protected MARGIN = 5;\n  protected WIDTH = 4;\n  protected DIST_TO_EDGE = 5;\n  protected COLOR = '#b2bbc3';\n\n  protected constructor(render: Render) {\n    this.render = render;\n  }\n\n  update() {\n    this.bar = this.hasOffset() ? this.redraw() : this.hide();\n  }\n\n  protected redraw() {\n    return this.bar ? this.updateAttr() : this.draw();\n  }\n\n  protected updateAttr() {\n    const attr = this.getDynamicAttr();\n    return this.bar?.attr(attr);\n  }\n\n  protected hide() {\n    this.bar?.undrag();\n    this.bar?.remove();\n    return null;\n  }\n\n  protected draw() {\n    const { x, y, width, height, r } = this.getDynamicAttr();\n    const bar = this.render.paper.rect(x, y, width, height, r).attr({\n      stroke: this.COLOR,\n      fill: this.COLOR,\n    });\n\n    /** @see https://dmitrybaranovskiy.github.io/raphael/reference.html#Element.drag */\n    bar.drag(\n      this.onDragMove,\n      this.onDragStart,\n      this.onDragEnd,\n      this,\n      this,\n      this,\n    );\n\n    return bar;\n  }\n\n  protected onDragStart(_x: number, _y: number, event: MouseEvent) {\n    this.viewBoxBeforeDrag = { ...this.render.viewBox };\n    event.stopPropagation();\n  }\n\n  protected onDragEnd(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  abstract hasOffset(): boolean;\n  abstract getDynamicAttr(): RaphaelRectAttr;\n  abstract onDragMove(\n    dx: number,\n    dy: number,\n    x: number,\n    y: number,\n    event: MouseEvent,\n  ): void;\n}\n","import type { RenderOptions } from '../render.types';\n\nconst SCALE_FACTOR = 0.5;\n\n/**\n * To make scrollbar provide better UX, this function can help to achieve\n * moving scrollbar `x` offsets leads to moving viewBox `2 * x` offsets\n * */\nexport const getUserFriendlyScrollOffset = (offset: number) => {\n  return offset * SCALE_FACTOR;\n};\n\nexport const getUserFriendlyViewBoxDelta = (delta: number) => {\n  return delta / SCALE_FACTOR;\n};\n\nexport const getZoomedValue = (value: number, renderOptions: RenderOptions) => {\n  return value / renderOptions.zoom;\n};\n","import { clamp } from 'lodash';\nimport { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { Scrollbar } from './scrollbar';\nimport { RaphaelRectAttr } from './types';\nimport {\n  getUserFriendlyScrollOffset,\n  getUserFriendlyViewBoxDelta,\n  getZoomedValue,\n} from './utils';\n\nexport class VerticalScrollbar extends Scrollbar {\n  #scrollOffset: ScrollOffset;\n\n  constructor(render: Render, scrollOffset: ScrollOffset) {\n    super(render);\n    this.#scrollOffset = scrollOffset;\n  }\n\n  hasOffset(): boolean {\n    return this.#scrollOffset.hasVerticalOffset();\n  }\n\n  getDynamicAttr(): RaphaelRectAttr {\n    const minX =\n      this.render.viewBox.minX +\n      this.render.viewBox.width -\n      getZoomedValue(this.DIST_TO_EDGE, this.render.options);\n    const minY =\n      this.render.viewBox.minY +\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.up),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.height -\n          getZoomedValue(this.MIN_LENGTH + this.MARGIN, this.render.options),\n      );\n    const maxY =\n      this.render.viewBox.minY +\n      this.render.viewBox.height -\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.down),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.height,\n      );\n    const length = Math.max(\n      maxY - minY,\n      getZoomedValue(this.MIN_LENGTH, this.render.options),\n    );\n\n    return {\n      x: minX,\n      y: minY,\n      width: getZoomedValue(this.WIDTH, this.render.options),\n      height: length,\n      r: getZoomedValue(this.RADIUS, this.render.options),\n    };\n  }\n\n  onDragMove(\n    _dx: number,\n    dy: number,\n    _x: number,\n    _y: number,\n    _event: MouseEvent,\n  ): void {\n    if (!this.viewBoxBeforeDrag) {\n      return;\n    }\n\n    this.render.setViewBox({\n      ...this.viewBoxBeforeDrag,\n      minY: this.viewBoxBeforeDrag.minY + getUserFriendlyViewBoxDelta(dy),\n    });\n  }\n}\n","import { clamp } from 'lodash';\nimport { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { Scrollbar } from './scrollbar';\nimport { RaphaelRectAttr } from './types';\nimport {\n  getUserFriendlyScrollOffset,\n  getUserFriendlyViewBoxDelta,\n  getZoomedValue,\n} from './utils';\n\nexport class HorizontalScrollbar extends Scrollbar {\n  #scrollOffset: ScrollOffset;\n\n  constructor(render: Render, scrollOffset: ScrollOffset) {\n    super(render);\n    this.#scrollOffset = scrollOffset;\n  }\n\n  hasOffset(): boolean {\n    return this.#scrollOffset.hasHorizontalOffset();\n  }\n\n  getDynamicAttr(): RaphaelRectAttr {\n    const minX =\n      this.render.viewBox.minX +\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.left),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.width -\n          getZoomedValue(this.MIN_LENGTH + this.MARGIN, this.render.options),\n      );\n    const minY =\n      this.render.viewBox.minY +\n      this.render.viewBox.height -\n      getZoomedValue(this.DIST_TO_EDGE, this.render.options);\n    const maxX =\n      this.render.viewBox.minX +\n      this.render.viewBox.width -\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.right),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.width,\n      );\n    const length = Math.max(\n      maxX - minX,\n      getZoomedValue(this.MIN_LENGTH, this.render.options),\n    );\n\n    return {\n      x: minX,\n      y: minY,\n      width: length,\n      height: getZoomedValue(this.WIDTH, this.render.options),\n      r: getZoomedValue(this.RADIUS, this.render.options),\n    };\n  }\n\n  onDragMove(\n    dx: number,\n    _dy: number,\n    _x: number,\n    _y: number,\n    _event: MouseEvent,\n  ): void {\n    if (!this.viewBoxBeforeDrag) {\n      return;\n    }\n\n    this.render.setViewBox({\n      ...this.viewBoxBeforeDrag,\n      minX: this.viewBoxBeforeDrag.minX + getUserFriendlyViewBoxDelta(dx),\n    });\n  }\n}\n","import { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { VerticalScrollbar } from './scrollbar-vertical';\nimport { HorizontalScrollbar } from './scrollbar-horizontal';\n\nexport class ScrollbarContainer {\n  #scrollOffset: ScrollOffset;\n  #verticalBar: VerticalScrollbar | null = null;\n  #horizontalBar: HorizontalScrollbar | null = null;\n\n  constructor(render: Render) {\n    this.#scrollOffset = new ScrollOffset(render);\n    this.#verticalBar = new VerticalScrollbar(render, this.#scrollOffset);\n    this.#horizontalBar = new HorizontalScrollbar(render, this.#scrollOffset);\n  }\n\n  update() {\n    this.#scrollOffset.update();\n    this.#verticalBar?.update();\n    this.#horizontalBar?.update();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities';\nimport { RaphaelPaper } from 'raphael';\n\nimport Raphael from './raphael-ext';\nimport { ReStruct } from './restruct';\nimport { Scale } from 'domain/helpers';\nimport defaultOptions from './options';\nimport draw from './draw';\nimport { RenderOptions, ViewBox } from './render.types';\nimport { KetcherLogger } from 'utilities';\nimport { CoordinateTransformation } from './coordinateTransformation';\nimport { ScrollbarContainer } from './scrollbar';\nimport { notifyRenderComplete } from './notifyRenderComplete';\n\nexport class Render {\n  public skipRaphaelInitialization = false;\n  public readonly clientArea: HTMLElement;\n  public readonly paper: RaphaelPaper;\n  // TODO https://github.com/epam/ketcher/issues/2631\n  public sz: Vec2;\n  // TODO https://github.com/epam/ketcher/issues/2630\n  public ctab: ReStruct;\n  public options: RenderOptions;\n  public viewBox!: ViewBox;\n  private readonly userOpts: RenderOptions;\n  private oldCb: Box2Abs | null = null;\n  private scrollbar: ScrollbarContainer;\n  private resizeObserver: ResizeObserver | null = null;\n\n  constructor(\n    clientArea: HTMLElement,\n    options: RenderOptions,\n    reuseRestructIfExist?: boolean,\n  ) {\n    this.userOpts = options;\n    this.clientArea = clientArea;\n    this.paper = new Raphael(\n      clientArea,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      options.width || '100%',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      options.height || '100%',\n    );\n    this.sz = this.getCanvasSizeVector();\n    this.options = defaultOptions(this.userOpts);\n    if (reuseRestructIfExist && global.ketcher?.editor?.render?.ctab) {\n      this.ctab = global.ketcher?.editor?.render?.ctab;\n      this.ctab.render = this;\n      this.ctab.initLayers();\n      this.ctab.update(true);\n    } else {\n      this.ctab = new ReStruct(new Struct(), this);\n    }\n    this.scrollbar = new ScrollbarContainer(this);\n    this.setViewBox({\n      minX: 0,\n      minY: 0,\n      width: this.sz.x,\n      height: this.sz.y,\n    });\n  }\n\n  observeCanvasResize = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.sz = new Vec2(\n        this.clientArea.clientWidth,\n        this.clientArea.clientHeight,\n      );\n      this.resizeViewBox();\n    });\n\n    this.resizeObserver.observe(this.paper.canvas);\n  };\n\n  unobserveCanvasResize = () => {\n    this.resizeObserver?.unobserve(this.paper.canvas);\n  };\n\n  updateOptions(opts: string) {\n    try {\n      const passedOptions = JSON.parse(opts);\n      if (passedOptions && typeof passedOptions === 'object') {\n        this.options = { ...this.options, ...passedOptions };\n        return this.options;\n      }\n    } catch (e) {\n      KetcherLogger.error('raphaelRenderer.ts::updateOptions', e);\n      console.log('Not a valid settings object');\n    }\n    return false;\n  }\n\n  selectionPolygon(polygon: Vec2[]) {\n    return draw.selectionPolygon(this.paper, polygon, this.options);\n  }\n\n  selectionLine(point0: Vec2, point1: Vec2) {\n    return draw.selectionLine(this.paper, point0, point1, this.options);\n  }\n\n  selectionRectangle(point0: Vec2, point1: Vec2) {\n    return draw.selectionRectangle(this.paper, point0, point1, this.options);\n  }\n\n  /** @deprecated recommend using `CoordinateTransformation.pageToModel` instead */\n  page2obj(event: MouseEvent | { clientX: number; clientY: number }) {\n    return CoordinateTransformation.pageToModel(event, this);\n  }\n\n  setZoom(zoom: number, event?: WheelEvent) {\n    const zoomedWidth = this.sz.x / zoom;\n    const zoomedHeight = this.sz.y / zoom;\n    const [viewBoxX, viewBoxY] = event\n      ? this.zoomOnMouse(event, zoomedWidth, zoomedHeight)\n      : this.zoomOnCanvasCenter(zoomedWidth, zoomedHeight);\n    this.setViewBox({\n      minX: viewBoxX,\n      minY: viewBoxY,\n      width: zoomedWidth,\n      height: zoomedHeight,\n    });\n\n    this.options.zoom = zoom;\n  }\n\n  private getCanvasSizeVector() {\n    return new Vec2(this.clientArea.clientWidth, this.clientArea.clientHeight);\n  }\n\n  resizeViewBox() {\n    this.sz = this.getCanvasSizeVector();\n    const newWidth = this.sz.x / this.options.zoom;\n    const newHeight = this.sz.y / this.options.zoom;\n    this.setViewBox((prev) => ({\n      ...prev,\n      width: newWidth,\n      height: newHeight,\n    }));\n  }\n\n  private zoomOnCanvasCenter(zoomedWidth: number, zoomedHeight: number) {\n    const fixedPoint = new Vec2(\n      this.viewBox.minX + this.viewBox.width / 2,\n      this.viewBox.minY + this.viewBox.height / 2,\n    );\n    const viewBoxX = fixedPoint.x - zoomedWidth / 2;\n    const viewBoxY = fixedPoint.y - zoomedHeight / 2;\n    return [viewBoxX, viewBoxY];\n  }\n\n  private zoomOnMouse(\n    event: WheelEvent,\n    zoomedWidth: number,\n    zoomedHeight: number,\n  ) {\n    const fixedPoint = CoordinateTransformation.pageToCanvas(event, this);\n    const widthRatio = (fixedPoint.x - this.viewBox.minX) / this.viewBox.width;\n    const heightRatio =\n      (fixedPoint.y - this.viewBox.minY) / this.viewBox.height;\n    const viewBoxX = fixedPoint.x - zoomedWidth * widthRatio;\n    const viewBoxY = fixedPoint.y - zoomedHeight * heightRatio;\n    return [viewBoxX, viewBoxY];\n  }\n\n  /**\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/viewBox\n   */\n  setViewBox(func: (viewBox: ViewBox) => ViewBox): void;\n  setViewBox(viewBox: ViewBox): void;\n  setViewBox(arg: ViewBox | ((viewBox: ViewBox) => ViewBox)): void {\n    const newViewBox = typeof arg === 'function' ? arg(this.viewBox) : arg;\n    this.viewBox = newViewBox;\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      `${newViewBox.minX} ${newViewBox.minY} ${newViewBox.width} ${newViewBox.height}`,\n    );\n    this.scrollbar.update();\n  }\n\n  setMolecule(struct: Struct, forceUpdateWithTimeout = false) {\n    this.paper.clear();\n    this.ctab = new ReStruct(struct, this);\n    this.options.offset = new Vec2();\n    // need to use force update with timeout to have ability select bonds in case of usage:\n    // addFragment, setMolecule or \"Paste from clipboard\" with \"Open as New Project\" button\n    if (forceUpdateWithTimeout) {\n      setTimeout(() => {\n        this.update(true);\n      }, 0);\n    } else {\n      this.update(false);\n    }\n  }\n\n  update(force = false, viewSz: Vec2 | null = null) {\n    // eslint-disable-line max-statements\n    viewSz =\n      viewSz ||\n      new Vec2(\n        this.clientArea.clientWidth || 100,\n        this.clientArea.clientHeight || 100,\n      );\n\n    const changes = this.ctab.update(force);\n    this.ctab.setSelection(); // [MK] redraw the selection bits where necessary\n    if (changes) {\n      const bb = this.ctab\n        .getVBoxObj()\n        .transform(Scale.modelToCanvas, this.options)\n        .translate(this.options.offset || new Vec2());\n\n      if (this.options.downScale) {\n        this.ctab.molecule.rescale();\n      }\n\n      const isAutoScale = this.options.autoScale || this.options.downScale;\n      if (!isAutoScale) {\n        if (!this.oldCb) this.oldCb = new Box2Abs();\n        this.scrollbar.update();\n        this.options.offset = this.options.offset || new Vec2();\n      } else {\n        const sz1 = bb.sz();\n        const marg = this.options.autoScaleMargin;\n        const mv = new Vec2(marg, marg);\n        const csz = viewSz;\n        if (marg && (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1)) {\n          throw new Error('View box too small for the given margin');\n        }\n        let rescale =\n          this.options.rescaleAmount ||\n          Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg));\n\n        const isForceDownscale = this.options.downScale && rescale < 1;\n        const isBondsLengthFit = this.options.maxBondLength / rescale > 1;\n        if (isBondsLengthFit || isForceDownscale) {\n          rescale = 1;\n        }\n        const sz2 = sz1.add(mv.scaled(2 * rescale));\n        this.paper.setViewBox(\n          bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n          bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n          csz.x * rescale,\n          csz.y * rescale,\n        );\n      }\n\n      notifyRenderComplete();\n    }\n  }\n}\n","import { Struct } from 'domain/entities';\nimport { isEqual } from 'lodash';\nimport { Render } from './raphaelRender';\nimport ReAtom from './restruct/reatom';\n\n/**\n * Is used to improve search and opening tab performance in Template Dialog\n * Rendering a lot of structures causes great delay\n */\nconst renderCache = new Map();\nlet previousOptions: any;\nconst MIN_ATTACHMENT_POINT_SIZE = 8;\nconst attachmentPointRegExp = /^R[1-8]$/;\n\nexport class RenderStruct {\n  /**\n   * for S-Groups we want to show expanded structure\n   * without brackets\n   */\n  static prepareStruct(struct: Struct) {\n    if (struct.sgroups.size > 0) {\n      const newStruct = struct.clone();\n      convertAllSGroupAttachmentPointsToRGroupAttachmentPoints(newStruct);\n      newStruct.sgroups.delete(0);\n      return newStruct;\n    }\n    return struct;\n  }\n\n  static removeSmallAttachmentPointLabelsInModal(\n    render: Render,\n    options: any = {},\n  ) {\n    if (!options.labelInMonomerConnectionsModal) {\n      return;\n    }\n\n    render.ctab.atoms.forEach((atom: ReAtom) => {\n      if (!atom.label) {\n        return;\n      }\n      const isAttachmentPointAtom = attachmentPointRegExp.test(atom.label.text);\n\n      if (!isAttachmentPointAtom) {\n        return;\n      }\n\n      const isSmall =\n        atom.label.path.node.getBoundingClientRect().width <\n        MIN_ATTACHMENT_POINT_SIZE;\n\n      if (isSmall) {\n        atom.label.path.node.remove();\n      }\n    });\n  }\n\n  static render(\n    el: HTMLElement | null,\n    struct: Struct | null,\n    options: any = {},\n  ) {\n    if (el && struct) {\n      const { cachePrefix = '', needCache = true } = options;\n      const cacheKey = `${cachePrefix}${struct.name}`;\n\n      if (!isEqual(previousOptions, options)) {\n        renderCache.clear();\n        previousOptions = options;\n      }\n\n      if (renderCache.has(cacheKey) && needCache) {\n        el.innerHTML = renderCache.get(cacheKey);\n        return;\n      }\n\n      const preparedStruct = this.prepareStruct(struct);\n      preparedStruct.initHalfBonds();\n      preparedStruct.initNeighbors();\n      preparedStruct.setImplicitHydrogen();\n      preparedStruct.markFragments();\n\n      const rnd = new Render(el, {\n        autoScale: true,\n        ...options,\n      });\n\n      preparedStruct.rescale();\n      rnd.setMolecule(preparedStruct);\n      this.removeSmallAttachmentPointLabelsInModal(rnd, options);\n\n      if (needCache) {\n        renderCache.set(cacheKey, rnd.clientArea.innerHTML);\n      }\n    }\n  }\n}\n\n/**\n * Why?\n * We need somehow display sgroup attachment points (tooltips, preview, templates),\n * But due to current rendering approach for sgroups (ungrouping sgroups)\n * - we have to use RGroup attachment points on atoms for this purposes\n */\nfunction convertAllSGroupAttachmentPointsToRGroupAttachmentPoints(\n  struct: Struct,\n) {\n  struct.sgroups.forEach((sgroup) => {\n    sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const attachmentPointAtom = struct.atoms.get(attachmentPoint.atomId)!;\n      attachmentPointAtom.setRGAttachmentPointForDisplayPurpose();\n      const rgroupAttachmentPoint =\n        attachmentPoint.convertToRGroupAttachmentPointForDisplayPurpose(\n          attachmentPoint.atomId,\n        );\n      struct.rgroupAttachmentPoints.add(rgroupAttachmentPoint);\n    });\n  });\n}\n","import { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { SequenceNodeRendererFactory } from 'application/render/renderers/sequence/SequenceNodeRendererFactory';\nimport { BaseMonomer, RNABase, Sugar, Vec2 } from 'domain/entities';\nimport { AttachmentPointName } from 'domain/types';\nimport { PolymerBondSequenceRenderer } from 'application/render/renderers/sequence/PolymerBondSequenceRenderer';\nimport {\n  getRnaBaseFromSugar,\n  getSugarFromRnaBase,\n} from 'domain/helpers/monomers';\nimport { BackBoneBondSequenceRenderer } from 'application/render/renderers/sequence/BackBoneBondSequenceRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { EmptySequenceItemRenderer } from 'application/render/renderers/sequence/EmptySequenceItemRenderer';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { Chain } from 'domain/entities/monomer-chains/Chain';\nimport { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { CoreEditor } from 'application/editor/internal';\nimport { SequenceMode } from 'application/editor/modes';\nimport { RestoreSequenceCaretPositionCommand } from 'application/editor/operations/modes';\nimport assert from 'assert';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { BaseMonomerRenderer } from 'application/render';\nimport { Command } from 'domain/entities/Command';\n\nexport type SequencePointer = number;\n\nexport type NodesSelection = {\n  node: SubChainNode;\n  nodeIndexOverall: number;\n}[][];\n\nexport class SequenceRenderer {\n  public static caretPosition: SequencePointer = -1;\n  public static chainsCollection: ChainsCollection;\n  private static emptySequenceItemRenderers: EmptySequenceItemRenderer[] = [];\n  private static lastChainStartPosition: Vec2;\n\n  public static show(chainsCollection: ChainsCollection) {\n    SequenceRenderer.chainsCollection = chainsCollection;\n    this.removeEmptyNodes();\n    this.showNodes(SequenceRenderer.chainsCollection);\n    this.showBonds(SequenceRenderer.chainsCollection);\n  }\n\n  public static removeEmptyNodes() {\n    SequenceRenderer.emptySequenceItemRenderers.forEach(\n      (emptySequenceItemRenderer) => {\n        emptySequenceItemRenderer.remove();\n        SequenceRenderer.emptySequenceItemRenderers = [];\n      },\n    );\n  }\n\n  private static showNodes(chainsCollection: ChainsCollection) {\n    const firstNode = chainsCollection.firstNode;\n\n    let currentChainStartPosition = firstNode\n      ? BaseMonomerRenderer.getScaledMonomerPosition(\n          firstNode.monomer.position,\n          firstNode.monomer.renderer?.monomerSize,\n        )\n      : new Vec2(41.5, 41.5);\n\n    let currentMonomerIndexInChain = 0;\n    let currentMonomerIndexOverall = 0;\n    const editor = CoreEditor.provideEditorInstance();\n    const isEditMode =\n      editor.mode instanceof SequenceMode && editor.mode.isEditMode;\n\n    if (isEditMode) {\n      chainsCollection.chains.forEach((chain) => {\n        const emptySequenceNode = new EmptySequenceNode();\n        const emptySubChain = new EmptySubChain();\n        emptySubChain.add(emptySequenceNode);\n        chain.subChains.push(emptySubChain);\n      });\n    }\n\n    chainsCollection.chains.forEach((chain) => {\n      currentMonomerIndexInChain = 0;\n      chain.subChains.forEach((subChain) => {\n        subChain.nodes.forEach((node) => {\n          const renderer = SequenceNodeRendererFactory.fromNode(\n            node,\n            currentChainStartPosition,\n            currentMonomerIndexInChain,\n            currentMonomerIndexInChain + 1 + (isEditMode ? 1 : 0) ===\n              chain.subChains.reduce(\n                (prev, curr) => prev + curr.nodes.length,\n                0,\n              ),\n            subChain,\n            currentMonomerIndexOverall === SequenceRenderer.caretPosition,\n            node.monomer.renderer,\n          );\n          renderer.show();\n          node.monomer?.setRenderer(renderer);\n          currentMonomerIndexInChain++;\n          currentMonomerIndexOverall++;\n\n          if (node instanceof EmptySequenceNode) {\n            SequenceRenderer.emptySequenceItemRenderers.push(renderer);\n            node.setRenderer(renderer);\n          }\n        });\n      });\n\n      currentChainStartPosition = SequenceRenderer.getNextChainPosition(\n        currentChainStartPosition,\n        chain,\n      );\n    });\n\n    if (this.caretPosition > currentMonomerIndexOverall) {\n      this.setCaretPosition(currentMonomerIndexOverall);\n    }\n\n    this.lastChainStartPosition = currentChainStartPosition;\n  }\n\n  private static getNextChainPosition(\n    currentChainStartPosition: Vec2,\n    lastChain: Chain,\n  ) {\n    return new Vec2(\n      currentChainStartPosition.x,\n      currentChainStartPosition.y +\n        75 +\n        47 * Math.floor((lastChain.length - 1) / 30),\n    );\n  }\n\n  private static showBonds(chainsCollection: ChainsCollection) {\n    const handledMonomersToAttachmentPoints: Map<\n      BaseMonomer,\n      Set<AttachmentPointName>\n    > = new Map();\n\n    chainsCollection.chains.forEach((chain) => {\n      chain.forEachNode(({ node, subChain }) => {\n        if (node instanceof EmptySequenceNode) {\n          return;\n        }\n\n        if (!handledMonomersToAttachmentPoints.has(node.monomer)) {\n          handledMonomersToAttachmentPoints.set(node.monomer, new Set());\n        }\n        node.monomer.forEachBond((polymerBond, attachmentPointName) => {\n          if (!polymerBond.isSideChainConnection) {\n            polymerBond.setRenderer(\n              new BackBoneBondSequenceRenderer(polymerBond),\n            );\n            subChain.bonds.push(polymerBond);\n            return;\n          }\n\n          const handledAttachmentPoints = handledMonomersToAttachmentPoints.get(\n            node.monomer,\n          ) as Set<AttachmentPointName>;\n\n          if (handledAttachmentPoints.has(attachmentPointName)) {\n            return;\n          }\n\n          const anotherMonomer = polymerBond.getAnotherMonomer(\n            node.monomer,\n          ) as BaseMonomer;\n\n          // Skip handling side chains for sugar(R3) + base(R1) connections.\n          if (\n            (node.monomer instanceof Sugar &&\n              getRnaBaseFromSugar(node.monomer) === anotherMonomer) ||\n            (anotherMonomer instanceof Sugar &&\n              getRnaBaseFromSugar(anotherMonomer) === node.monomer)\n          ) {\n            return;\n          }\n\n          let bondRenderer;\n\n          // If side connection comes from rna base then take connected sugar and draw side connection from it\n          // because for rna we display only one letter instead of three\n          if (anotherMonomer instanceof RNABase) {\n            const connectedSugar = getSugarFromRnaBase(anotherMonomer);\n            bondRenderer = new PolymerBondSequenceRenderer(\n              new PolymerBond(node.monomer, connectedSugar),\n            );\n          } else {\n            bondRenderer = new PolymerBondSequenceRenderer(polymerBond);\n          }\n          bondRenderer.show();\n          polymerBond.setRenderer(bondRenderer);\n          subChain.bonds.push(polymerBond);\n          handledAttachmentPoints.add(attachmentPointName);\n\n          if (!handledMonomersToAttachmentPoints.get(anotherMonomer)) {\n            handledMonomersToAttachmentPoints.set(anotherMonomer, new Set());\n          }\n          const anotherMonomerHandledAttachmentPoints =\n            handledMonomersToAttachmentPoints.get(\n              anotherMonomer,\n            ) as Set<AttachmentPointName>;\n\n          anotherMonomerHandledAttachmentPoints.add(\n            anotherMonomer?.getAttachmentPointByBond(\n              polymerBond,\n            ) as AttachmentPointName,\n          );\n        });\n      });\n\n      if (chain.isCyclic) {\n        const polymerBond = chain.firstMonomer?.attachmentPointsToBonds\n          .R1 as PolymerBond;\n        const bondRenderer = new PolymerBondSequenceRenderer(\n          polymerBond,\n          chain.firstNode,\n          chain.lastNode,\n        );\n        bondRenderer.show();\n        polymerBond.setRenderer(bondRenderer);\n      }\n    });\n  }\n\n  public static setCaretPosition(caretPosition: SequencePointer) {\n    const oldSubChainNode = SequenceRenderer.currentEdittingNode;\n\n    if (oldSubChainNode) {\n      assert(oldSubChainNode.renderer instanceof BaseSequenceItemRenderer);\n      oldSubChainNode.renderer.isEditingSymbol = false;\n      oldSubChainNode.renderer?.remove();\n      oldSubChainNode.renderer?.show();\n    }\n    SequenceRenderer.caretPosition = caretPosition;\n    const subChainNode = SequenceRenderer.currentEdittingNode;\n\n    if (!subChainNode) {\n      return;\n    }\n\n    assert(subChainNode.renderer instanceof BaseSequenceItemRenderer);\n    subChainNode.renderer.isEditingSymbol = true;\n    subChainNode.renderer?.remove();\n    subChainNode.renderer?.show();\n  }\n\n  public static forEachNode(\n    forEachCallback: (params: {\n      chainIndex: number;\n      subChainIndex: number;\n      nodeIndex: number;\n      nodeIndexOverall: number;\n      node: SubChainNode;\n      subChain: BaseSubChain;\n      chain: Chain;\n    }) => void,\n  ) {\n    let nodeIndexOverall = 0;\n\n    this.chainsCollection.chains.forEach((chain, chainIndex) => {\n      chain.subChains.forEach((subChain, subChainIndex) => {\n        subChain.nodes.forEach((node, nodeIndex) => {\n          forEachCallback({\n            chainIndex,\n            subChainIndex,\n            nodeIndex,\n            nodeIndexOverall,\n            node,\n            subChain,\n            chain,\n          });\n          nodeIndexOverall++;\n        });\n      });\n    });\n  }\n\n  public static setCaretPositionBySequenceItemRenderer(\n    sequenceItemRenderer: BaseSequenceItemRenderer,\n  ) {\n    let newCaretPosition = -1;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.renderer === sequenceItemRenderer) {\n        newCaretPosition = nodeIndexOverall;\n      }\n    });\n\n    this.setCaretPosition(newCaretPosition);\n  }\n\n  public static setCaretPositionByMonomer(monomer: BaseMonomer) {\n    let newCaretPosition = -1;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.monomer === monomer) {\n        newCaretPosition = nodeIndexOverall;\n      }\n    });\n\n    this.setCaretPosition(newCaretPosition);\n  }\n\n  public static getMonomersByCaretPositionRange(\n    startCaretPosition: SequencePointer,\n    endCaretPosition,\n  ) {\n    const monomers: BaseMonomer[] = [];\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (\n        startCaretPosition <= nodeIndexOverall &&\n        nodeIndexOverall < (endCaretPosition || this.caretPosition)\n      ) {\n        monomers.push(node.monomer);\n      }\n    });\n    return monomers;\n  }\n\n  public static moveCaretForward() {\n    return new RestoreSequenceCaretPositionCommand(\n      this.caretPosition,\n      this.nextCaretPosition || this.caretPosition,\n    );\n  }\n\n  public static moveCaretBack() {\n    return new RestoreSequenceCaretPositionCommand(\n      this.caretPosition,\n      this.previousCaretPosition === undefined\n        ? this.caretPosition\n        : this.previousCaretPosition,\n    );\n  }\n\n  public static get hasNewChain() {\n    return SequenceRenderer.newChainCaretPosition !== undefined;\n  }\n\n  public static moveCaretToNewChain() {\n    this.setCaretPosition(\n      SequenceRenderer.newChainCaretPosition === undefined\n        ? -1\n        : SequenceRenderer.newChainCaretPosition,\n    );\n  }\n\n  private static get currentChainIndex() {\n    let currentChainIndex = -1;\n\n    SequenceRenderer.forEachNode(({ nodeIndexOverall, chainIndex }) => {\n      if (nodeIndexOverall === this.caretPosition) {\n        currentChainIndex = chainIndex;\n      }\n    });\n\n    return currentChainIndex;\n  }\n\n  public static get newChainCaretPosition(): SequencePointer | undefined {\n    const lastNodeCaretPosition = SequenceRenderer.lastNodeCaretPosition;\n    if (lastNodeCaretPosition === undefined) {\n      return undefined;\n    }\n    const lastChain = SequenceRenderer.getChainByPointer(lastNodeCaretPosition);\n\n    return lastChain.isEmpty ? lastNodeCaretPosition : undefined;\n  }\n\n  public static get lastNodeCaretPosition(): SequencePointer | undefined {\n    if (SequenceRenderer.chainsCollection.chains.length === 0) {\n      return undefined;\n    }\n\n    let lastNodeIndex = -1;\n\n    SequenceRenderer.forEachNode(() => {\n      lastNodeIndex++;\n    });\n\n    return lastNodeIndex === -1 ? undefined : lastNodeIndex;\n  }\n\n  public static getNodeByPointer(sequencePointer?: SequencePointer) {\n    if (sequencePointer === undefined) return;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (nodeIndexOverall === sequencePointer) {\n        nodeToReturn = node;\n      }\n    });\n\n    return nodeToReturn;\n  }\n\n  private static getChainByPointer(sequencePointer: SequencePointer) {\n    let chainToReturn;\n\n    SequenceRenderer.forEachNode(({ chain, nodeIndexOverall }) => {\n      if (nodeIndexOverall === sequencePointer) {\n        chainToReturn = chain;\n      }\n    });\n\n    return chainToReturn;\n  }\n\n  public static get currentEdittingNode() {\n    return SequenceRenderer.getNodeByPointer(this.caretPosition);\n  }\n\n  public static get previousFromCurrentEdittingMonomer() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.previousCaretPosition,\n    );\n  }\n\n  public static get currentChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.currentChainIndex\n    ];\n  }\n\n  public static get previousChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.currentChainIndex - 1\n    ];\n  }\n\n  public static getLastNonEmptyNode(chain: Chain) {\n    const subChainBeforeLast = chain.subChains[chain.subChains.length - 2];\n\n    return subChainBeforeLast.nodes[subChainBeforeLast.nodes.length - 1];\n  }\n\n  public static getLastNode(chain: Chain) {\n    const lastSubChain = chain.subChains[chain.subChains.length - 1];\n\n    return lastSubChain.nodes[lastSubChain.nodes.length - 1];\n  }\n\n  public static get nextNode() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.nextCaretPosition,\n    );\n  }\n\n  public static get previousNode() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.previousCaretPosition,\n    );\n  }\n\n  public static get nextNodeInSameChain() {\n    if (SequenceRenderer.nextCaretPosition !== SequenceRenderer.caretPosition) {\n      return;\n    }\n\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.nextCaretPosition,\n    );\n  }\n\n  public static get previousNodeInSameChain() {\n    return SequenceRenderer.getPreviousNodeInSameChain(\n      SequenceRenderer.currentEdittingNode,\n    );\n  }\n\n  private static get nextCaretPosition(): SequencePointer | undefined {\n    const nodeOnNextPosition = SequenceRenderer.getNodeByPointer(\n      this.caretPosition + 1,\n    );\n\n    return nodeOnNextPosition ? this.caretPosition + 1 : undefined;\n  }\n\n  public static get previousCaretPosition() {\n    const nodeOnPreviousPosition = SequenceRenderer.getNodeByPointer(\n      this.caretPosition - 1,\n    );\n\n    return nodeOnPreviousPosition ? this.caretPosition - 1 : undefined;\n  }\n\n  public static get lastChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.chainsCollection.chains.length - 1\n    ];\n  }\n\n  public static startNewSequence() {\n    const chain = new Chain();\n    const emptySequenceNode = new EmptySequenceNode();\n    const emptySubChain = new EmptySubChain();\n    emptySubChain.add(emptySequenceNode);\n    chain.subChains.push(emptySubChain);\n\n    const renderer = SequenceNodeRendererFactory.fromNode(\n      emptySequenceNode,\n      this.lastChainStartPosition,\n      0,\n      false,\n      emptySubChain,\n      true,\n    );\n    renderer.show();\n    emptySequenceNode.setRenderer(renderer);\n    SequenceRenderer.emptySequenceItemRenderers.push(renderer);\n    SequenceRenderer.chainsCollection.chains.push(chain);\n  }\n\n  public static getPreviousNodeInSameChain(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let previousNodeChainIndex = -1;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, chainIndex }) => {\n      if (nodeToCompare === node && chainIndex === previousNodeChainIndex) {\n        nodeToReturn = previousNode;\n      }\n      previousNodeChainIndex = chainIndex;\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getNextNodeInSameChain(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let previousNodeChainIndex = -1;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, chainIndex }) => {\n      if (\n        nodeToCompare === previousNode &&\n        chainIndex === previousNodeChainIndex\n      ) {\n        nodeToReturn = node;\n      }\n      previousNodeChainIndex = chainIndex;\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getPreviousNode(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (nodeToCompare === node) {\n        nodeToReturn = previousNode;\n      }\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getNextNode(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (previousNode === nodeToCompare) {\n        nodeToReturn = node;\n      }\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static shiftArrowSelectionInEditMode(event) {\n    const editor = CoreEditor.provideEditorInstance();\n    const selectDrawingEntities = (selectedNode: SubChainNode) => {\n      const drawingEntities =\n        editor.drawingEntitiesManager.getAllSelectedEntities(\n          selectedNode.monomer,\n        );\n      const modelChanges =\n        editor.drawingEntitiesManager.addDrawingEntitiesToSelection(\n          drawingEntities,\n        );\n      return modelChanges;\n    };\n\n    const modelChanges = new Command();\n    const arrowKey = event.code;\n    if (arrowKey === 'ArrowRight') {\n      const modelChanges = selectDrawingEntities(this.currentEdittingNode);\n      modelChanges.addOperation(this.moveCaretForward());\n    } else if (arrowKey === 'ArrowLeft') {\n      let modelChanges;\n      if (this.previousNodeInSameChain) {\n        modelChanges = selectDrawingEntities(this.previousNodeInSameChain);\n      } else if (SequenceRenderer.previousChain) {\n        const previousChainLastEmptyNode = SequenceRenderer.getLastNode(\n          SequenceRenderer.previousChain,\n        );\n        modelChanges = selectDrawingEntities(previousChainLastEmptyNode);\n      }\n      modelChanges.addOperation(this.moveCaretBack());\n    }\n    editor.renderersContainer.update(modelChanges);\n  }\n\n  public static unselectEmptySequenceNodes() {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (node instanceof EmptySequenceNode) {\n        command.merge(\n          editor.drawingEntitiesManager.unselectDrawingEntity(node.monomer),\n        );\n      }\n    });\n    return command;\n  }\n\n  public static get selections() {\n    const selections: NodesSelection = [];\n    let lastSelectionRangeIndex = -1;\n    let previousNode;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.monomer.selected) {\n        if (!previousNode?.monomer.selected) {\n          lastSelectionRangeIndex = selections.push([]) - 1;\n        }\n        selections[lastSelectionRangeIndex].push({ node, nodeIndexOverall });\n      }\n      previousNode = node;\n    });\n\n    return selections;\n  }\n}\n","import { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { LayoutMode } from 'application/editor/modes';\nimport { BaseMode } from 'application/editor/modes/BaseMode';\nimport ZoomTool from 'application/editor/tools/Zoom';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport {\n  NodesSelection,\n  SequenceRenderer,\n} from 'application/render/renderers/sequence/SequenceRenderer';\nimport { initHotKeys, keyNorm } from 'utilities';\nimport { AttachmentPointName } from 'domain/types';\nimport { Command } from 'domain/entities/Command';\nimport { BaseMonomer, SequenceType, Vec2 } from 'domain/entities';\nimport { BaseRenderer } from 'application/render/renderers/internal';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport {\n  ReinitializeSequenceModeCommand,\n  RestoreSequenceCaretPositionCommand,\n} from 'application/editor/operations/modes';\nimport assert from 'assert';\nimport {\n  getPeptideLibraryItem,\n  getRnaPartLibraryItem,\n} from 'domain/helpers/rna';\nimport {\n  peptideNaturalAnalogues,\n  RNA_DNA_NON_MODIFIED_PART,\n  rnaDnaNaturalAnalogues,\n} from 'domain/constants/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { isNumber, uniq } from 'lodash';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\n\nconst naturalAnalogues = uniq([\n  ...rnaDnaNaturalAnalogues,\n  ...peptideNaturalAnalogues,\n]);\n\nenum Direction {\n  Left = 'left',\n  Right = 'right',\n}\n\nexport class SequenceMode extends BaseMode {\n  private _isEditMode = false;\n  private selectionStarted = false;\n  private selectionStartCaretPosition = -1;\n\n  constructor(previousMode?: LayoutMode) {\n    super('sequence-layout-mode', previousMode);\n  }\n\n  public get isEditMode() {\n    return this._isEditMode;\n  }\n\n  public set isEditMode(isEditMode) {\n    this._isEditMode = isEditMode;\n  }\n\n  public initialize(needScroll = true) {\n    const command = super.initialize();\n    const editor = CoreEditor.provideEditorInstance();\n\n    editor.drawingEntitiesManager.clearCanvas();\n\n    const modelChanges = editor.drawingEntitiesManager.reArrangeChains(\n      editor.canvas.width.baseVal.value,\n      true,\n      false,\n    );\n    const zoom = ZoomTool.instance;\n\n    editor.renderersContainer.update(modelChanges);\n\n    const chainsCollection =\n      editor.drawingEntitiesManager.applyMonomersSequenceLayout();\n    const firstMonomerPosition =\n      chainsCollection.firstNode?.monomer.renderer?.scaledMonomerPosition;\n\n    if (firstMonomerPosition && needScroll) {\n      zoom.scrollTo(firstMonomerPosition);\n    }\n\n    modelChanges.merge(command);\n\n    return modelChanges;\n  }\n\n  public turnOnEditMode(sequenceItemRenderer?: BaseSequenceItemRenderer) {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditMode = true;\n    this.initialize(false);\n    if (sequenceItemRenderer) {\n      SequenceRenderer.setCaretPositionByMonomer(\n        sequenceItemRenderer.node.monomer,\n      );\n      SequenceRenderer.moveCaretForward();\n    }\n    editor.events.toggleSequenceEditMode.dispatch(true);\n  }\n\n  public turnOffEditMode() {\n    if (!this.isEditMode) return;\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditMode = false;\n    this.initialize(false);\n    editor.events.toggleSequenceEditMode.dispatch(false);\n  }\n\n  public async onKeyDown(event: KeyboardEvent) {\n    if (!this.isEditMode) {\n      return;\n    }\n\n    await new Promise<void>((resolve) => {\n      setTimeout(() => {\n        const hotKeys = initHotKeys(this.keyboardEventHandlers);\n        const shortcutKey = keyNorm.lookup(hotKeys, event);\n        const editor = CoreEditor.provideEditorInstance();\n\n        this.keyboardEventHandlers[shortcutKey]?.handler(event);\n        editor.events.mouseLeaveSequenceItem.dispatch();\n        resolve();\n      }, 0);\n    });\n  }\n\n  public startNewSequence() {\n    if (!this.isEditMode) {\n      this.turnOnEditMode();\n    }\n\n    if (!SequenceRenderer.hasNewChain) {\n      SequenceRenderer.startNewSequence();\n    }\n\n    SequenceRenderer.moveCaretToNewChain();\n  }\n\n  public click(event: MouseEvent) {\n    const eventData = event.target?.__data__;\n    const isClickedOnEmptyPlace = !(eventData instanceof BaseRenderer);\n    const isClickedOnSequenceItem =\n      eventData instanceof BaseSequenceItemRenderer;\n\n    if (isClickedOnEmptyPlace) {\n      this.turnOffEditMode();\n    }\n\n    if (this.isEditMode && isClickedOnSequenceItem) {\n      SequenceRenderer.setCaretPositionBySequenceItemRenderer(\n        eventData as BaseSequenceItemRenderer,\n      );\n      this.unselectAllEntities();\n    }\n  }\n\n  public mousedown(event: MouseEvent) {\n    const eventData = event.target?.__data__;\n    const isEventOnSequenceItem = eventData instanceof BaseSequenceItemRenderer;\n    if (this.isEditMode && isEventOnSequenceItem && !event.shiftKey) {\n      SequenceRenderer.setCaretPositionBySequenceItemRenderer(\n        eventData as BaseSequenceItemRenderer,\n      );\n      this.unselectAllEntities();\n      this.selectionStarted = true;\n      this.selectionStartCaretPosition = SequenceRenderer.caretPosition;\n    }\n  }\n\n  public mousemove(event: MouseEvent) {\n    const eventData = event.target?.__data__;\n    const isEventOnSequenceItem = eventData instanceof BaseSequenceItemRenderer;\n    if (this.isEditMode && isEventOnSequenceItem && this.selectionStarted) {\n      const modelChanges = new Command();\n      const editor = CoreEditor.provideEditorInstance();\n      SequenceRenderer.setCaretPositionBySequenceItemRenderer(\n        eventData as BaseSequenceItemRenderer,\n      );\n\n      let startCaretPosition = this.selectionStartCaretPosition;\n      let endCaretPosition = SequenceRenderer.caretPosition;\n      if (this.selectionStartCaretPosition > SequenceRenderer.caretPosition) {\n        startCaretPosition = SequenceRenderer.caretPosition;\n        endCaretPosition = this.selectionStartCaretPosition;\n      }\n      const monomers = SequenceRenderer.getMonomersByCaretPositionRange(\n        startCaretPosition,\n        endCaretPosition,\n      );\n      const drawingEntities = monomers.reduce(\n        (drawingEntities: DrawingEntity[], monomer: BaseMonomer) => {\n          return drawingEntities.concat(\n            editor.drawingEntitiesManager.getAllSelectedEntities(monomer),\n          );\n        },\n        [],\n      );\n\n      modelChanges.merge(\n        editor.drawingEntitiesManager.selectDrawingEntities(drawingEntities),\n      );\n      const moveCaretOperation = new RestoreSequenceCaretPositionCommand(\n        this.selectionStartCaretPosition,\n        SequenceRenderer.caretPosition,\n      );\n      modelChanges.addOperation(moveCaretOperation);\n      editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  mouseup() {\n    if (this.selectionStarted) {\n      this.selectionStarted = false;\n    }\n  }\n\n  private bondNodesThroughNewPhosphate(\n    position: Vec2,\n    previousNode: SubChainNode,\n    nextNode: SubChainNode,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const phosphateLibraryItem = getRnaPartLibraryItem(\n      editor,\n      RNA_DNA_NON_MODIFIED_PART.PHOSPHATE,\n    );\n\n    assert(phosphateLibraryItem);\n\n    const modelChanges = editor.drawingEntitiesManager.addMonomer(\n      phosphateLibraryItem,\n      position,\n    );\n\n    const additionalPhosphate = modelChanges.operations[0]\n      .monomer as BaseMonomer;\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.createPolymerBond(\n        previousNode.lastMonomerInNode,\n        additionalPhosphate,\n        AttachmentPointName.R2,\n        AttachmentPointName.R1,\n      ),\n    );\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.createPolymerBond(\n        additionalPhosphate,\n        nextNode.firstMonomerInNode,\n        AttachmentPointName.R2,\n        AttachmentPointName.R1,\n      ),\n    );\n\n    return modelChanges;\n  }\n\n  private handlePeptideNodeAddition(\n    enteredSymbol: string,\n    currentNode: SubChainNode,\n    previousNodeInSameChain: SubChainNode,\n    newNodePosition: Vec2,\n  ) {\n    if (!peptideNaturalAnalogues.includes(enteredSymbol)) {\n      return undefined;\n    }\n\n    const modelChanges = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    const newPeptideLibraryItem = getPeptideLibraryItem(editor, enteredSymbol);\n\n    assert(newPeptideLibraryItem);\n\n    const peptideAddCommand = editor.drawingEntitiesManager.addMonomer(\n      newPeptideLibraryItem,\n      newNodePosition,\n    );\n\n    const newPeptide = peptideAddCommand.operations[0].monomer as BaseMonomer;\n\n    modelChanges.merge(peptideAddCommand);\n\n    if (!(currentNode instanceof EmptySequenceNode)) {\n      if (previousNodeInSameChain) {\n        const r2Bond =\n          previousNodeInSameChain?.lastMonomerInNode.attachmentPointsToBonds.R2;\n        assert(r2Bond);\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deletePolymerBond(r2Bond),\n        );\n      }\n\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          newPeptide,\n          currentNode?.firstMonomerInNode as BaseMonomer,\n          AttachmentPointName.R2,\n          AttachmentPointName.R1,\n        ),\n      );\n    }\n\n    if (previousNodeInSameChain) {\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          previousNodeInSameChain.lastMonomerInNode,\n          newPeptide,\n          AttachmentPointName.R2,\n          AttachmentPointName.R1,\n        ),\n      );\n    }\n\n    return modelChanges;\n  }\n\n  private handleRnaDnaNodeAddition(\n    enteredSymbol: string,\n    currentNode: SubChainNode,\n    previousNodeInSameChain: SubChainNode,\n    newNodePosition: Vec2,\n  ) {\n    if (!rnaDnaNaturalAnalogues.includes(enteredSymbol)) {\n      return undefined;\n    }\n\n    const modelChanges = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    const { modelChanges: addedNodeModelChanges, node: nodeToAdd } =\n      currentNode instanceof Nucleotide || currentNode instanceof Nucleoside\n        ? Nucleotide.createOnCanvas(enteredSymbol, newNodePosition)\n        : Nucleoside.createOnCanvas(enteredSymbol, newNodePosition);\n\n    modelChanges.merge(addedNodeModelChanges);\n\n    if (!(currentNode instanceof EmptySequenceNode)) {\n      if (previousNodeInSameChain) {\n        const r2Bond =\n          previousNodeInSameChain?.lastMonomerInNode.attachmentPointsToBonds.R2;\n        assert(r2Bond);\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deletePolymerBond(r2Bond),\n        );\n      }\n\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          nodeToAdd.lastMonomerInNode,\n          currentNode?.firstMonomerInNode as BaseMonomer,\n          AttachmentPointName.R2,\n          AttachmentPointName.R1,\n        ),\n      );\n    }\n\n    if (previousNodeInSameChain instanceof Nucleoside) {\n      modelChanges.merge(\n        this.bondNodesThroughNewPhosphate(\n          newNodePosition,\n          previousNodeInSameChain,\n          nodeToAdd,\n        ),\n      );\n    } else if (previousNodeInSameChain) {\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          previousNodeInSameChain.lastMonomerInNode,\n          nodeToAdd.firstMonomerInNode,\n          AttachmentPointName.R2,\n          AttachmentPointName.R1,\n        ),\n      );\n    }\n\n    return modelChanges;\n  }\n\n  private finishNodesDeletion(\n    modelChanges: Command,\n    previousCaretPosition: number,\n    newCaretPosition?: number,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const moveCaretOperation = new RestoreSequenceCaretPositionCommand(\n      previousCaretPosition,\n      isNumber(newCaretPosition)\n        ? newCaretPosition\n        : SequenceRenderer.caretPosition,\n    );\n    modelChanges.addOperation(new ReinitializeSequenceModeCommand());\n    editor.renderersContainer.update(modelChanges);\n    modelChanges.addOperation(moveCaretOperation);\n    history.update(modelChanges);\n    this.selectionStartCaretPosition = -1;\n  }\n\n  private handleNodesDeletion(selections: NodesSelection) {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges = new Command();\n\n    selections.forEach((selectionRange) => {\n      const selectionStartNode = selectionRange[0].node;\n      const selectionEndNode = selectionRange[selectionRange.length - 1].node;\n      let isPhosphateAdditionalyDeleted = false;\n\n      const nodeBeforeSelection =\n        SequenceRenderer.getPreviousNode(selectionStartNode);\n      const nodeAfterSelection = SequenceRenderer.getNextNode(selectionEndNode);\n      const nodeInSameChainBeforeSelection =\n        SequenceRenderer.getPreviousNodeInSameChain(selectionStartNode);\n\n      if (!nodeInSameChainBeforeSelection && nodeAfterSelection) {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.moveMonomer(\n            nodeAfterSelection.monomer,\n            selectionStartNode.monomer.position,\n          ),\n        );\n      }\n\n      if (\n        !nodeBeforeSelection ||\n        nodeBeforeSelection instanceof EmptySequenceNode\n      ) {\n        return;\n      }\n\n      if (\n        nodeBeforeSelection instanceof Nucleotide &&\n        !(nodeAfterSelection instanceof Nucleotide) &&\n        !(nodeAfterSelection instanceof Nucleoside)\n      ) {\n        // delete phosphate from last nucleotide\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deleteMonomer(\n            nodeBeforeSelection.lastMonomerInNode,\n          ),\n        );\n        // TODO get rid of this boolean\n        isPhosphateAdditionalyDeleted = true;\n      }\n\n      if (\n        !nodeAfterSelection ||\n        nodeAfterSelection instanceof EmptySequenceNode\n      ) {\n        return;\n      }\n\n      if (\n        nodeBeforeSelection instanceof Nucleoside &&\n        (nodeAfterSelection instanceof Nucleotide ||\n          nodeAfterSelection instanceof Nucleoside)\n      ) {\n        modelChanges.merge(\n          this.bondNodesThroughNewPhosphate(\n            this.getNewSequenceItemPosition(nodeBeforeSelection),\n            nodeBeforeSelection,\n            nodeAfterSelection,\n          ),\n        );\n      } else {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.createPolymerBond(\n            isPhosphateAdditionalyDeleted\n              ? nodeBeforeSelection.firstMonomerInNode\n              : nodeBeforeSelection.lastMonomerInNode,\n            nodeAfterSelection.firstMonomerInNode,\n            AttachmentPointName.R2,\n            AttachmentPointName.R1,\n          ),\n        );\n      }\n    });\n\n    return modelChanges;\n  }\n\n  private get keyboardEventHandlers() {\n    const deleteNode = (direction: Direction) => {\n      const editor = CoreEditor.provideEditorInstance();\n      const nodeToDelete =\n        direction === Direction.Left\n          ? SequenceRenderer.previousNode\n          : SequenceRenderer.getNodeByPointer(SequenceRenderer.caretPosition);\n      const caretPosition =\n        direction === Direction.Left\n          ? (SequenceRenderer.previousCaretPosition as number)\n          : SequenceRenderer.caretPosition;\n      const selections = SequenceRenderer.selections;\n      const modelChanges = new Command();\n      let nodesToDelete: NodesSelection;\n\n      if (selections.length) {\n        modelChanges.merge(this.deleteSelectedDrawingEntities());\n        nodesToDelete = selections;\n      } else if (nodeToDelete) {\n        nodeToDelete.monomers.forEach((monomer) => {\n          modelChanges.merge(\n            editor.drawingEntitiesManager.deleteMonomer(monomer),\n          );\n        });\n        nodesToDelete = [\n          [\n            {\n              node: nodeToDelete,\n              nodeIndexOverall: caretPosition,\n            },\n          ],\n        ];\n      } else {\n        return;\n      }\n\n      modelChanges.merge(this.handleNodesDeletion(nodesToDelete));\n\n      this.finishNodesDeletion(\n        modelChanges,\n        nodesToDelete[0][0].nodeIndexOverall,\n        nodesToDelete[0][0].nodeIndexOverall,\n      );\n\n      if (\n        SequenceRenderer.caretPosition === 0 &&\n        SequenceRenderer.chainsCollection.chains.length === 0\n      ) {\n        this.startNewSequence();\n      }\n    };\n\n    return {\n      delete: {\n        shortcut: ['Delete'],\n        handler: () => deleteNode(Direction.Right),\n      },\n      backspace: {\n        shortcut: ['Backspace'],\n        handler: () => deleteNode(Direction.Left),\n      },\n      'turn-off-edit-mode': {\n        shortcut: ['Escape'],\n        handler: () => {\n          this.turnOffEditMode();\n        },\n      },\n      'start-new-sequence': {\n        shortcut: ['Enter'],\n        handler: () => {\n          this.unselectAllEntities();\n          this.startNewSequence();\n        },\n      },\n      'move-caret-forward': {\n        shortcut: ['ArrowRight'],\n        handler: () => {\n          SequenceRenderer.moveCaretForward();\n        },\n      },\n      'move-caret-back': {\n        shortcut: ['ArrowLeft'],\n        handler: () => {\n          SequenceRenderer.moveCaretBack();\n        },\n      },\n      'add-sequence-item': {\n        shortcut: [\n          ...naturalAnalogues,\n          ...naturalAnalogues.map((naturalAnalogue) =>\n            naturalAnalogue.toLowerCase(),\n          ),\n        ],\n        handler: (event) => {\n          const selections = SequenceRenderer.selections;\n\n          if (selections.length > 1) {\n            return;\n          }\n\n          if (selections.length === 1) {\n            const deletionModelChanges = this.deleteSelectedDrawingEntities();\n\n            deletionModelChanges.merge(this.handleNodesDeletion(selections));\n            this.finishNodesDeletion(\n              deletionModelChanges,\n              SequenceRenderer.caretPosition,\n              selections[0][0].nodeIndexOverall,\n            );\n          }\n\n          const enteredSymbol = event.code.replace('Key', '');\n          const editor = CoreEditor.provideEditorInstance();\n          const history = new EditorHistory(editor);\n          const currentNode = SequenceRenderer.currentEdittingNode;\n          const previousNode =\n            SequenceRenderer.previousFromCurrentEdittingMonomer;\n          const nodeBeforePreviousNode = previousNode\n            ? SequenceRenderer.getPreviousNodeInSameChain(previousNode)\n            : undefined;\n          const previousNodeInSameChain =\n            SequenceRenderer.previousNodeInSameChain;\n\n          const newNodePosition = this.getNewSequenceItemPosition(\n            previousNode,\n            nodeBeforePreviousNode,\n          );\n\n          let modelChanges;\n\n          if (editor.sequenceTypeEnterMode === SequenceType.PEPTIDE) {\n            modelChanges = this.handlePeptideNodeAddition(\n              enteredSymbol,\n              currentNode,\n              previousNodeInSameChain,\n              newNodePosition,\n            );\n          } else {\n            modelChanges = this.handleRnaDnaNodeAddition(\n              enteredSymbol,\n              currentNode,\n              previousNodeInSameChain,\n              newNodePosition,\n            );\n          }\n\n          // Case when user type symbol that does not exist in current sequence type mode\n          if (!modelChanges) {\n            return;\n          }\n\n          modelChanges.addOperation(new ReinitializeSequenceModeCommand());\n          editor.renderersContainer.update(modelChanges);\n          modelChanges.addOperation(SequenceRenderer.moveCaretForward());\n          history.update(modelChanges);\n        },\n      },\n      'sequence-edit-select': {\n        shortcut: ['Shift+ArrowLeft', 'Shift+ArrowRight'],\n        handler: (event) => {\n          const arrowKey = event.key;\n\n          if (\n            SequenceRenderer.caretPosition === 0 &&\n            arrowKey === 'ArrowLeft'\n          ) {\n            return;\n          }\n\n          this.selectionStartCaretPosition =\n            this.selectionStartCaretPosition !== -1\n              ? this.selectionStartCaretPosition\n              : SequenceRenderer.caretPosition;\n          SequenceRenderer.shiftArrowSelectionInEditMode(event);\n        },\n      },\n    };\n  }\n\n  private deleteSelectedDrawingEntities() {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges = new Command();\n    editor.drawingEntitiesManager.selectedEntities.forEach(([, entity]) => {\n      modelChanges.merge(\n        editor.drawingEntitiesManager.deleteDrawingEntity(entity),\n      );\n    });\n\n    return modelChanges;\n  }\n\n  private getNewSequenceItemPosition(\n    previousNode?: SubChainNode,\n    nodeBeforePreviousNode?: SubChainNode,\n  ) {\n    const offsetFromPrevious = new Vec2(1, 1);\n\n    if (previousNode && !(previousNode instanceof EmptySequenceNode)) {\n      return previousNode.lastMonomerInNode.position.add(offsetFromPrevious);\n    } else if (nodeBeforePreviousNode) {\n      return nodeBeforePreviousNode.lastMonomerInNode.position.add(\n        offsetFromPrevious,\n      );\n    } else {\n      return new Vec2(0, 0);\n    }\n  }\n\n  private unselectAllEntities() {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges =\n      editor.drawingEntitiesManager.unselectAllDrawingEntities();\n    modelChanges.merge(SequenceRenderer.unselectEmptySequenceNodes());\n    editor.renderersContainer.update(modelChanges);\n  }\n\n  public destroy() {\n    this.turnOffEditMode();\n  }\n}\n","import { BaseMode } from 'application/editor/modes/BaseMode';\nimport { CoreEditor } from 'application/editor/internal';\nimport { LayoutMode } from 'application/editor/modes';\n\nexport class SnakeMode extends BaseMode {\n  constructor(previousMode?: LayoutMode) {\n    super('snake-layout-mode', previousMode);\n  }\n\n  public initialize() {\n    const command = super.initialize();\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges = editor.drawingEntitiesManager.reArrangeChains(\n      editor.canvas.width.baseVal.value,\n      true,\n    );\n    editor.drawingEntitiesManager.applyFlexLayoutMode();\n\n    command.merge(modelChanges);\n    editor.renderersContainer.update(modelChanges);\n    command.setUndoOperationReverse();\n\n    return command;\n  }\n\n  public onKeyDown(_event: KeyboardEvent) {}\n}\n","import { FlexMode } from './FlexMode';\nimport { SequenceMode } from './SequenceMode';\nimport { SnakeMode } from './SnakeMode';\n\nexport * from './FlexMode';\nexport * from './SequenceMode';\nexport * from './SnakeMode';\nexport * from './types';\n\nexport const modesMap = {\n  'flex-layout-mode': FlexMode,\n  'snake-layout-mode': SnakeMode,\n  'sequence-layout-mode': SequenceMode,\n};\n","import { BaseRenderer } from './BaseRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport assert from 'assert';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport { Phosphate, Sugar, Vec2 } from 'domain/entities';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Chem } from 'domain/entities/Chem';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { SnakeMode } from 'application/editor/modes/';\nimport { Coordinates } from 'application/editor/shared/coordinates';\nimport { CoreEditor } from 'application/editor/internal';\n\nconst LINE_FROM_MONOMER_LENGTH = 15;\nconst VERTICAL_LINE_LENGTH = 21;\nconst RNA_CHAIN_VERTICAL_LINE_LENGTH = 74;\nconst CORNER_LENGTH = 4;\nconst DOUBLE_CORNER_LENGTH = CORNER_LENGTH * 2;\nenum LINE_DIRECTION {\n  Horizontal = 'Horizontal',\n  Vertical = 'Vertical',\n}\n\nexport class PolymerBondRenderer extends BaseRenderer {\n  private editorEvents: typeof editorEvents;\n  private selectionElement;\n  private path = '';\n  private previousStateOfIsMonomersOnSameHorisontalLine = false;\n  constructor(public polymerBond: PolymerBond) {\n    super(polymerBond as DrawingEntity);\n    this.polymerBond.setRenderer(this);\n    this.editorEvents = editorEvents;\n  }\n\n  get attachmentPointsForSnakeBond() {\n    return ['R1', 'R2'];\n  }\n\n  private isSnakeBondAvailableForMonomer(monomer?: BaseMonomer) {\n    return (\n      monomer instanceof Peptide ||\n      monomer instanceof Chem ||\n      monomer instanceof Sugar ||\n      monomer instanceof Phosphate\n    );\n  }\n\n  get isSnake() {\n    if (\n      !this.isSnakeBondAvailableForMonomer(this.polymerBond.firstMonomer) ||\n      (this.polymerBond.secondMonomer &&\n        !this.isSnakeBondAvailableForMonomer(this.polymerBond.secondMonomer)) ||\n      (this.polymerBond.secondMonomer &&\n        this.polymerBond.firstMonomer.isMonomerTypeDifferentForChaining(\n          this.polymerBond.secondMonomer,\n        ))\n    ) {\n      return false;\n    }\n    const firstMonomerAttachmentPoint =\n      this.polymerBond.firstMonomer.getAttachmentPointByBond(this.polymerBond);\n    const secondMonomerAttachmentPoint =\n      this.polymerBond.secondMonomer?.getAttachmentPointByBond(\n        this.polymerBond,\n      );\n    const firstMonomerPotentialAttachmentPoint =\n      this.polymerBond.firstMonomer.getPotentialAttachmentPointByBond(\n        this.polymerBond,\n      );\n    const isAttachmentPointsEnabledForSnakeBond =\n      (this.attachmentPointsForSnakeBond.includes(\n        firstMonomerAttachmentPoint as string,\n      ) &&\n        this.attachmentPointsForSnakeBond.includes(\n          secondMonomerAttachmentPoint as string,\n        )) ||\n      this.attachmentPointsForSnakeBond.includes(\n        firstMonomerPotentialAttachmentPoint as string,\n      );\n    const isSameAttachmentPoints =\n      firstMonomerAttachmentPoint === secondMonomerAttachmentPoint;\n    const editor = CoreEditor.provideEditorInstance();\n    return (\n      editor?.mode instanceof SnakeMode &&\n      isAttachmentPointsEnabledForSnakeBond &&\n      !isSameAttachmentPoints\n    );\n  }\n\n  public get rootBBox() {\n    const rootNode = this.rootElement?.node();\n    if (!rootNode) return;\n\n    return rootNode.getBBox();\n  }\n\n  public get width() {\n    return this.rootBBox?.width || 0;\n  }\n\n  public get height() {\n    return this.rootBBox?.height || 0;\n  }\n\n  private get scaledPosition() {\n    // we need to convert monomer coordinates(stored in angstroms) to pixels.\n    // it needs to be done in view layer of application (like renderers)\n    const startPositionInPixels = Coordinates.modelToCanvas(\n      this.polymerBond.startPosition,\n    );\n\n    const endPositionInPixels = Coordinates.modelToCanvas(\n      this.polymerBond.endPosition,\n    );\n\n    return {\n      startPosition: startPositionInPixels,\n      endPosition: endPositionInPixels,\n    };\n  }\n\n  public moveSelection() {\n    if (\n      this.previousStateOfIsMonomersOnSameHorisontalLine !==\n      this.isMonomersOnSameHorizontalLine()\n    ) {\n      this.remove();\n      this.show();\n    } else {\n      assert(this.rootElement);\n      this.moveStart();\n      this.moveEnd();\n    }\n    this.previousStateOfIsMonomersOnSameHorisontalLine =\n      this.isMonomersOnSameHorizontalLine();\n  }\n\n  public appendBond(rootElement) {\n    if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n      this.appendSnakeBond(rootElement);\n    } else {\n      this.appendBondGraph(rootElement);\n    }\n    return this.bodyElement;\n  }\n\n  public appendSnakeBond(rootElement) {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    this.bodyElement = rootElement\n      .append('path')\n      .attr('stroke', this.polymerBond.finished ? '#333333' : '#0097A8')\n      .attr('stroke-width', 1)\n      .attr('class', 'selection-area')\n      .attr('d', this.path)\n      .attr('fill-opacity', 0)\n      .attr('pointer-events', 'stroke');\n    return this.bodyElement;\n  }\n\n  private getMonomerWidth() {\n    return this.polymerBond.firstMonomer.renderer?.monomerSize.width ?? 0;\n  }\n\n  private getMonomerHeight() {\n    return this.polymerBond.firstMonomer.renderer?.monomerSize.height ?? 0;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return Boolean(\n      this.polymerBond.secondMonomer &&\n        this.polymerBond.firstMonomer.position.y -\n          this.polymerBond.secondMonomer.position.y <\n          0.5 &&\n        this.polymerBond.firstMonomer.position.y -\n          this.polymerBond.secondMonomer.position.y >\n          -0.5,\n    );\n  }\n\n  private updateSnakeBondPath(\n    startPosition: Vec2,\n    endPosition: Vec2,\n    reCheckAttachmentpoint = true,\n  ) {\n    const isR1TheCurrentAttachmentpointOfFirstMonomer =\n      this.polymerBond.firstMonomer.getAttachmentPointByBond(\n        this.polymerBond,\n      ) === 'R1' ||\n      this.polymerBond.firstMonomer.getPotentialAttachmentPointByBond(\n        this.polymerBond,\n      ) === 'R1';\n\n    // check if there is nucleotide in current row\n    const isBondConnectedWithNucleotide =\n      this.polymerBond.firstMonomer.isMonomerInRnaChainRow;\n\n    const verticalLineLength = isBondConnectedWithNucleotide\n      ? RNA_CHAIN_VERTICAL_LINE_LENGTH\n      : VERTICAL_LINE_LENGTH;\n\n    if (this.isSecondMonomerBottomRight(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y - CORNER_LENGTH * 2,\n      );\n      this.addLineFromTopToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        endPosition.x -\n          startPosition.x -\n          CORNER_LENGTH * 2 -\n          LINE_FROM_MONOMER_LENGTH -\n          this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerTopRight(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToTop();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y -\n          startPosition.y -\n          CORNER_LENGTH * 2 +\n          this.getMonomerHeight() / 2,\n      );\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        endPosition.x -\n          startPosition.x -\n          CORNER_LENGTH * 2 -\n          LINE_FROM_MONOMER_LENGTH -\n          this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerBottomLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(LINE_DIRECTION.Vertical, verticalLineLength);\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n      this.addLineFromRightToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y -\n          startPosition.y -\n          CORNER_LENGTH * 4 -\n          verticalLineLength,\n      );\n      this.addLineFromTopToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerTopLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(LINE_DIRECTION.Vertical, this.getMonomerHeight());\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n\n      this.addLineFromRightToUp();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y - this.getMonomerHeight(),\n      );\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y + this.getMonomerHeight(),\n      );\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n\n      this.addLineFromRightToUp();\n      this.addLine(LINE_DIRECTION.Vertical, -this.getMonomerHeight());\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else {\n      this.addRandomLine(startPosition, endPosition);\n    }\n  }\n\n  private isSecondMonomerTopRight(startPosition, endPosition): boolean {\n    return (\n      startPosition.y - endPosition.y > DOUBLE_CORNER_LENGTH &&\n      endPosition.x - startPosition.x >\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerBottomRight(startPosition, endPosition): boolean {\n    return (\n      endPosition.y - startPosition.y > DOUBLE_CORNER_LENGTH &&\n      endPosition.x - startPosition.x >\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerBottomLeft(\n    startPosition: Vec2,\n    endPosition: Vec2,\n  ): boolean {\n    return (\n      endPosition.y - startPosition.y >=\n        2 * (VERTICAL_LINE_LENGTH + DOUBLE_CORNER_LENGTH) &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerTopLeft(startPosition, endPosition): boolean {\n    return (\n      startPosition.y - endPosition.y > 0 &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerLeft(startPosition: Vec2, endPosition: Vec2): boolean {\n    return (\n      startPosition.y - endPosition.y < 0 &&\n      startPosition.y - endPosition.y >\n        -2 * (VERTICAL_LINE_LENGTH + DOUBLE_CORNER_LENGTH) &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private addLineFromTopToRight() {\n    this.path = `${this.path} c 0,4.418 3.582,${CORNER_LENGTH} ${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromLeftToTop() {\n    this.path = `${this.path} c 4.418,0 ${CORNER_LENGTH},-3.582 ${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromBottomToRight() {\n    this.path = `${this.path} c 0,-4.418 3.582,-${CORNER_LENGTH} ${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromLeftToBottom() {\n    this.path = `${this.path} c 4.418,0 ${CORNER_LENGTH},3.582 ${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromTopToLeft() {\n    this.path = `${this.path} c 0,4.418 -3.582,${CORNER_LENGTH} -${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromRightToUp() {\n    this.path = `${this.path} c -4.418,0 -${CORNER_LENGTH},-3.582 -${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromRightToBottom() {\n    this.path = `${this.path} c -4.418,0 -${CORNER_LENGTH},3.582 -${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLine(\n    isHorisontal: LINE_DIRECTION,\n    length: number,\n    startPosition?: Vec2,\n  ) {\n    const start = startPosition\n      ? `M ${Math.round(startPosition.x)},${Math.round(startPosition.y)}`\n      : this.path;\n    const line =\n      isHorisontal === LINE_DIRECTION.Horizontal\n        ? `l${length}, 0`\n        : `l 0, ${length}`;\n    this.path = `${start} ${line}`;\n  }\n\n  private addRandomLine(startPosition: Vec2, endPosition: Vec2) {\n    const start = `M ${Math.round(startPosition.x)},${Math.round(\n      startPosition.y,\n    )}`;\n    const line = `L ${Math.round(endPosition.x)},${Math.round(endPosition.y)}`;\n    this.path = `${start} ${line}`;\n  }\n\n  public appendBondGraph(rootElement) {\n    this.bodyElement = rootElement\n      .append('line')\n      .attr('stroke', this.polymerBond.finished ? '#333333' : '#0097A8')\n      .attr('stroke-width', 1)\n      .attr('class', 'selection-area')\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y)\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y)\n      .attr('pointer-events', 'stroke');\n\n    return this.bodyElement;\n  }\n\n  private appendRootElement() {\n    return this.canvas\n      .insert('g', `:first-child`)\n      .data([this])\n      .on('mouseover', (event) => {\n        this.editorEvents.mouseOverPolymerBond.dispatch(event);\n        this.editorEvents.mouseOverDrawingEntity.dispatch(event);\n      })\n      .on('mouseout', (event) => {\n        this.editorEvents.mouseLeavePolymerBond.dispatch(event);\n        this.editorEvents.mouseLeaveDrawingEntity.dispatch(event);\n      })\n      .attr('pointer-events', 'stroke') as never as D3SvgElementSelection<\n      SVGGElement,\n      void\n    >;\n  }\n\n  public show() {\n    this.rootElement = this.rootElement || this.appendRootElement();\n    this.appendBond(this.rootElement);\n    this.appendHoverAreaElement();\n    this.drawSelection();\n  }\n\n  public drawSelection() {\n    if (this.polymerBond.selected) {\n      this.selectionElement?.remove();\n      if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n        this.selectionElement = this.rootElement\n          ?.insert('path', ':first-child')\n          .attr('stroke', '#57FF8F')\n          .attr('stroke-width', 10)\n          .attr('fill-opacity', 0)\n          .attr('d', this.path);\n      } else {\n        this.selectionElement = this.rootElement\n          ?.insert('line', ':first-child')\n          .attr('stroke', '#57FF8F')\n          .attr('x1', this.scaledPosition.startPosition.x)\n          .attr('y1', this.scaledPosition.startPosition.y)\n          .attr('x2', this.scaledPosition.endPosition.x)\n          .attr('y2', this.scaledPosition.endPosition.y)\n          .attr('stroke-width', '5');\n      }\n    } else {\n      this.selectionElement?.remove();\n    }\n  }\n\n  public moveEnd() {\n    if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n      this.moveSnakeBondEnd();\n    } else {\n      this.moveGraphBondEnd();\n    }\n  }\n\n  private moveSnakeBondEnd() {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement.attr('d', this.path);\n\n    this.hoverAreaElement.attr('d', this.path);\n    this.selectionElement?.attr('d', this.path);\n  }\n\n  private moveGraphBondEnd() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y);\n\n    this.hoverAreaElement\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y);\n\n    this.selectionElement\n      ?.attr('x2', this.scaledPosition.endPosition.x)\n      ?.attr('y2', this.scaledPosition.endPosition.y);\n  }\n\n  public moveStart() {\n    if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n      this.moveSnakeBondStart();\n    } else {\n      this.moveGraphBondStart();\n    }\n  }\n\n  private moveSnakeBondStart() {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement.attr('d', this.path);\n\n    this.hoverAreaElement.attr('d', this.path);\n    this.selectionElement?.attr('d', this.path);\n  }\n\n  private moveGraphBondStart() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y);\n\n    this.hoverAreaElement\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y);\n\n    this.selectionElement\n      ?.attr('x1', this.scaledPosition.startPosition.x)\n      ?.attr('y1', this.scaledPosition.startPosition.y);\n  }\n\n  protected appendHoverAreaElement() {\n    if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n      (<D3SvgElementSelection<SVGPathElement, void> | undefined>(\n        this.hoverAreaElement\n      )) = this.rootElement\n        ?.append('path')\n        .attr('stroke', 'transparent')\n        .attr('d', this.path)\n        .attr('fill-opacity', 0)\n        .attr('stroke-width', '10');\n    } else {\n      (<D3SvgElementSelection<SVGLineElement, void> | undefined>(\n        this.hoverAreaElement\n      )) = this.rootElement\n        ?.append('line')\n        .attr('stroke', 'transparent')\n        .attr('x1', this.scaledPosition.startPosition.x)\n        .attr('y1', this.scaledPosition.startPosition.y)\n        .attr('x2', this.scaledPosition.endPosition.x)\n        .attr('y2', this.scaledPosition.endPosition.y)\n        .attr('stroke-width', '10');\n    }\n  }\n\n  public appendHover() {\n    assert(this.bodyElement);\n    this.bodyElement.attr('stroke', '#0097A8').attr('pointer-events', 'none');\n\n    if (this.polymerBond.selected) {\n      assert(this.hoverAreaElement);\n      this.hoverAreaElement.attr('stroke', '#CCFFDD');\n    }\n  }\n\n  public removeHover() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement.attr('stroke', '#333333').attr('pointer-events', 'stroke');\n\n    return this.hoverAreaElement.attr('stroke', 'transparent');\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { BaseMonomerRenderer } from 'application/render/renderers';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport assert from 'assert';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Chem } from 'domain/entities/Chem';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Coordinates } from '../shared/coordinates';\nimport { AttachmentPointName } from 'domain/types';\n\nclass PolymerBond implements BaseTool {\n  private bondRenderer?: PolymerBondRenderer;\n  private isBondConnectionModalOpen = false;\n  history: EditorHistory;\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(this.editor);\n  }\n\n  public mouseDownAttachmentPoint(event) {\n    const selectedRenderer = event.target.__data__;\n    if (\n      selectedRenderer instanceof BaseMonomerRenderer &&\n      !selectedRenderer.monomer.isAttachmentPointUsed(event.attachmentPointName)\n    ) {\n      selectedRenderer.monomer.setChosenFirstAttachmentPoint(\n        event.attachmentPointName,\n      );\n    }\n  }\n\n  private removeBond(): void {\n    if (this.bondRenderer) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n          this.bondRenderer.polymerBond,\n        );\n      this.editor.renderersContainer.update(modelChanges);\n      this.bondRenderer = undefined;\n    }\n  }\n\n  public mousedown(event) {\n    const selectedRenderer = event.target.__data__;\n    if (selectedRenderer instanceof BaseMonomerRenderer) {\n      const startAttachmentPoint =\n        selectedRenderer.monomer.startBondAttachmentPoint;\n\n      if (!startAttachmentPoint) {\n        this.editor.events.error.dispatch(\n          \"Selected monomer doesn't have any free attachment points\",\n        );\n        return;\n      }\n      const { polymerBond, command: modelChanges } =\n        this.editor.drawingEntitiesManager.startPolymerBondCreation(\n          selectedRenderer.monomer,\n          selectedRenderer.monomer.position,\n          Coordinates.canvasToModel(this.editor.lastCursorPositionOfCanvas),\n        );\n\n      this.editor.renderersContainer.update(modelChanges);\n      this.bondRenderer = polymerBond.renderer;\n    }\n  }\n\n  public mousemove() {\n    if (this.bondRenderer) {\n      const modelChanges = this.editor.drawingEntitiesManager.movePolymerBond(\n        this.bondRenderer.polymerBond,\n        Coordinates.canvasToModel(this.editor.lastCursorPositionOfCanvas),\n      );\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseLeavePolymerBond(event) {\n    const renderer: PolymerBondRenderer = event.target.__data__;\n    if (this.bondRenderer || !renderer.polymerBond) return;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.hidePolymerBondInformation(\n        renderer.polymerBond,\n      );\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverPolymerBond(event) {\n    if (this.bondRenderer) return;\n\n    const renderer: PolymerBondRenderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.showPolymerBondInformation(\n        renderer.polymerBond,\n      );\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverMonomer(event) {\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n    let modelChanges;\n\n    if (this.bondRenderer) {\n      // Don't need to do anything if we hover over the first monomer of the bond\n      if (this.bondRenderer?.polymerBond.firstMonomer === renderer.monomer) {\n        return;\n      }\n      const shouldCalculateBonds = !this.shouldInvokeModal(\n        this.bondRenderer?.polymerBond.firstMonomer,\n        renderer.monomer,\n        false,\n      );\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToFinishBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n          shouldCalculateBonds,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToStartBondCreation(\n          renderer.monomer,\n        );\n    }\n\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverAttachmentPoint(event) {\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n    let modelChanges;\n\n    if (this.bondRenderer) {\n      // Don't need to do anything if we hover over the first monomer of the bond\n      if (this.bondRenderer?.polymerBond.firstMonomer === renderer.monomer) {\n        return;\n      }\n      const shouldCalculateBonds = !this.shouldInvokeModal(\n        this.bondRenderer?.polymerBond.firstMonomer,\n        renderer.monomer,\n        false,\n      );\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToFinishAttachmenPointBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n          event.attachmentPointName,\n          shouldCalculateBonds,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToStartAttachmenPointBondCreation(\n          renderer.monomer,\n          event.attachmentPointName,\n        );\n    }\n\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseLeaveMonomer(event) {\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n    if (\n      renderer !== this.bondRenderer?.polymerBond?.firstMonomer?.renderer &&\n      !this.isBondConnectionModalOpen\n    ) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelIntentionToFinishBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n        );\n      this.editor.renderersContainer.markForRecalculateBegin();\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseLeaveAttachmentPoint(event) {\n    if (this.isBondConnectionModalOpen) {\n      return;\n    }\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n    if (renderer !== this.bondRenderer?.polymerBond?.firstMonomer?.renderer) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelIntentionToFinishBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n        );\n      this.editor.renderersContainer.markForRecalculateBegin();\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseUpAttachmentPoint(event) {\n    const renderer = event.target.__data__;\n    const isFirstMonomerHovered =\n      renderer === this.bondRenderer?.polymerBond?.firstMonomer?.renderer;\n\n    if (this.bondRenderer && !isFirstMonomerHovered) {\n      const firstMonomer = this.bondRenderer?.polymerBond?.firstMonomer;\n      const secondMonomer = renderer.monomer;\n\n      if (secondMonomer.isAttachmentPointUsed(event.attachmentPointName)) {\n        this.mouseup();\n        return;\n      }\n\n      for (const attachmentPoint in secondMonomer.attachmentPointsToBonds) {\n        const bond = secondMonomer.attachmentPointsToBonds[attachmentPoint];\n        if (!bond) {\n          continue;\n        }\n        const alreadyHasBond =\n          (bond.firstMonomer === firstMonomer &&\n            bond.secondMonomer === secondMonomer) ||\n          (bond.firstMonomer === secondMonomer &&\n            bond.secondMonomer === firstMonomer);\n        if (alreadyHasBond) {\n          this.editor.events.error.dispatch(\n            \"There can't be more than 1 bond between the first and the second monomer\",\n          );\n          return;\n        }\n      }\n      secondMonomer.setChosenSecondAttachmentPoint(event.attachmentPointName);\n      const showModal = this.shouldInvokeModal(firstMonomer, secondMonomer);\n      if (showModal) {\n        this.isBondConnectionModalOpen = true;\n\n        this.editor.events.openMonomerConnectionModal.dispatch({\n          firstMonomer,\n          secondMonomer,\n        });\n        return;\n      }\n      const modelChanges = this.finishBondCreation(renderer.monomer);\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n      this.editor.renderersContainer.deletePolymerBond(\n        this.bondRenderer.polymerBond,\n        false,\n        false,\n      );\n      this.bondRenderer = undefined;\n      event.stopPropagation();\n    }\n  }\n\n  private finishBondCreation(secondMonomer: BaseMonomer) {\n    assert(this.bondRenderer);\n    if (!secondMonomer.hasFreeAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        \"Monomers don't have any connection point available\",\n      );\n      return this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n      );\n    }\n    const firstMonomerAttachmentPoint =\n      this.bondRenderer.polymerBond.firstMonomer.getPotentialAttachmentPointByBond(\n        this.bondRenderer.polymerBond,\n      );\n    const secondMonomerAttachmentPoint =\n      secondMonomer.getPotentialAttachmentPointByBond(\n        this.bondRenderer.polymerBond,\n      );\n    assert(firstMonomerAttachmentPoint);\n    assert(secondMonomerAttachmentPoint);\n    if (firstMonomerAttachmentPoint === secondMonomerAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        'You have connected monomers with attachment points of the same group',\n      );\n    }\n    return this.editor.drawingEntitiesManager.finishPolymerBondCreation(\n      this.bondRenderer.polymerBond,\n      secondMonomer,\n      firstMonomerAttachmentPoint,\n      secondMonomerAttachmentPoint,\n    );\n  }\n\n  public mouseup() {\n    if (this.isBondConnectionModalOpen) {\n      return;\n    }\n    this.removeBond();\n  }\n\n  public mouseUpMonomer(event) {\n    const renderer = event.target.__data__;\n    const isFirstMonomerHovered =\n      renderer === this.bondRenderer?.polymerBond?.firstMonomer?.renderer;\n\n    if (this.bondRenderer && !isFirstMonomerHovered) {\n      const firstMonomer = this.bondRenderer?.polymerBond?.firstMonomer;\n      const secondMonomer = renderer.monomer;\n\n      for (const attachmentPoint in secondMonomer.attachmentPointsToBonds) {\n        const bond = secondMonomer.attachmentPointsToBonds[attachmentPoint];\n        if (!bond) {\n          continue;\n        }\n        const alreadyHasBond =\n          (bond.firstMonomer === firstMonomer &&\n            bond.secondMonomer === secondMonomer) ||\n          (bond.firstMonomer === secondMonomer &&\n            bond.secondMonomer === firstMonomer);\n        if (alreadyHasBond) {\n          this.editor.events.error.dispatch(\n            \"There can't be more than 1 bond between the first and the second monomer\",\n          );\n          return;\n        }\n      }\n      const showModal = this.shouldInvokeModal(firstMonomer, secondMonomer);\n      if (showModal) {\n        this.isBondConnectionModalOpen = true;\n\n        this.editor.events.openMonomerConnectionModal.dispatch({\n          firstMonomer,\n          secondMonomer,\n        });\n        return;\n      }\n\n      // This logic so far is only for no-modal connections. Maybe then we can chain it after modal invoke\n      const modelChanges = this.finishBondCreation(renderer.monomer);\n      this.editor.renderersContainer.update(modelChanges);\n      this.editor.renderersContainer.deletePolymerBond(\n        this.bondRenderer.polymerBond,\n        false,\n        false,\n      );\n      this.bondRenderer = undefined;\n      this.history.update(modelChanges);\n      event.stopPropagation();\n    }\n  }\n\n  public handleBondCreation = (payload: {\n    firstMonomer: BaseMonomer;\n    secondMonomer: BaseMonomer;\n    firstSelectedAttachmentPoint: string;\n    secondSelectedAttachmentPoint: string;\n  }): void => {\n    assert(this.bondRenderer);\n\n    const {\n      secondMonomer,\n      firstSelectedAttachmentPoint,\n      secondSelectedAttachmentPoint,\n    } = payload;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.finishPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n        secondMonomer,\n        firstSelectedAttachmentPoint,\n        secondSelectedAttachmentPoint,\n      );\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n    if (firstSelectedAttachmentPoint === secondSelectedAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        'You have connected monomers with attachment points of the same group',\n      );\n    }\n    this.isBondConnectionModalOpen = false;\n    this.editor.renderersContainer.deletePolymerBond(\n      this.bondRenderer.polymerBond,\n      false,\n      false,\n    );\n    this.bondRenderer = undefined;\n  };\n\n  public handleBondCreationCancellation = (\n    secondMonomer: BaseMonomer,\n  ): void => {\n    if (!this.bondRenderer) {\n      return;\n    }\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n        secondMonomer,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n    this.isBondConnectionModalOpen = false;\n    this.bondRenderer = undefined;\n  };\n\n  public destroy() {\n    this.removeBond();\n  }\n\n  private shouldInvokeModal(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    checkForPotentialBonds = true,\n  ) {\n    // No Modal: no free attachment point on second monomer\n    if (!secondMonomer.hasFreeAttachmentPoint) {\n      return false;\n    }\n\n    // No Modal: Both monomers have APs selected\n    if (\n      firstMonomer.chosenFirstAttachmentPointForBond !== null &&\n      secondMonomer.chosenSecondAttachmentPointForBond !== null\n    ) {\n      return false;\n    }\n\n    // Modal: either of the monomers doesn't have any potential APs\n    if (\n      checkForPotentialBonds &&\n      (!firstMonomer.hasPotentialBonds() || !secondMonomer.hasPotentialBonds())\n    ) {\n      return true;\n    }\n\n    // No Modal: Both monomers have only 1 attachment point\n    if (\n      firstMonomer.unUsedAttachmentPointsNamesList.length === 1 &&\n      secondMonomer.unUsedAttachmentPointsNamesList.length === 1\n    ) {\n      return false;\n    }\n\n    // Modal: Any or both monomers are Chems\n    if (firstMonomer instanceof Chem || secondMonomer instanceof Chem) {\n      return true;\n    }\n\n    // Modal: One monomer is Peptide and another is RNA monomer\n    const rnaMonomerClasses = [Sugar, RNABase, Phosphate];\n    const firstMonomerIsRNA = rnaMonomerClasses.find(\n      (RNAClass) => firstMonomer instanceof RNAClass,\n    );\n    const secondMonomerIsRNA = rnaMonomerClasses.find(\n      (RNAClass) => secondMonomer instanceof RNAClass,\n    );\n    if (\n      (firstMonomerIsRNA && secondMonomer instanceof Peptide) ||\n      (secondMonomerIsRNA && firstMonomer instanceof Peptide)\n    ) {\n      return true;\n    }\n\n    // Modal: special case for Peptide chain\n    if (secondMonomer instanceof Peptide && firstMonomer instanceof Peptide) {\n      // one of monomers has more than 2 AP\n      const hasPlentyAttachmentPoints =\n        firstMonomer.listOfAttachmentPoints.length > 2 ||\n        secondMonomer.listOfAttachmentPoints.length > 2;\n\n      // at least one of monomers has more than 1 free AP\n      const hasPlentyFreeAttachmentPoints =\n        firstMonomer.unUsedAttachmentPointsNamesList.length > 1 ||\n        secondMonomer.unUsedAttachmentPointsNamesList.length > 1;\n\n      // there is no possibility to connect R1-R2\n      const BothR1AttachmentPointUsed =\n        firstMonomer.isAttachmentPointUsed(AttachmentPointName.R1) &&\n        secondMonomer.isAttachmentPointUsed(AttachmentPointName.R1);\n\n      const BothR2AttachmentPointUsed =\n        firstMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n        secondMonomer.isAttachmentPointUsed(AttachmentPointName.R2);\n\n      const R1AndR2AttachmentPointUsed =\n        (firstMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n          firstMonomer.isAttachmentPointUsed(AttachmentPointName.R1)) ||\n        (secondMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n          secondMonomer.isAttachmentPointUsed(AttachmentPointName.R1));\n\n      if (\n        hasPlentyAttachmentPoints &&\n        hasPlentyFreeAttachmentPoints &&\n        (BothR1AttachmentPointUsed ||\n          BothR2AttachmentPointUsed ||\n          R1AndR2AttachmentPointUsed)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport { PolymerBond };\n","import {\n  PeptideRenderer,\n  ChemRenderer,\n  BaseMonomerRenderer,\n  RNABaseRenderer,\n  SugarRenderer,\n  PhosphateRenderer,\n} from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Chem } from 'domain/entities/Chem';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { ketMonomerClass } from 'application/formatters/types/ket';\n\ntype DerivedClass<T> = new (...args: unknown[]) => T;\nexport const MONOMER_CONST = {\n  AMINO_ACID: 'AminoAcid',\n  PEPTIDE: 'PEPTIDE',\n  CHEM: 'CHEM',\n  RNA: 'RNA',\n  DNA: 'DNA',\n  MODDNA: 'MODDNA',\n  R: 'R', // states for Ribose\n  P: 'P', // states for Phosphate\n  SUGAR: 'SUGAR',\n  BASE: 'BASE',\n  PHOSPHATE: 'PHOSPHATE',\n};\n\ntype Monomer =\n  | typeof Chem\n  | typeof Sugar\n  | typeof Peptide\n  | typeof RNABase\n  | typeof Phosphate;\n\nexport const monomerFactory = (\n  monomer: MonomerItemType,\n): [\n  Monomer: Monomer,\n  MonomerRenderer: DerivedClass<BaseMonomerRenderer>,\n  ketMonomerClass: ketMonomerClass,\n] => {\n  let Monomer;\n  let MonomerRenderer;\n  let ketMonomerClass: ketMonomerClass;\n\n  if (\n    monomer.props.MonomerType === MONOMER_CONST.CHEM ||\n    (monomer.props.MonomerType === MONOMER_CONST.RNA &&\n      (monomer.props.MonomerClass === MONOMER_CONST.MODDNA ||\n        monomer.props.MonomerClass === MONOMER_CONST.DNA))\n  ) {\n    Monomer = Chem;\n    MonomerRenderer = ChemRenderer;\n    ketMonomerClass = 'CHEM';\n  } else if (monomer.props.MonomerType === MONOMER_CONST.PEPTIDE) {\n    Monomer = Peptide;\n    MonomerRenderer = PeptideRenderer;\n    ketMonomerClass = 'AminoAcid';\n  } else {\n    if (monomer.props.MonomerNaturalAnalogCode === MONOMER_CONST.R) {\n      Monomer = Sugar;\n      MonomerRenderer = SugarRenderer;\n      ketMonomerClass = 'Sugar';\n    } else if (monomer.props.MonomerNaturalAnalogCode === MONOMER_CONST.P) {\n      Monomer = Phosphate;\n      MonomerRenderer = PhosphateRenderer;\n      ketMonomerClass = 'Phosphate';\n    } else {\n      Monomer = RNABase;\n      MonomerRenderer = RNABaseRenderer;\n      ketMonomerClass = 'Base';\n    }\n  }\n\n  return [Monomer, MonomerRenderer, ketMonomerClass];\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Chem } from 'domain/entities/Chem';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Vec2 } from 'domain/entities';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseMonomerRenderer } from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport { monomerFactory } from '../operations/monomer/monomerFactory';\nimport assert from 'assert';\nimport { Coordinates } from '../shared/coordinates';\n\nclass MonomerTool implements BaseTool {\n  private monomerPreview:\n    | Peptide\n    | Chem\n    | Sugar\n    | RNABase\n    | Phosphate\n    | undefined;\n\n  private monomerPreviewRenderer: BaseMonomerRenderer | undefined;\n  readonly MONOMER_PREVIEW_SCALE_FACTOR = 0.8;\n  readonly MONOMER_PREVIEW_OFFSET_X = 30;\n  readonly MONOMER_PREVIEW_OFFSET_Y = 30;\n  history: EditorHistory;\n  constructor(private editor: CoreEditor, private monomer: MonomerItemType) {\n    this.editor = editor;\n    this.monomer = monomer;\n    this.history = new EditorHistory(this.editor);\n  }\n\n  mousedown() {\n    assert(this.monomerPreviewRenderer);\n    const position = Coordinates.canvasToModel(\n      new Vec2(\n        this.editor.lastCursorPositionOfCanvas.x,\n        this.editor.lastCursorPositionOfCanvas.y,\n      ),\n    );\n    const modelChanges = this.editor.drawingEntitiesManager.addMonomer(\n      this.monomer,\n      // We convert monomer coordinates from pixels to angstroms\n      // because the model layer (like BaseMonomer) should not work with pixels\n      position,\n    );\n\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mousemove() {\n    const position = Coordinates.canvasToModel(\n      new Vec2(\n        this.editor.lastCursorPosition.x + this.MONOMER_PREVIEW_OFFSET_X,\n        this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n      ),\n    );\n    this.monomerPreview?.moveAbsolute(position);\n    this.monomerPreviewRenderer?.move();\n  }\n\n  public mouseLeaveClientArea() {\n    this.hidePreview();\n  }\n\n  public mouseover() {\n    if (!this.monomerPreview) {\n      const [Monomer, MonomerRenderer] = monomerFactory(this.monomer);\n\n      this.monomerPreview = new Monomer(this.monomer);\n      this.monomerPreviewRenderer = new MonomerRenderer(\n        this.monomerPreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n        false,\n      );\n      this.monomerPreviewRenderer?.show(this.editor.theme);\n    }\n  }\n\n  hidePreview() {\n    this.monomerPreviewRenderer?.remove();\n    this.monomerPreviewRenderer = undefined;\n    this.monomerPreview = undefined;\n  }\n\n  destroy(): void {\n    this.hidePreview();\n  }\n}\n\nexport { MonomerTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Tool, IRnaPreset } from 'application/editor/tools/Tool';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { Vec2 } from 'domain/entities';\n\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseMonomerRenderer } from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport { monomerFactory } from '../operations/monomer/monomerFactory';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Coordinates } from '../shared/coordinates';\n\nexport const RNA_MONOMER_DISTANCE = 22.5;\nclass RnaPresetTool implements Tool {\n  rnaBase: MonomerItemType | undefined;\n  sugar: MonomerItemType | undefined;\n  phosphate: MonomerItemType | undefined;\n\n  private rnaBasePreview: RNABase | undefined;\n  private phosphatePreview: Phosphate | undefined;\n  private sugarPreview: Sugar | undefined;\n  private rnaBasePreviewRenderer: BaseMonomerRenderer | undefined;\n  private phosphatePreviewRenderer: BaseMonomerRenderer | undefined;\n  private sugarPreviewRenderer: BaseMonomerRenderer | undefined;\n  readonly MONOMER_PREVIEW_SCALE_FACTOR = 0.5;\n  readonly MONOMER_PREVIEW_OFFSET_X = 30;\n  readonly MONOMER_PREVIEW_OFFSET_Y = 30;\n  readonly RNA_BASE_PREVIEW_OFFSET_X = 1;\n  readonly RNA_BASE_PREVIEW_OFFSET_Y = 20;\n  readonly PHOSPHATE_PREVIEW_OFFSET_X = 18;\n  history: EditorHistory;\n\n  constructor(private editor: CoreEditor, preset: IRnaPreset) {\n    this.editor = editor;\n    if (preset?.base) {\n      this.rnaBase = preset?.base;\n    }\n    if (preset?.phosphate) {\n      this.phosphate = preset?.phosphate;\n    }\n    if (preset?.sugar) {\n      this.sugar = preset?.sugar;\n    }\n    this.history = new EditorHistory(this.editor);\n  }\n\n  mousedown() {\n    if (!this.sugar || !this.sugarPreviewRenderer) {\n      this.editor.events.error.dispatch('No sugar in RNA preset found');\n      return;\n    }\n\n    const { command: modelChanges } =\n      this.editor.drawingEntitiesManager.addRnaPreset({\n        sugar: this.sugar,\n        sugarPosition: Coordinates.canvasToModel(\n          new Vec2(\n            this.editor.lastCursorPositionOfCanvas.x,\n            this.editor.lastCursorPositionOfCanvas.y,\n          ),\n        ),\n        phosphate: this.phosphate,\n        phosphatePosition: this.phosphatePreviewRenderer\n          ? Coordinates.canvasToModel(\n              new Vec2(\n                this.editor.lastCursorPositionOfCanvas.x +\n                  this.sugarPreviewRenderer?.width +\n                  RNA_MONOMER_DISTANCE,\n                this.editor.lastCursorPositionOfCanvas.y,\n              ),\n            )\n          : undefined,\n        rnaBase: this.rnaBase,\n        rnaBasePosition: this.rnaBasePreviewRenderer\n          ? Coordinates.canvasToModel(\n              new Vec2(\n                this.editor.lastCursorPositionOfCanvas.x,\n                this.editor.lastCursorPositionOfCanvas.y +\n                  this.sugarPreviewRenderer.height +\n                  RNA_MONOMER_DISTANCE,\n              ),\n            )\n          : undefined,\n      });\n\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mousemove() {\n    this.sugarPreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x + this.MONOMER_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.rnaBasePreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x +\n            this.MONOMER_PREVIEW_OFFSET_X +\n            this.RNA_BASE_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y +\n            this.MONOMER_PREVIEW_OFFSET_Y +\n            this.RNA_BASE_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.phosphatePreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x +\n            this.MONOMER_PREVIEW_OFFSET_X +\n            this.PHOSPHATE_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.rnaBasePreviewRenderer?.move();\n    this.phosphatePreviewRenderer?.move();\n    this.sugarPreviewRenderer?.move();\n  }\n\n  public mouseLeaveClientArea() {\n    this.sugarPreviewRenderer?.remove();\n    this.sugarPreviewRenderer = undefined;\n    this.sugarPreview = undefined;\n    this.phosphatePreviewRenderer?.remove();\n    this.phosphatePreviewRenderer = undefined;\n    this.phosphatePreview = undefined;\n    this.rnaBasePreviewRenderer?.remove();\n    this.rnaBasePreviewRenderer = undefined;\n    this.rnaBasePreview = undefined;\n  }\n\n  public mouseover() {\n    if (!this.sugar) {\n      this.editor.events.error.dispatch('No sugar in RNA preset found');\n      return;\n    }\n\n    if (this.sugarPreview) {\n      return;\n    }\n\n    const [Sugar, SugarRenderer] = monomerFactory(this.sugar);\n    this.sugarPreview = new Sugar(this.sugar) as Sugar;\n\n    this.sugarPreviewRenderer = new SugarRenderer(\n      this.sugarPreview,\n      this.MONOMER_PREVIEW_SCALE_FACTOR,\n    );\n\n    this.sugarPreviewRenderer?.show(this.editor.theme);\n\n    if (this.rnaBase) {\n      const [RNABase, RNABaseRenderer] = monomerFactory(this.rnaBase);\n      this.rnaBasePreview = new RNABase(this.rnaBase) as RNABase;\n      this.rnaBasePreviewRenderer = new RNABaseRenderer(\n        this.rnaBasePreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n      );\n\n      this.rnaBasePreviewRenderer?.show(this.editor.theme);\n    }\n\n    if (this.phosphate) {\n      const [Phosphate, PhosphateRenderer] = monomerFactory(this.phosphate);\n\n      this.phosphatePreview = new Phosphate(this.phosphate) as Phosphate;\n\n      this.phosphatePreviewRenderer = new PhosphateRenderer(\n        this.phosphatePreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n      );\n\n      this.phosphatePreviewRenderer?.show(this.editor.theme);\n    }\n  }\n}\n\nexport { RnaPresetTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { SequenceMode } from '../modes';\n\nclass EraserTool implements BaseTool {\n  private history: EditorHistory;\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(editor);\n    if (\n      this.editor.drawingEntitiesManager.selectedEntities.length &&\n      !(this.editor.mode instanceof SequenceMode)\n    ) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.deleteSelectedEntities();\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  mousedown(event) {\n    const selectedItemRenderer = event.target.__data__;\n\n    if (selectedItemRenderer instanceof BaseSequenceRenderer) {\n      return;\n    }\n\n    if (selectedItemRenderer instanceof BaseRenderer) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.deleteDrawingEntity(\n          selectedItemRenderer.drawingEntity,\n        );\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  // TODO move hover logic somewhere to apply it for all or several tools from one place.\n  //  Currently it is duplicated from select-rectangle tool\n  mouseOverDrawingEntity(event) {\n    const renderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.intendToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mouseLeaveDrawingEntity(event) {\n    const renderer: BaseRenderer = event.target.__data__;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelIntentionToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  destroy() {}\n}\n\nexport { EraserTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Vec2 } from 'domain/entities';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { brush as d3Brush, select } from 'd3';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { Command } from 'domain/entities/Command';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Coordinates } from '../shared/coordinates';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { SequenceMode } from '../modes';\nimport { isMacOs } from 'react-device-detect';\nimport { EraserTool } from './Erase';\n\nclass SelectRectangle implements BaseTool {\n  private brush;\n  private brushArea;\n  private moveStarted;\n  private mousePositionAfterMove = new Vec2(0, 0, 0);\n  private mousePositionBeforeMove = new Vec2(0, 0, 0);\n  private canvasResizeObserver?: ResizeObserver;\n  private history: EditorHistory;\n  private previousSelectedEntities: [number, DrawingEntity][] = [];\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(this.editor);\n    this.destroy();\n    this.createBrush();\n  }\n\n  private createBrush() {\n    this.brushArea = select(this.editor.canvas)\n      .insert('g', ':first-child')\n      .attr('id', 'rectangle-selection-area');\n\n    this.brush = d3Brush();\n\n    const brushed = (mo) => {\n      this.setSelectedEntities();\n      if (mo.selection) {\n        this.brushArea.call(this.brush?.clear);\n      }\n    };\n\n    const onBrush = (brushEvent) => {\n      const selection = brushEvent.selection;\n      const editor = CoreEditor.provideEditorInstance();\n      if (!selection || editor.isSequenceEditMode) return;\n      requestAnimationFrame(() => {\n        const topLeftPoint = Coordinates.viewToCanvas(\n          new Vec2(selection[0][0], selection[0][1]),\n        );\n        const bottomRightPoint = Coordinates.viewToCanvas(\n          new Vec2(selection[1][0], selection[1][1]),\n        );\n\n        const modelChanges =\n          this.editor.drawingEntitiesManager.selectIfLocatedInRectangle(\n            topLeftPoint,\n            bottomRightPoint,\n            this.previousSelectedEntities,\n            brushEvent.sourceEvent.shiftKey,\n          );\n\n        this.editor.renderersContainer.update(modelChanges);\n      });\n    };\n\n    this.brush.on('brush', onBrush);\n    this.brush.on('end', brushed);\n\n    this.brushArea.call(this.brush);\n\n    this.brushArea\n      .select('rect.selection')\n      .style('fill', 'transparent')\n      .style('stroke', 'darkgrey');\n\n    const handleResizeCanvas = () => {\n      const { canvas } = this.editor;\n      if (canvas.clientWidth === 0 || canvas.clientHeight === 0) {\n        return;\n      }\n\n      this.brush\n        .extent([\n          [0, 0],\n          [canvas.width.baseVal.value, canvas.height.baseVal.value],\n        ])\n        .keyModifiers(false)\n        .filter((e) => {\n          e.preventDefault();\n          if (e.shiftKey) {\n            e.stopPropagation();\n          }\n          return true;\n        });\n\n      this.brushArea.call(this.brush);\n    };\n\n    const canvasElement = this.editor.canvas;\n\n    if (canvasElement) {\n      this.canvasResizeObserver = new ResizeObserver(handleResizeCanvas);\n      this.canvasResizeObserver.observe(canvasElement);\n    }\n  }\n\n  mousedown(event) {\n    const editor = CoreEditor.provideEditorInstance();\n\n    if (editor.mode instanceof SequenceMode && editor.mode.isEditMode) {\n      return;\n    }\n\n    const renderer = event.target.__data__;\n    this.mousePositionAfterMove = this.editor.lastCursorPositionOfCanvas;\n    this.mousePositionBeforeMove = this.editor.lastCursorPositionOfCanvas;\n    const ModKey = isMacOs ? event.metaKey : event.ctrlKey;\n\n    let modelChanges: Command;\n    if (renderer instanceof BaseRenderer && !event.shiftKey && !ModKey) {\n      this.moveStarted = true;\n      if (\n        renderer.drawingEntity.selected &&\n        !(this.editor.mode instanceof SequenceMode)\n      ) {\n        return;\n      }\n      const drawingEntities =\n        this.editor.drawingEntitiesManager.getAllSelectedEntities(\n          renderer.drawingEntity,\n          false,\n        );\n      modelChanges =\n        this.editor.drawingEntitiesManager.selectDrawingEntities(\n          drawingEntities,\n        );\n    } else if (renderer instanceof BaseRenderer && event.shiftKey) {\n      if (renderer.drawingEntity.selected) {\n        return;\n      }\n      const drawingEntities =\n        this.editor.drawingEntitiesManager.getAllSelectedEntities(\n          renderer.drawingEntity,\n        );\n      modelChanges =\n        this.editor.drawingEntitiesManager.addDrawingEntitiesToSelection(\n          drawingEntities,\n        );\n    } else if (renderer instanceof BaseSequenceItemRenderer && ModKey) {\n      let drawingEntities: DrawingEntity[] = renderer.currentSubChain.nodes\n        .map((node) => {\n          if (node instanceof Nucleoside) {\n            return [node.sugar, node.rnaBase];\n          } else if (node instanceof Nucleotide) {\n            return [node.sugar, node.rnaBase, node.phosphate];\n          } else {\n            return node.monomer;\n          }\n        })\n        .flat();\n      drawingEntities = drawingEntities.concat(renderer.currentSubChain.bonds);\n      modelChanges =\n        this.editor.drawingEntitiesManager.selectDrawingEntities(\n          drawingEntities,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.unselectAllDrawingEntities();\n    }\n    this.editor.renderersContainer.update(modelChanges);\n    this.setSelectedEntities();\n  }\n\n  mousemove() {\n    if (this.editor.mode instanceof SequenceMode) {\n      return;\n    }\n    if (this.moveStarted) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.moveSelectedDrawingEntities(\n          Coordinates.canvasToModel(\n            new Vec2(\n              this.editor.lastCursorPositionOfCanvas.x -\n                this.mousePositionAfterMove.x,\n              this.editor.lastCursorPositionOfCanvas.y -\n                this.mousePositionAfterMove.y,\n            ),\n          ),\n        );\n      this.mousePositionAfterMove = this.editor.lastCursorPositionOfCanvas;\n      requestAnimationFrame(() => {\n        this.editor.renderersContainer.update(modelChanges);\n      });\n    }\n  }\n\n  mouseup(event) {\n    const renderer = event.target.__data__;\n    if (this.moveStarted && renderer.drawingEntity?.selected) {\n      this.moveStarted = false;\n\n      if (\n        Vec2.diff(\n          this.mousePositionAfterMove,\n          this.mousePositionBeforeMove,\n        ).length() === 0\n      ) {\n        return;\n      }\n      const modelChanges =\n        this.editor.drawingEntitiesManager.moveSelectedDrawingEntities(\n          new Vec2(0, 0),\n          Coordinates.canvasToModel(\n            new Vec2(\n              this.mousePositionAfterMove.x - this.mousePositionBeforeMove.x,\n              this.mousePositionAfterMove.y - this.mousePositionBeforeMove.y,\n            ),\n          ),\n        );\n      this.history.update(modelChanges);\n    }\n  }\n\n  mouseOverDrawingEntity(event) {\n    const renderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.intendToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mouseLeaveDrawingEntity(event) {\n    const renderer: BaseRenderer = event.target.__data__;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelIntentionToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  setSelectedEntities() {\n    this.previousSelectedEntities =\n      this.editor.drawingEntitiesManager.allEntities.filter(\n        ([, drawingEntity]) => drawingEntity.selected,\n      );\n  }\n\n  destroy() {\n    if (this.brush) {\n      this.brushArea.remove();\n      this.brush = null;\n      this.brushArea = null;\n    }\n\n    this.canvasResizeObserver?.disconnect();\n\n    if (!(this.editor.selectedTool instanceof EraserTool)) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.unselectAllDrawingEntities();\n\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n}\n\nexport { SelectRectangle };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { SequenceMode } from 'application/editor/modes';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { ReinitializeSequenceModeCommand } from 'application/editor/operations/modes';\n\nclass ClearTool implements BaseTool {\n  private history: EditorHistory;\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(editor);\n\n    const modelChanges = this.editor.drawingEntitiesManager.deleteAllEntities();\n    this.editor.renderersContainer.update(modelChanges);\n\n    if (editor.mode instanceof SequenceMode) {\n      modelChanges.addOperation(new ReinitializeSequenceModeCommand());\n    }\n\n    this.history.update(modelChanges);\n  }\n\n  destroy() {}\n}\n\nexport { ClearTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ToolConstructorInterface } from './Tool';\nimport { MonomerTool } from 'application/editor/tools/Monomer';\nimport { RnaPresetTool } from 'application/editor/tools/RnaPreset';\nimport { SelectRectangle } from 'application/editor/tools/SelectRectangle';\nimport { PolymerBond } from 'application/editor/tools/Bond';\nimport { EraserTool } from 'application/editor/tools/Erase';\nimport { ClearTool } from 'application/editor/tools/Clear';\n\nexport const toolsMap: Record<string, ToolConstructorInterface> = {\n  monomer: MonomerTool,\n  preset: RnaPresetTool,\n  'select-rectangle': SelectRectangle,\n  'bond-single': PolymerBond,\n  erase: EraserTool,\n  clear: ClearTool,\n};\n","import { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport { Command } from 'domain/entities/Command';\nimport assert from 'assert';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { monomerFactory } from 'application/editor/operations/monomer/monomerFactory';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { AttachmentPointName } from 'domain/types';\nimport {\n  PeptideRenderer,\n  PhosphateRenderer,\n  RNABaseRenderer,\n  SugarRenderer,\n} from 'application/render';\nimport { notifyRenderComplete } from 'application/render/internal';\nimport { Peptide, Sugar, RNABase, Phosphate } from 'domain/entities';\nimport {\n  checkIsR2R1Connection,\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  isMonomerBeginningOfChain,\n} from 'domain/helpers/monomers';\n\nexport class RenderersManager {\n  private theme;\n  public monomers: Map<number, BaseMonomerRenderer> = new Map();\n  public polymerBonds: Map<number, PolymerBondRenderer> = new Map();\n  private needRecalculateMonomersEnumeration = false;\n  private needRecalculateMonomersBeginning = false;\n\n  constructor({ theme }) {\n    this.theme = theme;\n  }\n\n  public hoverDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.redrawHover();\n  }\n\n  public selectDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.drawSelection();\n  }\n\n  public moveDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.moveSelection();\n    drawingEntity.baseRenderer.drawSelection();\n  }\n\n  private markForReEnumeration() {\n    this.needRecalculateMonomersEnumeration = true;\n  }\n\n  public markForRecalculateBegin() {\n    this.needRecalculateMonomersBeginning = true;\n  }\n\n  public addMonomer(monomer: BaseMonomer, callback?: () => void) {\n    const [, MonomerRenderer] = monomerFactory(monomer.monomerItem);\n    const monomerRenderer = new MonomerRenderer(monomer);\n    this.monomers.set(monomer.id, monomerRenderer);\n    monomerRenderer.show(this.theme);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n    if (callback) {\n      callback();\n    }\n  }\n\n  public moveMonomer(monomer: BaseMonomer) {\n    monomer.renderer?.move();\n    monomer.renderer?.drawSelection();\n  }\n\n  public redrawDrawingEntity(drawingEntity: DrawingEntity) {\n    drawingEntity.baseRenderer?.remove();\n    drawingEntity.baseRenderer?.show(this.theme);\n  }\n\n  public deleteAllDrawingEntities() {\n    this.monomers.forEach((monomerRenderer) => {\n      monomerRenderer.remove();\n    });\n    this.polymerBonds.forEach((polymerBondRenderer) => {\n      polymerBondRenderer.remove();\n    });\n  }\n\n  public deleteMonomer(monomer: BaseMonomer) {\n    monomer.renderer?.remove();\n    this.monomers.delete(monomer.id);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n  }\n\n  public addPolymerBond(polymerBond: PolymerBond) {\n    const polymerBondRenderer = new PolymerBondRenderer(polymerBond);\n    this.polymerBonds.set(polymerBond.id, polymerBondRenderer);\n    polymerBondRenderer.show();\n    polymerBondRenderer.polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n  }\n\n  public movePolymerBond(polymerBond: PolymerBond) {\n    polymerBond.renderer?.moveStart();\n    polymerBond.renderer?.moveEnd();\n    polymerBond.renderer?.drawSelection();\n    // If we started bond from the specific AP, it needs to be redrawn to face the bond direction\n    if (polymerBond.firstMonomer.chosenFirstAttachmentPointForBond) {\n      polymerBond.firstMonomer.renderer?.redrawAttachmentPointsCoordinates();\n    }\n  }\n\n  public showPolymerBondInformation(polymerBond: PolymerBond) {\n    polymerBond.renderer?.redrawHover();\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    polymerBond.secondMonomer?.renderer?.redrawAttachmentPoints();\n    polymerBond.secondMonomer?.renderer?.redrawHover();\n  }\n\n  public deletePolymerBond(\n    polymerBond: PolymerBond,\n    recalculateEnumeration = true,\n    recalculateBeginning = true,\n  ) {\n    polymerBond.renderer?.remove();\n    polymerBond?.firstMonomer?.renderer?.redrawAttachmentPoints?.();\n    polymerBond?.secondMonomer?.renderer?.redrawAttachmentPoints?.();\n    this.polymerBonds.delete(polymerBond.id);\n    if (recalculateEnumeration) {\n      this.markForReEnumeration();\n    }\n    if (recalculateBeginning) {\n      this.markForRecalculateBegin();\n    }\n  }\n\n  private recalculatePeptideChainEnumeration(\n    peptideRenderer: PeptideRenderer,\n    _currentEnumeration = 1,\n  ) {\n    let currentEnumeration = _currentEnumeration;\n    const stack = [{ monomerRenderer: peptideRenderer }];\n\n    while (stack.length > 0) {\n      const stackItem = stack.pop();\n      assert(stackItem);\n      const { monomerRenderer } = stackItem;\n\n      monomerRenderer.setEnumeration(currentEnumeration);\n      monomerRenderer.redrawEnumeration();\n\n      const nextMonomer = getNextMonomerInChain(monomerRenderer.monomer);\n\n      if (!(nextMonomer instanceof Peptide)) {\n        return;\n      }\n\n      const isR2R1Connection = checkIsR2R1Connection(\n        monomerRenderer.monomer,\n        nextMonomer,\n      );\n\n      if (!isR2R1Connection) {\n        return;\n      }\n\n      assert(nextMonomer.renderer);\n\n      stack.push({ monomerRenderer: nextMonomer.renderer as PeptideRenderer });\n      currentEnumeration++;\n    }\n  }\n\n  private recalculateRnaChainEnumeration(\n    rnaComponentRenderer: BaseMonomerRenderer,\n    _currentEnumeration = 1,\n  ) {\n    let currentEnumeration = _currentEnumeration;\n    const stack = [{ monomerRenderer: rnaComponentRenderer }];\n\n    while (stack.length > 0) {\n      const stackItem = stack.pop();\n      assert(stackItem);\n      const { monomerRenderer } = stackItem;\n\n      if (monomerRenderer instanceof SugarRenderer) {\n        const rnaBaseMonomer = getRnaBaseFromSugar(\n          monomerRenderer.monomer as Sugar,\n        );\n        if (rnaBaseMonomer instanceof RNABase) {\n          rnaBaseMonomer.renderer?.setEnumeration(currentEnumeration);\n          rnaBaseMonomer.renderer?.redrawEnumeration();\n          currentEnumeration++;\n        }\n      }\n\n      const nextMonomer = getNextMonomerInChain(monomerRenderer.monomer);\n\n      if (\n        !(nextMonomer instanceof Sugar) &&\n        !(nextMonomer instanceof Phosphate)\n      ) {\n        return;\n      }\n\n      const isR2R1Connection = checkIsR2R1Connection(\n        monomerRenderer.monomer,\n        nextMonomer,\n      );\n\n      if (\n        !isR2R1Connection ||\n        !(nextMonomer.renderer instanceof BaseMonomerRenderer)\n      ) {\n        return;\n      }\n\n      stack.push({\n        monomerRenderer: nextMonomer.renderer,\n      });\n    }\n  }\n\n  private recalculatePeptideEnumeration(peptideRenderer: PeptideRenderer) {\n    if (!peptideRenderer.monomer.hasBonds) {\n      peptideRenderer.setEnumeration(null);\n      peptideRenderer.redrawEnumeration();\n    }\n\n    if (!isMonomerBeginningOfChain(peptideRenderer.monomer, [Peptide])) return;\n\n    this.recalculatePeptideChainEnumeration(peptideRenderer);\n  }\n\n  private recalculateRnaEnumeration(rnaComponentRenderer: BaseMonomerRenderer) {\n    if (\n      !isMonomerBeginningOfChain(rnaComponentRenderer.monomer, [\n        Phosphate,\n        Sugar,\n      ])\n    )\n      return;\n    this.recalculateRnaChainEnumeration(rnaComponentRenderer);\n  }\n\n  private recalculateMonomersEnumeration() {\n    this.monomers.forEach((monomerRenderer) => {\n      if (monomerRenderer instanceof PeptideRenderer) {\n        this.recalculatePeptideEnumeration(monomerRenderer as PeptideRenderer);\n      }\n      if (\n        monomerRenderer instanceof PhosphateRenderer ||\n        monomerRenderer instanceof SugarRenderer\n      ) {\n        this.recalculateRnaEnumeration(monomerRenderer as BaseMonomerRenderer);\n      }\n      if (\n        monomerRenderer instanceof RNABaseRenderer &&\n        !monomerRenderer.monomer.isAttachmentPointUsed(AttachmentPointName.R1)\n      ) {\n        monomerRenderer.setEnumeration(null);\n        monomerRenderer.redrawEnumeration();\n      }\n    });\n    this.needRecalculateMonomersEnumeration = false;\n  }\n\n  private isOnlyPartOfRnaChain(sugar: Sugar) {\n    const phosphate = getNextMonomerInChain(sugar);\n    const nextMonomerAfterPhospate = getNextMonomerInChain(phosphate);\n    return !sugar.attachmentPointsToBonds.R1 && !nextMonomerAfterPhospate;\n  }\n\n  private recalculateMonomersBeginning() {\n    this.monomers.forEach((monomerRenderer) => {\n      if (monomerRenderer instanceof PeptideRenderer) {\n        if (monomerRenderer.enumeration === 1) {\n          monomerRenderer.setBeginning(monomerRenderer.CHAIN_BEGINNING);\n        } else {\n          monomerRenderer.setBeginning(null);\n        }\n        monomerRenderer.reDrawChainBeginning();\n      }\n      if (monomerRenderer instanceof SugarRenderer) {\n        const rnaBaseMonomer = getRnaBaseFromSugar(\n          monomerRenderer.monomer as Sugar,\n        );\n        if (\n          rnaBaseMonomer instanceof RNABase &&\n          rnaBaseMonomer.renderer?.enumeration === 1 &&\n          !this.isOnlyPartOfRnaChain(monomerRenderer.monomer)\n        ) {\n          monomerRenderer.setBeginning(monomerRenderer.CHAIN_BEGINNING);\n        } else {\n          monomerRenderer.setBeginning(null);\n        }\n        monomerRenderer.reDrawChainBeginning();\n      }\n    });\n    this.needRecalculateMonomersBeginning = false;\n  }\n\n  public finishPolymerBondCreation(polymerBond: PolymerBond) {\n    assert(polymerBond.secondMonomer);\n\n    const polymerBondRenderer = new PolymerBondRenderer(polymerBond);\n    this.polymerBonds.set(polymerBond.id, polymerBondRenderer);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.drawSelection();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    polymerBond.secondMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.secondMonomer.renderer?.drawSelection();\n    polymerBond.secondMonomer.renderer?.redrawHover();\n\n    polymerBond.renderer?.show();\n  }\n\n  public cancelPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer?: BaseMonomer,\n  ) {\n    this.deletePolymerBond(polymerBond);\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.drawSelection();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    secondMonomer?.renderer?.redrawAttachmentPoints();\n    secondMonomer?.renderer?.drawSelection();\n    secondMonomer?.renderer?.redrawHover();\n  }\n\n  public hoverMonomer(monomer: BaseMonomer, needRedrawAttachmentPoints) {\n    this.hoverDrawingEntity(monomer as DrawingEntity);\n    if (needRedrawAttachmentPoints) {\n      monomer.renderer?.redrawAttachmentPoints();\n    }\n  }\n\n  public hoverAttachmentPoint(\n    monomer: BaseMonomer,\n    attachmentPointName: AttachmentPointName,\n  ) {\n    this.hoverDrawingEntity(monomer as DrawingEntity);\n    monomer.renderer?.hoverAttachmenPoint(attachmentPointName);\n    monomer.renderer?.updateAttachmentPoints();\n  }\n\n  public update(modelChanges?: Command) {\n    modelChanges?.execute(this);\n    this.runPostRenderMethods();\n    notifyRenderComplete();\n  }\n\n  public runPostRenderMethods() {\n    if (this.needRecalculateMonomersEnumeration) {\n      this.recalculateMonomersEnumeration();\n    }\n    if (this.needRecalculateMonomersBeginning) {\n      this.recalculateMonomersBeginning();\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { AttachmentPointName } from 'domain/types';\n\nexport class MonomerAddOperation implements Operation {\n  public monomer: BaseMonomer;\n  constructor(\n    public addMonomerChangeModel: (monomer?: BaseMonomer) => BaseMonomer,\n    public deleteMonomerChangeModel: (monomer: BaseMonomer) => void,\n    private callback?: () => void,\n  ) {\n    this.monomer = this.addMonomerChangeModel();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.monomer = this.addMonomerChangeModel(this.monomer);\n    renderersManager.addMonomer(this.monomer, this.callback);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    if (this.monomer) {\n      this.deleteMonomerChangeModel(this.monomer);\n      renderersManager.deleteMonomer(this.monomer);\n    }\n  }\n}\n\nexport class MonomerMoveOperation implements Operation {\n  public monomer: BaseMonomer;\n  constructor(\n    private monomerMoveModelChange: () => BaseMonomer,\n    private invertMonomerMoveModelChange: () => BaseMonomer,\n  ) {\n    this.monomer = this.monomerMoveModelChange();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.monomer = this.monomerMoveModelChange();\n    renderersManager.moveMonomer(this.monomer);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.monomer = this.invertMonomerMoveModelChange();\n    renderersManager.moveMonomer(this.monomer);\n  }\n}\n\nexport class MonomerHoverOperation implements Operation {\n  constructor(\n    private peptide: BaseMonomer,\n    private needRedrawAttachmentPoints: boolean,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverMonomer(\n      this.peptide,\n      this.needRedrawAttachmentPoints,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class AttachmentPointHoverOperation implements Operation {\n  constructor(\n    private peptide: BaseMonomer,\n    private attachmentPointName: AttachmentPointName,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverAttachmentPoint(\n      this.peptide,\n      this.attachmentPointName,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class MonomerDeleteOperation implements Operation {\n  monomer: BaseMonomer;\n  constructor(\n    monomer: BaseMonomer,\n    public addMonomerChangeModel: (monomer: BaseMonomer) => BaseMonomer,\n    public deleteMonomerChangeModel: (monomer: BaseMonomer) => void,\n    private callback?: () => void,\n  ) {\n    this.monomer = monomer;\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.deleteMonomerChangeModel(this.monomer);\n    renderersManager.deleteMonomer(this.monomer);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.monomer = this.addMonomerChangeModel(this.monomer);\n    renderersManager.addMonomer(this.monomer, this.callback);\n  }\n}\n","import { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\n\nexport class DrawingEntityHoverOperation implements Operation {\n  constructor(private drawingEntity: DrawingEntity) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverDrawingEntity(this.drawingEntity);\n  }\n\n  public invert() {}\n}\n\nexport class DrawingEntitySelectOperation implements Operation {\n  constructor(private drawingEntity: DrawingEntity) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.selectDrawingEntity(this.drawingEntity);\n  }\n\n  public invert() {}\n}\nexport class DrawingEntityMoveOperation implements Operation {\n  private wasInverted = false;\n  constructor(\n    private moveDrawingEntityChangeModel: () => void,\n    private invertMoveDrawingEntityChangeModel: () => void,\n    private redoDrawingEntityChangeModel: () => void,\n    private drawingEntity: DrawingEntity,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    this.wasInverted\n      ? this.redoDrawingEntityChangeModel()\n      : this.moveDrawingEntityChangeModel();\n    renderersManager.moveDrawingEntity(this.drawingEntity);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.invertMoveDrawingEntityChangeModel();\n    renderersManager.moveDrawingEntity(this.drawingEntity);\n    this.wasInverted = true;\n  }\n}\nexport class DrawingEntityRedrawOperation implements Operation {\n  constructor(\n    private drawingEntityRedrawModelChange: () => DrawingEntity,\n    private invertDrawingEntityRedrawModelChange: () => DrawingEntity,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    const drawingEntity = this.drawingEntityRedrawModelChange();\n    renderersManager.redrawDrawingEntity(drawingEntity);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    const drawingEntity = this.invertDrawingEntityRedrawModelChange();\n    renderersManager.redrawDrawingEntity(drawingEntity);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  InChIKey = 'chemical/x-inchi-key',\n  CDX = 'chemical/x-cdx',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket',\n  UNKNOWN = 'chemical/x-unknown',\n  SDF = 'chemical/x-sdf',\n  FASTA = 'chemical/x-fasta',\n  SEQUENCE = 'chemical/x-sequence',\n}\n\nexport interface WithStruct {\n  struct: string;\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType;\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType;\n}\nexport interface WithInputFormat {\n  input_format?: ChemicalMimeType;\n}\n\nexport interface WithSelection {\n  selected?: Array<number>;\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence';\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>;\n}\n\nexport interface CheckResult {\n  [key: string]: string;\n}\n\nexport interface ConvertData\n  extends WithStruct,\n    WithOutputFormat,\n    WithInputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport interface ExplicitHydrogensData extends WithStruct, WithOutputFormat {\n  mode?: 'auto' | 'fold' | 'unfold';\n}\n\nexport interface ExplicitHydrogensResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition';\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>;\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>;\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear';\n\nexport type AutoMapOptions = 'Discard' | 'Keep' | 'Alter' | 'Clear';\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode;\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string;\n  imagoVersions: Array<string>;\n  isAvailable: boolean;\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined;\n}\n\nexport type OutputFormatType = 'png' | 'svg';\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType;\n  backgroundColor?: string;\n  bondThickness: number;\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>;\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions,\n  ) => Promise<ConvertResult>;\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions,\n  ) => Promise<LayoutResult>;\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions,\n  ) => Promise<CleanResult>;\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions,\n  ) => Promise<AromatizeResult>;\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions,\n  ) => Promise<DearomatizeResult>;\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions,\n  ) => Promise<CalculateCipResult>;\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions,\n  ) => Promise<AutomapResult>;\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions,\n  ) => Promise<CheckResult>;\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions,\n  ) => Promise<CalculateResult>;\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>;\n  getInChIKey: (struct: string) => Promise<string>;\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions,\n  ) => Promise<string>;\n  toggleExplicitHydrogens: (\n    data: ExplicitHydrogensData,\n    options?: StructServiceOptions,\n  ) => Promise<ExplicitHydrogensResult>;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services';\n\nexport class SupportedFormatProperties {\n  name: string;\n  mime: ChemicalMimeType;\n  extensions: string[];\n  supportsCoords?: boolean;\n  options?: any;\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any,\n  ) {\n    this.name = name;\n    this.mime = mime;\n    this.extensions = extensions;\n    this.supportsCoords = supportsCoords || false;\n    this.options = options || {};\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services';\nimport { SupportedFormat } from './structFormatter.types';\nimport { SupportedFormatProperties } from './supportedFormatProperties';\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties;\n};\n\nconst formatProperties: FormatPropertiesMap = {\n  molAuto: new SupportedFormatProperties(\n    // TODO: is it a valid name?\n    'MDL Molfile Auto Format detect',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': 'auto' },\n  ),\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles'],\n    true,\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles'],\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts'],\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi',\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi'],\n  ),\n  inChIKey: new SupportedFormatProperties(\n    'InChIKey',\n    ChemicalMimeType.InChIKey,\n    ['.inchikey'],\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true,\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket',\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true,\n  ),\n  cdx: new SupportedFormatProperties(\n    'Base64 CDX',\n    ChemicalMimeType.CDX,\n    ['.b64cdx'],\n    true,\n  ),\n  binaryCdx: new SupportedFormatProperties(\n    'CDX',\n    ChemicalMimeType.CDX,\n    ['.cdx'],\n    true,\n  ),\n  sdf: new SupportedFormatProperties(\n    'SDF V2000',\n    ChemicalMimeType.SDF,\n    ['.sdf'],\n    true,\n  ),\n  sdfV3000: new SupportedFormatProperties(\n    'SDF V3000',\n    ChemicalMimeType.SDF,\n    ['.sdf'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  fasta: new SupportedFormatProperties(\n    'FASTA',\n    ChemicalMimeType.FASTA,\n    ['.fasta'],\n    true,\n  ),\n  sequence: new SupportedFormatProperties(\n    'SEQUENCE',\n    ChemicalMimeType.SEQUENCE,\n    ['.seq'],\n    false,\n    {},\n  ),\n  unknown: new SupportedFormatProperties(\n    'Unknown',\n    ChemicalMimeType.UNKNOWN,\n    ['.'],\n    true,\n  ),\n};\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' },\n};\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format];\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format];\n}\n\nfunction getFormatMimeTypeByFileName(fileName: string) {\n  const fileExtension = '.' + fileName.split('.').pop();\n  const format = Object.values(formatProperties).find((properties) => {\n    return properties.extensions.includes(fileExtension);\n  });\n  return format?.mime;\n}\n\nexport {\n  formatProperties,\n  getPropertiesByFormat,\n  getPropertiesByImgFormat,\n  getFormatMimeTypeByFileName,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { StructServiceOptions } from 'domain/services';\nimport { EditorSelection } from 'application/editor';\n\nexport interface StructFormatter {\n  getStructureFromStructAsync: (\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n    selection?: EditorSelection,\n  ) => Promise<string>;\n  getStructureFromStringAsync: (stringifiedStruct: string) => Promise<Struct>;\n  parseMacromoleculeString?: (stringifiedStruct: string) => void;\n}\n\nexport enum SupportedFormat {\n  mol = 'mol',\n  molV3000 = 'molV3000',\n  molAuto = 'molAuto',\n  rxn = 'rxn',\n  rxnV3000 = 'rxnV3000',\n  smiles = 'smiles',\n  smilesExt = 'smilesExt',\n  smarts = 'smarts',\n  inChI = 'inChI',\n  inChIAuxInfo = 'inChIAuxInfo',\n  inChIKey = 'inChIKey',\n  cml = 'cml',\n  ket = 'ket',\n  cdxml = 'cdxml',\n  cdx = 'cdx',\n  binaryCdx = 'binaryCdx',\n  sdf = 'sdf',\n  sdfV3000 = 'sdfV3000',\n  fasta = 'fasta',\n  sequence = 'sequence',\n  unknown = 'unknown',\n}\n\nexport type FormatterFactoryOptions = Partial<\n  MolSerializerOptions & StructServiceOptions\n>;\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Axis, Axises, Struct } from 'domain/entities';\nimport { cloneDeepWith, cloneDeep } from 'lodash';\nimport { EditorSelection } from 'application/editor';\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value);\n    clonedValue.y = -clonedValue.y;\n    return clonedValue;\n  }\n};\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer);\n\nexport const setMonomerTemplatePrefix = (templateName: string) =>\n  `monomerTemplate-${templateName}`;\nexport const setMonomerPrefix = (monomerId: number) => `monomer${monomerId}`;\n\nexport const getKetRef = (entityId: string) => {\n  return { $ref: entityId };\n};\n\nconst rotateCoordAxisBy180Degrees = (position: Vec2, axis: Axises): Vec2 => {\n  const rotatedPosition = {\n    x: position.x,\n    y: position.y,\n  };\n\n  rotatedPosition[axis] = -rotatedPosition[axis];\n\n  return new Vec2(rotatedPosition.x, rotatedPosition.y);\n};\n\n/**\n *\n * System coordinates for browser and for chemistry files format (mol, ket, etc.) area are different.\n * It needs to rotate them by 180 degrees in y-axis.\n *\n * @param position - coordinates of the structure\n *\n */\nexport const switchIntoChemistryCoordSystem = (position: Vec2) => {\n  return rotateCoordAxisBy180Degrees(position, Axis.y);\n};\n\nexport const populateStructWithSelection = (\n  populatedStruct: Struct,\n  selection?: EditorSelection,\n) => {\n  if (!selection) {\n    return populatedStruct;\n  }\n  Object.keys(selection).forEach((entity) => {\n    const selectedEntities = selection[entity];\n    populatedStruct[entity]?.forEach((value, key) => {\n      if (typeof value.setInitiallySelected === 'function') {\n        value.setInitiallySelected(selectedEntities.includes(key) || undefined);\n      }\n    });\n  });\n  return populatedStruct;\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data),\n    selected: arrowNode.selected,\n  };\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center;\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data,\n    selected: plusNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities';\nimport { ifDef } from 'utilities';\n\nexport function headerToKet(struct: Struct): any {\n  const header = {};\n\n  ifDef(header, 'moleculeName', struct.name, '');\n  ifDef(header, 'creatorProgram', null, '');\n  ifDef(header, 'comment', null, '');\n\n  return Object.keys(header).length !== 0 ? header : null;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SGroup,\n  Struct,\n  SGroupAttachmentPoint,\n  AtomQueryProperties,\n  BaseMonomer,\n  Vec2,\n} from 'domain/entities';\nimport { switchIntoChemistryCoordSystem } from 'domain/serializers/ket/helpers';\n\nimport { ifDef } from 'utilities';\nimport { convertAttachmentPointNumberToLabel } from 'domain/helpers/attachmentPointCalculations';\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = [];\n  let rgi;\n  let val;\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1;\n      res.push(val); // push the string\n    }\n  }\n  return res;\n}\n\nexport function moleculeToKet(struct: Struct, monomer?: BaseMonomer): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      // For the monomers we need to serialize leaving groups as usual atom label like H, O, etc\n      if (atom.label === 'R#' && !monomer) return rglabelToKet(atom);\n      return atomToKet(atom, monomer);\n    }),\n  };\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet);\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup),\n    );\n  }\n\n  const fragment = struct.frags.get(0);\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null);\n    if (fragment.properties) {\n      body.properties = fragment.properties;\n    }\n  }\n  return {\n    type: 'molecule',\n    ...body,\n  };\n}\n\nfunction atomToKet(source, monomer?: BaseMonomer) {\n  const result: { queryProperties?: AtomQueryProperties; type?: 'atom-list' } =\n    {};\n\n  if (source.label !== 'L#') {\n    ifDef(\n      result,\n      'label',\n      source.label === 'R#' && monomer\n        ? monomer.monomerItem.props.MonomerCaps?.[\n            convertAttachmentPointNumberToLabel(source.rglabel)\n          ]\n        : source.label,\n    );\n    // reaction\n    ifDef(result, 'mapping', parseInt(source.aam), 0);\n  } else if (source.atomList) {\n    result.type = 'atom-list';\n    ifDef(result, 'elements', source.atomList.labelList());\n    ifDef(result, 'notList', source.atomList.notList, false);\n  }\n\n  ifDef(result, 'alias', source.alias);\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(source.pp.x, source.pp.y, source.pp.z),\n  );\n  ifDef(result, 'location', [position.x, position.y, position.z]);\n  ifDef(result, 'charge', source.charge);\n  ifDef(result, 'explicitValence', source.explicitValence, -1);\n  ifDef(result, 'isotope', source.isotope);\n  ifDef(result, 'radical', source.radical, 0);\n  ifDef(result, 'attachmentPoints', source.attachmentPoints, 0);\n  ifDef(result, 'cip', source.cip, '');\n  ifDef(result, 'selected', source.getInitiallySelected());\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null);\n  ifDef(result, 'stereoParity', source.stereoCare, 0);\n  ifDef(result, 'weight', source.weight, 0);\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0);\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0);\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false);\n  ifDef(result, 'hCount', source.hCount, 0);\n  // query properties\n  if (\n    Object.values(source.queryProperties).some((property) => property !== null)\n  ) {\n    result.queryProperties = {};\n    Object.keys(source.queryProperties).forEach((name) => {\n      ifDef(result.queryProperties, name, source.queryProperties[name]);\n    });\n  }\n  ifDef(result, 'invRet', source.invRet, 0);\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false);\n  ifDef(result, 'implicitHCount', source.implicitHCount);\n  return result;\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label',\n  };\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(source.pp.x, source.pp.y, source.pp.z),\n  );\n  ifDef(result, 'location', [position.x, position.y, position.z]);\n  ifDef(result, 'attachmentPoints', source.attachmentPoints, 0);\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`,\n  );\n  ifDef(result, '$refs', refsToRGroups);\n  ifDef(result, 'selected', source.getInitiallySelected());\n\n  return result;\n}\n\nfunction bondToKet(source) {\n  const result = {};\n  if (source.customQuery) {\n    ifDef(result, 'atoms', [source.begin, source.end]);\n    ifDef(result, 'customQuery', source.customQuery);\n  } else {\n    ifDef(result, 'type', source.type);\n    ifDef(result, 'atoms', [source.begin, source.end]);\n    ifDef(result, 'stereo', source.stereo, 0);\n    ifDef(result, 'topology', source.topology, 0);\n    ifDef(result, 'center', source.reactingCenterStatus, 0);\n    ifDef(result, 'cip', source.cip, '');\n  }\n  ifDef(result, 'selected', source.getInitiallySelected());\n  return result;\n}\n\nfunction sgroupToKet(struct: Struct, source: SGroup) {\n  const result = {};\n\n  ifDef(result, 'type', source.type);\n  ifDef(result, 'atoms', source.atoms);\n\n  switch (source.type) {\n    case 'GEN':\n      break;\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1);\n      break;\n    }\n    case 'queryComponent': {\n      break;\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n');\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht',\n      );\n      break;\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '');\n      ifDef(result, 'expanded', source.data.expanded);\n      ifDef(result, 'id', source.id);\n      ifDef(\n        result,\n        'attachmentPoints',\n        source.getAttachmentPoints().map(sgroupAttachmentPointToKet),\n        [],\n      );\n      break;\n    }\n    case 'DAT': {\n      const data = source.data;\n      ifDef(result, 'placement', data.absolute, true);\n      ifDef(result, 'display', data.attached, false);\n      ifDef(result, 'context', data.context);\n      ifDef(result, 'fieldName', data.fieldName);\n      ifDef(result, 'fieldData', data.fieldValue);\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source));\n      break;\n    }\n    default:\n      break;\n  }\n\n  return result;\n}\n\nfunction sgroupAttachmentPointToKet(source: SGroupAttachmentPoint) {\n  const result = {};\n\n  ifDef(result, 'attachmentAtom', source.atomId);\n  ifDef(result, 'leavingAtom', source.leaveAtomId);\n  ifDef(result, 'attachmentId', source.attachmentId);\n\n  return result;\n}\n","import { Struct } from 'domain/entities';\nimport { atomToStruct, bondToStruct } from './moleculeToStruct';\nimport { KetItem } from './types';\n\nexport function mergeFragmentsToStruct(\n  ketItem: KetItem,\n  struct: Struct,\n): Struct {\n  let atomsOffset = 0;\n  if (ketItem.fragments) {\n    ketItem.fragments.forEach((fragment) => {\n      fragment.atoms?.forEach((atom) => struct.atoms.add(atomToStruct(atom)));\n      fragment.bonds?.forEach((bond) =>\n        struct.bonds.add(bondToStruct(bond, atomsOffset)),\n      );\n      atomsOffset += fragment.atoms?.length || 0;\n    });\n  }\n  return struct;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  SGroup,\n  Struct,\n  SGroupAttachmentPoint,\n  RGroupAttachmentPoint,\n  AttachmentPoints,\n  AtomQueryProperties,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport { ifDef } from 'utilities';\nimport { mergeFragmentsToStruct } from './mergeFragmentsToStruct';\nimport { initiallySelectedType } from 'domain/entities/BaseMicromoleculeEntity';\n\nexport function toRlabel(values) {\n  let res = 0;\n  values.forEach((val) => {\n    const rgi = val - 1;\n    res |= 1 << rgi;\n  });\n  return res;\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = mergeFragmentsToStruct(ketItem, new Struct());\n\n  if (ketItem.atoms) {\n    ketItem.atoms.forEach((atom) => {\n      let atomId: number | null = null;\n      if (atom.type === 'rg-label') {\n        atomId = struct.atoms.add(rglabelToStruct(atom));\n      }\n      if (!atom.type || atom.type === 'atom-list') {\n        atomId = struct.atoms.add(atomToStruct(atom));\n      }\n      if (atomId !== null) {\n        addRGroupAttachmentPointsToStruct(\n          struct,\n          atomId,\n          atom.attachmentPoints,\n          atom.selected,\n        );\n      }\n    });\n  }\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)));\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroupData) => {\n      const sgroup = sgroupToStruct(sgroupData);\n      const id = struct.sgroups.add(sgroup);\n      sgroup.id = id;\n    });\n  }\n\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.markFragments(ketItem.properties);\n  struct.bindSGroupsToFunctionalGroups();\n\n  return struct;\n}\n\nexport function atomToStruct(source) {\n  const params: any = {};\n\n  const queryAttribute: Array<keyof AtomQueryProperties> = [\n    'aromaticity',\n    'ringMembership',\n    'connectivity',\n    'ringSize',\n    'chirality',\n    'customQuery',\n  ];\n  if (source.type === 'atom-list') {\n    params.label = 'L#';\n    const ids = source.elements\n      .map((el) => Elements.get(el)?.number)\n      .filter((id) => id);\n    ifDef(params, 'atomList', {\n      ids,\n      notList: source.notList,\n    });\n  } else {\n    ifDef(params, 'label', source.label);\n    // reaction\n    ifDef(params, 'aam', source.mapping);\n  }\n  ifDef(params, 'alias', source.alias);\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0,\n  });\n  ifDef(params, 'charge', source.charge);\n  ifDef(params, 'explicitValence', source.explicitValence);\n  ifDef(params, 'isotope', source.isotope);\n  ifDef(params, 'radical', source.radical);\n  ifDef(params, 'cip', source.cip);\n  ifDef(params, 'attachmentPoints', source.attachmentPoints);\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel);\n  ifDef(params, 'stereoParity', source.stereoParity);\n  ifDef(params, 'weight', source.weight);\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount);\n  ifDef(params, 'substitutionCount', source.substitutionCount);\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)));\n  ifDef(params, 'hCount', source.hCount);\n  if (\n    source.queryProperties &&\n    Object.values(source.queryProperties).some((property) => property !== null)\n  ) {\n    params.queryProperties = {};\n    queryAttribute.forEach((attributeName) => {\n      ifDef(\n        params.queryProperties,\n        attributeName,\n        source.queryProperties[attributeName],\n      );\n    });\n  }\n\n  // reaction\n  ifDef(params, 'invRet', source.invRet);\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)));\n  // implicit hydrogens\n  ifDef(params, 'implicitHCount', source.implicitHCount);\n\n  const newAtom = new Atom(params);\n  newAtom.setInitiallySelected(source.selected);\n  return newAtom;\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {};\n  params.label = 'R#';\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0,\n  });\n  ifDef(params, 'attachmentPoints', source.attachmentPoints);\n  const rglabel = toRlabel(\n    source.$refs?.map((el) => parseInt(el.slice(3))) ?? [],\n  );\n  ifDef(params, 'rglabel', rglabel);\n  const newAtom = new Atom(params);\n  newAtom.setInitiallySelected(source.selected);\n  return newAtom;\n}\n\nfunction addRGroupAttachmentPointsToStruct(\n  struct: Struct,\n  attachedAtomId: number,\n  attachmentPoints: AttachmentPoints | null,\n  initiallySelected?: initiallySelectedType,\n) {\n  const rgroupAttachmentPoints: RGroupAttachmentPoint[] = [];\n  if (attachmentPoints === AttachmentPoints.FirstSideOnly) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'primary', initiallySelected),\n    );\n  } else if (attachmentPoints === AttachmentPoints.SecondSideOnly) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'secondary', initiallySelected),\n    );\n  } else if (attachmentPoints === AttachmentPoints.BothSides) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'primary', initiallySelected),\n    );\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'secondary', initiallySelected),\n    );\n  }\n  rgroupAttachmentPoints.forEach((rgroupAttachmentPoint) => {\n    struct.rgroupAttachmentPoints.add(rgroupAttachmentPoint);\n  });\n}\n\n/**\n *\n * @param source\n * @param atomOffset – if bond is a part of a fragment, then we need to consider atoms from previous fragment.\n * source.atoms contains numbers related to fragment, but we need to count atoms related to struct. Example:\n * fragments: [{\n *   atoms: [...],\n *   bonds: [...], this bonds point to atoms in the first fragment\n * }, {\n *   atoms: [...],\n *   bonds: [...], this bonds point to atoms in the second fragment\n * }]\n * When we add bonds from second fragment we need to count atoms from fragments[0].atoms.length + 1, not from zero\n * @returns newly created Bond\n */\nexport function bondToStruct(source, atomOffset = 0) {\n  const params: any = {};\n\n  ifDef(params, 'type', source.type);\n  ifDef(params, 'topology', source.topology);\n  ifDef(params, 'reactingCenterStatus', source.center);\n  ifDef(params, 'stereo', source.stereo);\n  ifDef(params, 'cip', source.cip);\n  ifDef(params, 'customQuery', source.customQuery);\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0] + atomOffset);\n  ifDef(params, 'end', source.atoms[1] + atomOffset);\n  ifDef(params, 'initiallySelected', source.selected);\n\n  const newBond = new Bond(params);\n  newBond.setInitiallySelected(source.selected);\n  return newBond;\n}\n\ntype KetAttachmentPoint = {\n  attachmentAtom: number;\n  leavingAtom?: number;\n  attachmentId?: string;\n};\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type);\n  ifDef(sgroup, 'atoms', source.atoms);\n  switch (source.type) {\n    case 'GEN':\n      break;\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul);\n      break;\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript);\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase());\n      break;\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name);\n      ifDef(sgroup.data, 'expanded', source.expanded);\n      ifDef(sgroup, 'id', source.id);\n      source.attachmentPoints?.forEach(\n        (sourceAttachmentPoint: KetAttachmentPoint) => {\n          sgroup.addAttachmentPoint(\n            sgroupAttachmentPointToStruct(sourceAttachmentPoint),\n          );\n        },\n      );\n      break;\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement);\n      ifDef(sgroup.data, 'attached', source.display);\n      ifDef(sgroup.data, 'context', source.context);\n      ifDef(sgroup.data, 'fieldName', source.fieldName);\n      ifDef(sgroup.data, 'fieldValue', source.fieldData);\n      break;\n    }\n    default:\n      break;\n  }\n  return sgroup;\n}\n\nfunction sgroupAttachmentPointToStruct(\n  source: KetAttachmentPoint,\n): SGroupAttachmentPoint {\n  const atomId = source.attachmentAtom;\n  const leavingAtomId = source.leavingAtom;\n  const attachmentId = source.attachmentId;\n  return new SGroupAttachmentPoint(atomId, leavingAtomId, attachmentId);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, Pool, SGroup, Struct, Vec2 } from 'domain/entities';\n\ntype KetNode = {\n  type: string;\n  fragment?: Struct;\n  center: Vec2;\n  data?: any;\n  selected?: boolean;\n};\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: KetNode[] = [];\n\n  const rgFrags = new Set(); // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid));\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile(),\n    );\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup },\n    });\n  }\n\n  const filteredFragmentIds = Array.from(struct.frags.keys()).filter(\n    (fid) => !rgFrags.has(fid),\n  );\n  addMolecules(ketNodes, filteredFragmentIds, struct);\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {},\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values());\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined),\n      );\n      const filteredSGroupsMap = new Pool<SGroup>();\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg);\n      });\n      ketNode.fragment.sgroups = filteredSGroupsMap;\n    }\n  });\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes;\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet);\n  return Vec2.centre(bb.min, bb.max);\n}\n\n/**\n * Merge fragments which are in the same S-Groups to one fragment(molecule)\n * and add new fragments(molecules) to KetNodes\n * See: https://github.com/epam/ketcher/issues/2142\n */\nfunction addMolecules(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct,\n) {\n  const sGroupFragmentsMap = generateSGroupFragmentsMap(\n    ketNodes,\n    fragmentIds,\n    struct,\n  );\n  const mergedFragments = Pile.unionIntersections(\n    Array.from(sGroupFragmentsMap.values()),\n  );\n\n  mergedFragments.forEach((fragments) => {\n    let atomSet = new Pile<number>();\n    fragments.forEach((fragmentId) => {\n      atomSet = atomSet.union(struct.getFragmentIds(fragmentId));\n    });\n    ketNodes.push({\n      type: 'molecule',\n      fragment: struct.clone(atomSet),\n      center: getFragmentCenter(struct, atomSet),\n    });\n  });\n}\n\n/**\n * @example Give `fragmentIds` is `[0, 1]`,\n * and S-Group0 includes fragment0 and fragment1,\n * and S-Group1 includes fragment1,\n * then return value should be\n * ```\n * {\n *   0: [0, 1],\n *   1: [1]\n * }\n * ```\n */\nfunction generateSGroupFragmentsMap(\n  ketNodes: KetNode[],\n  fragmentIds: number[],\n  struct: Struct,\n) {\n  const sGroupFragmentsMap = new Map<number, Pile<number>>();\n\n  fragmentIds.forEach((fragmentId) => {\n    const atomsInFragment = struct.getFragmentIds(fragmentId);\n\n    let hasAtomInSGroup = false;\n    atomsInFragment.forEach((atomId) => {\n      struct.atoms.get(atomId)?.sgs.forEach((sGroupId) => {\n        hasAtomInSGroup = true;\n        const fragmentSet = sGroupFragmentsMap.get(sGroupId);\n        if (fragmentSet) {\n          fragmentSet.add(fragmentId);\n        } else {\n          sGroupFragmentsMap.set(sGroupId, new Pile([fragmentId]));\n        }\n      });\n    });\n\n    if (!hasAtomInSGroup) {\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(atomsInFragment),\n        center: getFragmentCenter(struct, atomsInFragment),\n      });\n    }\n  });\n\n  return sGroupFragmentsMap;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities';\nimport { ifDef } from 'utilities';\nimport { moleculeToKet } from './moleculeToKet';\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct),\n  };\n\n  return {\n    ...body,\n    type: 'rgroup',\n  };\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {};\n\n  ifDef(result, 'number', rgnumber);\n  ifDef(result, 'range', rglogic.range, '');\n  ifDef(result, 'resth', rglogic.resth, false);\n  ifDef(result, 'ifthen', rglogic.ifthen, 0);\n\n  return result;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities';\n\nimport { ifDef } from 'utilities';\nimport { moleculeToStruct } from './moleculeToStruct';\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem);\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic);\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key);\n  });\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup);\n  return struct;\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {};\n  ifDef(params, 'range', rglogic.range);\n  ifDef(params, 'resth', rglogic.resth);\n  ifDef(params, 'ifthen', rglogic.ifthen);\n\n  return new RGroup(params);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    const arrow = new RxnArrow(getNodeWithInvertedYCoord(ketItem.data));\n    arrow.setInitiallySelected(ketItem.selected);\n    struct.rxnArrows.add(arrow);\n  } else {\n    const plus = new RxnPlus({\n      pp: {\n        x: ketItem.location[0],\n        y: -ketItem.location[1],\n        z: ketItem.location[2],\n      },\n    });\n    plus.setInitiallySelected(ketItem.selected);\n    struct.rxnPluses.add(plus);\n  }\n  return struct;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data),\n    selected: simpleObjectNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data;\n  const simpleObject = new SimpleObject(getNodeWithInvertedYCoord(object));\n  simpleObject.setInitiallySelected(ketItem.selected);\n  struct.simpleObjects.add(simpleObject);\n  return struct;\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0]);\n  const pos0 = ketItem.data.pos[0];\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius),\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius),\n      },\n    ],\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data),\n    selected: textNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const text = new Text(getNodeWithInvertedYCoord(ketItem.data));\n  text.setInitiallySelected(ketItem.selected);\n  struct.texts.add(text);\n  return struct;\n}\n","import {\n  IKetMonomerNode,\n  IKetMonomerTemplate,\n} from 'application/formatters/types/ket';\nimport { Struct, Vec2 } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { switchIntoChemistryCoordSystem } from 'domain/serializers/ket/helpers';\n\nexport function monomerToDrawingEntity(\n  node: IKetMonomerNode,\n  template: IKetMonomerTemplate,\n  struct: Struct,\n  drawingEntitiesManager: DrawingEntitiesManager,\n) {\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(node.position.x, node.position.y),\n  );\n  return drawingEntitiesManager.addMonomer(\n    {\n      struct,\n      label: template.alias || template.id,\n      colorScheme: undefined,\n      favorite: false,\n      props: {\n        id: template.id,\n        Name:\n          template.fullName || template.name || template.alias || template.id,\n        MonomerNaturalAnalogCode: template.naturalAnalogShort,\n        MonomerName:\n          template.fullName || template.name || template.alias || template.id,\n        MonomerFullName: template.fullName,\n        MonomerType: template.classHELM,\n        MonomerClass: template.class,\n        MonomerCaps: {},\n      },\n      attachmentPoints: template.attachmentPoints,\n      seqId: node.seqid,\n    },\n    position,\n  );\n}\n","import { IKetConnection } from 'application/formatters/types/ket';\nimport { Command } from 'domain/entities/Command';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport assert from 'assert';\n\nexport function polymerBondToDrawingEntity(\n  connection: IKetConnection,\n  drawingEntitiesManager: DrawingEntitiesManager,\n  monomerIdsMap: { [monomerIdFromKet: string]: number },\n) {\n  const command = new Command();\n  // TODO remove assertion when group connections will be supported on indigo side\n  assert(connection.endpoint1.monomerId);\n  assert(connection.endpoint2.monomerId);\n  const firstMonomer = drawingEntitiesManager.monomers.get(\n    Number(monomerIdsMap[connection.endpoint1.monomerId]),\n  );\n  const secondMonomer = drawingEntitiesManager.monomers.get(\n    Number(monomerIdsMap[connection.endpoint2.monomerId]),\n  );\n\n  assert(firstMonomer);\n  assert(secondMonomer);\n  assert(connection.endpoint1.attachmentPointId);\n  assert(connection.endpoint2.attachmentPointId);\n  command.merge(\n    drawingEntitiesManager.createPolymerBond(\n      firstMonomer,\n      secondMonomer,\n      connection.endpoint1.attachmentPointId,\n      connection.endpoint2.attachmentPointId,\n    ),\n  );\n  return command;\n}\n","import t from\"querystring\";var e=/https?|ftp|gopher|file/;function o(o){\"string\"==typeof o&&(o=g(o));var r=function(t,e,o){var r=t.auth,a=t.hostname,s=t.protocol||\"\",p=t.pathname||\"\",n=t.hash||\"\",h=t.query||\"\",c=!1;r=r?encodeURIComponent(r).replace(/%3A/i,\":\")+\"@\":\"\",t.host?c=r+t.host:a&&(c=r+(~a.indexOf(\":\")?\"[\"+a+\"]\":a),t.port&&(c+=\":\"+t.port)),h&&\"object\"==typeof h&&(h=e.encode(h));var l=t.search||h&&\"?\"+h||\"\";return s&&\":\"!==s.substr(-1)&&(s+=\":\"),t.slashes||(!s||o.test(s))&&!1!==c?(c=\"//\"+(c||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):c||(c=\"\"),n&&\"#\"!==n[0]&&(n=\"#\"+n),l&&\"?\"!==l[0]&&(l=\"?\"+l),{protocol:s,host:c,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:l=l.replace(\"#\",\"%23\"),hash:n}}(o,t,e);return\"\"+r.protocol+r.host+r.pathname+r.search+r.hash}var r=\"http://\",a=\"w.w\",s=r+a,p=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,n=/https?|ftp|gopher|file/;function h(t,e){var a=\"string\"==typeof t?g(t):t;t=\"object\"==typeof t?o(t):t;var h=g(e),c=\"\";a.protocol&&!a.slashes&&(c=a.protocol,t=t.replace(a.protocol,\"\"),c+=\"/\"===e[0]||\"/\"===t[0]?\"/\":\"\"),c&&h.protocol&&(c=\"\",h.slashes||(c=h.protocol,e=e.replace(h.protocol,\"\")));var l=t.match(p);l&&!h.protocol&&(t=t.substr((c=l[1]+(l[2]||\"\")).length),/^\\/\\/[^/]/.test(e)&&(c=c.slice(0,-1)));var i=new URL(t,s+\"/\"),u=new URL(e,i).toString().replace(s,\"\"),f=h.protocol||a.protocol;return f+=a.slashes||h.slashes?\"//\":\"\",!c&&f?u=u.replace(r,f):c&&(u=u.replace(r,\"\")),n.test(u)||~e.indexOf(\".\")||\"/\"===t.slice(-1)||\"/\"===e.slice(-1)||\"/\"!==u.slice(-1)||(u=u.slice(0,-1)),c&&(u=c+(\"/\"===u[0]?u.substr(1):u)),u}function c(t,e){return g(h(t,e))}function l(){}l.prototype.parse=g,l.prototype.format=o,l.prototype.resolve=h,l.prototype.resolveObject=h;var i=/^https?|ftp|gopher|file/,u=/^(.*?)([#?].*)/,f=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,m=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,v=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function g(e,r,p){if(void 0===r&&(r=!1),void 0===p&&(p=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var n=(e=e.trim()).match(u);e=n?n[1].replace(/\\\\/g,\"/\")+n[2]:e.replace(/\\\\/g,\"/\"),v.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var h=!/(^javascript)/.test(e)&&e.match(f),c=m.test(e),g=\"\";h&&(i.test(h[1])||(g=h[1].toLowerCase(),e=\"\"+h[2]+h[3]),h[2]||(c=!1,i.test(h[1])?(g=h[1],e=\"\"+h[3]):e=\"//\"+h[3]),3!==h[2].length&&1!==h[2].length||(g=h[1],e=\"/\"+h[3]));var d,y=(n?n[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),b=y&&y[1],C=new l,U=\"\",w=\"\";try{d=new URL(e)}catch(t){U=t,g||p||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(w=\"/\",e=e.substr(1));try{d=new URL(e,s)}catch(t){return C.protocol=g,C.href=g,C}}C.slashes=c&&!w,C.host=d.host===a?\"\":d.host,C.hostname=d.hostname===a?\"\":d.hostname.replace(/(\\[|\\])/g,\"\"),C.protocol=U?g||null:d.protocol,C.search=d.search.replace(/\\\\/g,\"%5C\"),C.hash=d.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!C.search&&~j[0].indexOf(\"?\")&&(C.search=\"?\"),C.hash||\"\"!==j[1]||(C.hash=\"#\"),C.query=r?t.decode(d.search.substr(1)):C.search.substr(1),C.pathname=w+(h?function(t){return t.replace(/['^|`]/g,function(t){return\"%\"+t.charCodeAt().toString(16).toUpperCase()}).replace(/((?:%[0-9A-F]{2})+)/g,function(t,e){try{return decodeURIComponent(e).split(\"\").map(function(t){var e=t.charCodeAt();return e>256||/^[a-z0-9]$/i.test(t)?t:\"%\"+e.toString(16).toUpperCase()}).join(\"\")}catch(t){return e}})}(d.pathname):d.pathname),\"about:\"===C.protocol&&\"blank\"===C.pathname&&(C.protocol=\"\",C.pathname=\"\"),U&&\"/\"!==e[0]&&(C.pathname=C.pathname.substr(1)),g&&!i.test(g)&&\"/\"!==e.slice(-1)&&\"/\"===C.pathname&&(C.pathname=\"\"),C.path=C.pathname+C.search,C.auth=[d.username,d.password].map(decodeURIComponent).filter(Boolean).join(\":\"),C.port=d.port,b&&!C.host.endsWith(b)&&(C.host+=b,C.port=b.slice(1)),C.href=w?\"\"+C.pathname+C.search+C.hash:o(C);var R=/^(file)/.test(C.href)?[\"host\",\"hostname\"]:[];return Object.keys(C).forEach(function(t){~R.indexOf(t)||(C[t]=C[t]||null)}),C}export{g as parse,o as format,h as resolve,c as resolveObject,l as Url};\n//# sourceMappingURL=index.mjs.map\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Validator } from 'jsonschema';\nimport schema from './schema.json';\n\nexport function validate(ket: any): boolean {\n  const validator = new Validator();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: jsonschema type issue?\n  return validator.validate(ket, schema).valid;\n}\n","import {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  Pile,\n  SGroup,\n  SGroupAttachmentPoint,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { ReAtom, ReBond, ReSGroup, ReStruct } from 'application/render';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { Command } from 'domain/entities/Command';\nimport { MONOMER_CONST } from 'application/editor/operations/monomer/monomerFactory';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport { AttachmentPointName } from 'domain/types';\n\nexport class MacromoleculesConverter {\n  private static convertMonomerToMonomerMicromolecule(\n    monomer: BaseMonomer,\n    struct: Struct,\n  ) {\n    const monomerMicromolecule = new MonomerMicromolecule(\n      SGroup.TYPES.SUP,\n      monomer,\n    );\n    const sgroupId = struct.sgroups.add(monomerMicromolecule);\n\n    monomerMicromolecule.data.name = monomer.monomerItem.label;\n    monomerMicromolecule.data.expanded = false;\n    monomerMicromolecule.id = sgroupId;\n    monomerMicromolecule.pp = monomer.position;\n\n    return monomerMicromolecule;\n  }\n\n  private static addMonomerAtomToStruct(\n    atom: Atom,\n    monomer: BaseMonomer,\n    monomerMicromolecule: MonomerMicromolecule,\n    struct: Struct,\n  ) {\n    const atomClone = atom.clone();\n    atomClone.pp = monomer.position.add(atom.pp);\n    atomClone.sgs = new Pile<number>([monomerMicromolecule.id]);\n    atomClone.fragment = -1;\n    const atomId = struct.atoms.add(atomClone);\n    monomerMicromolecule.atoms.push(atomId);\n    if (atom.rglabel) {\n      monomerMicromolecule.addAttachmentPoint(\n        new SGroupAttachmentPoint(atomId, undefined, undefined),\n      );\n    }\n\n    return { atomId, atom: atomClone };\n  }\n\n  /* attachmentPointName - R1, R2, ...\n   * return number of attachment point with left binary shift:\n   * [attachmentPointNumber]: [binaryShiftedAttachmentPointNumber]\n   * 1: 1\n   * 2: 2\n   * 3: 4\n   * 4: 8\n   * 5: 16\n   * 6: 32\n   * It needs because attachment point 3 means that atom has two attachment points\n   * */\n  public static convertAttachmentPointNameToNumber(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return 0 | (1 << (Number(attachmentPointName?.replace('R', '')) - 1));\n  }\n\n  private static findAttachmentPointAtom(\n    polymerBond: PolymerBond,\n    monomer: BaseMonomer,\n    struct: Struct,\n    sgroup?: SGroup,\n    fragmentId?: number,\n  ) {\n    const attachmentPointName = monomer.getAttachmentPointByBond(polymerBond);\n    assert(attachmentPointName);\n    const attachmentPointNumber =\n      MacromoleculesConverter.convertAttachmentPointNameToNumber(\n        attachmentPointName,\n      );\n\n    return sgroup\n      ? sgroup.atoms.find(\n          (atomId) =>\n            Number(struct.atoms.get(atomId)?.rglabel) === attachmentPointNumber,\n        )\n      : struct.atoms.find((atomId) => {\n          const atom = struct.atoms.get(atomId) as Atom;\n          return (\n            atom.fragment === fragmentId &&\n            Number(atom.rglabel) === attachmentPointNumber\n          );\n        });\n  }\n\n  public static convertDrawingEntitiesToStruct(\n    drawingEntitiesManager: DrawingEntitiesManager,\n    struct: Struct,\n    reStruct?: ReStruct,\n  ) {\n    const monomerToSgroup = new Map<BaseMonomer, SGroup>();\n    const monomerToFragmentId = new Map<BaseMonomer, number>();\n\n    drawingEntitiesManager.micromoleculesHiddenEntities.mergeInto(struct);\n\n    drawingEntitiesManager.clearMicromoleculesHiddenEntities();\n    drawingEntitiesManager.monomers.forEach((monomer) => {\n      if (monomer.monomerItem.props.isMicromoleculeFragment) {\n        monomer.monomerItem.struct.mergeInto(struct);\n        monomerToFragmentId.set(monomer, struct.frags.size - 1);\n      } else {\n        const atomIdsMap = {};\n        const monomerMicromolecule = this.convertMonomerToMonomerMicromolecule(\n          monomer,\n          struct,\n        );\n        monomerToSgroup.set(monomer, monomerMicromolecule);\n        reStruct?.sgroups.set(\n          monomerMicromolecule.id,\n          new ReSGroup(monomerMicromolecule),\n        );\n\n        monomer.monomerItem.struct.atoms.forEach((oldAtom, oldAtomId) => {\n          const { atom, atomId } = this.addMonomerAtomToStruct(\n            oldAtom,\n            monomer,\n            monomerMicromolecule,\n            struct,\n          );\n          atomIdsMap[oldAtomId] = atomId;\n          reStruct?.atoms.set(atomId, new ReAtom(atom));\n        });\n\n        struct.sGroupForest.insert(monomerMicromolecule);\n        monomer.monomerItem.struct.bonds.forEach((bond) => {\n          const bondClone = bond.clone();\n          bondClone.begin = atomIdsMap[bondClone.begin];\n          bondClone.end = atomIdsMap[bondClone.end];\n          const bondId = struct.bonds.add(bondClone);\n          reStruct?.bonds.set(bondId, new ReBond(bondClone));\n        });\n\n        struct.functionalGroups.add(new FunctionalGroup(monomerMicromolecule));\n      }\n    });\n\n    let conversionErrorMessage = '';\n\n    drawingEntitiesManager.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      const beginAtom = this.findAttachmentPointAtom(\n        polymerBond,\n        polymerBond.firstMonomer,\n        struct,\n        monomerToSgroup.get(polymerBond.firstMonomer),\n        monomerToFragmentId.get(polymerBond.firstMonomer),\n      );\n      const endAtom = this.findAttachmentPointAtom(\n        polymerBond,\n        polymerBond.secondMonomer,\n        struct,\n        monomerToSgroup.get(polymerBond.secondMonomer),\n        monomerToFragmentId.get(polymerBond.secondMonomer),\n      );\n\n      if (!beginAtom || !endAtom) {\n        conversionErrorMessage =\n          'There is no atom for provided attachment point. Bond between monomers was not created.';\n\n        return;\n      }\n\n      const bond = new Bond({\n        type: Bond.PATTERN.TYPE.SINGLE,\n        begin: beginAtom,\n        end: endAtom,\n      });\n      const bondId = struct.bonds.add(bond);\n      reStruct?.bonds.set(bondId, new ReBond(bond));\n    });\n\n    return { struct, reStruct, conversionErrorMessage };\n  }\n\n  private static convertMonomerMicromoleculeToMonomer(\n    monomerMicromolecule: MonomerMicromolecule,\n    drawingEntitiesManager: DrawingEntitiesManager,\n    sgroupToMonomer: Map<SGroup, BaseMonomer>,\n  ) {\n    const command = new Command();\n    const monomerAdditionCommand = drawingEntitiesManager.addMonomer(\n      monomerMicromolecule.monomer.monomerItem,\n      monomerMicromolecule.pp as Vec2,\n    );\n    command.merge(monomerAdditionCommand);\n    sgroupToMonomer.set(\n      monomerMicromolecule,\n      monomerAdditionCommand.operations[0].monomer as BaseMonomer,\n    );\n\n    return command;\n  }\n\n  private static convertFragmentToChem(\n    fragmentNumber: number,\n    fragmentStruct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const fragmentBbox = fragmentStruct.getCoordBoundingBox();\n    return drawingEntitiesManager.addMonomer(\n      {\n        struct: fragmentStruct,\n        label: 'F' + fragmentNumber,\n        colorScheme: undefined,\n        favorite: false,\n        props: {\n          Name: 'F' + fragmentNumber,\n          MonomerNaturalAnalogCode: '',\n          MonomerName: 'F' + fragmentNumber,\n          MonomerType: MONOMER_CONST.CHEM,\n          isMicromoleculeFragment: true,\n        },\n      },\n      new Vec2(\n        fragmentBbox.max.x - (fragmentBbox.max.x - fragmentBbox.min.x) / 2,\n        fragmentBbox.max.y - (fragmentBbox.max.y - fragmentBbox.min.y) / 2,\n      ),\n    );\n  }\n\n  public static getAttachmentPointLabel(atom: Atom) {\n    let attachmentPointLabel = '';\n    const atomRglabel = Number(atom.rglabel);\n    assert(Number.isInteger(atomRglabel));\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atomRglabel & (1 << rgi)) {\n        attachmentPointLabel = 'R' + (rgi + 1).toString();\n      }\n    }\n    return attachmentPointLabel;\n  }\n\n  // This method returns array of arrays of fragmentIds grouped by sgroup\n  // It needs to serialize/deserialize several molecules grouped by sgroup as a single molecule\n  public static getFragmentsGroupedBySgroup(struct: Struct) {\n    const groupedFragments: number[][] = [];\n    struct.frags.forEach((_fragment, fragmentId) => {\n      const isAlreadyGrouped = groupedFragments.find((fragmentsGroup) =>\n        fragmentsGroup.includes(fragmentId),\n      );\n      if (isAlreadyGrouped) {\n        return;\n      }\n\n      // Find all sgroups related to fragment\n      const fragmentSgroups = new Set<SGroup>();\n      struct.atoms.forEach((atom, atomId) => {\n        if (atom.fragment !== fragmentId) return;\n        const sgroup = struct.getGroupFromAtomId(atomId);\n        if (sgroup) {\n          fragmentSgroups.add(sgroup);\n        }\n      });\n\n      // Add new group of fragments with fragments related to one sgroup\n      const lastFragmentGroupIndex = groupedFragments.push([fragmentId]) - 1;\n      fragmentSgroups.forEach((sgroup) => {\n        sgroup.atoms.forEach((aid) => {\n          const atomFragmentId = struct.atoms.get(aid)?.fragment;\n          if (\n            atomFragmentId &&\n            !groupedFragments[lastFragmentGroupIndex].includes(atomFragmentId)\n          ) {\n            groupedFragments[lastFragmentGroupIndex].push(atomFragmentId);\n          }\n        });\n      });\n    });\n\n    return groupedFragments;\n  }\n\n  public static convertStructToDrawingEntities(\n    struct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const sgroupToMonomer = new Map<SGroup, BaseMonomer>();\n    const fragmentIdToMonomer = new Map<number, BaseMonomer>();\n    const command = new Command();\n    struct.sgroups.forEach((sgroup) => {\n      if (sgroup instanceof MonomerMicromolecule) {\n        command.merge(\n          this.convertMonomerMicromoleculeToMonomer(\n            sgroup,\n            drawingEntitiesManager,\n            sgroupToMonomer,\n          ),\n        );\n      }\n    });\n    const fragments = this.getFragmentsGroupedBySgroup(struct);\n\n    let fragmentNumber = 1;\n    fragments.forEach((_fragment, fragmentId) => {\n      const fragmentStruct = struct.getFragment(_fragment, false);\n      const monomerAddCommand = this.convertFragmentToChem(\n        fragmentNumber,\n        fragmentStruct,\n        drawingEntitiesManager,\n      );\n      fragmentIdToMonomer.set(\n        fragmentId,\n        monomerAddCommand.operations[0].monomer as BaseMonomer,\n      );\n      command.merge(monomerAddCommand);\n      fragmentNumber++;\n    });\n    struct.bonds.forEach((bond) => {\n      const beginAtom = struct.atoms.get(bond.begin) as Atom;\n      const endAtom = struct.atoms.get(bond.end) as Atom;\n      const beginAtomSgroup = struct.getGroupFromAtomId(bond.begin);\n      const endAtomSgroup = struct.getGroupFromAtomId(bond.end);\n      const beginAtomAttachmentPointNumber =\n        MacromoleculesConverter.getAttachmentPointLabel(beginAtom);\n      const endAtomAttachmentPointNumber =\n        MacromoleculesConverter.getAttachmentPointLabel(endAtom);\n      if (\n        beginAtomAttachmentPointNumber &&\n        endAtomAttachmentPointNumber &&\n        (beginAtomSgroup || endAtomSgroup)\n      ) {\n        // Here we take monomers from sgroupToMonomer in case of macromolecules structure and\n        // from fragmentIdToMonomer in case of micromolecules structure.\n        const firstMonomer =\n          beginAtomSgroup instanceof MonomerMicromolecule\n            ? sgroupToMonomer.get(beginAtomSgroup)\n            : fragmentIdToMonomer.get(beginAtom.fragment);\n        const secondMonomer =\n          endAtomSgroup instanceof MonomerMicromolecule\n            ? sgroupToMonomer.get(endAtomSgroup)\n            : fragmentIdToMonomer.get(endAtom.fragment);\n        assert(firstMonomer);\n        assert(secondMonomer);\n\n        command.merge(\n          drawingEntitiesManager.createPolymerBond(\n            firstMonomer,\n            secondMonomer,\n            beginAtomAttachmentPointNumber,\n            endAtomAttachmentPointNumber,\n          ),\n        );\n      }\n    });\n    drawingEntitiesManager.setMicromoleculesHiddenEntities(struct);\n\n    return { drawingEntitiesManager, modelChanges: command };\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities';\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet';\n\nimport { Serializer } from '../serializers.types';\nimport { headerToKet } from './toKet/headerToKet';\nimport { moleculeToKet } from './toKet/moleculeToKet';\nimport { moleculeToStruct } from './fromKet/moleculeToStruct';\nimport { prepareStructForKet } from './toKet/prepare';\nimport { rgroupToKet } from './toKet/rgroupToKet';\nimport { rgroupToStruct } from './fromKet/rgroupToStruct';\nimport { rxnToStruct } from './fromKet/rxnToStruct';\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet';\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct';\nimport { textToKet } from './toKet/textToKet';\nimport { textToStruct } from './fromKet/textToStruct';\nimport {\n  IKetConnection,\n  IKetMacromoleculesContent,\n  IKetMacromoleculesContentRootProperty,\n  IKetMonomerNode,\n  IKetMonomerTemplate,\n} from 'application/formatters/types/ket';\nimport { Command } from 'domain/entities/Command';\nimport { CoreEditor, EditorSelection } from 'application/editor/internal';\nimport { monomerToDrawingEntity } from 'domain/serializers/ket/fromKet/monomerToDrawingEntity';\nimport assert from 'assert';\nimport { polymerBondToDrawingEntity } from 'domain/serializers/ket/fromKet/polymerBondToDrawingEntity';\nimport { getMonomerUniqueKey } from 'domain/helpers/monomers';\nimport {\n  MONOMER_CONST,\n  monomerFactory,\n} from 'application/editor/operations/monomer/monomerFactory';\nimport { KetcherLogger } from 'utilities';\nimport { Chem } from 'domain/entities/Chem';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport {\n  getKetRef,\n  populateStructWithSelection,\n  setMonomerPrefix,\n  setMonomerTemplatePrefix,\n  switchIntoChemistryCoordSystem,\n} from 'domain/serializers/ket/helpers';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { validate } from 'domain/serializers/ket/validate';\nimport { MacromoleculesConverter } from 'application/editor/MacromoleculesConverter';\nimport { convertAttachmentPointNumberToLabel } from 'domain/helpers/attachmentPointCalculations';\nimport { isNumber } from 'lodash';\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type;\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct);\n      break;\n    }\n    case 'plus': {\n      rxnToStruct(node, struct);\n      break;\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct);\n      break;\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node);\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!;\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition);\n      }\n\n      currentStruct.mergeInto(struct);\n      break;\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct);\n      break;\n    }\n    case 'text': {\n      textToStruct(node, struct);\n      break;\n    }\n    default:\n      break;\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserializeMicromolecules(content: string): Struct {\n    const ket = JSON.parse(content);\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.');\n    }\n\n    return this.fillStruct(ket);\n  }\n\n  fillStruct(ket) {\n    const resultingStruct = new Struct();\n    const nodes = ket.root.nodes;\n\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct);\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct);\n    });\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null;\n\n    return resultingStruct;\n  }\n\n  serializeMicromolecules(struct: Struct, monomer?: BaseMonomer): string {\n    const result: any = {\n      root: {\n        nodes: [],\n      },\n    };\n    const header = headerToKet(struct);\n    if (header) result.header = header;\n\n    const ketNodes = prepareStructForKet(struct);\n\n    let moleculeId = 0;\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` });\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment!, monomer);\n          break;\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` });\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment!,\n            item.data,\n          );\n          break;\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item));\n          break;\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item));\n          break;\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item));\n          break;\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item));\n          break;\n        }\n        default:\n          break;\n      }\n    });\n\n    return JSON.stringify(result, null, 4);\n  }\n\n  private validateMonomerNodeTemplate(\n    node: IKetMonomerNode,\n    parsedFileContent: IKetMacromoleculesContent,\n    editor: CoreEditor,\n  ) {\n    const template =\n      parsedFileContent[setMonomerTemplatePrefix(node.templateId)];\n    if (!template) {\n      editor.events.error.dispatch('Error during file parsing');\n      return true;\n    }\n\n    return false;\n  }\n\n  private validateConnectionTypeAndEndpoints(\n    connection: IKetConnection,\n    editor: CoreEditor,\n  ) {\n    if (\n      connection.connectionType !== 'single' ||\n      !connection.endpoint1.monomerId ||\n      !connection.endpoint2.monomerId ||\n      !connection.endpoint1.attachmentPointId ||\n      !connection.endpoint2.attachmentPointId\n    ) {\n      editor.events.error.dispatch('Error during file parsing');\n      return true;\n    }\n    return false;\n  }\n\n  parseAndValidateMacromolecules(fileContent: string) {\n    const editor = CoreEditor.provideEditorInstance();\n    let parsedFileContent: IKetMacromoleculesContent;\n    try {\n      parsedFileContent = JSON.parse(fileContent);\n    } catch (e) {\n      KetcherLogger.error(\n        'ketSerializer.ts::KetSerializer::parseAndValidateMacromolecules',\n        e,\n      );\n      return { error: true };\n    }\n    let error = false;\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n\n      if (nodeDefinition?.type === 'monomer') {\n        error = this.validateMonomerNodeTemplate(\n          nodeDefinition,\n          parsedFileContent,\n          editor,\n        );\n      }\n    });\n    if (error) {\n      return { error: true };\n    }\n    parsedFileContent.root.connections?.forEach(\n      (connection: IKetConnection) => {\n        this.validateConnectionTypeAndEndpoints(connection, editor);\n      },\n    );\n    return {\n      error,\n      parsedFileContent,\n    };\n  }\n\n  deserializeToStruct(fileContent: string) {\n    const struct = new Struct();\n    const deserializedContent = this.deserializeToDrawingEntities(fileContent);\n\n    assert(deserializedContent);\n\n    MacromoleculesConverter.convertDrawingEntitiesToStruct(\n      deserializedContent?.drawingEntitiesManager,\n      struct,\n    );\n    return struct;\n  }\n\n  private filterMacromoleculesContent(\n    parsedFileContent: IKetMacromoleculesContent,\n  ) {\n    const fileContentForMicromolecules = {\n      ...parsedFileContent,\n      root: {\n        nodes: parsedFileContent.root.nodes.filter((node) => {\n          const nodeDefinition = parsedFileContent[node.$ref];\n\n          return (\n            nodeDefinition?.type !== 'monomer' &&\n            nodeDefinition?.type !== 'group'\n          );\n        }),\n      },\n    };\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n      if (\n        nodeDefinition?.type === 'monomer' ||\n        nodeDefinition?.type === 'group'\n      ) {\n        fileContentForMicromolecules[node.$ref] = undefined;\n      }\n    });\n\n    parsedFileContent.root.templates?.forEach((template) => {\n      fileContentForMicromolecules[template.$ref] = undefined;\n    });\n\n    return fileContentForMicromolecules;\n  }\n\n  deserializeToDrawingEntities(fileContent: string) {\n    const { error: hasValidationErrors, parsedFileContent } =\n      this.parseAndValidateMacromolecules(fileContent);\n    if (hasValidationErrors || !parsedFileContent) return;\n    const command = new Command();\n    const drawingEntitiesManager = new DrawingEntitiesManager();\n    const monomerIdsMap = {};\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n\n      switch (nodeDefinition?.type) {\n        case 'monomer': {\n          const template = parsedFileContent[\n            setMonomerTemplatePrefix(nodeDefinition.templateId)\n          ] as IKetMonomerTemplate;\n          assert(template);\n          const struct = this.fillStruct({\n            root: {\n              nodes: [{ $ref: 'mol0' }],\n            },\n            mol0: {\n              ...template,\n              type: 'molecule',\n            },\n            header: {\n              moleculeName: template.fullName,\n            },\n          });\n          const monomerAdditionCommand = monomerToDrawingEntity(\n            nodeDefinition,\n            template,\n            struct,\n            drawingEntitiesManager,\n          );\n          const monomer = monomerAdditionCommand.operations[0]\n            .monomer as BaseMonomer;\n          monomerIdsMap[node.$ref] = monomer?.id;\n\n          const { attachmentPointsList } =\n            BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n              template.attachmentPoints || [],\n            );\n\n          template.attachmentPoints?.forEach(\n            (attachmentPoint, attachmentPointIndex) => {\n              const firstAtomInLeavingGroup =\n                attachmentPoint.leavingGroup?.atoms[0];\n              const leavingGroupAtom = monomer.monomerItem.struct.atoms.get(\n                isNumber(firstAtomInLeavingGroup)\n                  ? firstAtomInLeavingGroup\n                  : attachmentPoint.attachmentAtom,\n              );\n              assert(leavingGroupAtom);\n              leavingGroupAtom.rglabel = (\n                0 |\n                (1 <<\n                  (Number(\n                    (attachmentPoint.label\n                      ? attachmentPoint.label\n                      : attachmentPointsList[attachmentPointIndex]\n                    ).replace('R', ''),\n                  ) -\n                    1))\n              ).toString();\n              assert(monomer.monomerItem.props.MonomerCaps);\n              monomer.monomerItem.props.MonomerCaps[\n                convertAttachmentPointNumberToLabel(\n                  Number(leavingGroupAtom.rglabel),\n                )\n              ] = leavingGroupAtom.label;\n              leavingGroupAtom.label = 'R#';\n            },\n          );\n\n          command.merge(monomerAdditionCommand);\n          break;\n        }\n        default:\n          break;\n      }\n    });\n    const fileContentForMicromolecules =\n      this.filterMacromoleculesContent(parsedFileContent);\n\n    const deserializedMicromolecules = this.deserializeMicromolecules(\n      JSON.stringify(fileContentForMicromolecules),\n    );\n\n    let fragmentNumber = 1;\n    const fragments = MacromoleculesConverter.getFragmentsGroupedBySgroup(\n      deserializedMicromolecules,\n    );\n    fragments.forEach((_fragment) => {\n      const fragmentStruct = deserializedMicromolecules.getFragment(\n        _fragment,\n        false,\n      );\n      const fragmentBbox = fragmentStruct.getCoordBoundingBox();\n      const monomerAdditionCommand = drawingEntitiesManager.addMonomer(\n        {\n          struct: fragmentStruct,\n          label: 'F' + fragmentNumber,\n          colorScheme: undefined,\n          favorite: false,\n          props: {\n            Name: 'F' + fragmentNumber,\n            MonomerNaturalAnalogCode: '',\n            MonomerName: 'F' + fragmentNumber,\n            MonomerType: MONOMER_CONST.CHEM,\n            isMicromoleculeFragment: true,\n          },\n        },\n        new Vec2(\n          fragmentBbox.max.x - (fragmentBbox.max.x - fragmentBbox.min.x) / 2,\n          fragmentBbox.max.y - (fragmentBbox.max.y - fragmentBbox.min.y) / 2,\n        ),\n      );\n      command.merge(monomerAdditionCommand);\n      fragmentNumber++;\n    });\n\n    parsedFileContent.root.connections?.forEach((connection) => {\n      switch (connection.connectionType) {\n        case 'single': {\n          const bondAdditionCommand = polymerBondToDrawingEntity(\n            connection,\n            drawingEntitiesManager,\n            monomerIdsMap,\n          );\n          command.merge(bondAdditionCommand);\n          break;\n        }\n        default:\n          break;\n      }\n    });\n\n    drawingEntitiesManager.setMicromoleculesHiddenEntities(\n      deserializedMicromolecules,\n    );\n\n    return { modelChanges: command, drawingEntitiesManager };\n  }\n\n  deserialize(fileContent: string) {\n    return this.deserializeToStruct(fileContent);\n  }\n\n  serializeMacromolecules(\n    struct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const fileContent: IKetMacromoleculesContentRootProperty = {\n      root: {\n        nodes: [],\n        connections: [],\n        templates: [],\n      },\n    };\n\n    drawingEntitiesManager.monomers.forEach((monomer) => {\n      if (\n        monomer instanceof Chem &&\n        monomer.monomerItem.props.isMicromoleculeFragment\n      ) {\n        monomer.monomerItem.struct.mergeInto(struct);\n      } else {\n        const templateId =\n          monomer.monomerItem.props.id ||\n          getMonomerUniqueKey(monomer.monomerItem);\n        const monomerName = setMonomerPrefix(monomer.id);\n        const position: Vec2 = switchIntoChemistryCoordSystem(\n          new Vec2(monomer.position.x, monomer.position.y),\n        );\n        fileContent[monomerName] = {\n          type: 'monomer',\n          id: monomer.id.toString(),\n          position: {\n            x: position.x,\n            y: position.y,\n          },\n          alias: monomer.label,\n          templateId,\n          seqid: monomer.monomerItem.seqId,\n        };\n        fileContent.root.nodes.push(getKetRef(monomerName));\n        const [, , monomerClass] = monomerFactory(monomer.monomerItem);\n        const templateNameWithPrefix = setMonomerTemplatePrefix(templateId);\n        if (!fileContent[templateNameWithPrefix]) {\n          fileContent[templateNameWithPrefix] = {\n            ...JSON.parse(\n              this.serializeMicromolecules(monomer.monomerItem.struct, monomer),\n            ).mol0,\n            type: 'monomerTemplate',\n            class: monomer.monomerItem.props.MonomerClass || monomerClass,\n            classHELM: monomer.monomerItem.props.MonomerType,\n            id: templateId,\n            fullName: monomer.monomerItem.props.Name,\n            alias: monomer.monomerItem.label,\n            attachmentPoints: monomer.monomerItem.attachmentPoints,\n          };\n          // CHEMs do not have natural analog\n          if (monomer.monomerItem.props.MonomerType !== 'CHEM') {\n            fileContent[templateNameWithPrefix].naturalAnalogShort =\n              monomer.monomerItem.props.MonomerNaturalAnalogCode;\n          }\n          fileContent.root.templates.push(getKetRef(templateNameWithPrefix));\n        }\n      }\n    });\n    drawingEntitiesManager.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      if (\n        polymerBond.firstMonomer.monomerItem.props.isMicromoleculeFragment ||\n        polymerBond.secondMonomer.monomerItem.props.isMicromoleculeFragment\n      ) {\n        return;\n      }\n      fileContent.root.connections.push({\n        connectionType: 'single',\n        endpoint1: {\n          monomerId: setMonomerPrefix(polymerBond.firstMonomer.id),\n          attachmentPointId:\n            polymerBond.firstMonomer.getAttachmentPointByBond(polymerBond),\n        },\n        endpoint2: {\n          monomerId: setMonomerPrefix(polymerBond.secondMonomer.id),\n          attachmentPointId:\n            polymerBond.secondMonomer?.getAttachmentPointByBond(polymerBond),\n        },\n      });\n    });\n\n    drawingEntitiesManager.micromoleculesHiddenEntities.mergeInto(struct);\n\n    return {\n      serializedMacromolecules: fileContent,\n      micromoleculesStruct: struct,\n    };\n  }\n\n  serialize(\n    struct: Struct,\n    drawingEntitiesManager = new DrawingEntitiesManager(),\n    selection?: EditorSelection,\n  ) {\n    struct.enableInitiallySelected();\n    const populatedStruct = populateStructWithSelection(struct, selection);\n    MacromoleculesConverter.convertStructToDrawingEntities(\n      populatedStruct,\n      drawingEntitiesManager,\n    );\n\n    const { serializedMacromolecules, micromoleculesStruct } =\n      this.serializeMacromolecules(new Struct(), drawingEntitiesManager);\n\n    const serializedMicromoleculesStruct = JSON.parse(\n      this.serializeMicromolecules(micromoleculesStruct),\n    );\n\n    micromoleculesStruct.disableInitiallySelected();\n    const fileContent = {\n      ...serializedMicromoleculesStruct,\n      ...serializedMacromolecules,\n    };\n    fileContent.root.nodes = [\n      ...serializedMacromolecules.root.nodes,\n      ...serializedMicromoleculesStruct.root.nodes,\n    ];\n\n    return JSON.stringify(fileContent, null, 4) as unknown as string;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment,\n} from 'domain/entities';\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number);\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.'); // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit');\n\n  return numStr.padStart(width);\n}\n\n/**\n * @param str {string}\n * @returns {number}\n */\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10);\n\n  return isNaN(val) ? 0 : val; // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]));\n    if (withspace) shift++;\n    shift += parts[i];\n  }\n  return res;\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength));\n    if (withspace) shift++;\n  }\n  return res;\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN,\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS,\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN,\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN,\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [null, +3, +2, +1, null, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount',\n  },\n  rxnItemsPartition: [3, 3, 3],\n};\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3,\n};\n\nconst SHOULD_RESCALE_MOLECULES = true;\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct();\n  const bbReact = [];\n  const bbAgent = [];\n  const bbProd = [];\n  const molReact = [];\n  const molAgent = [];\n  const molProd = [];\n  let j;\n  const bondLengthData = { cnt: 0, totalLength: 0 };\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j];\n    const bondLengthDataMol = mol.getBondLengthData();\n    bondLengthData.cnt += bondLengthDataMol.cnt;\n    bondLengthData.totalLength += bondLengthDataMol.totalLength;\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt);\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j];\n      mol.scale(avgBondLength);\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j];\n    const bb = mol.getCoordBoundingBoxObj();\n    if (!bb) continue; // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT;\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb);\n      molReact.push(mol);\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb);\n      molAgent.push(mol);\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb);\n      molProd.push(mol);\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType;\n    });\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2,\n    );\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    });\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    });\n    bb.min.add_(d); // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d); // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret);\n    return bb.max.x - bb.min.x;\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0;\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0;\n    }\n    xorig += 2.0;\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0;\n    }\n    xorig += 2.0;\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0;\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret);\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret);\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret);\n  }\n\n  let bb1;\n  let bb2;\n  let x;\n  let y;\n  let bbReactAll = null;\n  let bbProdAll = null;\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j];\n    bb2 = bbReact[j + 1];\n\n    x = (bb1.max.x + bb2.min.x) / 2;\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }));\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {};\n      bbReactAll.max = new Vec2(bbReact[j].max);\n      bbReactAll.min = new Vec2(bbReact[j].min);\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max);\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min);\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j];\n    bb2 = bbProd[j + 1];\n\n    x = (bb1.max.x + bb2.min.x) / 2;\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }));\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {};\n      bbProdAll.max = new Vec2(bbProd[j].max);\n      bbProdAll.min = new Vec2(bbProd[j].min);\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max);\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min);\n    }\n  }\n  bb1 = bbReactAll;\n  bb2 = bbProdAll;\n  const defaultArrowLength = 2;\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)],\n      }),\n    );\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null;\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null;\n    const defaultOffset = 3;\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y);\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y);\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5);\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z,\n    );\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z,\n    );\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd],\n      }),\n    );\n  }\n  ret.isReaction = true;\n  return ret;\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct();\n\n  scaffold.mergeInto(ret, null, null, false, true);\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10);\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j];\n      ctab.rgroups.set(rgid, new RGroup());\n      const frag = new Fragment();\n      const frid = ctab.frags.add(frag);\n      ctab.rgroups.get(rgid).frags.add(frid);\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid;\n      });\n      ctab.mergeInto(ret);\n    }\n  });\n\n  return ret;\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2, SGroupAttachmentPoint } from 'domain/entities';\n\nimport utils from './utils';\nimport assert from 'assert';\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool();\n  const partition = utils.partitionLineFixed(str, 3, true);\n  const count = utils.parseDecimalInt(partition[0]);\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1;\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2]);\n\n    ret.set(key, value);\n  }\n\n  return ret;\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = [];\n  const partition = utils.partitionLineFixed(str, 3, true);\n  const count = utils.parseDecimalInt(partition[0]);\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2]),\n      /* eslint-enable no-mixed-operators */\n    ]);\n  }\n  return ret;\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0;\n  const atomReductionMap = {};\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap);\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap);\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m]; // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue; // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing');\n      atomReductionMap[raid] = sgroup.patoms[m]; // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms);\n\n  const patomsMap = identityMap(sgroup.patoms);\n\n  const bondsToRemove = [];\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap;\n    const endIn = bond.end in atomReductionMap;\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid);\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin];\n    else if (endIn) bond.end = atomReductionMap[bond.end];\n  }, sgroup);\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b]);\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a);\n    atomMap[a] = -1;\n  }\n  sgroup.atoms = sgroup.patoms;\n  sgroup.patoms = null;\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase();\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim();\n  sgroup.data.subscript = '';\n}\n\nfunction postLoadGen(_sgroup, _mol, _atomMap) {\n  // empty function\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms));\n  }\n}\n\nfunction postLoadMon(_sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(_sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(_sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(_sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(_sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(_sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(_sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(_sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(_sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(_sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen,\n  };\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg);\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap);\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id);\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, []);\n  else mol.sGroupForest.insert(sg);\n\n  return sg.id;\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true);\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type);\n    sg.number = key;\n    sGroups[key] = sg;\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric);\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    (core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key);\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1;\n  const num = utils.parseDecimalInt(propData.slice(4, 8));\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true));\n\n  if (part.length !== num) throw new Error('File format invalid');\n  if (shift) part = part.map((v) => v + shift);\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part);\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name;\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded;\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query;\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp;\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false);\n  const id = utils.parseDecimalInt(split[0]) - 1;\n  const fieldName = split[1].trim();\n  const fieldType = split[2].trim();\n  const units = split[3].trim();\n  const query = split[4].trim();\n  const queryOp = split[5].trim();\n  const sGroup = sGroups[id];\n  sGroup.data.fieldType = fieldType;\n  sGroup.data.fieldName = fieldName;\n  sGroup.data.units = units;\n  sGroup.data.query = query;\n  sGroup.data.queryOp = queryOp;\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */,\n    ],\n    false,\n  );\n\n  const x = parseFloat(split[0]);\n  const y = parseFloat(split[1]);\n  const attached = split[3].trim() === 'A';\n  const absolute = split[4].trim() === 'A';\n  const showUnits = split[5].trim() === 'U';\n  let nCharsToDisplay = split[7].trim();\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay);\n  const tagChar = split[10].trim();\n  const daspPos = utils.parseDecimalInt(split[11].trim());\n\n  sg.pp = new Vec2(x, -y);\n  sg.data.attached = attached;\n  sg.data.absolute = absolute;\n  sg.data.showUnits = showUnits;\n  sg.data.nCharsToDisplay = nCharsToDisplay;\n  sg.data.tagChar = tagChar;\n  sg.data.daspPos = daspPos;\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1;\n  const sg = sGroups[id];\n  applyDataSGroupInfo(sg, propData.substr(5));\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data;\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue);\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2,\n      );\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1;\n  const data = propData.substr(5);\n  const sg = sGroups[id];\n  applyDataSGroupData(sg, data, finalize);\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = [];\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j]);\n  }\n  return ret;\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '');\n}\n\nfunction identityMap(array) {\n  const map = {};\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i];\n  return map;\n}\n\n/**\n * Superatom attachment point parsing for 'ctab' v2000\n * Implemented based on: https://github.com/epam/ketcher/issues/2467\n * @param ctabString {string} example '   1  1   2   0   '\n *        M SAP sssnn6 iii ooo cc\n *             ^\n *             start position for ctabString content\n * @returns {{sGroupId: number, attachmentPoints: SGroupAttachmentPoint[]}}\n */\nfunction parseSGroupSAPLineV2000(ctabString) {\n  const [, sss, nn6] = utils.partitionLine(\n    ctabString.slice(0, 7),\n    [1, 3, 3],\n    false,\n  );\n  const chunksNumberInLine = utils.parseDecimalInt(nn6);\n  assert(chunksNumberInLine <= 6);\n  const sGroupId = utils.parseDecimalInt(sss) - 1;\n  const attachmentPointsStr = ctabString.slice(7);\n  const attachmentPoints = [];\n  for (let i = 0; i < chunksNumberInLine; i++) {\n    // length of ' iii ooo cc'\n    const CHUNK_SIZE = 11;\n    const stringForParse = attachmentPointsStr.slice(i * CHUNK_SIZE);\n    const CHUNK_PARTS_LENGTHS = [1, 3, 1, 3, 1, 2];\n    const [, iii, , ooo, , cc] = utils.partitionLine(\n      stringForParse,\n      CHUNK_PARTS_LENGTHS,\n      false,\n    );\n    const atomId = utils.parseDecimalInt(iii) - 1;\n    assert(atomId >= 0);\n    const leaveAtomParsedId = utils.parseDecimalInt(ooo);\n    const leaveAtomId =\n      leaveAtomParsedId > 0 ? leaveAtomParsedId - 1 : undefined;\n    attachmentPoints.push(new SGroupAttachmentPoint(atomId, leaveAtomId, cc));\n  }\n  return { sGroupId, attachmentPoints };\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand,\n  parseSGroupSAPLineV2000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport sGroup from './parseSGroup';\nimport utils from './utils';\n\nconst loadRGroupFragments = true; // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition,\n  );\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2]),\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16]),\n  };\n  return new Atom(params);\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition,\n  );\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6]),\n  };\n\n  return new Bond(params);\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition,\n  );\n\n  const number = utils.parseDecimalInt(split[0]) - 1;\n  const notList = split[2].trim() === 'T';\n  const count = utils.parseDecimalInt(split[4].trim());\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength);\n  const list = [];\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength;\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1),\n    );\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list,\n    }),\n  };\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool();\n\n  while (shift < end) {\n    const line = ctabLines[shift];\n    if (line.charAt(0) === 'A') {\n      const propValue = ctabLines[++shift];\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue);\n      if (isPseudo && !props.get('pseudo')) {\n        props.set('pseudo', new Pool());\n      }\n      if (!isPseudo && !props.get('alias')) {\n        props.set('alias', new Pool());\n      }\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3)) - 1, propValue);\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6);\n      let propertyData = line.slice(6);\n      if (type === 'END') {\n        break;\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set(\n            'substitutionCount',\n            sGroup.readKeyValuePairs(propertyData),\n          );\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData));\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool());\n        const rglabels = props.get('rglabel');\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData);\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri];\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1)),\n          );\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4);\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim());\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim());\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim());\n        const ooo = propertyData.slice(12).trim();\n        const logic = {};\n        if (iii > 0) logic.ifthen = iii;\n        logic.resth = hhh === 1;\n        logic.range = ooo;\n        rLogic[rgid] = logic;\n      } else if (type === 'APO') {\n        if (!props.get('attachmentPoints')) {\n          props.set('attachmentPoints', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false),\n        );\n\n        if (!props.get('atomList')) props.set('atomList', new Pool());\n        if (!props.get('label')) props.set('label', new Pool());\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#');\n          props.get('atomList').set(aid, atomList);\n        });\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData);\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData);\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true);\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true);\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData);\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1);\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1);\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1);\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1;\n        sGroups[sid].data.subscript = propertyData.slice(4).trim();\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData);\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData);\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false);\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true);\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ');\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1;\n          sGroups[sGroupId].data.expanded = true;\n        });\n      } else if (type === 'SAP') {\n        const { sGroupId, attachmentPoints } =\n          sGroup.parseSGroupSAPLineV2000(propertyData);\n        attachmentPoints.forEach((attachmentPoint) => {\n          sGroups[sGroupId].addAttachmentPoint(attachmentPoint);\n        });\n      }\n    }\n    ++shift;\n  }\n  return props;\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal;\n  });\n}\n\nfunction parseCTabV2000(\n  ctabLines,\n  countsSplit,\n  /* boolean */ ignoreChiralFlag,\n) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct();\n  let i;\n  const atomCount = utils.parseDecimalInt(countsSplit[0]);\n  const bondCount = utils.parseDecimalInt(countsSplit[1]);\n  const atomListCount = utils.parseDecimalInt(countsSplit[2]);\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1 || ignoreChiralFlag;\n  const isAnd =\n    utils.parseDecimalInt(countsSplit[4]) === 0 && !ignoreChiralFlag;\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5]);\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10]);\n  let shift = 0;\n  const atomLines = ctabLines.slice(shift, shift + atomCount);\n  shift += atomCount;\n  const bondLines = ctabLines.slice(shift, shift + bondCount);\n  shift += bondCount;\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount);\n  shift += atomListCount + stextLinesCount;\n\n  const atoms = atomLines.map(parseAtomLine);\n  atoms.forEach((atom) => ctab.atoms.add(atom));\n\n  const bonds = bondLines.map(parseBondLine);\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs;\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`;\n    }\n    ctab.bonds.add(bond);\n  });\n\n  const atomLists = atomListLines.map(parseAtomListLine);\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList;\n    ctab.atoms.get(pair.aid).label = 'L#';\n  });\n\n  const sGroups = {};\n  const rLogic = {};\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic,\n  );\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId);\n  });\n\n  const atomMap = {};\n  let sid;\n  for (sid in sGroups) {\n    const sg = sGroups[sid];\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent;\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1];\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms);\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap);\n  const emptyGroups = [];\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap);\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid);\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i]);\n    ctab.sgroups.delete(emptyGroups[i]);\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10);\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]));\n  }\n  return ctab;\n}\n\nfunction parseRg2000(\n  /* string[] */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7);\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid');\n  let i = 1;\n  while (ctabLines[i].charAt(0) !== '$') i++;\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid');\n  }\n  const coreLines = ctabLines.slice(1, i);\n  ctabLines = ctabLines.slice(i + 1);\n  const fragmentLines = {};\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file');\n    let line = ctabLines[0].trim();\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1);\n      break;\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid');\n\n    const rgid = parseInt(ctabLines[1].trim(), 10);\n    fragmentLines[rgid] = [];\n    ctabLines = ctabLines.slice(2);\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file');\n      line = ctabLines[0].trim();\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1);\n        break;\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid');\n      i = 1;\n      while (ctabLines[i].charAt(0) !== '$') i++;\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid');\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i));\n      ctabLines = ctabLines.slice(i + 1);\n    }\n  }\n\n  const core = parseCTab(coreLines, ignoreChiralFlag);\n  const frag = {};\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10);\n      frag[id] = [];\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j], ignoreChiralFlag));\n      }\n    }\n  }\n  return utils.rgMerge(core, frag);\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4);\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition,\n  );\n  const nReactants = countsSplit[0] - 0;\n  const nProducts = countsSplit[1] - 0;\n  const nAgents = countsSplit[2] - 0;\n  ctabLines = ctabLines.slice(1); // consume counts line\n  const mols = [];\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1);\n    let n = 0;\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++;\n\n    const lines = ctabLines.slice(0, n);\n    var struct;\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines, /* boolean */ ignoreChiralFlag);\n    } else {\n      struct = parseCTab(lines.slice(3), /* boolean */ ignoreChiralFlag);\n      struct.name = lines[0].trim();\n    }\n    mols.push(struct);\n    ctabLines = ctabLines.slice(n);\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout,\n  );\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition,\n  );\n  ctabLines = ctabLines.slice(1);\n  return parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag);\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = [];\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim());\n    if (element) {\n      ids.push(element.number);\n    }\n  }\n\n  return ids;\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1;\n  const count = utils.parseDecimalInt(hdr[2]);\n  const notList = hdr[4].trim() === 'T';\n  const ids = labelsListToIds(lst.slice(0, count));\n  const ret = new Pool();\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids,\n    }),\n  );\n  return ret;\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport sGroup from './parseSGroup';\nimport utils from './utils';\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i;\n  const split = spacebarsplit(line);\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4]),\n    ),\n    aam: split[5].trim(),\n  };\n  let label = split[1].trim();\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2);\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1); // remove ']'\n    const atomListParams = {};\n    atomListParams.notList = false;\n    const matchNotListInfo = label.match(/NOT ?\\[/);\n    if (matchNotListInfo) {\n      atomListParams.notList = true;\n      const [matchedSubstr] = matchNotListInfo;\n      label = label.substr(matchedSubstr.length); // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\");\n    } else {\n      label = label.substr(1); // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','));\n    params.atomList = new AtomList(atomListParams);\n    params.label = 'L#';\n  } else {\n    params.label = label;\n  }\n  split.splice(0, 6);\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=');\n    key = subsplit[0];\n    value = subsplit[1];\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value);\n      if (key === 'VAL') {\n        if (ival === 0) continue; // eslint-disable-line no-continue\n        if (ival === -1) ival = 0;\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival;\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2);\n      const rgrsplit = value.split(' ').slice(1);\n      params.rglabel = 0;\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1);\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0;\n    }\n  }\n\n  return new Atom(params);\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i;\n  const split = spacebarsplit(line);\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])],\n  };\n  split.splice(0, 4);\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=');\n    key = subsplit[0];\n    value = subsplit[1];\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)];\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS;\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)];\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value);\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value);\n    }\n  }\n  return new Bond(params);\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++;\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++;\n  shift++;\n  return shift;\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = '';\n  shift++;\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim();\n    if (line.trim() === 'END SGROUP') return shift;\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim();\n    }\n    const split = splitSGroupDef(line);\n    const type = split[1];\n    const sg = new SGroup(type);\n    sg.number = split[0] - 0;\n    sg.type = type;\n    sg.label = split[2] - 0;\n    sgroups[sg.number] = sg;\n    const props = {};\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=');\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\",\n        );\n      }\n      const name = subsplit[0];\n      if (!(name in props)) props[name] = [];\n      props[name].push(subsplit[1]);\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1);\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1);\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : [];\n    const brkxyzStrs = props.BRKXYZ;\n    sg.brkxyz = [];\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]));\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0;\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim();\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase();\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]));\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true);\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0]);\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0]);\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0]);\n    sGroup.loadSGroup(ctab, sg, atomMap);\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0]);\n  }\n  throw new Error('S-group declaration incomplete.');\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct();\n\n  let shift = 0;\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid');\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid');\n  }\n  const vals = ctabLines[shift].slice(14).split(' ');\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1;\n  shift++;\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++;\n    let line;\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim();\n      if (line === 'END ATOM') break;\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim();\n      }\n      ctab.atoms.add(parseAtomLineV3000(line));\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++;\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim();\n        if (line === 'END BOND') break;\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim();\n        }\n        const bond = parseBondLineV3000(line);\n        if (bond.stereo && isAbs)\n          ctab.atoms.get(bond.begin).stereoLabel = 'abs';\n        ctab.bonds.add(bond);\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {};\n    const atomMap = {};\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift);\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift);\n      } else throw Error('CTAB V3000 invalid');\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid');\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift));\n\n  return ctab;\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {};\n  const rLogic = {};\n  let shift = 0;\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop();\n    rfrags[id] = [];\n    rLogic[id] = {};\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim();\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13);\n        const rlsplit = line.trim().split(/\\s+/g);\n        const iii = utils.parseDecimalInt(rlsplit[0]);\n        const hhh = utils.parseDecimalInt(rlsplit[1]);\n        const ooo = rlsplit.slice(2).join(' ');\n        const logic = {};\n        if (iii > 0) logic.ifthen = iii;\n        logic.resth = hhh === 1;\n        logic.range = ooo;\n        rLogic[id] = logic;\n        shift++;\n        continue; // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid');\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break;\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1);\n      const rfrag = parseCTabV3000(lines, true);\n      rfrags[id].push(rfrag);\n      shift = shift + i + 1;\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++;\n        break;\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]));\n      const frid = rg.frags.add({});\n      rg.rgroups.get(rgid).frags.add(frid);\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid;\n      });\n      rg.mergeInto(ctab);\n    });\n  });\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4);\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3);\n  const nReactants = countsSplit[0] - 0;\n  const nProducts = countsSplit[1] - 0;\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0;\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j;\n    }\n\n    return console.error('CTab format invalid');\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j;\n    }\n    return console.error('CTab format invalid');\n  }\n\n  const molLinesReactants = [];\n  const molLinesProducts = [];\n  const molLinesAgents = [];\n  let current = null;\n  const rGroups = [];\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim();\n    var j;\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break; // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts;\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null;\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants;\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null;\n    } else if (line === 'M  V30 BEGIN AGENT') {\n      current = molLinesAgents;\n    } else if (line === 'M  V30 END AGENT') {\n      current = null;\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i);\n      rGroups.push(ctabLines.slice(i, j + 1));\n      i = j;\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i);\n      current.push(ctabLines.slice(i, j + 1));\n      i = j;\n    } else {\n      throw new Error('line unrecognized: ' + line);\n    }\n  }\n  const mols = [];\n  const molLines = molLinesReactants\n    .concat(molLinesProducts)\n    .concat(molLinesAgents);\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit);\n    mols.push(mol);\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout,\n  );\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = [];\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k]);\n      return res;\n    })(rGroups),\n  );\n\n  return ctab;\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = [];\n  let bracketEquality = 0;\n  let currentIndex = 0;\n  let firstSliceIndex = -1;\n  let quoted = false;\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex];\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']');\n      split.push(line.slice(currentIndex, closingBracketIndex + 1));\n      currentIndex = closingBracketIndex + 1;\n      firstSliceIndex = currentIndex;\n    } else if (currentSymbol === '(') bracketEquality += 1;\n    else if (currentSymbol === ')') bracketEquality -= 1;\n    else if (currentSymbol === '\"') quoted = !quoted;\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex));\n      }\n      firstSliceIndex = currentIndex;\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex));\n  }\n  return split;\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2);\n  }\n  return str;\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim);\n  return [line.slice(0, p), line.slice(p + 1)];\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = [];\n  let braceBalance = 0;\n  let quoted = false;\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i);\n    if (c === '\"') {\n      quoted = !quoted;\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++;\n      } else if (c === ')') {\n        braceBalance--;\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i));\n        line = line.slice(i + 1).trim();\n        i = 0;\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!');\n  }\n  if (line.length > 0) split.push(line.trim());\n  return split;\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null;\n  const list = [];\n  line = line.trim();\n  line = line.substr(1, line.length - 2);\n  const split = line.split(' ');\n  shift = shift || 0;\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i]);\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift);\n    }\n  }\n\n  return list;\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid');\n  return line.slice(7);\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = [];\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim());\n    if (element) {\n      ids.push(element.number);\n    }\n  }\n\n  return ids;\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities';\n\nimport utils from './utils';\nimport v2000 from './v2000';\nimport v3000 from './v3000';\n\nconst loadRGroupFragments = true; // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines, ignoreChiralFlag);\n    struct.name = ctabLines[3].trim();\n    return struct;\n  }\n  const struct = parseCTab(ctabLines.slice(3), ignoreChiralFlag);\n  struct.name = ctabLines[0].trim();\n  return struct;\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition,\n  );\n  const version = countsSplit[11].trim();\n  ctabLines = ctabLines.slice(1);\n  if (version === 'V2000') {\n    return v2000.parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag);\n  }\n  if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments);\n  } else {\n    throw new Error('Molfile version unknown: ' + version);\n  }\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ');\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout);\n  }\n\n  const struct = v2000.parseRxn2000(\n    ctabLines,\n    shouldReactionRelayout,\n    ignoreChiralFlag,\n  );\n  struct.name = ctabLines[1].trim();\n  return struct;\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving,\n  queryComponent: prepareQueryComponentForSaving,\n};\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = [];\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin);\n    const a2 = mol.atoms.get(bond.end);\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid);\n    }\n  }, sgroup);\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    // TODO fix this eslint error\n    // eslint-disable-next-line no-throw-literal\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number',\n    };\n  }\n  sgroup.bonds = xBonds;\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = [];\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin);\n    const a2 = mol.atoms.get(bond.end);\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid);\n    }\n  }, sgroup);\n  sgroup.bonds = xBonds;\n}\n\nfunction prepareGenForSaving(_sgroup, _mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareQueryComponentForSaving(_sgroup, _mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup);\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile,\n};\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap,\n    ),\n  ); // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap,\n    ),\n  );\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul;\n  lines.push(smtLine);\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name);\n  }\n  return lines.join('\\n');\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  const data = sgroup.data;\n  let pp = sgroup.pp;\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms));\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2);\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65);\n  }\n\n  lines.push(sdtLine);\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  '; // oo\n  lines.push(sddLine);\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '');\n  const charsPerLine = 69;\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine));\n      chars = chars.slice(charsPerLine);\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars);\n  });\n  return lines.join('\\n');\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return [];\n  const lines = [];\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15); // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2);\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3);\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine);\n  }\n  return lines;\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms);\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet);\n  SGroup.bracketPos(sg, mol, crossBonds);\n  const bb = sg.bracketBox;\n  const d = sg.bracketDirection;\n  const n = d.rotateSC(1, 0);\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n,\n  );\n  const lines = [];\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i];\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement();\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement();\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3);\n    const coord = [a0.x, a0.y, a1.x, a1.y];\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4);\n    }\n    lines.push(line);\n  }\n  return lines;\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g;\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n');\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]));\n    if (withspace) shift++;\n    shift += parts[i];\n  }\n  return res;\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StereoFlag,\n  Struct,\n  SGroupAttachmentPoint,\n  SGroup,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport common from './common';\nimport utils from './utils';\nimport { KetcherLogger } from 'utilities';\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0';\n\ntype Mapping = {\n  [key in number]: number;\n};\ntype NumberTuple = [number, number];\n\ninterface ParseCTFileProps {\n  molfileLines: string[];\n  shouldReactionRelayout?: boolean;\n  ignoreChiralFlag?: boolean;\n}\n\nexport class Molfile {\n  molecule: Struct | null;\n  molfile: string | null;\n  reaction: boolean;\n  mapping: Mapping;\n  bondMapping: Mapping;\n\n  constructor() {\n    this.molecule = null;\n    this.molfile = null;\n\n    this.reaction = false;\n    this.mapping = {};\n    this.bondMapping = {};\n  }\n\n  parseCTFile(props: ParseCTFileProps) {\n    const { molfileLines, shouldReactionRelayout, ignoreChiralFlag } = props;\n    let ret;\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(\n        molfileLines,\n        shouldReactionRelayout,\n        ignoreChiralFlag,\n      );\n    } else {\n      ret = common.parseMol(molfileLines, ignoreChiralFlag);\n    }\n    ret.initHalfBonds();\n    ret.initNeighbors();\n    ret.bindSGroupsToFunctionalGroups();\n    ret.markFragments();\n\n    return ret;\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule;\n    const toRemove: any[] = [];\n    let errors = 0;\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!;\n        let errorIgnore = false;\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol);\n        } catch (e: any) {\n          KetcherLogger.error('molfile.ts::Molfile::prepareSGroups', e);\n          if (!skipErrors || typeof e.id !== 'number') {\n            throw new Error(`Error: ${e.message}`);\n          }\n          errorIgnore = true;\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore;\n          toRemove.push(sgroup.id);\n        }\n      }, this);\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.',\n      );\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i]);\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone();\n    this.prepareSGroups(false, false);\n    this.molfile = '';\n    this.writeCTab2000(rgroups);\n    return this.molfile;\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean,\n    ignoreChiralFlag?: boolean,\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow();\n    this.molfile = '' + molecule.name;\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment',\n        );\n      }\n      const components = molecule.getComponents();\n\n      const reactants = components.reactants;\n      const products = components.products;\n      const all = reactants.concat(products);\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n';\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile();\n        const submol = molecule.clone(all[i], null, true);\n        const molfile = saver.saveMolecule(submol, false, true);\n        this.molfile += '$MOL\\n' + molfile;\n      }\n      return this.molfile;\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold();\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups,\n        );\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n';\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n';\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n';\n          this.writePaddedNumber(rgid, 3);\n          this.molfile += '\\n';\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid));\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n';\n          });\n          this.molfile += '$END RGP\\n';\n        });\n        this.molfile += '$END MOL\\n';\n\n        return this.molfile;\n      }\n    }\n\n    this.molecule = molecule.clone();\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc);\n\n    this.writeHeader();\n    this.writeCTab2000(undefined, ignoreChiralFlag);\n\n    return this.molfile;\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date();\n\n    this.writeCR(); // TODO: write structure name\n    this.writeWhiteSpace(2);\n    this.write('Ketcher');\n    this.writeWhiteSpace();\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000,\n    );\n    this.writeCR();\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str;\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = '';\n    }\n\n    this.molfile += str + '\\n';\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1;\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)));\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str);\n    this.writeWhiteSpace(width - str.length);\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString();\n\n    this.writeWhiteSpace(width - str.length);\n    this.write(str);\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision));\n  }\n\n  writeCTab2000Header(ignoreChiralFlag) {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3);\n    this.writePaddedNumber(this.molecule!.bonds.size, 3);\n\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false,\n    );\n\n    this.writePaddedNumber(isAbsFlag || ignoreChiralFlag ? 1 : 0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(999, 3);\n    this.writeCR(' V2000');\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>, ignoreChiralFlag?: boolean) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header(ignoreChiralFlag);\n\n    this.mapping = {};\n    let i = 1;\n\n    const atomsIds: number[] = [];\n    const atomsProps: {\n      id: number;\n      value: string;\n    }[] = [];\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label;\n      if (atom.atomList != null) {\n        label = 'L';\n        atomsIds.push(id);\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A';\n          atomsProps.push({ id, value: `'${atom.pseudo}'` });\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias });\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C';\n        atomsProps.push({ id, value: atom.label });\n      }\n\n      this.writeAtom(atom, label);\n\n      this.mapping[id] = i++;\n    }, this);\n\n    this.bondMapping = {};\n    i = 1;\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++;\n      this.writeBond(bond);\n    }, this);\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0]);\n      atomsProps.splice(0, 1);\n    }\n\n    const chargeList: NumberTuple[] = [];\n    const isotopeList: NumberTuple[] = [];\n    const radicalList: NumberTuple[] = [];\n    const rglabelList: NumberTuple[] = [];\n    const rglogicList: string[] = [];\n    const aplabelList: NumberTuple[] = [];\n    const rbcountList: NumberTuple[] = [];\n    const unsaturatedList: NumberTuple[] = [];\n    const substcountList: NumberTuple[] = [];\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0 && atom.charge !== null) {\n        chargeList.push([id, atom.charge]);\n      }\n      if (atom.isotope !== 0 && atom.isotope !== null) {\n        isotopeList.push([id, atom.isotope]);\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical]);\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1]);\n          }\n        }\n      }\n      if (atom.attachmentPoints != null) {\n        aplabelList.push([id, atom.attachmentPoints]);\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount]);\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount]);\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom]);\n      }\n    });\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range;\n          rglogicList.push(line);\n        }\n      });\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList);\n    this.writeAtomPropList('M  ISO', isotopeList);\n    this.writeAtomPropList('M  RAD', radicalList);\n    this.writeAtomPropList('M  RGP', rglabelList);\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n');\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList);\n    this.writeAtomPropList('M  RBC', rbcountList);\n    this.writeAtomPropList('M  SUB', substcountList);\n    this.writeAtomPropList('M  UNS', unsaturatedList);\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j];\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!;\n        this.write('M  ALS');\n        this.writePaddedNumber(atomId + 1, 4);\n        this.writePaddedNumber(atomList.ids.length, 3);\n        this.writeWhiteSpace();\n        this.write(atomList.notList ? 'T' : 'F');\n\n        const labelList = atomList.labelList();\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace();\n          this.writePadded(labelList[k], 3);\n        }\n        this.writeWhiteSpace();\n        this.writeCR();\n      }\n    }\n\n    const sgmap = {};\n    let cnt = 1;\n    const sgmapback = {};\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS();\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id;\n      sgmap[id] = cnt++;\n    });\n    for (let sGroupIdInCTab = 1; sGroupIdInCTab < cnt; ++sGroupIdInCTab) {\n      // each group on its own\n      const id = sgmapback[sGroupIdInCTab];\n      const sgroup = this.molecule!.sgroups.get(id)!;\n      if (SGroup.isQuerySGroup(sgroup)) {\n        console.warn('Query group does not support in mol format');\n        continue;\n      }\n      this.write('M  STY');\n      this.writePaddedNumber(1, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeWhiteSpace(1);\n      this.writePadded(sgroup.type, 3);\n      this.writeCR();\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB');\n      this.writePaddedNumber(1, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeCR();\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!;\n      if (parentId >= 0) {\n        this.write('M  SPL');\n        this.writePaddedNumber(1, 3);\n        this.writeWhiteSpace(1);\n        this.writePaddedNumber(sGroupIdInCTab, 3);\n        this.writeWhiteSpace(1);\n        this.writePaddedNumber(sgmap[parentId], 3);\n        this.writeCR();\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${sGroupIdInCTab.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`;\n\n        this.write('M  SCN');\n        this.writePaddedNumber(1, 3);\n        this.write(connectivity.toUpperCase());\n        this.writeCR();\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ');\n        this.writePaddedNumber(sGroupIdInCTab, 3);\n        this.writeWhiteSpace();\n        this.write(sgroup.data.subscript || 'n');\n        this.writeCR();\n      }\n      sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n        this.writeSGroupAttachmentPointLine(sGroupIdInCTab, attachmentPoint);\n      });\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping,\n        ),\n      );\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = [];\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.isExpanded() && !SGroup.isQuerySGroup(sg))\n        expandedGroups.push(sg.id + 1);\n    });\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`;\n      this.writeCR(expandedGroupsLine);\n    }\n\n    this.writeCR('M  END');\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4);\n    this.writePaddedFloat(-atom.pp.y, 10, 4);\n    this.writePaddedFloat(atom.pp.z, 10, 4);\n    this.writeWhiteSpace();\n    this.writePadded(atomLabel, 3);\n    this.writePaddedNumber(0, 2);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0;\n    }\n    this.writePaddedNumber(atom.hCount, 3);\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0;\n    }\n    this.writePaddedNumber(atom.stereoCare, 3);\n\n    let number: number;\n    if (atom.explicitValence < 0) {\n      number = 0;\n    } else if (atom.explicitValence === 0) {\n      number = 15;\n    } else {\n      number = atom.explicitValence;\n    }\n    this.writePaddedNumber(number, 3);\n\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0;\n    }\n    this.writePaddedNumber(atom.aam, 3);\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0;\n    }\n    this.writePaddedNumber(atom.invRet, 3);\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0;\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3);\n\n    this.writeCR();\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3);\n    this.writePaddedNumber(this.mapping[bond.end], 3);\n    this.writePaddedNumber(bond.type, 3);\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0;\n    }\n    this.writePaddedNumber(bond.stereo, 3);\n\n    this.writePadded(bond.xxx, 3);\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0;\n    }\n    this.writePaddedNumber(bond.topology, 3);\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0;\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3);\n\n    this.writeCR();\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ');\n    this.writePaddedNumber(props.id + 1, 3);\n    this.writeCR();\n    this.writeCR(props.value);\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = [];\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0]);\n        values.splice(0, 1);\n      }\n\n      this.write(propId);\n      this.writePaddedNumber(part.length, 3);\n\n      part.forEach((value) => {\n        this.writeWhiteSpace();\n        this.writePaddedNumber(this.mapping[value[0]], 3);\n        this.writeWhiteSpace();\n        this.writePaddedNumber(value[1], 3);\n      });\n\n      this.writeCR();\n    }\n  }\n\n  private writeSGroupAttachmentPointLine(\n    sgroupId: number,\n    attachmentPoint: SGroupAttachmentPoint,\n  ) {\n    this.write(`M  SAP`);\n    this.writeWhiteSpace(1);\n    this.writePaddedNumber(sgroupId, 3);\n    this.writePaddedNumber(1, 3);\n    this.writeWhiteSpace(1);\n    const atomId = this.mapping[attachmentPoint.atomId];\n    this.writePaddedNumber(atomId, 3);\n    this.writeWhiteSpace(1);\n    const leaveAtomId =\n      this.mapping[attachmentPoint.leaveAtomId as number] ?? 0;\n    this.writePaddedNumber(leaveAtomId, 3);\n    this.writeWhiteSpace(1);\n\n    const attachmentId = attachmentPoint.attachmentId\n      ? attachmentPoint.attachmentId.slice(0, 2)\n      : '  ';\n    this.writePadded(attachmentId, 2);\n    this.writeCR();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types';\nimport { Molfile } from './molfile';\nimport { Serializer } from '../serializers.types';\nimport { Struct } from 'domain/entities';\nimport { KetcherLogger } from 'utilities';\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false,\n  };\n\n  readonly options: MolSerializerOptions;\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options };\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile();\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g);\n\n    const parseCTFileParams = {\n      molfileLines: lines,\n      shouldReactionRelayout: this.options.reactionRelayout,\n      ignoreChiralFlag: this.options.ignoreChiralFlag,\n    };\n\n    try {\n      return molfile.parseCTFile(parseCTFileParams);\n    } catch (e) {\n      KetcherLogger.error('molSerializer::MolSerializer::deserialize', e);\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: lines.slice(1),\n          });\n        } catch (e1) {\n          KetcherLogger.error('molSerializer::MolSerializer::deserialize', e1);\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: [''].concat(lines),\n          });\n        } catch (e2) {\n          KetcherLogger.error('molSerializer::MolSerializer::deserialize', e2);\n        }\n      }\n      throw e;\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc,\n      this.options.ignoreChiralFlag,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities';\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol;\n  this.bonds = new Pool();\n  this.getNeighbors = neighborsFunc;\n  this.context = context;\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2,\n};\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func);\n};\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity;\n};\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents;\n};\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end);\n  const norm = new Vec2(-diff.y, diff.x);\n\n  if (!norm.normalize()) return 0;\n\n  const normBeg = Vec2.diff(neiBeg, beg);\n  const normEnd = Vec2.diff(neiEnd, end);\n\n  if (!normBeg.normalize()) return 0;\n  if (!normEnd.normalize()) return 0;\n\n  const prodBeg = Vec2.dot(normBeg, norm);\n  const prodEnd = Vec2.dot(normEnd, norm);\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0;\n\n  return prodBeg * prodEnd > 0 ? 1 : -1;\n};\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp,\n  );\n};\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen();\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen();\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen();\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen();\n\n  if (h0 && h1) return false;\n  if (h2 && h3) return false;\n\n  if (h1) {\n    substituents[1] = -1;\n  } else if (h0) {\n    substituents[0] = substituents[1];\n    substituents[1] = -1;\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1);\n  }\n\n  if (h3) {\n    substituents[3] = -1;\n  } else if (h2) {\n    substituents[2] = substituents[3];\n    substituents[3] = -1;\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3);\n  }\n\n  return true;\n};\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx);\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false;\n\n  const label1 = this.molecule.atoms.get(bond.begin).label;\n  const label2 = this.molecule.atoms.get(bond.end).label;\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false;\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false;\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin);\n  const neiEnd = this.getNeighbors.call(this.context, bond.end);\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false;\n  }\n\n  substituents[0] = -1;\n  substituents[1] = -1;\n  substituents[2] = -1;\n  substituents[3] = -1;\n\n  let i;\n  let nei;\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i];\n\n    if (nei.bid === bondIdx) continue; // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false;\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid;\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid;\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i];\n\n    if (nei.bid === bondIdx) continue; // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false;\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid;\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid;\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false;\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: [],\n    };\n    this.bonds.set(bid, ct);\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return;\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return;\n\n    if (!this.sortSubstituents(ct.substituents)) return;\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2],\n    );\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS;\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS;\n  });\n};\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = tmp;\n}\n\nexport default CisTrans;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol;\n  this.atom_data = atomData;\n  this.components = components;\n  this.nComponentsInReactants = -1;\n  this.nReactants = nReactants;\n\n  this.vertices = new Array(this.molecule.atoms.size); // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc();\n  }, this);\n\n  this.edges = new Array(this.molecule.bonds.size); // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc();\n  }, this);\n\n  this.v_seq = [];\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0; // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0; // parent vertex in DFS tree\n  this.parent_edge = 0; // edge to parent vertex\n  this.branches = 0; // how many DFS branches go out from this vertex}\n};\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0; // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0; // 1 if this edge closes a cycle\n};\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx; // index of vertex in _graph\n  this.parent_vertex = parVertex; // parent vertex in DFS tree\n  this.parent_edge = parEdge; // edge to parent vertex\n};\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = [];\n  let i, j;\n  let cid = 0;\n  let component = 0;\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1;\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid;\n            return true;\n          }\n          return false;\n        });\n        if (selected === null) {\n          selected = -1;\n          cid++;\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component;\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid;\n            return true;\n          }\n          return false;\n        });\n      }\n      if (selected === -1) break;\n      this.vertices[selected].parent_vertex = -1;\n      this.vertices[selected].parent_edge = -1;\n      vStack.push(selected);\n      component++;\n    }\n\n    const vIdx = vStack.pop();\n    const parentVertex = this.vertices[vIdx].parent_vertex;\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge,\n    );\n    this.v_seq.push(seqElem);\n\n    this.vertices[vIdx].dfs_state = 2;\n\n    const atomD = this.atom_data[vIdx];\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid;\n      const edgeIdx = atomD.neighbours[i].bid;\n\n      if (neiIdx === parentVertex) continue; // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1;\n\n        j = vIdx;\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex;\n        }\n\n        if (j === -1) throw new Error('cycle unwind error');\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++;\n        this.vertices[vIdx].branches++;\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx);\n        this.v_seq.push(seqElem);\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx);\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack');\n          }\n\n          vStack.splice(j, 1);\n\n          const parent = this.vertices[neiIdx].parent_vertex;\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--;\n          }\n        }\n\n        this.vertices[vIdx].branches++;\n        this.vertices[neiIdx].parent_vertex = vIdx;\n        this.vertices[neiIdx].parent_edge = edgeIdx;\n        this.vertices[neiIdx].dfs_state = 1;\n        vStack.push(neiIdx);\n      }\n    }\n  }\n};\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0;\n};\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches;\n};\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles;\n};\n\nDfs.prototype.toString = function () {\n  let str = '';\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> ';\n  });\n  str += '*';\n  return str;\n};\n\nexport default Dfs;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities';\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol;\n  this.atoms = new Pool();\n  this.getNeighbors = neighborsFunc;\n  this.context = context;\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context);\n};\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors,\n) {\n  const atoms = this.molecule.atoms;\n  const bonds = this.molecule.bonds;\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile();\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid);\n    if (neiList.length !== 2) return false;\n    const nei1 = neiList[0];\n    const nei2 = neiList[1];\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this,\n      ) >= 0\n    ) {\n      return false;\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this,\n      ) >= 0\n    ) {\n      return false;\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid);\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid);\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false;\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this,\n        ) >= 0\n    ) {\n      return false;\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this,\n        ) >= 0\n    ) {\n      return false;\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid);\n    return true;\n  });\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return;\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid);\n      let stereocenter = false;\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid);\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true;\n            return true;\n          }\n        }\n        return false;\n      }, this);\n\n      if (!stereocenter) return;\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */,\n        );\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */,\n        );\n      }\n    });\n  }\n};\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 },\n];\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */,\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx);\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx);\n  const degree = neiList.length;\n  let implicitDegree = -1;\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: [],\n  };\n\n  const edgeIds = [];\n\n  let lastAtomDir = 0;\n  let nDoubleBonds = 0;\n\n  stereocenter.pyramid[0] = -1;\n  stereocenter.pyramid[1] = -1;\n  stereocenter.pyramid[2] = -1;\n  stereocenter.pyramid[3] = -1;\n\n  let nPureHydrogens = 0;\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree);\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid);\n    const bond = this.molecule.bonds.get(nei.bid);\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement(),\n    };\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++;\n      edgeIds[neiIdx].rank = 10000;\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000;\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length');\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter');\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter');\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++;\n  });\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree;\n      return true;\n    }\n    return false;\n  });\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)',\n    );\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter');\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter',\n    );\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n\n    var main1 = -1;\n    let main2 = -1;\n    var side1 = -1;\n    var side2 = -1;\n    var mainDir = 0;\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx;\n        mainDir = stereo;\n        break;\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond');\n    }\n\n    let xyz1, xyz2;\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4;\n        side1 = (main1 + 2) % 4;\n        side2 = (main1 + 3) % 4;\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4;\n        side1 = (main1 + 1) % 4;\n        side2 = (main1 + 3) % 4;\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4;\n        side1 = (main1 + 2) % 4;\n        side2 = (main1 + 1) % 4;\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond');\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch');\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch');\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match');\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match');\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir;\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP;\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec,\n    );\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx;\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx);\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx);\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx);\n\n    let nUp = 0;\n    let nDown = 0;\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom');\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom');\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case');\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case');\n      }\n\n      mainDir = 0;\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN;\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP;\n      } else {\n        main1 = -1;\n        side1 = -1;\n        side2 = -1;\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx;\n            mainDir = dir;\n            side1 = (neiIdx + 1) % 3;\n            side2 = (neiIdx + 2) % 3;\n            break;\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond');\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec,\n        );\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom');\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir;\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP;\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec,\n      );\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n      }\n\n      stereocenter.pyramid[3] = -1;\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      let dir;\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case');\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter');\n      } else if (nUp > 0) dir = 1;\n      else dir = -1;\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir;\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec,\n      );\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n      }\n      stereocenter.pyramid[3] = -1;\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter);\n};\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx);\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0;\n  }\n\n  return bond.stereo;\n};\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001;\n\n  const sine1 = Vec2.cross(v1, v2);\n  const cosine1 = Vec2.dot(v1, v2);\n\n  const sine2 = Vec2.cross(v1, u);\n  const cosine2 = Vec2.dot(v1, u);\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap');\n    }\n\n    return sine2 > 0 ? 4 : 8;\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2;\n\n  if (cosine2 < cosine1) return 2;\n\n  return 1;\n};\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x); // eslint-disable-line no-mixed-operators\n  const eps = 0.001;\n\n  if (res > eps) return 1;\n  if (res < -eps) return -1;\n\n  throw new Error('degenerate triangle');\n};\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice();\n  let rigid = true;\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n\n  return rigid;\n};\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = tmp;\n}\n\nexport default Stereocenters;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities';\nimport { KetcherLogger } from 'utilities';\n\nimport CisTrans from './cis_trans';\nimport Dfs from './dfs';\nimport Stereocenters from './stereocenters';\n\nexport function Smiles() {\n  this.smiles = '';\n  this.writtenAtoms = [];\n  this.writtenComponents = 0;\n\n  this.ignoreErrors = false;\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = []; // Array of integer pairs {a, b}\n  this.aromatic = false; // has aromatic bond\n  this.lowercase = false; // aromatic and has to be written lowercase\n  this.chirality = 0; // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0; // runs from 0 to (branches - 1)\n  this.paren_written = false;\n  this.h_count = hCount;\n  this.parent = -1;\n};\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid];\n};\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k;\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors;\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined,\n  );\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.sortNeighbors();\n  struct.setImplicitHydrogen();\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct);\n      } catch (error) {\n        KetcherLogger.error('smiles.js::Smiles.prototype.saveMolecule', error);\n        throw Error('Bad s-group (' + error.message + ')');\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  });\n  // END\n\n  this.atoms = new Array(struct.atoms.size);\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH); // eslint-disable-line no-underscore-dangle\n  });\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As'];\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true;\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true;\n      }\n      this.atoms[bond.end].aromatic = true;\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true;\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid });\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid });\n  });\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure();\n    let bondsInLoops = new Pile();\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid);\n        bondsInLoops = bondsInLoops.union(new Pile(hbids));\n      }\n    });\n    const inLoop = {};\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1;\n    });\n    return inLoop;\n  })();\n\n  this.touchedCistransbonds = 0;\n  this.markCisTrans(struct);\n\n  const components = struct.getComponents();\n  const componentsAll = components.reactants.concat(components.products);\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length,\n  );\n\n  walk.walk();\n  this.atoms.forEach((atom) => {\n    atom.neighbours = [];\n  });\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i];\n    var vIdx = seqEl.idx;\n    var eIdx = seqEl.parent_edge;\n    var vPrevIdx = seqEl.parent_vertex;\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx];\n\n      var openingCycles = walk.numOpeningCycles(eIdx);\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 });\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx;\n            atom.neighbours[k].bid = eIdx;\n            break;\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place');\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx });\n        atom.parent = vPrevIdx;\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx });\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours;\n      },\n      this,\n    );\n    stereocenters.buildFromBonds(this.ignoreErrors);\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1;\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3;\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = [];\n      let counter = 0;\n\n      const atom = this.atoms[atomIdx];\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k;\n            break;\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx;\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue; // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow');\n            pyramidMapping[counter++] = k;\n            break;\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0];\n        pyramidMapping[0] = pyramidMapping[1];\n        pyramidMapping[1] = pyramidMapping[2];\n        pyramidMapping[2] = pyramidMapping[3];\n        pyramidMapping[3] = counter;\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality');\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1;\n      } else this.atoms[atomIdx].chirality = 2;\n    });\n  } catch (e) {\n    KetcherLogger.error('smiles.js::Smiles.prototype.saveMolecule', e);\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = [];\n\n  cycleNumbers.push(0); // never used\n\n  let firstComponent = true;\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i];\n    vIdx = seqEl.idx;\n    eIdx = seqEl.parent_edge;\n    vPrevIdx = seqEl.parent_vertex;\n    let writeAtom = true;\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')';\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx);\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break;\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx);\n        else cycleNumbers[k] = vPrevIdx;\n\n        this.writeCycleNumber(k);\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx);\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false;\n          } else {\n            this.smiles += '(';\n            this.atoms[vPrevIdx].paren_written = true;\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++;\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch');\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx);\n\n      let dir = 0;\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx);\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/';\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\';\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~';\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '=';\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#';\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:';\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:';\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,=';\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':';\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-';\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break;\n        }\n\n        if (j === cycleNumbers.length)\n          throw new Error('cycle number not found');\n\n        this.writeCycleNumber(j);\n\n        cycleNumbers[j] = -1;\n        writeAtom = false;\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.'; // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false;\n      this.writtenComponents++;\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality,\n      );\n      this.writtenAtoms.push(seqEl.idx);\n    }\n  }\n\n  this.comma = false;\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct);\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|';\n\n  return this.smiles;\n};\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n;\n  else if (n >= 10 && n < 100) this.smiles += '%' + n;\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n;\n  else throw new Error('bad cycle number: ' + n);\n};\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality,\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx);\n  let needBrackets = false;\n  let hydro = -1;\n  let aam = 0;\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*';\n    return;\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]';\n    return;\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam;\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true;\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count;\n  }\n\n  let label = atom.label;\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label();\n    needBrackets = false; // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*';\n    needBrackets = false;\n  } else if (\n    chirality ||\n    (atom.charge !== 0 && atom.charge !== null) ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true;\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count;\n    this.smiles += '[';\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope;\n\n  if (lowercase) this.smiles += label.toLowerCase();\n  else this.smiles += label;\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@';\n    // chirality == 2\n    else this.smiles += '@@';\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter');\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro;\n    else if (hydro === 1) this.smiles += 'H';\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge;\n  else if (atom.charge < -1) this.smiles += atom.charge;\n  else if (atom.charge === 1) this.smiles += '+';\n  else if (atom.charge === -1) this.smiles += '-';\n\n  if (aam > 0) this.smiles += ':' + aam;\n\n  if (needBrackets) this.smiles += ']';\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n};\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours;\n    },\n    this,\n  );\n  this.cis_trans.build();\n  this.dbonds = new Array(mol.bonds.size);\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0,\n    };\n  });\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid);\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours;\n      const neiEnd = this.atoms[bond.end].neighbours;\n      let aromFailBeg = true;\n      let aromFailEnd = true;\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false;\n        }\n      });\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false;\n        }\n      });\n\n      if (aromFailBeg || aromFailEnd) return;\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return;\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid;\n        } else this.dbonds[nei.bid].ctbond_end = bid;\n      });\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return;\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid;\n        } else this.dbonds[nei.bid].ctbond_end = bid;\n      });\n    }\n  });\n};\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx);\n  const subst = this.cis_trans.getSubstituents(bondIdx);\n  const parity = this.cis_trans.getParity(bondIdx);\n\n  const sidebonds = [-1, -1, -1, -1];\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin);\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin);\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end);\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end);\n\n  let n1 = 0;\n  let n2 = 0;\n  let n3 = 0;\n  let n4 = 0;\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++;\n    } else n2++;\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++;\n    } else n2++;\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++;\n    } else n4++;\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++;\n    } else n4++;\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3;\n    n2 += n4;\n  } else {\n    n1 += n4;\n    n2 += n3;\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration');\n\n  if (n1 === 0 && n2 === 0) return false;\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2;\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1;\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2;\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1;\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1;\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2;\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1;\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2;\n    }\n  }\n\n  return true;\n};\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched;\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0;\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type);\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0;\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++;\n      }\n    });\n    if (ntouched === this.touchedCistransbonds) break;\n    this.touchedCistransbonds = ntouched;\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1;\n    else this.dbonds[idx].saved = 2;\n  }\n\n  return this.dbonds[idx].saved;\n};\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length);\n  let i, j;\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue; // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical;\n\n    if (radical === 0) continue; // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ',';\n    } else {\n      this.smiles += ' |';\n      this.comma = true;\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:';\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:';\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:';\n\n    this.smiles += i;\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true;\n        this.smiles += ',' + j;\n      }\n    }\n  }\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types';\nimport { SmiSerializerOptions } from './smi.types';\nimport { Smiles } from './smiles';\nimport { Struct } from 'domain/entities';\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false,\n  };\n\n  private readonly options: SmiSerializerOptions;\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options };\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.');\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types';\n\nimport { MolSerializer } from '../mol/molSerializer';\nimport { Serializer } from '../serializers.types';\nimport { MolSerializerOptions } from '../mol';\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm;\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  private readonly molSerializerOptions?: Partial<MolSerializerOptions>;\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.molSerializerOptions = options;\n  }\n\n  deserialize(content: string): Array<SdfItem> {\n    let m: any;\n    const result: Array<SdfItem> = [];\n    const molSerializer = new MolSerializer(this.molSerializerOptions);\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim(); // TODO: normalize newline?\n      const end = chunk.indexOf('M  END');\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m);\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6));\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/);\n            if (m) {\n              const field = m[1];\n              const valueArr = pc.split('\\n').slice(1, -1);\n              let value = '';\n              if (valueArr.length > 1) {\n                value = valueArr.join(',');\n              } else {\n                value = pc.split('\\n')[1].trim();\n              }\n\n              acc[field] = Number.isFinite(value) ? +value : value.toString(); // eslint-disable-line\n            }\n            return acc;\n          },\n          {} as StructAssociatedData,\n        );\n\n        result.push({ struct, props });\n      }\n    }\n    return result;\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer(this.molSerializerOptions);\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct);\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`;\n        res += `${item.props[prop]}\\n\\n`;\n      });\n\n      return `${res}$$$$\\n`;\n    }, '');\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { StructFormatter } from './structFormatter.types';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { EditorSelection } from 'application/editor';\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer;\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer;\n  }\n\n  async getStructureFromStructAsync(\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n    selection?: EditorSelection,\n  ): Promise<string> {\n    const ket = this.#ketSerializer.serialize(\n      struct,\n      drawingEntitiesManager,\n      selection,\n    );\n    return ket;\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content);\n  }\n\n  parseMacromoleculeString(content: string): void {\n    this.#ketSerializer.deserializeMicromolecules(content);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer, SmiSerializer } from 'domain/serializers';\nimport { StructFormatter, SupportedFormat } from './structFormatter.types';\nimport { StructService, StructServiceOptions } from 'domain/services';\n\nimport { ServerFormatter } from './serverFormatter';\nimport { Struct } from 'domain/entities';\n\nexport class SmilesFormatter implements StructFormatter {\n  #smiSerializer: SmiSerializer;\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n  #format: SupportedFormat;\n  #options?: StructServiceOptions;\n\n  constructor(\n    smiSerializer: SmiSerializer,\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions,\n  ) {\n    this.#smiSerializer = smiSerializer;\n    this.#ketSerializer = ketSerializer;\n    this.#structService = structService;\n    this.#format = format;\n    this.#options = options;\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#smiSerializer.serialize(struct);\n    return stringifiedMolfile;\n  }\n\n  getStructureFromStringAsync(stringifiedStruct: string): Promise<Struct> {\n    const serverFormatter = new ServerFormatter(\n      this.#structService,\n      this.#ketSerializer,\n      this.#format,\n      this.#options,\n    );\n\n    return serverFormatter.getStructureFromStringAsync(stringifiedStruct);\n  }\n\n  static isContainsCoordinates(smiles: string) {\n    return /\\([\\d.,;-]+\\)/.test(smiles);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions,\n} from 'domain/services';\nimport { StructFormatter, SupportedFormat } from './structFormatter.types';\n\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { getPropertiesByFormat } from './formatProperties';\nimport { KetcherLogger } from 'utilities';\nimport { SmilesFormatter } from './smilesFormatter';\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions,\n) => Promise<ConvertResult>;\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions,\n) => Promise<LayoutResult>;\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n  #format: SupportedFormat;\n  #options?: StructServiceOptions;\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions,\n  ) {\n    this.#structService = structService;\n    this.#ketSerializer = ketSerializer;\n    this.#format = format;\n    this.#options = options;\n  }\n\n  async getStructureFromStructAsync(\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n  ): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format);\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(\n        struct,\n        drawingEntitiesManager,\n      );\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime,\n        },\n        { ...this.#options, ...formatProperties.options },\n      );\n\n      return convertResult.struct;\n    } catch (e: any) {\n      let message;\n      if (e.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`;\n      } else {\n        message = `Convert error!\\n${e.message || e}`;\n      }\n      KetcherLogger.error('serverFormatter.ts::getStructureFromStructAsync', e);\n      throw new Error(message);\n    }\n  }\n\n  getCallingMethod(\n    stringifiedStruct: string,\n    format: SupportedFormat,\n  ): {\n    method: LayoutPromise | ConvertPromise;\n    struct: string;\n  } {\n    if (this.#format === SupportedFormat.smiles) {\n      return {\n        method: SmilesFormatter.isContainsCoordinates(stringifiedStruct)\n          ? this.#structService.convert\n          : this.#structService.layout,\n        struct: stringifiedStruct,\n      };\n    }\n    const withCoords = getPropertiesByFormat(format).supportsCoords;\n    if (withCoords) {\n      return {\n        method: this.#structService.convert,\n        struct: stringifiedStruct,\n      };\n    }\n    return {\n      method: this.#structService.layout,\n      struct: stringifiedStruct.trim(),\n    };\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string,\n  ): Promise<Struct> {\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat(SupportedFormat.ket).mime,\n    };\n\n    const { method, struct } = this.getCallingMethod(\n      stringifiedStruct,\n      this.#format,\n    );\n    data.struct = struct;\n\n    try {\n      const result = await method(data, this.#options);\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct);\n      if (method === this.#structService.layout) {\n        parsedStruct.rescale();\n      }\n      return parsedStruct;\n    } catch (e: any) {\n      if (e.message !== 'Server is not compatible') {\n        KetcherLogger.error(\n          'serverFormatter.ts::getStructureFromStringAsync',\n          e,\n        );\n        throw Error(`Convert error!\\n${e.message || e}`);\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${\n              getPropertiesByFormat(SupportedFormat.smilesExt).name\n            } and opening of ${\n              getPropertiesByFormat(SupportedFormat.smiles).name\n            }`\n          : getPropertiesByFormat(this.#format).name;\n\n      throw Error(`${formatError} is not supported in standalone mode.`);\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { StructFormatter } from './structFormatter.types';\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer;\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer;\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct);\n    return stringifiedMolfile;\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string,\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct);\n    return struct;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat,\n} from './structFormatter.types';\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions,\n} from 'domain/serializers';\nimport { StructService, StructServiceOptions } from 'domain/services';\nimport { KetFormatter } from './ketFormatter';\nimport { ServerFormatter } from './serverFormatter';\nimport { MolfileV2000Formatter } from './molfileV2000Formatter';\n\nexport class FormatterFactory {\n  #structService: StructService;\n\n  constructor(structService: StructService) {\n    this.#structService = structService;\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions,\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}];\n    }\n\n    const {\n      reactionRelayout,\n      badHeaderRecover,\n      ignoreChiralFlag,\n      ...structServiceOptions\n    } = options;\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {};\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout;\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover;\n    }\n\n    if (typeof ignoreChiralFlag === 'boolean') {\n      molfileParseOptions.ignoreChiralFlag = ignoreChiralFlag;\n      structServiceOptions['ignore-no-chiral-flag'] = ignoreChiralFlag;\n    }\n\n    return [molfileParseOptions, structServiceOptions];\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions,\n    queryPropertiesAreUsed?: boolean,\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options);\n\n    let formatter: StructFormatter;\n    switch (format) {\n      case SupportedFormat.ket:\n        formatter = new KetFormatter(new KetSerializer());\n        break;\n\n      case SupportedFormat.mol:\n        if (queryPropertiesAreUsed) {\n          formatter = new ServerFormatter(\n            this.#structService,\n            new KetSerializer(),\n            format,\n            structServiceOptions,\n          );\n        } else {\n          formatter = new MolfileV2000Formatter(\n            new MolSerializer(molSerializerOptions),\n          );\n        }\n        break;\n\n      case SupportedFormat.cml:\n      case SupportedFormat.inChIAuxInfo:\n      case SupportedFormat.inChI:\n      case SupportedFormat.inChIKey:\n      case SupportedFormat.molV3000:\n      case SupportedFormat.smiles:\n      case SupportedFormat.rxnV3000:\n      case SupportedFormat.smilesExt:\n      case SupportedFormat.smarts:\n      case SupportedFormat.cdxml:\n      case SupportedFormat.cdx:\n      case SupportedFormat.binaryCdx:\n      case SupportedFormat.unknown:\n      case SupportedFormat.rxn:\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions,\n        );\n    }\n\n    return formatter;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetcherLogger } from 'utilities';\nimport { SupportedFormat } from './structFormatter.types';\n\nexport function identifyStructFormat(\n  stringifiedStruct: string,\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim();\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return SupportedFormat.ket;\n    }\n  } catch (e) {\n    KetcherLogger.error('identifyStructFormat.ts::identifyStructFromat', e);\n  } // eslint-disable-line\n\n  const isRXN = sanitizedString.includes('$RXN');\n  const isSDF = sanitizedString.includes('\\n$$$$');\n  const isV2000 = sanitizedString.includes('V2000');\n  const isV3000 = sanitizedString.includes('V3000');\n\n  if (isRXN) {\n    return SupportedFormat.rxn;\n  }\n\n  if (isSDF) {\n    if (isV2000) {\n      return SupportedFormat.sdf;\n    } else {\n      return SupportedFormat.sdfV3000;\n    }\n  }\n\n  if (isV2000) {\n    return SupportedFormat.mol;\n  }\n\n  if (isV3000) {\n    return SupportedFormat.molV3000;\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m);\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length;\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return SupportedFormat.mol;\n    }\n  }\n\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return SupportedFormat.cml;\n  }\n\n  const clearStr = sanitizedString\n    .replace(/\\s/g, '')\n    .replace(/(\\\\r)|(\\\\n)/g, '');\n  const isBase64String =\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  const cdxHeader = 'VjCD0100';\n  if (\n    clearStr.length % 4 === 0 &&\n    isBase64String.test(clearStr) &&\n    window.atob(clearStr).startsWith(cdxHeader)\n  ) {\n    return SupportedFormat.cdx;\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return SupportedFormat.inChI;\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return SupportedFormat.smiles;\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return SupportedFormat.cdxml;\n  }\n\n  return SupportedFormat.unknown;\n}\n","import { Struct, Vec2 } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat,\n} from './formatters';\nimport { Ketcher } from './ketcher';\nimport { ChemicalMimeType, StructService } from 'domain/services';\nimport { Coordinates, CoreEditor, EditorHistory } from './editor/internal';\nimport { KetSerializer } from 'domain/serializers';\nimport assert from 'assert';\n\nclass KetcherProvider {\n  private ketcherInstance: Ketcher | undefined;\n\n  setKetcherInstance(ketcherInstance: Ketcher) {\n    this.ketcherInstance = ketcherInstance;\n  }\n\n  getKetcher() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.ketcherInstance!;\n  }\n}\n\nconst ketcherProvider = new KetcherProvider();\n\nexport { ketcherProvider };\n\nexport function getStructure(\n  structureFormat = SupportedFormat.rxn,\n  formatterFactory: FormatterFactory,\n  struct: Struct,\n  drawingEntitiesManager?: DrawingEntitiesManager,\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat);\n  return formatter.getStructureFromStructAsync(struct, drawingEntitiesManager);\n}\n\nexport async function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher,\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance,\n  );\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.setImplicitHydrogen();\n  struct.markFragments();\n\n  return struct;\n}\n\nexport function parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher,\n) {\n  const format = identifyStructFormat(structStr);\n  const factory = new FormatterFactory(structService);\n  const options = ketcherInstance.editor.options();\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load'],\n    'ignore-no-chiral-flag': options.ignoreChiralFlag,\n  });\n  return service.getStructureFromStringAsync(structStr);\n}\n\nexport function deleteAllEntitiesOnCanvas() {\n  const editor = CoreEditor.provideEditorInstance();\n  const modelChanges = editor.drawingEntitiesManager.deleteAllEntities();\n  editor.renderersContainer.update(modelChanges);\n}\n\nexport async function parseAndAddMacromoleculesOnCanvas(\n  struct: string,\n  structService: StructService,\n) {\n  const editor = CoreEditor.provideEditorInstance();\n  const ketSerializer = new KetSerializer();\n  const format = identifyStructFormat(struct);\n  let ketStruct = struct;\n  if (format !== SupportedFormat.ket) {\n    ketStruct = (\n      await structService.convert({\n        struct,\n        output_format: ChemicalMimeType.KET,\n      })\n    ).struct;\n  }\n\n  const deserialisedKet = ketSerializer.deserializeToDrawingEntities(ketStruct);\n  assert(deserialisedKet);\n  const modelChanges = deserialisedKet.drawingEntitiesManager.mergeInto(\n    editor.drawingEntitiesManager,\n  );\n\n  new EditorHistory(editor).update(modelChanges);\n  editor.renderersContainer.update(modelChanges);\n}\n\nexport function getCurrentCenterPointOfCanvas() {\n  const editor = CoreEditor.provideEditorInstance();\n  const originalCenterPointOfCanvas = new Vec2(\n    editor.canvasOffset.width / 2,\n    editor.canvasOffset.height / 2,\n  );\n  return Coordinates.viewToCanvas(originalCenterPointOfCanvas);\n}\n","import { Chain } from 'domain/entities/monomer-chains/Chain';\nimport {\n  BaseMonomer,\n  Chem,\n  IsChainCycled,\n  Peptide,\n  Phosphate,\n  RNABase,\n  Sugar,\n} from 'domain/entities';\nimport {\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n} from 'domain/helpers/monomers';\n\nexport class ChainsCollection {\n  public chains: Chain[] = [];\n\n  public rearrange() {\n    this.chains.sort((chain1, chain2) => {\n      if (\n        chain2.firstNode?.monomer.position.x +\n          chain2.firstNode?.monomer.position.y >\n        chain1.firstNode?.monomer.position.x +\n          chain1.firstNode?.monomer.position.y\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n  }\n\n  public add(chain: Chain) {\n    this.chains.push(chain);\n  }\n\n  public static fromMonomers(monomers: BaseMonomer[]) {\n    const chainsCollection = new ChainsCollection();\n    const [firstMonomersInRegularChains, firstMonomersInCycledChains] =\n      this.getFirstMonomersInChains(monomers);\n\n    firstMonomersInRegularChains.forEach((monomer) => {\n      chainsCollection.add(new Chain(monomer));\n    });\n\n    firstMonomersInCycledChains.forEach((monomer) => {\n      chainsCollection.add(new Chain(monomer, !!IsChainCycled.CYCLED));\n    });\n\n    return chainsCollection;\n  }\n\n  public static getFirstMonomersInChains(\n    monomers: BaseMonomer[],\n    MonomerTypes: Array<\n      | typeof Peptide\n      | typeof Chem\n      | typeof Phosphate\n      | typeof Sugar\n      | typeof RNABase\n    > = [Peptide, Chem, Phosphate, Sugar, RNABase],\n  ) {\n    const monomersList = monomers.filter((monomer) =>\n      MonomerTypes.some((MonomerType) => monomer instanceof MonomerType),\n    );\n\n    const firstMonomersInChains: BaseMonomer[][] = [];\n\n    const firstMonomersInRegularChains =\n      this.getFirstMonomersInRegularChains(monomersList);\n\n    const firstMonomersInCycledChains =\n      this.getFirstMonomersInCycledChains(monomersList);\n\n    firstMonomersInChains.push(\n      firstMonomersInRegularChains,\n      firstMonomersInCycledChains,\n    );\n\n    return firstMonomersInChains;\n  }\n\n  public get firstNode() {\n    return this.chains[0]?.subChains[0]?.nodes[0];\n  }\n\n  private static getFirstMonomersInRegularChains(\n    monomersList: BaseMonomer[],\n  ): BaseMonomer[] {\n    const firstMonomersInRegularChains = monomersList.filter((monomer) => {\n      const R1PolymerBond = monomer.attachmentPointsToBonds.R1;\n      const isFirstMonomerWithR2R1connection =\n        !R1PolymerBond || R1PolymerBond.isSideChainConnection;\n\n      const R1ConnectedMonomer = R1PolymerBond?.getAnotherMonomer(monomer);\n      const isRnaBaseConnectedToSugar =\n        monomer instanceof RNABase &&\n        R1ConnectedMonomer instanceof Sugar &&\n        getRnaBaseFromSugar(R1ConnectedMonomer) === monomer;\n      const isSugarConnectedToR2RnaBase =\n        monomer instanceof Sugar &&\n        R1ConnectedMonomer instanceof RNABase &&\n        getRnaBaseFromSugar(monomer) &&\n        R1ConnectedMonomer.attachmentPointsToBonds.R2?.getAnotherMonomer(\n          R1ConnectedMonomer,\n        ) === monomer;\n\n      return (\n        (isFirstMonomerWithR2R1connection || isSugarConnectedToR2RnaBase) &&\n        !isRnaBaseConnectedToSugar\n      );\n    });\n\n    return firstMonomersInRegularChains;\n  }\n\n  private static getFirstMonomersInCycledChains(\n    monomersList: BaseMonomer[],\n  ): BaseMonomer[] {\n    const handledMonomers = new Set<BaseMonomer>();\n    const cyclicChains: BaseMonomer[][] = [];\n\n    monomersList.forEach((monomer) => {\n      if (handledMonomers.has(monomer)) {\n        return;\n      }\n\n      const monomersInSameChain = new Set<BaseMonomer>();\n      monomersInSameChain.add(monomer);\n      handledMonomers.add(monomer);\n      let nextMonomerInChain = getNextMonomerInChain(monomer);\n\n      while (nextMonomerInChain && !handledMonomers.has(nextMonomerInChain)) {\n        monomersInSameChain.add(nextMonomerInChain);\n        handledMonomers.add(nextMonomerInChain);\n        nextMonomerInChain = getNextMonomerInChain(nextMonomerInChain);\n      }\n\n      if (monomer === nextMonomerInChain) {\n        cyclicChains.push(Array.from(monomersInSameChain));\n      }\n    });\n\n    const firstMonomersOfCycledChainsSet = cyclicChains.map((cyclicChain) =>\n      this.getMonomerWithLowerCoordsFromMonomerList(cyclicChain),\n    );\n\n    return firstMonomersOfCycledChainsSet;\n  }\n\n  private static getMonomerWithLowerCoordsFromMonomerList(\n    monomerList: BaseMonomer[],\n  ): BaseMonomer {\n    const monomerListShallowCopy = monomerList.slice();\n\n    monomerListShallowCopy.sort((monomer1, monomer2) => {\n      if (\n        monomer2.position.x + monomer2.position.y >\n        monomer1.position.x + monomer1.position.y\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    const monomerWithLowerCoords = monomerListShallowCopy[0];\n\n    return monomerWithLowerCoords;\n  }\n}\n","import { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { Command } from 'domain/entities/Command';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport {\n  BaseMonomer,\n  Chem,\n  Peptide,\n  Phosphate,\n  Pool,\n  RNABase,\n  SGroupForest,\n  Struct,\n  Sugar,\n} from 'domain/entities';\nimport {\n  AttachmentPointHoverOperation,\n  MonomerAddOperation,\n  MonomerDeleteOperation,\n  MonomerHoverOperation,\n  MonomerMoveOperation,\n} from 'application/editor/operations/monomer';\nimport {\n  DrawingEntityHoverOperation,\n  DrawingEntityMoveOperation,\n  DrawingEntityRedrawOperation,\n  DrawingEntitySelectOperation,\n} from 'application/editor/operations/drawingEntity';\nimport {\n  PolymerBondAddOperation,\n  PolymerBondCancelCreationOperation,\n  PolymerBondDeleteOperation,\n  PolymerBondFinishCreationOperation,\n  PolymerBondMoveOperation,\n  PolymerBondShowInfoOperation,\n} from 'application/editor/operations/polymerBond';\nimport {\n  MONOMER_CONST,\n  monomerFactory,\n} from 'application/editor/operations/monomer/monomerFactory';\nimport { Coordinates, CoreEditor } from 'application/editor/internal';\nimport { getCurrentCenterPointOfCanvas } from 'application/utils';\nimport {\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { RNA_MONOMER_DISTANCE } from 'application/editor/tools/RnaPreset';\nimport { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { SequenceRenderer } from 'application/render/renderers/sequence/SequenceRenderer';\nimport { Nucleoside } from './Nucleoside';\nimport { Nucleotide } from './Nucleotide';\nimport { SequenceMode } from 'application/editor/modes/SequenceMode';\n\nconst HORIZONTAL_DISTANCE_FROM_MONOMER = 25;\nconst VERTICAL_DISTANCE_FROM_MONOMER = 30;\nconst DISTANCE_FROM_RIGHT = 55;\nconst DISTANCE_BETWEEN_MONOMERS = 15;\nconst MONOMER_START_X_POSITION = 50;\nconst MONOMER_START_Y_POSITION = 50;\n\ntype RnaPresetAdditionParams = {\n  sugar: MonomerItemType;\n  sugarPosition: Vec2;\n  rnaBase: MonomerItemType | undefined;\n  rnaBasePosition: Vec2 | undefined;\n  phosphate: MonomerItemType | undefined;\n  phosphatePosition: Vec2 | undefined;\n};\n\ntype NucleotideOrNucleoside = {\n  sugar: Sugar;\n  phosphate?: Phosphate;\n  rnaBase: RNABase;\n  baseMonomer: Sugar | Phosphate;\n};\n\nexport class DrawingEntitiesManager {\n  public monomers: Map<number, BaseMonomer> = new Map();\n  public polymerBonds: Map<number, PolymerBond> = new Map();\n  public micromoleculesHiddenEntities: Struct = new Struct();\n  get selectedEntities() {\n    return this.allEntities.filter(\n      ([, drawingEntity]) => drawingEntity.selected,\n    );\n  }\n\n  get allEntities() {\n    return [\n      ...(this.monomers as Map<number, DrawingEntity>),\n      ...(this.polymerBonds as Map<number, DrawingEntity>),\n    ];\n  }\n\n  public deleteSelectedEntities() {\n    const mergedCommand = new Command();\n    this.selectedEntities.forEach(([, drawingEntity]) => {\n      const command = this.deleteDrawingEntity(drawingEntity);\n      mergedCommand.merge(command);\n    });\n    return mergedCommand;\n  }\n\n  public deleteAllEntities() {\n    const mergedCommand = new Command();\n    this.allEntities.forEach(([, drawingEntity]) => {\n      const command = this.deleteDrawingEntity(drawingEntity, false);\n      mergedCommand.merge(command);\n    });\n    return mergedCommand;\n  }\n\n  public addMonomerChangeModel(\n    monomerItem: MonomerItemType,\n    position: Vec2,\n    _monomer?: BaseMonomer,\n  ) {\n    if (_monomer) {\n      this.monomers.set(_monomer.id, _monomer);\n      return _monomer;\n    }\n    const [Monomer] = monomerFactory(monomerItem);\n    const monomer = new Monomer(monomerItem, position);\n    monomer.moveAbsolute(position);\n    this.monomers.set(monomer.id, monomer);\n    return monomer;\n  }\n\n  public addMonomer(monomerItem: MonomerItemType, position: Vec2) {\n    const command = new Command();\n    const operation = new MonomerAddOperation(\n      this.addMonomerChangeModel.bind(this, monomerItem, position),\n      this.deleteMonomerChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public deleteDrawingEntity(\n    drawingEntity: DrawingEntity,\n    needToDeleteConnectedEntities = true,\n  ) {\n    if (drawingEntity instanceof BaseMonomer) {\n      return this.deleteMonomer(drawingEntity, needToDeleteConnectedEntities);\n    } else if (drawingEntity instanceof PolymerBond) {\n      return this.deletePolymerBond(drawingEntity);\n    } else {\n      return new Command();\n    }\n  }\n\n  public selectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = this.unselectAllDrawingEntities();\n\n    drawingEntity.turnOnSelection();\n    command.merge(this.createDrawingEntitySelectionCommand(drawingEntity));\n\n    return command;\n  }\n\n  public selectDrawingEntities(drawingEntities: DrawingEntity[]) {\n    const command = this.unselectAllDrawingEntities();\n    drawingEntities.forEach((drawingEntity: DrawingEntity) => {\n      drawingEntity.turnOnSelection();\n      const operation = new DrawingEntitySelectOperation(drawingEntity);\n      command.addOperation(operation);\n    });\n    return command;\n  }\n\n  public createDrawingEntitySelectionCommand(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    const selectionCommand = new DrawingEntitySelectOperation(drawingEntity);\n    command.addOperation(selectionCommand);\n\n    return command;\n  }\n\n  public unselectAllDrawingEntities() {\n    const command = new Command();\n\n    this.allEntities.forEach(([, drawingEntity]) => {\n      if (drawingEntity.selected) {\n        command.merge(this.unselectDrawingEntity(drawingEntity));\n      }\n    });\n\n    return command;\n  }\n\n  public unselectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n    drawingEntity.turnOffSelection();\n    command.addOperation(new DrawingEntitySelectOperation(drawingEntity));\n    return command;\n  }\n\n  public selectAllDrawingEntities() {\n    const command = new Command();\n\n    this.allEntities.forEach(([, drawingEntity]) => {\n      if (!drawingEntity.selected) {\n        drawingEntity.turnOnSelection();\n        const operation = new DrawingEntitySelectOperation(drawingEntity);\n        command.addOperation(operation);\n      }\n    });\n\n    return command;\n  }\n\n  public addDrawingEntitiesToSelection(drawingEntities: DrawingEntity[]) {\n    const command = new Command();\n    drawingEntities.forEach((drawingEntity: DrawingEntity) => {\n      if (drawingEntity.selected) {\n        drawingEntity.turnOffSelection();\n      } else {\n        drawingEntity.turnOnSelection();\n      }\n      command.addOperation(new DrawingEntitySelectOperation(drawingEntity));\n    });\n    return command;\n  }\n\n  public moveDrawingEntityModelChange(\n    drawingEntity: DrawingEntity,\n    offset?: Vec2,\n  ) {\n    if (drawingEntity instanceof PolymerBond) {\n      drawingEntity.moveToLinkedMonomers();\n    } else {\n      assert(offset);\n      drawingEntity.moveRelative(offset);\n    }\n\n    return drawingEntity;\n  }\n\n  public moveSelectedDrawingEntities(\n    partOfMovementOffset: Vec2,\n    fullMovementOffset?: Vec2,\n  ) {\n    const command = new Command();\n\n    this.monomers.forEach((drawingEntity) => {\n      if (drawingEntity.selected) {\n        command.merge(\n          this.createDrawingEntityMovingCommand(\n            drawingEntity,\n            partOfMovementOffset,\n            fullMovementOffset,\n          ),\n        );\n      }\n    });\n\n    this.polymerBonds.forEach((drawingEntity) => {\n      if (\n        drawingEntity.selected ||\n        drawingEntity.firstMonomer.selected ||\n        drawingEntity.secondMonomer?.selected\n      ) {\n        command.merge(\n          this.createDrawingEntityMovingCommand(\n            drawingEntity,\n            partOfMovementOffset,\n            fullMovementOffset,\n          ),\n        );\n      }\n    });\n    return command;\n  }\n\n  public createDrawingEntityMovingCommand(\n    drawingEntity: DrawingEntity,\n    partOfMovementOffset: Vec2,\n    fullMovementOffset?: Vec2,\n  ) {\n    const command = new Command();\n\n    const movingCommand = new DrawingEntityMoveOperation(\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        partOfMovementOffset,\n      ),\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        fullMovementOffset\n          ? fullMovementOffset.negated()\n          : partOfMovementOffset.negated(),\n      ),\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        fullMovementOffset || partOfMovementOffset,\n      ),\n      drawingEntity,\n    );\n    command.addOperation(movingCommand);\n\n    return command;\n  }\n\n  public createDrawingEntityRedrawCommand(\n    drawingEntityRedrawModelChange: () => DrawingEntity,\n    invertDrawingEntityRedrawModelChange: () => DrawingEntity,\n  ) {\n    const command = new Command();\n\n    const redrawCommand = new DrawingEntityRedrawOperation(\n      drawingEntityRedrawModelChange,\n      invertDrawingEntityRedrawModelChange,\n    );\n    command.addOperation(redrawCommand);\n\n    return command;\n  }\n\n  private deleteMonomerChangeModel(monomer: BaseMonomer) {\n    this.monomers.delete(monomer.id);\n  }\n\n  public deleteMonomer(\n    monomer: BaseMonomer,\n    needToDeleteConnectedBonds = true,\n  ) {\n    const command = new Command();\n    const operation = new MonomerDeleteOperation(\n      monomer,\n      this.addMonomerChangeModel.bind(\n        this,\n        monomer.monomerItem,\n        monomer.position,\n      ),\n      this.deleteMonomerChangeModel.bind(this),\n    );\n    command.addOperation(operation);\n\n    if (needToDeleteConnectedBonds && monomer.hasBonds) {\n      monomer.forEachBond((bond) => {\n        // Do not delete connected bond if it is selected because it is done deleteDrawingEntity method\n        // This check helps to avoid operations duplication\n        if (bond.selected) return;\n\n        // We need to remove connected bond when doing a group selection even if it is not selected\n        // and mark it as selected to avoid operations duplication\n        bond.turnOnSelection();\n        command.merge(this.deletePolymerBond(bond));\n      });\n    }\n\n    return command;\n  }\n\n  public selectIfLocatedInRectangle(\n    rectangleTopLeftPoint: Vec2,\n    rectangleBottomRightPoint: Vec2,\n    previousSelectedEntities: [number, DrawingEntity][],\n    shiftKey = false,\n  ) {\n    const command = new Command();\n    this.allEntities.forEach(([, drawingEntity]) => {\n      const isPreviousSelected = previousSelectedEntities.find(\n        ([, entity]) => entity === drawingEntity,\n      );\n      const isValueChanged = drawingEntity.selectIfLocatedInRectangle(\n        rectangleTopLeftPoint,\n        rectangleBottomRightPoint,\n        !!isPreviousSelected,\n        shiftKey,\n      );\n\n      if (isValueChanged) {\n        const selectionCommand =\n          this.createDrawingEntitySelectionCommand(drawingEntity);\n\n        command.merge(selectionCommand);\n      }\n    });\n    return command;\n  }\n\n  public startPolymerBondCreationChangeModel(\n    firstMonomer,\n    startPosition,\n    endPosition,\n    _polymerBond?: PolymerBond,\n  ) {\n    if (_polymerBond) {\n      this.polymerBonds.set(_polymerBond.id, _polymerBond);\n      return _polymerBond;\n    }\n\n    const polymerBond = new PolymerBond(firstMonomer);\n    this.polymerBonds.set(polymerBond.id, polymerBond);\n    // If we started from a specific AP, we need to 'attach' the bond to the first monomer\n    if (firstMonomer.chosenFirstAttachmentPointForBond) {\n      const startBondAttachmentPoint = firstMonomer.startBondAttachmentPoint;\n      firstMonomer.setBond(startBondAttachmentPoint, polymerBond);\n      firstMonomer.setPotentialBond(startBondAttachmentPoint, polymerBond);\n    }\n    polymerBond.moveBondStartAbsolute(startPosition.x, startPosition.y);\n    polymerBond.moveBondEndAbsolute(endPosition.x, endPosition.y);\n    return polymerBond;\n  }\n\n  public startPolymerBondCreation(firstMonomer, startPosition, endPosition) {\n    const command = new Command();\n\n    const operation = new PolymerBondAddOperation(\n      this.startPolymerBondCreationChangeModel.bind(\n        this,\n        firstMonomer,\n        startPosition,\n        endPosition,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return { command, polymerBond: operation.polymerBond };\n  }\n\n  public deletePolymerBondChangeModel(polymerBond: PolymerBond) {\n    this.polymerBonds.delete(polymerBond.id);\n\n    const firstMonomerAttachmentPoint =\n      polymerBond.firstMonomer.getAttachmentPointByBond(polymerBond);\n    const secondMonomerAttachmentPoint =\n      polymerBond.secondMonomer?.getAttachmentPointByBond(polymerBond);\n    polymerBond.firstMonomer.removePotentialBonds();\n    polymerBond.secondMonomer?.removePotentialBonds();\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.secondMonomer?.turnOffSelection();\n    if (firstMonomerAttachmentPoint) {\n      polymerBond.firstMonomer.unsetBond(firstMonomerAttachmentPoint);\n    }\n    if (secondMonomerAttachmentPoint) {\n      polymerBond.secondMonomer?.unsetBond(secondMonomerAttachmentPoint);\n    }\n  }\n\n  public deletePolymerBond(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    const operation = new PolymerBondDeleteOperation(\n      polymerBond,\n      this.deletePolymerBondChangeModel.bind(this, polymerBond),\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        polymerBond.firstMonomer,\n        polymerBond.secondMonomer as BaseMonomer,\n        polymerBond.firstMonomer.getAttachmentPointByBond(\n          polymerBond,\n        ) as string,\n        polymerBond.secondMonomer?.getAttachmentPointByBond(\n          polymerBond,\n        ) as string,\n      ),\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public cancelPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer?: BaseMonomer,\n  ) {\n    this.polymerBonds.delete(polymerBond.id);\n    const command = new Command();\n    polymerBond.firstMonomer.removeBond(polymerBond);\n    polymerBond.firstMonomer.removePotentialBonds(true);\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n\n    secondMonomer?.turnOffSelection();\n    secondMonomer?.turnOffHover();\n    secondMonomer?.turnOffAttachmentPointsVisibility();\n    const operation = new PolymerBondCancelCreationOperation(\n      polymerBond,\n      secondMonomer,\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public movePolymerBond(polymerBond: PolymerBond, position: Vec2) {\n    const command = new Command();\n    polymerBond.moveBondEndAbsolute(position.x, position.y);\n\n    const operation = new PolymerBondMoveOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public finishPolymerBondCreationModelChange(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: string,\n    secondMonomerAttachmentPoint: string,\n    _polymerBond?: PolymerBond,\n  ) {\n    if (_polymerBond) {\n      this.polymerBonds.set(_polymerBond.id, _polymerBond);\n      firstMonomer.setBond(firstMonomerAttachmentPoint, _polymerBond);\n      secondMonomer.setBond(secondMonomerAttachmentPoint, _polymerBond);\n      return _polymerBond;\n    }\n\n    const polymerBond = new PolymerBond(firstMonomer);\n    this.polymerBonds.set(polymerBond.id, polymerBond);\n    polymerBond.setSecondMonomer(secondMonomer);\n    polymerBond.firstMonomer.setBond(firstMonomerAttachmentPoint, polymerBond);\n    assert(polymerBond.secondMonomer);\n    polymerBond.secondMonomer.setBond(\n      secondMonomerAttachmentPoint,\n      polymerBond,\n    );\n\n    polymerBond.firstMonomer.removePotentialBonds(true);\n    polymerBond.secondMonomer.removePotentialBonds(true);\n    polymerBond.firstMonomer.setChosenFirstAttachmentPoint(null);\n    polymerBond.secondMonomer?.setChosenSecondAttachmentPoint(null);\n    polymerBond.moveToLinkedMonomers();\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n    polymerBond.secondMonomer.turnOffSelection();\n    polymerBond.secondMonomer.turnOffHover();\n    polymerBond.secondMonomer.turnOffAttachmentPointsVisibility();\n    polymerBond.turnOffHover();\n\n    return polymerBond;\n  }\n\n  public finishPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: string,\n    secondMonomerAttachmentPoint: string,\n  ) {\n    const command = new Command();\n\n    const firstMonomer = polymerBond.firstMonomer;\n    this.polymerBonds.delete(polymerBond.id);\n    const operation = new PolymerBondFinishCreationOperation(\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        firstMonomer,\n        secondMonomer,\n        firstMonomerAttachmentPoint,\n        secondMonomerAttachmentPoint,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public createPolymerBond(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: string,\n    secondMonomerAttachmentPoint: string,\n  ) {\n    const command = new Command();\n\n    const operation = new PolymerBondFinishCreationOperation(\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        firstMonomer,\n        secondMonomer,\n        firstMonomerAttachmentPoint,\n        secondMonomerAttachmentPoint,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToStartBondCreation(monomer: BaseMonomer) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new MonomerHoverOperation(monomer, true);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToStartAttachmenPointBondCreation(\n    monomer: BaseMonomer,\n    attachmentPointName: AttachmentPointName,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new AttachmentPointHoverOperation(\n      monomer,\n      attachmentPointName,\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToFinishBondCreation(\n    monomer: BaseMonomer,\n    bond: PolymerBond,\n    shouldCalculateBonds: boolean,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n    if (shouldCalculateBonds) {\n      bond.firstMonomer.removePotentialBonds();\n      monomer.removePotentialBonds();\n      const firstMonomerValidSourcePoint =\n        bond.firstMonomer.getValidSourcePoint(monomer);\n      const secondMonomerValidTargetPoint = monomer.getValidTargetPoint(\n        bond.firstMonomer,\n      );\n      bond.firstMonomer.setPotentialBond(firstMonomerValidSourcePoint, bond);\n      monomer.setPotentialBond(secondMonomerValidTargetPoint, bond);\n    }\n    const connectFirstMonomerOperation = new MonomerHoverOperation(\n      bond.firstMonomer,\n      true,\n    );\n    const connectSecondMonomerOperation = new MonomerHoverOperation(\n      monomer,\n      true,\n    );\n    command.addOperation(connectFirstMonomerOperation);\n    command.addOperation(connectSecondMonomerOperation);\n    return command;\n  }\n\n  public intendToFinishAttachmenPointBondCreation(\n    monomer: BaseMonomer,\n    bond: PolymerBond,\n    attachmentPointName: AttachmentPointName,\n    shouldCalculateBonds: boolean,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    if (\n      monomer.isAttachmentPointUsed(attachmentPointName as AttachmentPointName)\n    ) {\n      const operation = new MonomerHoverOperation(monomer, true);\n      command.addOperation(operation);\n      return command;\n    }\n\n    if (attachmentPointName) {\n      monomer.setPotentialSecondAttachmentPoint(attachmentPointName);\n      monomer.setPotentialBond(attachmentPointName, bond);\n    }\n\n    if (shouldCalculateBonds) {\n      bond.firstMonomer.removePotentialBonds();\n      monomer.removePotentialBonds();\n      const firstMonomerValidSourcePoint =\n        bond.firstMonomer.getValidSourcePoint(monomer);\n      const secondMonomerValidTargetPoint = monomer.getValidTargetPoint(\n        bond.firstMonomer,\n      );\n      bond.firstMonomer.setPotentialBond(firstMonomerValidSourcePoint, bond);\n      monomer.setPotentialBond(secondMonomerValidTargetPoint, bond);\n    }\n    const connectFirstMonomerOperation = new MonomerHoverOperation(\n      bond.firstMonomer,\n      true,\n    );\n    const connectSecondMonomerOperation = new AttachmentPointHoverOperation(\n      monomer,\n      attachmentPointName,\n    );\n    command.addOperation(connectFirstMonomerOperation);\n    command.addOperation(connectSecondMonomerOperation);\n    return command;\n  }\n\n  public cancelIntentionToFinishBondCreation(\n    monomer: BaseMonomer,\n    polymerBond?: PolymerBond,\n  ) {\n    const command = new Command();\n    monomer.turnOffHover();\n    monomer.turnOffAttachmentPointsVisibility();\n    monomer.setPotentialSecondAttachmentPoint(null);\n    monomer.removePotentialBonds();\n    const operation = new MonomerHoverOperation(monomer, true);\n    command.addOperation(operation);\n\n    // If the initial AP has been chosen automatically, it needs to be removed\n    if (\n      polymerBond &&\n      !polymerBond.firstMonomer.chosenFirstAttachmentPointForBond\n    ) {\n      polymerBond.firstMonomer.removePotentialBonds();\n      const operation = new MonomerHoverOperation(\n        polymerBond.firstMonomer,\n        true,\n      );\n      command.addOperation(operation);\n    }\n\n    return command;\n  }\n\n  public intendToSelectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    drawingEntity.turnOnHover();\n\n    const operation = new DrawingEntityHoverOperation(drawingEntity);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public cancelIntentionToSelectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    drawingEntity.turnOffHover();\n\n    const operation = new DrawingEntityHoverOperation(drawingEntity);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public showPolymerBondInformation(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    polymerBond.turnOnHover();\n    polymerBond.firstMonomer.turnOnHover();\n    polymerBond.firstMonomer.turnOnAttachmentPointsVisibility();\n\n    assert(polymerBond.secondMonomer);\n\n    polymerBond.secondMonomer.turnOnHover();\n    polymerBond.secondMonomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new PolymerBondShowInfoOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public hidePolymerBondInformation(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    polymerBond.turnOffHover();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n\n    assert(polymerBond.secondMonomer);\n\n    polymerBond.secondMonomer.turnOffHover();\n    polymerBond.secondMonomer.turnOffAttachmentPointsVisibility();\n\n    const operation = new PolymerBondShowInfoOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public addRnaPreset({\n    sugar,\n    sugarPosition,\n    phosphate,\n    phosphatePosition,\n    rnaBase,\n    rnaBasePosition,\n  }: RnaPresetAdditionParams) {\n    const command = new Command();\n    const monomersToAdd: Array<[MonomerItemType, Vec2]> = [];\n    if (rnaBase && rnaBasePosition) {\n      monomersToAdd.push([rnaBase, rnaBasePosition]);\n    }\n    monomersToAdd.push([sugar, sugarPosition]);\n    if (phosphate && phosphatePosition) {\n      monomersToAdd.push([phosphate, phosphatePosition]);\n    }\n\n    let previousMonomer: BaseMonomer | undefined;\n    const monomers: BaseMonomer[] = [];\n\n    monomersToAdd.forEach(([monomerItem, monomerPosition]) => {\n      const monomerAddOperation = new MonomerAddOperation(\n        this.addMonomerChangeModel.bind(this, monomerItem, monomerPosition),\n        this.deleteMonomerChangeModel.bind(this),\n      );\n      const monomer = monomerAddOperation.monomer;\n      monomers.push(monomer);\n      command.addOperation(monomerAddOperation);\n      if (previousMonomer) {\n        // requirements are: Base(R1)-(R3)Sugar(R2)-(R1)Phosphate\n        const attPointStart = previousMonomer.getValidSourcePoint(monomer);\n        const attPointEnd = monomer.getValidSourcePoint(previousMonomer);\n\n        assert(attPointStart);\n        assert(attPointEnd);\n\n        const operation = new PolymerBondFinishCreationOperation(\n          this.finishPolymerBondCreationModelChange.bind(\n            this,\n            previousMonomer,\n            monomer,\n            attPointStart,\n            attPointEnd,\n          ),\n          this.deletePolymerBondChangeModel.bind(this),\n        );\n        command.addOperation(operation);\n      }\n      previousMonomer = monomer;\n    });\n\n    return { command, monomers };\n  }\n\n  private findChainByMonomer(\n    monomer: BaseMonomer,\n    monomerChain: BaseMonomer[] = [],\n    monomersInChainSet: Set<number> = new Set(),\n  ) {\n    monomerChain.push(monomer);\n    monomersInChainSet.add(monomer.id);\n    for (const attachmentPointName in monomer.attachmentPointsToBonds) {\n      const polymerBond = monomer.attachmentPointsToBonds[attachmentPointName];\n      if (polymerBond) {\n        const nextMonomer =\n          monomer === polymerBond.firstMonomer\n            ? polymerBond.secondMonomer\n            : polymerBond.firstMonomer;\n        if (!monomersInChainSet.has(nextMonomer.id)) {\n          this.findChainByMonomer(\n            nextMonomer,\n            monomerChain,\n            monomersInChainSet,\n          );\n        }\n      }\n    }\n    return monomerChain;\n  }\n\n  private rearrangeChainModelChange(monomer: BaseMonomer, newPosition: Vec2) {\n    monomer.moveAbsolute(newPosition);\n\n    return monomer;\n  }\n\n  public getNucleotideSize(nucleotide: NucleotideOrNucleoside) {\n    const width =\n      (nucleotide.sugar.renderer?.monomerSize?.width || 0) +\n      (nucleotide.phosphate?.renderer?.monomerSize?.width || 0) +\n      (nucleotide.phosphate ? RNA_MONOMER_DISTANCE : 0);\n    const height =\n      (nucleotide.sugar.renderer?.monomerSize?.height || 0) +\n      (nucleotide.rnaBase.renderer?.monomerSize?.height || 0) +\n      RNA_MONOMER_DISTANCE;\n    return { width, height };\n  }\n\n  private reArrangeChain(\n    monomer: BaseMonomer,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    monomersWithSideChain: Array<BaseMonomer>,\n    maxVerticalDistance: number,\n    firstMonomer?: BaseMonomer,\n  ) {\n    const command = new Command();\n    const monomerWidth = monomer.renderer?.monomerSize?.width ?? 0;\n    const monomerHeight = monomer.renderer?.monomerSize?.height ?? 0;\n    const heightMonomerWithBond =\n      monomerHeight + VERTICAL_DISTANCE_FROM_MONOMER;\n    maxVerticalDistance = Math.max(maxVerticalDistance, heightMonomerWithBond);\n    monomer.isMonomerInRnaChainRow =\n      maxVerticalDistance > heightMonomerWithBond;\n    const oldMonomerPosition = monomer.position;\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(\n        this,\n        monomer,\n        Coordinates.canvasToModel(lastPosition),\n      ),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n    rearrangedMonomersSet.add(monomer.id);\n\n    const nextPositionAndVerticalDistance =\n      this.getNextMonomerPositionForSnakeLayout(\n        monomer,\n        monomerWidth,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        monomersWithSideChain,\n        maxVerticalDistance,\n      );\n\n    return {\n      lastPosition:\n        nextPositionAndVerticalDistance?.lastPosition || lastPosition,\n      maxVerticalDistance:\n        nextPositionAndVerticalDistance?.maxVerticalDistance ||\n        maxVerticalDistance,\n      nextMonomer: getNextMonomerInChain(monomer, firstMonomer),\n      command,\n    };\n  }\n\n  private reArrangeRnaChain(\n    nucleotide: NucleotideOrNucleoside,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    monomersWithSideChain: Array<BaseMonomer>,\n    maxVerticalDistance: number,\n    firstMonomer?: BaseMonomer,\n  ) {\n    const command = new Command();\n    const nucleotideSize = this.getNucleotideSize(nucleotide);\n    const { height, width } = nucleotideSize;\n    const heightWithBond = height + VERTICAL_DISTANCE_FROM_MONOMER;\n    maxVerticalDistance = Math.max(maxVerticalDistance, heightWithBond);\n    nucleotide.sugar.isMonomerInRnaChainRow = true;\n    nucleotide.rnaBase.isMonomerInRnaChainRow = true;\n    const oldSugarPosition = nucleotide.sugar.position;\n    const rnaBasePosition = new Vec2(\n      lastPosition.x,\n      lastPosition.y +\n        (nucleotide.sugar.renderer?.monomerSize?.height ?? 0) / 2 +\n        (nucleotide.rnaBase.renderer?.monomerSize?.height ?? 0) / 2 +\n        RNA_MONOMER_DISTANCE,\n    );\n    this.addRnaOperations(\n      command,\n      oldSugarPosition,\n      lastPosition,\n      nucleotide.sugar,\n    );\n    this.addRnaOperations(\n      command,\n      nucleotide.rnaBase?.position,\n      rnaBasePosition,\n      nucleotide.rnaBase,\n    );\n    rearrangedMonomersSet.add(nucleotide.sugar.id);\n    rearrangedMonomersSet.add(nucleotide.rnaBase?.id);\n\n    if (nucleotide.phosphate) {\n      nucleotide.phosphate.isMonomerInRnaChainRow = true;\n      const phosphatePosition = new Vec2(\n        lastPosition.x +\n          (nucleotide.sugar.renderer?.monomerSize?.width ?? 0) / 2 +\n          (nucleotide.phosphate?.renderer?.monomerSize?.width ?? 0) / 2 +\n          RNA_MONOMER_DISTANCE,\n        lastPosition.y,\n      );\n      this.addRnaOperations(\n        command,\n        nucleotide.phosphate?.position,\n        phosphatePosition,\n        nucleotide.phosphate,\n      );\n      rearrangedMonomersSet.add(nucleotide.phosphate?.id);\n    }\n    const lastMonomerInNucleotide =\n      nucleotide.baseMonomer === nucleotide.sugar && nucleotide.phosphate\n        ? nucleotide.phosphate\n        : nucleotide.sugar;\n\n    const nextMonomerPositionAndVerticalDistance =\n      this.getNextMonomerPositionForSnakeLayout(\n        lastMonomerInNucleotide,\n        width,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        monomersWithSideChain,\n        maxVerticalDistance,\n      );\n\n    this.setRnaBaseSideChainMonomers(\n      nucleotide.rnaBase,\n      rearrangedMonomersSet,\n      monomersWithSideChain,\n    );\n    const nextMonomer = getNextMonomerInChain(\n      lastMonomerInNucleotide,\n      firstMonomer,\n    );\n\n    return {\n      command,\n      lastPosition:\n        nextMonomerPositionAndVerticalDistance?.lastPosition || lastPosition,\n      maxVerticalDistance:\n        nextMonomerPositionAndVerticalDistance?.maxVerticalDistance ||\n        maxVerticalDistance,\n      nextMonomer,\n    };\n  }\n\n  private getNextMonomerPositionForSnakeLayout(\n    monomer: BaseMonomer,\n    width: number,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    monomersWithSideChain: Array<BaseMonomer>,\n    maxVerticalDistance: number,\n  ) {\n    let nextPositionAndDistance;\n    for (const attachmentPointName in monomer.attachmentPointsToBonds) {\n      const polymerBond = monomer.attachmentPointsToBonds[attachmentPointName];\n      const nextMonomer = polymerBond?.getAnotherMonomer(monomer);\n      if (!polymerBond || rearrangedMonomersSet.has(nextMonomer.id)) {\n        continue;\n      }\n      if (\n        (attachmentPointName === 'R2' &&\n          nextMonomer.getAttachmentPointByBond(polymerBond) === 'R1') ||\n        (attachmentPointName === 'R1' &&\n          nextMonomer.getAttachmentPointByBond(polymerBond) === 'R2')\n      ) {\n        nextPositionAndDistance = this.getNextPositionAndDistance(\n          lastPosition,\n          width,\n          maxVerticalDistance,\n          canvasWidth,\n        );\n      } else {\n        monomersWithSideChain.push(nextMonomer);\n      }\n    }\n    return nextPositionAndDistance;\n  }\n\n  private setRnaBaseSideChainMonomers(\n    rnaBase: RNABase,\n    rearrangedMonomersSet: Set<number>,\n    monomersWithSideChain: Array<BaseMonomer>,\n  ) {\n    for (const attachmentPointName of Object.keys(\n      rnaBase.attachmentPointsToBonds,\n    ).reverse()) {\n      const polymerBond = rnaBase.attachmentPointsToBonds[attachmentPointName];\n      const nextMonomer = polymerBond?.getAnotherMonomer(rnaBase);\n      if (\n        !polymerBond ||\n        !nextMonomer ||\n        rearrangedMonomersSet.has(nextMonomer.id)\n      ) {\n        continue;\n      }\n      monomersWithSideChain.push(nextMonomer);\n    }\n  }\n\n  private addRnaOperations(\n    command: Command,\n    oldMonomerPosition: Vec2 | undefined,\n    newPosition: Vec2 | undefined,\n    monomer?: BaseMonomer,\n  ) {\n    if (!monomer || !oldMonomerPosition || !newPosition) {\n      return;\n    }\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(\n        this,\n        monomer,\n        Coordinates.canvasToModel(newPosition),\n      ),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n  }\n\n  public reArrangeChains(\n    canvasWidth: number,\n    isSnakeMode: boolean,\n    needRedrawBonds = true,\n  ) {\n    const command = new Command();\n\n    if (isSnakeMode) {\n      const rearrangedMonomersSet: Set<number> = new Set();\n      const lastPosition = new Vec2({\n        x: MONOMER_START_X_POSITION,\n        y: MONOMER_START_Y_POSITION,\n      });\n      const firstMonomers = this.getFirstMonomersInChains(\n        [Peptide, Chem, Sugar, Phosphate],\n        [...this.monomers.values()],\n      );\n\n      const result = this.reArrangeMonomers(\n        canvasWidth,\n        firstMonomers,\n        rearrangedMonomersSet,\n        lastPosition,\n      );\n      command.merge(result.command);\n    }\n    if (needRedrawBonds) {\n      command.merge(this.redrawBonds());\n    }\n\n    return command;\n  }\n\n  private redrawBondsModelChange(\n    polymerBond: PolymerBond,\n    startPosition?: Vec2,\n    endPosition?: Vec2,\n  ) {\n    if (startPosition && endPosition) {\n      polymerBond.moveBondStartAbsolute(startPosition.x, startPosition.y);\n      polymerBond.moveBondEndAbsolute(endPosition.x, endPosition.y);\n    } else {\n      polymerBond.moveToLinkedMonomers();\n    }\n\n    return polymerBond;\n  }\n\n  public redrawBonds() {\n    const command = new Command();\n\n    this.polymerBonds.forEach((polymerBond) => {\n      command.merge(\n        this.createDrawingEntityRedrawCommand(\n          this.redrawBondsModelChange.bind(this, polymerBond),\n          this.redrawBondsModelChange.bind(\n            this,\n            polymerBond,\n            polymerBond.startPosition,\n            polymerBond.endPosition,\n          ),\n        ),\n      );\n    });\n    return command;\n  }\n\n  // DEPRECATED\n  // TODO refactor to use ChainsCollection in snake layout and monomers enumeration\n  public getFirstMonomersInChains(\n    MonomerTypes: Array<\n      typeof Peptide | typeof Chem | typeof Phosphate | typeof Sugar\n    >,\n    currentMonomers: BaseMonomer[],\n  ) {\n    const monomersList = currentMonomers.filter((monomer) =>\n      MonomerTypes.some((MonomerType) => monomer instanceof MonomerType),\n    );\n    const firstMonomersInChains = monomersList.filter((monomer) => {\n      const polymerBond = monomer.getBondByAttachmentPoint(\n        AttachmentPointName.R2,\n      );\n\n      const isFirstMonomerWithR2R1connection =\n        (!monomer.attachmentPointsToBonds.R1 ||\n          monomer.attachmentPointsToBonds.R1.isSideChainConnection) &&\n        polymerBond?.isBackBoneChainConnection;\n\n      const isSingleMonomerOrNucleoside =\n        !monomer.attachmentPointsToBonds.R1 &&\n        !monomer.attachmentPointsToBonds.R2;\n\n      return isFirstMonomerWithR2R1connection || isSingleMonomerOrNucleoside;\n    });\n\n    const [_, cycledChains] =\n      ChainsCollection.getFirstMonomersInChains(monomersList);\n\n    firstMonomersInChains.push(...cycledChains);\n\n    firstMonomersInChains.sort((monomer1, monomer2) => {\n      if (\n        monomer2.position.x + monomer2.position.y >\n        monomer1.position.x + monomer1.position.y\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    return firstMonomersInChains;\n  }\n\n  public reArrangeChainInRecursive(\n    _monomer: BaseMonomer,\n    _lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    monomersWithSideChain: Array<BaseMonomer>,\n    _maxVerticalDistance: number,\n  ) {\n    const firstMonomer = _monomer;\n    const command = new Command();\n    const stack = [\n      {\n        monomer: _monomer,\n        lastPosition: _lastPosition,\n        maxVerticalDistance: _maxVerticalDistance,\n      },\n    ];\n    let lastRearrangeResult = {\n      lastPosition: _lastPosition,\n      maxVerticalDistance: _maxVerticalDistance,\n    };\n    while (stack.length > 0) {\n      const stackItem = stack.pop();\n      assert(stackItem);\n      const { lastPosition, maxVerticalDistance, monomer } = stackItem;\n      let rearrangeMethod;\n      let entityToRearrange;\n\n      if (monomer instanceof Sugar || monomer instanceof Phosphate) {\n        const nucleotideOrNucleoside =\n          getNucleotideOrNucleoSideFromFirstMonomer(monomer);\n        if (nucleotideOrNucleoside) {\n          rearrangeMethod = this.reArrangeRnaChain;\n          entityToRearrange = nucleotideOrNucleoside;\n        } else {\n          rearrangeMethod = this.reArrangeChain;\n          entityToRearrange = monomer;\n        }\n      } else {\n        rearrangeMethod = this.reArrangeChain;\n        entityToRearrange = monomer;\n      }\n\n      const rearrangeResult = rearrangeMethod.call(\n        this,\n        entityToRearrange,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        monomersWithSideChain,\n        maxVerticalDistance,\n        firstMonomer,\n      );\n\n      command.merge(rearrangeResult.command);\n\n      if (rearrangeResult?.lastPosition) {\n        lastRearrangeResult = rearrangeResult;\n      }\n\n      if (rearrangeResult?.nextMonomer) {\n        stack.push({\n          monomer: rearrangeResult.nextMonomer,\n          lastPosition: rearrangeResult.lastPosition,\n          maxVerticalDistance: rearrangeResult.maxVerticalDistance,\n        });\n      }\n    }\n\n    return {\n      command,\n      lastPosition: lastRearrangeResult.lastPosition,\n      maxVerticalDistance: lastRearrangeResult.maxVerticalDistance,\n    };\n  }\n\n  public getNextPositionAndDistance(\n    lastPosition: Vec2,\n    width: number,\n    height: number,\n    canvasWidth: number,\n  ) {\n    const isMonomerFitCanvas =\n      lastPosition.x +\n        width +\n        DISTANCE_BETWEEN_MONOMERS +\n        HORIZONTAL_DISTANCE_FROM_MONOMER +\n        DISTANCE_FROM_RIGHT <\n      canvasWidth;\n\n    if (!isMonomerFitCanvas) {\n      return {\n        maxVerticalDistance: 0,\n        lastPosition: getFirstPosition(height, lastPosition),\n      };\n    }\n\n    return {\n      maxVerticalDistance: height,\n      lastPosition: new Vec2({\n        x: lastPosition.x + width + HORIZONTAL_DISTANCE_FROM_MONOMER,\n        y: lastPosition.y,\n      }),\n    };\n  }\n\n  private isPartOfR2R1Chain(monomer: BaseMonomer) {\n    const R1Bond = monomer.attachmentPointsToBonds.R1;\n    const R2Bond = monomer.attachmentPointsToBonds.R2;\n    return (\n      R1Bond?.getAnotherMonomer(monomer)?.getAttachmentPointByBond(R1Bond) ===\n        'R2' ||\n      R2Bond?.getAnotherMonomer(monomer)?.getAttachmentPointByBond(R2Bond) ===\n        'R1'\n    );\n  }\n\n  private getFirstMonomerInR2R1Chain(monomer: BaseMonomer) {\n    const R1Bond = monomer.attachmentPointsToBonds.R1;\n    return R1Bond &&\n      R1Bond.getAnotherMonomer(monomer)?.getAttachmentPointByBond(R1Bond) ===\n        'R2'\n      ? this.getFirstMonomerInR2R1Chain(\n          R1Bond.getAnotherMonomer(monomer) as BaseMonomer,\n        )\n      : monomer;\n  }\n\n  public reArrangeMonomers(\n    canvasWidth: number,\n    firstMonomers: BaseMonomer[],\n    rearrangedMonomersSet: Set<number>,\n    lastPosition: Vec2,\n  ) {\n    const command = new Command();\n    firstMonomers.forEach((monomer) => {\n      if (rearrangedMonomersSet.has(monomer.id)) {\n        return;\n      }\n      const monomersWithSideChain: Array<BaseMonomer> = [];\n      const rearrangeResult = this.reArrangeChainInRecursive(\n        monomer,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        monomersWithSideChain,\n        0,\n      );\n      command.merge(rearrangeResult.command);\n      lastPosition = rearrangeResult.lastPosition;\n      // need to calculate the vertical distance before the next row gets to display\n      // because the height of Rna and peptide are different\n      lastPosition = getFirstPosition(\n        rearrangeResult.maxVerticalDistance,\n        lastPosition,\n      );\n      if (monomersWithSideChain.length > 0) {\n        monomersWithSideChain.reverse().forEach((monomerWithSideChain) => {\n          const currentMonomerChain: BaseMonomer[] = this.findChainByMonomer(\n            monomerWithSideChain,\n            undefined,\n            new Set([...rearrangedMonomersSet]),\n          );\n          let firstMonomers = this.getFirstMonomersInChains(\n            [Peptide, Chem, Sugar, Phosphate],\n            currentMonomerChain,\n          );\n          if (rearrangedMonomersSet.has(monomerWithSideChain.id)) {\n            return;\n          }\n          if (!firstMonomers.length) {\n            firstMonomers = [monomerWithSideChain];\n          } else if (this.isPartOfR2R1Chain(monomerWithSideChain)) {\n            const firstMonomerInR2R1Chain =\n              this.getFirstMonomerInR2R1Chain(monomerWithSideChain);\n            firstMonomers = [firstMonomerInR2R1Chain];\n          } else {\n            const oldMonomerPosition = monomerWithSideChain.position;\n            const operation = new MonomerMoveOperation(\n              this.rearrangeChainModelChange.bind(\n                this,\n                monomerWithSideChain,\n                Coordinates.canvasToModel(lastPosition),\n              ),\n              this.rearrangeChainModelChange.bind(\n                this,\n                monomerWithSideChain,\n                oldMonomerPosition,\n              ),\n            );\n            rearrangedMonomersSet.add(monomerWithSideChain.id);\n            command.addOperation(operation);\n            const height =\n              (monomerWithSideChain.renderer?.monomerSize?.height ?? 0) +\n              VERTICAL_DISTANCE_FROM_MONOMER;\n            lastPosition = getFirstPosition(height, lastPosition);\n          }\n\n          const rearrangeResult = this.reArrangeMonomers(\n            canvasWidth,\n            firstMonomers,\n            rearrangedMonomersSet,\n            lastPosition,\n          );\n          command.merge(rearrangeResult.command);\n\n          lastPosition = rearrangeResult.lastPosition;\n        });\n      }\n    });\n    return { command, lastPosition };\n  }\n\n  public setMicromoleculesHiddenEntities(struct: Struct) {\n    struct.mergeInto(this.micromoleculesHiddenEntities);\n    this.micromoleculesHiddenEntities.atoms = new Pool();\n    this.micromoleculesHiddenEntities.bonds = new Pool();\n    this.micromoleculesHiddenEntities.halfBonds = new Pool();\n    this.micromoleculesHiddenEntities.sgroups = new Pool();\n    this.micromoleculesHiddenEntities.functionalGroups = new Pool();\n    this.micromoleculesHiddenEntities.sGroupForest = new SGroupForest();\n    this.micromoleculesHiddenEntities.frags = new Pool();\n  }\n\n  public clearMicromoleculesHiddenEntities() {\n    this.micromoleculesHiddenEntities = new Struct();\n  }\n\n  public mergeInto(targetDrawingEntitiesManager: DrawingEntitiesManager) {\n    const command = new Command();\n    const monomerToNewMonomer = new Map<BaseMonomer, BaseMonomer>();\n    this.monomers.forEach((monomer) => {\n      const monomerAddCommand = targetDrawingEntitiesManager.addMonomer(\n        monomer.monomerItem,\n        monomer.position,\n      );\n      monomerToNewMonomer.set(\n        monomer,\n        monomerAddCommand.operations[0].monomer as BaseMonomer,\n      );\n      command.merge(monomerAddCommand);\n    });\n    this.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      const polymerBondCreateCommand =\n        targetDrawingEntitiesManager.createPolymerBond(\n          monomerToNewMonomer.get(polymerBond.firstMonomer) as BaseMonomer,\n          monomerToNewMonomer.get(polymerBond.secondMonomer) as BaseMonomer,\n          polymerBond.firstMonomer.getAttachmentPointByBond(\n            polymerBond,\n          ) as AttachmentPointName,\n          polymerBond.secondMonomer.getAttachmentPointByBond(\n            polymerBond,\n          ) as AttachmentPointName,\n        );\n      command.merge(polymerBondCreateCommand);\n    });\n    this.micromoleculesHiddenEntities.mergeInto(\n      targetDrawingEntitiesManager.micromoleculesHiddenEntities,\n    );\n\n    return command;\n  }\n\n  public centerMacroStructure() {\n    const centerPointOfModel = Coordinates.canvasToModel(\n      getCurrentCenterPointOfCanvas(),\n    );\n    const structCenter = this.getMacroStructureCenter();\n    const offset = Vec2.diff(centerPointOfModel, structCenter);\n    this.monomers.forEach((monomer: BaseMonomer) => {\n      monomer.moveAbsolute(new Vec2(monomer.position).add(offset));\n    });\n    this.polymerBonds.forEach((bond: PolymerBond) => {\n      const { x: startX, y: startY } = new Vec2(bond.position).add(offset);\n      bond.moveBondStartAbsolute(startX, startY);\n      const { x: endX, y: endY } = new Vec2(bond.endPosition).add(offset);\n      bond.moveBondEndAbsolute(endX, endY);\n    });\n  }\n\n  public getMacroStructureCenter() {\n    let xmin = 1e50;\n    let ymin = xmin;\n    let xmax = -xmin;\n    let ymax = -ymin;\n\n    this.monomers.forEach((monomer: BaseMonomer) => {\n      xmin = Math.min(xmin, monomer.position.x);\n      ymin = Math.min(ymin, monomer.position.y);\n      xmax = Math.max(xmax, monomer.position.x);\n      ymax = Math.max(ymax, monomer.position.y);\n    });\n    this.polymerBonds.forEach((bond: PolymerBond) => {\n      xmin = Math.min(xmin, bond.position.x);\n      ymin = Math.min(ymin, bond.position.y);\n      xmax = Math.max(xmax, bond.position.x);\n      ymax = Math.max(ymax, bond.position.y);\n    });\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2);\n  }\n\n  public applyMonomersSequenceLayout() {\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...this.monomers.values(),\n    ]);\n    chainsCollection.rearrange();\n\n    SequenceRenderer.show(chainsCollection);\n\n    return chainsCollection;\n  }\n\n  public clearCanvas() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.monomers.forEach((monomer) => {\n      editor.renderersContainer.deleteMonomer(monomer);\n    });\n\n    this.polymerBonds.forEach((polymerBond) => {\n      editor.renderersContainer.deletePolymerBond(polymerBond);\n    });\n\n    SequenceRenderer.removeEmptyNodes();\n  }\n\n  public applyFlexLayoutMode(needRedrawBonds = false) {\n    const editor = CoreEditor.provideEditorInstance();\n    const command = new Command();\n\n    if (needRedrawBonds) {\n      command.merge(this.redrawBonds());\n    }\n\n    this.monomers.forEach((monomer) => {\n      editor.renderersContainer.deleteMonomer(monomer);\n      editor.renderersContainer.addMonomer(monomer);\n    });\n\n    this.polymerBonds.forEach((polymerBond) => {\n      editor.renderersContainer.deletePolymerBond(polymerBond);\n      editor.renderersContainer.addPolymerBond(polymerBond);\n    });\n\n    SequenceRenderer.removeEmptyNodes();\n\n    return command;\n  }\n\n  public getAllSelectedEntities(\n    drawingEntity: DrawingEntity,\n    needToSelectConnectedBonds = true,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    if (\n      !(editor.mode instanceof SequenceMode) ||\n      drawingEntity instanceof PolymerBond\n    ) {\n      return [drawingEntity];\n    }\n    const drawingEntities: DrawingEntity[] = [drawingEntity];\n    if (drawingEntity.isPartOfRna && drawingEntity instanceof Sugar) {\n      const sugar = drawingEntity;\n      if (isValidNucleoside(sugar)) {\n        const nucleoside = Nucleoside.fromSugar(sugar);\n        drawingEntities.push(nucleoside.rnaBase);\n        if (needToSelectConnectedBonds && nucleoside.rnaBase.hasBonds) {\n          nucleoside.rnaBase.forEachBond((polymerBond) => {\n            drawingEntities.push(polymerBond);\n          });\n        }\n      } else if (isValidNucleotide(sugar)) {\n        const nucleotide = Nucleotide.fromSugar(sugar);\n        drawingEntities.push(nucleotide.rnaBase);\n        drawingEntities.push(nucleotide.phosphate);\n        if (needToSelectConnectedBonds && nucleotide.rnaBase.hasBonds) {\n          nucleotide.rnaBase.forEachBond((polymerBond) => {\n            drawingEntities.push(polymerBond);\n          });\n        }\n        if (needToSelectConnectedBonds && nucleotide.phosphate.hasBonds) {\n          nucleotide.phosphate.forEachBond((polymerBond) => {\n            drawingEntities.push(polymerBond);\n          });\n        }\n      }\n    }\n    const monomer = drawingEntity as BaseMonomer;\n    if (needToSelectConnectedBonds && monomer.hasBonds) {\n      monomer.forEachBond((polymerBond) => {\n        if (!drawingEntities.includes(polymerBond)) {\n          drawingEntities.push(polymerBond);\n        }\n      });\n    }\n    return drawingEntities;\n  }\n\n  public validateIfApplicableForFasta() {\n    const monomerTypes = new Set();\n    let isValid = true;\n\n    this.monomers.forEach((monomer) => {\n      const monomerType = monomer.monomerItem.props.MonomerType;\n      monomerTypes.add(monomerType);\n      if (monomerType === MONOMER_CONST.CHEM || monomerTypes.size > 1) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  }\n\n  public moveMonomer(monomer: BaseMonomer, position: Vec2) {\n    const oldMonomerPosition = monomer.position;\n    const command = new Command();\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(this, monomer, position),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n}\nfunction getFirstPosition(height: number, lastPosition: Vec2) {\n  return new Vec2(MONOMER_START_X_POSITION, lastPosition.y + height);\n}\n\nfunction getNucleotideOrNucleoSideFromFirstMonomer(\n  monomer: BaseMonomer,\n): NucleotideOrNucleoside | undefined {\n  if (monomer instanceof Sugar) {\n    const nextMonomer = getNextMonomerInChain(monomer);\n    const rnaBaseMonomer = getRnaBaseFromSugar(monomer);\n    const isNucleoside =\n      !(nextMonomer instanceof Phosphate) && rnaBaseMonomer instanceof RNABase;\n    const isNucleotide =\n      nextMonomer &&\n      nextMonomer instanceof Phosphate &&\n      rnaBaseMonomer instanceof RNABase;\n    if (isNucleotide) {\n      return {\n        sugar: monomer,\n        phosphate: nextMonomer,\n        rnaBase: rnaBaseMonomer,\n        baseMonomer: monomer,\n      };\n    }\n    if (isNucleoside) {\n      return {\n        sugar: monomer,\n        rnaBase: rnaBaseMonomer,\n        baseMonomer: monomer,\n      };\n    }\n  }\n  if (monomer instanceof Phosphate) {\n    const r1PolymerBond = monomer.attachmentPointsToBonds.R1;\n    const nextMonomer = r1PolymerBond?.getAnotherMonomer(monomer);\n    const rnaBaseMonomer = getRnaBaseFromSugar(nextMonomer);\n    const isNucleotide =\n      nextMonomer &&\n      nextMonomer instanceof Sugar &&\n      rnaBaseMonomer instanceof RNABase;\n    if (isNucleotide) {\n      return {\n        sugar: nextMonomer,\n        phosphate: monomer,\n        rnaBase: rnaBaseMonomer,\n        baseMonomer: monomer,\n      };\n    }\n  }\n  return undefined;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Command } from 'domain/entities/Command';\nimport { CoreEditor } from './Editor';\nimport assert from 'assert';\nconst HISTORY_SIZE = 32; // put me to options\n\nexport type HistoryOperationType = 'undo' | 'redo';\n\nexport class EditorHistory {\n  historyStack: Command[] | [] = [];\n  historyPointer = 0;\n  editor: CoreEditor | undefined;\n\n  private static _instance;\n  constructor(editor: CoreEditor) {\n    if (EditorHistory._instance) {\n      return EditorHistory._instance;\n    }\n    this.editor = editor;\n    this.historyPointer = 0;\n\n    EditorHistory._instance = this;\n\n    return this;\n  }\n\n  update(command: Command, megreWithLatestHistoryCommand?: boolean) {\n    const latestCommand = this.historyStack[this.historyStack.length - 1];\n    if (megreWithLatestHistoryCommand && latestCommand) {\n      latestCommand.merge(command);\n    } else {\n      this.historyStack.splice(this.historyPointer, HISTORY_SIZE + 1, command);\n      if (this.historyStack.length > HISTORY_SIZE) {\n        this.historyStack.shift();\n      }\n      this.historyPointer = this.historyStack.length;\n    }\n  }\n\n  undo() {\n    if (this.historyPointer === 0) {\n      return;\n    }\n\n    assert(this.editor);\n\n    this.historyPointer--;\n    const lastCommand = this.historyStack[this.historyPointer];\n    lastCommand.invert(this.editor.renderersContainer);\n    const turnOffSelectionCommand =\n      this.editor?.drawingEntitiesManager.unselectAllDrawingEntities();\n    this.editor?.renderersContainer.update(turnOffSelectionCommand);\n  }\n\n  redo() {\n    if (this.historyPointer === this.historyStack.length) {\n      return;\n    }\n\n    assert(this.editor);\n\n    const lastCommand = this.historyStack[this.historyPointer];\n    lastCommand.execute(this.editor.renderersContainer);\n    this.historyPointer++;\n  }\n\n  destroy() {\n    EditorHistory._instance = null;\n  }\n}\n","import { DOMSubscription } from 'subscription';\nimport { SequenceType, Struct, Vec2 } from 'domain/entities';\nimport {\n  BaseTool,\n  IRnaPreset,\n  isBaseTool,\n  Tool,\n  ToolConstructorInterface,\n  ToolEventHandlerName,\n} from 'application/editor/tools/Tool';\nimport { PolymerBond } from 'application/editor/tools/Bond';\nimport { toolsMap } from 'application/editor/tools';\nimport { MonomerItemType } from 'domain/types';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport ZoomTool from './tools/Zoom';\nimport { Coordinates } from './shared/coordinates';\nimport {\n  editorEvents,\n  hotkeysConfiguration,\n  renderersEvents,\n  resetEditorEvents,\n} from 'application/editor/editorEvents';\nimport { EditorHistory, HistoryOperationType } from './EditorHistory';\nimport { Editor } from 'application/editor/editor.types';\nimport { MacromoleculesConverter } from 'application/editor/MacromoleculesConverter';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { ketcherProvider } from 'application/utils';\nimport { initHotKeys, keyNorm } from 'utilities';\nimport {\n  FlexMode,\n  LayoutMode,\n  modesMap,\n  SequenceMode,\n} from 'application/editor/modes/';\nimport { BaseMode } from 'application/editor/modes/internal';\nimport assert from 'assert';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { groupBy } from 'lodash';\n\ninterface ICoreEditorConstructorParams {\n  theme;\n  canvas: SVGSVGElement;\n}\n\nfunction isMouseMainButtonPressed(event: MouseEvent) {\n  return event.button === 0;\n}\n\nlet editor;\nexport class CoreEditor {\n  public events;\n\n  public renderersContainer: RenderersManager;\n  public drawingEntitiesManager: DrawingEntitiesManager;\n  public lastCursorPosition: Vec2 = new Vec2(0, 0);\n  public lastCursorPositionOfCanvas: Vec2 = new Vec2(0, 0);\n  public _monomersLibrary: MonomerItemType[] = [];\n  public canvas: SVGSVGElement;\n  public canvasOffset: DOMRect;\n  public theme;\n  public zoomTool: ZoomTool;\n  // private lastEvent: Event | undefined;\n  private tool?: Tool | BaseTool | undefined;\n  public get selectedTool(): Tool | BaseTool | undefined {\n    return this.tool;\n  }\n\n  public mode: BaseMode = new FlexMode();\n  public sequenceTypeEnterMode = SequenceType.RNA;\n  private micromoleculesEditor: Editor;\n  private hotKeyEventHandler: (event: unknown) => void = () => {};\n\n  constructor({ theme, canvas }: ICoreEditorConstructorParams) {\n    this.theme = theme;\n    this.canvas = canvas;\n    resetEditorEvents();\n    this.events = editorEvents;\n    this.subscribeEvents();\n    this.renderersContainer = new RenderersManager({ theme });\n    this.drawingEntitiesManager = new DrawingEntitiesManager();\n    this.domEventSetup();\n    this.setupContextMenuEvents();\n    this.setupKeyboardEvents();\n    this.canvasOffset = this.canvas.getBoundingClientRect();\n    this.zoomTool = ZoomTool.initInstance(this.drawingEntitiesManager);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    editor = this;\n    const ketcher = ketcherProvider.getKetcher();\n    this.micromoleculesEditor = ketcher?.editor;\n    this.switchToMacromolecules();\n  }\n\n  static provideEditorInstance(): CoreEditor {\n    return editor;\n  }\n\n  public setMonomersLibrary(monomersLibrary: MonomerItemType[]) {\n    this._monomersLibrary = monomersLibrary;\n  }\n\n  public get monomersLibrary() {\n    return groupBy(\n      this._monomersLibrary.map((libraryItem) => {\n        return {\n          ...libraryItem,\n          label: libraryItem.props.MonomerName,\n        };\n      }),\n      (libraryItem) => libraryItem.props.MonomerType,\n    );\n  }\n\n  private handleHotKeyEvents(event) {\n    const keySettings = hotkeysConfiguration;\n    const hotKeys = initHotKeys(keySettings);\n    const shortcutKey = keyNorm.lookup(hotKeys, event);\n    const isInput =\n      event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA';\n\n    if (keySettings[shortcutKey]?.handler && !isInput) {\n      keySettings[shortcutKey].handler(this);\n      event.preventDefault();\n    }\n  }\n\n  private setupKeyboardEvents() {\n    this.setupHotKeysEvents();\n    document.addEventListener('keydown', async (event: KeyboardEvent) => {\n      await this.mode.onKeyDown(event);\n    });\n  }\n\n  private setupHotKeysEvents() {\n    this.hotKeyEventHandler = (event) => this.handleHotKeyEvents(event);\n    document.addEventListener('keydown', this.hotKeyEventHandler);\n  }\n\n  private setupContextMenuEvents() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      if (!(this.mode instanceof SequenceMode) || this.mode.isEditMode) {\n        return false;\n      }\n\n      if (event.target?.__data__ instanceof BaseSequenceItemRenderer) {\n        this.events.rightClickSequence.dispatch(event);\n      } else {\n        this.events.rightClickCanvas.dispatch(event);\n      }\n\n      return false;\n    });\n  }\n\n  private subscribeEvents() {\n    this.events.selectMonomer.add((monomer) => this.onSelectMonomer(monomer));\n    this.events.selectPreset.add((preset) => this.onSelectRNAPreset(preset));\n    this.events.selectTool.add((tool) => this.onSelectTool(tool));\n    this.events.createBondViaModal.add((payload) => this.onCreateBond(payload));\n    this.events.cancelBondCreationViaModal.add((secondMonomer: BaseMonomer) =>\n      this.onCancelBondCreation(secondMonomer),\n    );\n    this.events.selectMode.add((isSnakeMode) => this.onSelectMode(isSnakeMode));\n    this.events.selectHistory.add((name) => this.onSelectHistory(name));\n\n    renderersEvents.forEach((eventName) => {\n      this.events[eventName].add((event) =>\n        this.useToolIfNeeded(eventName, event),\n      );\n    });\n    this.events.editSequence.add(\n      (sequenceItemRenderer: BaseSequenceItemRenderer) =>\n        this.onEditSequence(sequenceItemRenderer),\n    );\n\n    this.events.startNewSequence.add(() => this.onStartNewSequence());\n    this.events.changeSequenceTypeEnterMode.add((mode: SequenceType) =>\n      this.onChangeSequenceTypeEnterMode(mode),\n    );\n  }\n\n  private onEditSequence(sequenceItemRenderer: BaseSequenceItemRenderer) {\n    if (!(this.mode instanceof SequenceMode)) {\n      return;\n    }\n\n    this.mode.turnOnEditMode(sequenceItemRenderer);\n  }\n\n  private onStartNewSequence() {\n    if (!(this.mode instanceof SequenceMode)) {\n      return;\n    }\n\n    this.mode.startNewSequence();\n  }\n\n  private onChangeSequenceTypeEnterMode(mode: SequenceType) {\n    this.sequenceTypeEnterMode = mode;\n  }\n\n  private onSelectMonomer(monomer: MonomerItemType) {\n    this.selectTool('monomer', monomer);\n  }\n\n  private onSelectRNAPreset(preset: IRnaPreset) {\n    if (preset) {\n      this.selectTool('preset', preset);\n    } else {\n      this.tool = undefined;\n    }\n  }\n\n  public onSelectTool(tool: string) {\n    this.selectTool(tool);\n  }\n\n  private onCreateBond(payload: {\n    firstMonomer: BaseMonomer;\n    secondMonomer: BaseMonomer;\n    firstSelectedAttachmentPoint: string;\n    secondSelectedAttachmentPoint: string;\n  }) {\n    if (this.tool instanceof PolymerBond) {\n      this.tool.handleBondCreation(payload);\n    }\n  }\n\n  private onCancelBondCreation(secondMonomer: BaseMonomer) {\n    if (this.tool instanceof PolymerBond) {\n      this.tool.handleBondCreationCancellation(secondMonomer);\n    }\n  }\n\n  private onSelectMode(\n    data:\n      | LayoutMode\n      | { mode: LayoutMode; mergeWithLatestHistoryCommand: boolean },\n  ) {\n    const mode = typeof data === 'object' ? data.mode : data;\n    const ModeConstructor = modesMap[mode];\n    assert(ModeConstructor);\n    const history = new EditorHistory(this);\n    this.mode.destroy();\n    this.mode = new ModeConstructor(this.mode.modeName);\n    const command = this.mode.initialize();\n    history.update(\n      command,\n      typeof data === 'object' ? data?.mergeWithLatestHistoryCommand : false,\n    );\n  }\n\n  public setMode(mode: BaseMode) {\n    this.mode = mode;\n  }\n\n  public get isSequenceEditMode() {\n    return this.mode instanceof SequenceMode && this.mode.isEditMode;\n  }\n\n  public onSelectHistory(name: HistoryOperationType) {\n    const history = new EditorHistory(this);\n    if (name === 'undo') {\n      history.undo();\n    } else if (name === 'redo') {\n      history.redo();\n    }\n  }\n\n  public selectTool(name: string, options?) {\n    const ToolConstructor: ToolConstructorInterface = toolsMap[name];\n    const oldTool = this.tool;\n\n    this.tool = new ToolConstructor(this, options);\n\n    if (isBaseTool(oldTool)) {\n      oldTool?.destroy();\n    }\n  }\n\n  public unsubscribeEvents() {\n    for (const eventName in this.events) {\n      this.events[eventName].handlers = [];\n    }\n    document.removeEventListener('keydown', this.hotKeyEventHandler);\n  }\n\n  get trackedDomEvents() {\n    const trackedDomEvents: {\n      target: Element | Document;\n      eventName: string;\n      toolEventHandler: ToolEventHandlerName;\n    }[] = [\n      {\n        target: this.canvas,\n        eventName: 'click',\n        toolEventHandler: 'click',\n      },\n      {\n        target: this.canvas,\n        eventName: 'dblclick',\n        toolEventHandler: 'dblclick',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mousedown',\n        toolEventHandler: 'mousedown',\n      },\n      {\n        target: document,\n        eventName: 'mousemove',\n        toolEventHandler: 'mousemove',\n      },\n      {\n        target: document,\n        eventName: 'mouseup',\n        toolEventHandler: 'mouseup',\n      },\n      {\n        target: document,\n        eventName: 'mouseleave',\n        toolEventHandler: 'mouseleave',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mouseleave',\n        toolEventHandler: 'mouseLeaveClientArea',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mouseover',\n        toolEventHandler: 'mouseover',\n      },\n    ];\n\n    return trackedDomEvents;\n  }\n\n  private domEventSetup() {\n    this.trackedDomEvents.forEach(({ target, eventName, toolEventHandler }) => {\n      this.events[eventName] = new DOMSubscription();\n      const subs = this.events[eventName];\n\n      target.addEventListener(eventName, subs.dispatch.bind(subs));\n\n      subs.add((event) => {\n        this.updateLastCursorPosition(event);\n\n        if (\n          ['mouseup', 'mousedown', 'click', 'dbclick'].includes(event.type) &&\n          !isMouseMainButtonPressed(event)\n        ) {\n          return true;\n        }\n\n        // if (eventName !== 'mouseup' && eventName !== 'mouseleave') {\n        //   // to complete drag actions\n        //   if (!event.target || event.target.nodeName === 'DIV') {\n        //     // click on scroll\n        //     this.hover(null);\n        //     return true;\n        //   }\n        // }\n\n        this.useModeIfNeeded(toolEventHandler, event);\n        const isToolUsed = this.useToolIfNeeded(toolEventHandler, event);\n        if (isToolUsed) {\n          return true;\n        }\n\n        return true;\n      }, -1);\n    });\n  }\n\n  private updateLastCursorPosition(event) {\n    const events = ['mousemove', 'click', 'mousedown', 'mouseup', 'mouseover'];\n    if (events.includes(event.type)) {\n      const clientAreaBoundingBox = this.canvasOffset;\n\n      this.lastCursorPosition = new Vec2({\n        x: event.pageX - clientAreaBoundingBox.x,\n        y: event.pageY - clientAreaBoundingBox.y,\n      });\n      this.lastCursorPositionOfCanvas = Coordinates.viewToCanvas(\n        this.lastCursorPosition,\n      );\n    }\n  }\n\n  private useToolIfNeeded(eventHandlerName: ToolEventHandlerName, event) {\n    const editorTool = this.tool as Tool;\n    if (!editorTool) {\n      return false;\n    }\n    // this.lastEvent = event;\n    const conditions = [\n      eventHandlerName in editorTool,\n      this.canvas.contains(event?.target) || editorTool.isSelectionRunning?.(),\n      // isContextMenuClosed(editor.contextMenu),\n    ];\n\n    if (conditions.every((condition) => condition)) {\n      editorTool[eventHandlerName]?.(event);\n      return true;\n    }\n\n    return false;\n  }\n\n  private useModeIfNeeded(\n    eventHandlerName: ToolEventHandlerName,\n    event: Event,\n  ) {\n    this.mode?.[eventHandlerName]?.(event);\n  }\n\n  public switchToMicromolecules() {\n    this.unsubscribeEvents();\n    const history = new EditorHistory(this);\n    history.destroy();\n    const struct = this.micromoleculesEditor.struct();\n    const reStruct = this.micromoleculesEditor.render.ctab;\n    const { conversionErrorMessage } =\n      MacromoleculesConverter.convertDrawingEntitiesToStruct(\n        this.drawingEntitiesManager,\n        struct,\n        reStruct,\n      );\n    reStruct.render.setMolecule(struct);\n    if (conversionErrorMessage) {\n      const ketcher = ketcherProvider.getKetcher();\n\n      ketcher.editor.setMacromoleculeConvertionError(conversionErrorMessage);\n    }\n  }\n\n  private switchToMacromolecules() {\n    const struct = this.micromoleculesEditor?.struct() || new Struct();\n    const ketcher = ketcherProvider.getKetcher();\n    const { modelChanges } =\n      MacromoleculesConverter.convertStructToDrawingEntities(\n        struct,\n        this.drawingEntitiesManager,\n      );\n    this.renderersContainer.update(modelChanges);\n    ketcher?.editor.clear();\n  }\n}\n","import { RNABase } from 'domain/entities/RNABase';\nimport { Sugar } from 'domain/entities/Sugar';\nimport assert from 'assert';\nimport {\n  getRnaBaseFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { CoreEditor } from 'application/editor/internal';\nimport { AttachmentPointName } from 'domain/types';\nimport { Command } from 'domain/entities/Command';\nimport {\n  getRnaPartLibraryItem,\n  getSugarBySequenceType,\n} from 'domain/helpers/rna';\nimport { RNA_DNA_NON_MODIFIED_PART } from 'domain/constants/monomers';\n\nexport class Nucleoside {\n  constructor(public sugar: Sugar, public rnaBase: RNABase) {}\n\n  static fromSugar(sugar: Sugar, needValidation = true) {\n    if (needValidation) {\n      assert(\n        isValidNucleoside(sugar),\n        'Created nucleoside is not valid. Please check nucleotide parts connections.',\n      );\n\n      const isNucleotide = isValidNucleotide(sugar);\n      assert(!isNucleotide, 'Created nucleoside is nucleotide.');\n    }\n\n    return new Nucleoside(sugar, getRnaBaseFromSugar(sugar) as RNABase);\n  }\n\n  static createOnCanvas(rnaBaseName: string, position: Vec2) {\n    const editor = CoreEditor.provideEditorInstance();\n    const rnaBaseLibraryItem = getRnaPartLibraryItem(editor, rnaBaseName);\n    const sugarName = getSugarBySequenceType(editor.sequenceTypeEnterMode);\n    assert(sugarName);\n\n    const sugarLibraryItem = getRnaPartLibraryItem(editor, sugarName);\n\n    assert(sugarLibraryItem);\n    assert(rnaBaseLibraryItem);\n\n    const modelChanges = new Command();\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.addMonomer(sugarLibraryItem, position),\n    );\n    modelChanges.merge(\n      editor.drawingEntitiesManager.addMonomer(rnaBaseLibraryItem, position),\n    );\n\n    const sugar = modelChanges.operations[0].monomer as Sugar;\n    const rnaBase = modelChanges.operations[1].monomer as RNABase;\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.createPolymerBond(\n        sugar,\n        rnaBase,\n        AttachmentPointName.R3,\n        AttachmentPointName.R1,\n      ),\n    );\n\n    return { modelChanges, node: Nucleoside.fromSugar(sugar, false) };\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return this.sugar.isMonomerTypeDifferentForChaining(monomerToChain);\n  }\n\n  public get SubChainConstructor() {\n    return this.sugar.SubChainConstructor;\n  }\n\n  public get monomer() {\n    return this.sugar;\n  }\n\n  public get monomers() {\n    return [this.sugar, this.rnaBase];\n  }\n\n  public get firstMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get lastMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return this.sugar.label !== RNA_DNA_NON_MODIFIED_PART.SUGAR_RNA;\n  }\n}\n","import { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { MonomerSequenceNode } from 'domain/entities/MonomerSequenceNode';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\n\nexport type SubChainNode =\n  | MonomerSequenceNode\n  | Nucleoside\n  | Nucleotide\n  | EmptySequenceNode;\n\nexport enum SequenceType {\n  RNA = 'RNA',\n  DNA = 'DNA',\n  PEPTIDE = 'PEPTIDE',\n}\n\nexport enum IsChainCycled {\n  NOT_CYCLED,\n  CYCLED,\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render';\n\nimport { OperationType } from './OperationType';\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>;\ntype OperationType = ValueOf<typeof OperationType>;\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined;\n  type: OperationType;\n  priority: number;\n  data: any;\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type;\n    this.priority = priority;\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented');\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct);\n    if (!this._inverted) {\n      this._inverted = this.invert();\n      this._inverted._inverted = this;\n    }\n    return this._inverted;\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented');\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false;\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId);\n    if (!atom) {\n      return;\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0);\n\n    const halfBonds = restruct.molecule.halfBonds;\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return;\n      }\n\n      const halfBond = halfBonds.get(halfBondId);\n      if (!halfBond) {\n        return;\n      }\n\n      restruct.markBond(halfBond.bid, 1);\n      restruct.markAtom(halfBond.end, 0);\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid);\n      }\n    });\n\n    const fragment = atom.a.fragment;\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle;\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0);\n      }\n    });\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId);\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return;\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2);\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop);\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop);\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId);\n\n    const bond = restruct.bonds.get(bondId);\n    if (!bond) {\n      return;\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0);\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0);\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any,\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level);\n      return;\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id);\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id);\n      }\n      return;\n    }\n\n    restruct.markItem(map, id, level);\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number,\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1);\n  }\n}\n\nexport { BaseOperation };\nexport default BaseOperation;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATTACHMENT_POINT_ADD: 'Add attachment point to s-group',\n  S_GROUP_ATTACHMENT_POINT_REMOVE: 'Remove attachment point from s-group',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  R_GROUP_ATTACHMENT_POINT_ADD: 'Add R-group attachment point',\n  R_GROUP_ATTACHMENT_POINT_REMOVE: 'Remove R-group attachment point',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_ROTATE: 'Rotate rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_SET_PROPERTIES: 'Set fragment properties',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight',\n  POLYMER_BOND_ADD: 'Add polymer bond',\n  POLYMER_BOND_DELETE: 'Remove polymer bond',\n  POLYMER_BOND_MOVE: 'Move polymer bond',\n  POLYMER_BOND_FINISH_CREATION: 'Finish polymer bond creation',\n  POLYMER_BOND_CANCEL_CREATION: 'Cancel polymer bond creation',\n  PEPTIDE_ADD: 'Add peptide',\n  PEPTIDE_REMOVE: 'Remove peptide',\n  PEPTIDE_MOVE: 'Move peptide',\n  PEPTIDE_HOVER: 'Hover peptide',\n  DRAWING_ENTITY_SELECT: 'Select drawing entity',\n  DRAWING_ENTITY_HOVER: 'Hover drawing entity',\n  SHOW_POLYMER_BOND_INFORMATION: 'Show polymer bond information',\n});\n\nexport enum OperationPriority {\n  ATOM_ATTR = 1,\n  BOND_ADD = 1,\n  R_GROUP_ATTACHMENT_POINT_REMOVE = 1,\n  ATOM_MOVE = 2,\n  BOND_ATTR = 2,\n  BOND_MOVE = 2,\n  BOND_DELETE = 3,\n  S_GROUP_ATOM_ADD = 3,\n  S_GROUP_ATTACHMENT_POINT_ADD = 3,\n  R_GROUP_ATTACHMENT_POINT_ADD = 3,\n  S_GROUP_ATTR = 4,\n  ATOM_DELETE = 5,\n  FRAGMENT_STEREO_FLAG = 6,\n  CALC_IMPLICIT_H = 10,\n  FRAGMENT_DELETE_STEREO_ATOM = 90,\n  S_GROUP_DELETE = 95,\n  S_GROUP_ADD_TO_HIERACHY = 100,\n  FRAGMENT_ADD_STEREO_ATOM = 100,\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  aid?: any;\n  attribute?: any;\n  value?: any;\n};\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, OperationPriority.ATOM_ATTR);\n    this.data = { aid: atomId, attribute, value };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data;\n\n      const atom = restruct.molecule.atoms.get(aid)!;\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute],\n        };\n      }\n\n      atom[attribute] = value;\n      BaseOperation.invalidateAtom(restruct, aid);\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any;\n    d: any;\n    noinvalidate: any;\n  };\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, OperationPriority.ATOM_MOVE);\n    this.data = { aid: atomId, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { aid, d } = this.data;\n    const atom = struct.atoms.get(aid);\n    if (!atom) return;\n    atom!.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid);\n    if (reatom) {\n      const scaled = Scale.modelToCanvas(d, restruct.render.options);\n      reatom.visel.translate(scaled);\n    }\n\n    this.data.d = d.negated();\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1);\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n\n  isDummy() {\n    const { d } = this.data;\n    return d.x === 0 && d.y === 0;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { Atom, Pile, Vec2 } from 'domain/entities';\nimport { ReAtom, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any;\n  atom: any;\n  pos: any;\n};\n\nclass AtomAdd extends BaseOperation {\n  data: Data;\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD);\n    this.data = { atom, pos, aid: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data;\n\n    const struct = restruct.molecule;\n\n    const pp: { label: string } = { label: '' };\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p];\n      });\n    }\n\n    pp.label = pp.label || 'C';\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp));\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp));\n    }\n\n    const { aid } = this.data;\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!);\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]));\n    restruct.atoms.set(aid, atomData);\n    restruct.markAtom(aid, 1);\n\n    struct.atomSetPos(aid, new Vec2(pos));\n\n    const arrow = struct.rxnArrows.get(0);\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!;\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x,\n      );\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data;\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, OperationPriority.ATOM_DELETE);\n    this.data = { aid: atomId, atom: null, pos: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data;\n\n    const struct = restruct.molecule;\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid);\n      this.data.pos = this.data.atom.pp;\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid);\n    if (!restructedAtom) {\n      return;\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component);\n    set.delete(aid);\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component);\n    }\n\n    restruct.clearVisel(restructedAtom.visel);\n    restruct.atoms.delete(aid);\n    restruct.markItemRemoved();\n    struct.atoms.delete(aid);\n  }\n\n  invert() {\n    const inverted = new AtomAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { AtomAdd, AtomDelete };\nexport * from './AtomAttr';\nexport * from './AtomMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  bid: any;\n  attribute: any;\n  value: any;\n  needInvalidateBond?: boolean;\n};\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(\n    bondId?: any,\n    attribute?: any,\n    value?: any,\n    needInvalidateBond = true,\n  ) {\n    super(OperationType.BOND_ATTR, OperationPriority.BOND_ATTR);\n    this.data = { bid: bondId, attribute, value, needInvalidateBond };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data;\n      const bond = restruct.molecule.bonds.get(bid)!;\n\n      if (!this.data2) {\n        this.data2 = {\n          bid,\n          attribute,\n          value: bond[attribute],\n        };\n      }\n\n      bond[attribute] = value;\n\n      if (this.data.needInvalidateBond) {\n        BaseOperation.invalidateBond(restruct, bid);\n      }\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid);\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data;\n      const bond = restruct.molecule.bonds.get(bid)!;\n      return bond[attribute] === value;\n    }\n    return false;\n  }\n\n  invert() {\n    const inverted = new BondAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any;\n    d: any;\n  };\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, OperationPriority.BOND_MOVE);\n    this.data = { bid: bondId, d };\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data;\n    const bond = restruct.bonds.get(bid);\n    if (!bond) return;\n\n    const scaled = Scale.modelToCanvas(d, restruct.render.options);\n    bond.visel.translate(scaled);\n    this.data.d = d.negated();\n  }\n\n  invert() {\n    const inverted = new BondMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReBond, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { Bond } from 'domain/entities';\nimport { OperationPriority, OperationType } from '../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any;\n  begin: any;\n  end: any;\n  bid: any;\n  needInvalidateAtoms?: boolean;\n};\n\nclass BondAdd extends BaseOperation {\n  data: Data;\n\n  constructor(begin?: any, end?: any, bond?: any, needInvalidateAtoms = true) {\n    super(OperationType.BOND_ADD, OperationPriority.BOND_ADD);\n    this.data = { bond, begin, end, bid: null, needInvalidateAtoms };\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data;\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected');\n    }\n\n    if (this.data.needInvalidateAtoms) {\n      BaseOperation.invalidateAtom(restruct, begin, 1);\n      BaseOperation.invalidateAtom(restruct, end, 1);\n    }\n\n    const pp: {\n      type: number;\n      begin: number;\n      end: number;\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0,\n    };\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p];\n      });\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE;\n    pp.begin = begin;\n    pp.end = end;\n\n    const newBond = new Bond(pp);\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond);\n    } else {\n      this.data.bid = struct.bonds.add(newBond);\n    }\n\n    const { bid } = this.data;\n    const structBond = struct.bonds.get(bid)!;\n\n    struct.bondInitHalfBonds(bid);\n    struct.atomAddNeighbor(structBond.hb1);\n    struct.atomAddNeighbor(structBond.hb2);\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond));\n    restruct.markBond(bid, 1);\n  }\n\n  invert() {\n    const inverted = new BondDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data;\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, OperationPriority.BOND_DELETE);\n    this.data = { bid: bondId, bond: null, begin: null, end: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data;\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid);\n      this.data.begin = this.data.bond.begin;\n      this.data.end = this.data.bond.end;\n    }\n\n    BaseOperation.invalidateBond(restruct, bid);\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid);\n    if (!rebond) return;\n    [rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return;\n      const halfBond = restruct.molecule.halfBonds.get(hbid);\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop);\n      }\n    }, restruct);\n    restruct.clearVisel(rebond.visel);\n    restruct.bonds.delete(bid);\n    restruct.markItemRemoved();\n\n    const structBond = struct.bonds.get(bid)!;\n    [structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!);\n      if (!halfBond) {\n        return;\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!;\n      const pos = atom.neighbors.indexOf(hbid!);\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length;\n      const next = (pos + 1) % atom.neighbors.length;\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next]);\n      atom.neighbors.splice(pos, 1);\n    });\n    struct.halfBonds.delete(structBond.hb1!);\n    struct.halfBonds.delete(structBond.hb2!);\n\n    struct.bonds.delete(bid);\n  }\n\n  invert() {\n    const inverted = new BondAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { BondAdd, BondDelete };\nexport * from './BondAttr';\nexport * from './BondMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Struct } from 'domain/entities';\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct;\n  };\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD);\n    this.data = { struct };\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule;\n    restruct.clearVisels(); // TODO: What is it?\n    if (this.data.struct) {\n      restruct.render.setMolecule(this.data.struct, true);\n    }\n\n    this.data.struct = oldStruct;\n  }\n\n  invert() {\n    const inverted = new CanvasLoad();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Vec2 } from 'domain/entities';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any;\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS);\n    this.history = {};\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse();\n\n    const structBox: any = struct.getCoordBoundingBoxObj();\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0),\n    );\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp);\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5));\n      sgroup.pp = alignPoint;\n      struct.sgroups.set(sgroup.id, sgroup);\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1);\n    });\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history);\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any;\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION);\n    this.history = history;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroups: any[] = Array.from(struct.sgroups.values());\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id];\n      struct.sgroups.set(sgroup.id, sgroup);\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1);\n    });\n  }\n\n  invert() {\n    return new AlignDescriptors();\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any;\n    p: any;\n  };\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE);\n    this.data = { frid: fragmentId, p };\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data;\n    const { p } = this.data;\n    const fragment = restruct.molecule.frags.get(frid);\n    if (!fragment) return;\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!;\n\n    const newPosition = Vec2.sum(currentPosition, p);\n    fragment.stereoFlagPosition = newPosition;\n\n    this.data.p = p.negated();\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1);\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any;\n  rgid_old: any;\n  ifThenHistory: any;\n  skipRgids: any[];\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN);\n    this.rgid_new = rgNew;\n    this.rgid_old = rgOld;\n    this.ifThenHistory = new Map();\n    this.skipRgids = skipRgids || [];\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new;\n        this.ifThenHistory.set(rgid, this.rgid_old);\n        struct.rgroups.set(rgid, rg);\n      }\n    });\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory);\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any;\n  rgid_old: any;\n  ifThenHistory: any;\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN);\n    this.rgid_new = rgNew;\n    this.rgid_old = rgOld;\n    this.ifThenHistory = history || new Map();\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!;\n      rgValue.ifthen = rg;\n      struct.rgroups.set(rgid, rgValue);\n    });\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new);\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render';\n\nimport { BaseOperation } from './base';\nimport { Fragment, StructProperty } from 'domain/entities';\nimport { OperationType } from './OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any;\n  properties?: Array<StructProperty>;\n\n  constructor(fragmentId?: any, properties?: Array<StructProperty>) {\n    super(OperationType.FRAGMENT_ADD);\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId;\n    if (properties) {\n      this.properties = properties;\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const frag = new Fragment([], null, this.properties);\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag);\n    } else {\n      struct.frags.set(this.frid, frag);\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)); // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag());\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid);\n  }\n}\n\nclass FragmentSetProperties extends BaseOperation {\n  frid: any;\n  properties?: Array<StructProperty>;\n\n  constructor(fragmentId: any, properties?: Array<StructProperty>) {\n    super(OperationType.FRAGMENT_SET_PROPERTIES);\n    this.frid = fragmentId;\n    this.properties = properties;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const frag = struct.frags.get(this.frid);\n\n    if (frag) {\n      if (this.properties) {\n        frag.properties = this.properties;\n      } else {\n        delete frag?.properties;\n      }\n    }\n  }\n\n  invert() {\n    return new FragmentSetProperties(this.frid, undefined);\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any;\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100);\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    if (!struct.frags.get(this.frid)) {\n      return;\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1);\n    restruct.frags.delete(this.frid);\n    struct.frags.delete(this.frid); // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid);\n    if (!enhancedFalg) return;\n    restruct.clearVisel(enhancedFalg.visel);\n    restruct.enhancedFlags.delete(this.frid);\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid);\n  }\n}\n\nexport { FragmentAdd, FragmentDelete, FragmentSetProperties };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any;\n  aid: any;\n};\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data;\n\n  constructor(fragmentId: any, atomId: any) {\n    super(\n      OperationType.FRAGMENT_ADD_STEREO_ATOM,\n      OperationPriority.FRAGMENT_ADD_STEREO_ATOM,\n    );\n    this.data = { frid: fragmentId, aid: atomId };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data;\n\n    const frag = restruct.molecule.frags.get(frid);\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true);\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid);\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid);\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data;\n\n  constructor(fragmentId: any, atomId: any) {\n    super(\n      OperationType.FRAGMENT_DELETE_STEREO_ATOM,\n      OperationPriority.FRAGMENT_DELETE_STEREO_ATOM,\n    );\n    this.data = { frid: fragmentId, aid: atomId };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data;\n\n    const frag = restruct.molecule.frags.get(frid);\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false);\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid);\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data;\n    return new FragmentAddStereoAtom(frid, aid);\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number;\n\n  constructor(fragmentId: number) {\n    super(\n      OperationType.FRAGMENT_STEREO_FLAG,\n      OperationPriority.FRAGMENT_STEREO_FLAG,\n    );\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    const fragment = struct.frags.get(this.frid)!;\n    fragment.updateStereoFlag(struct);\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid);\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid);\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>;\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, OperationPriority.CALC_IMPLICIT_H);\n    this.atomIds = aids;\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds;\n\n    restruct.molecule.setImplicitHydrogen(aIds);\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n  };\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE);\n    this.data = { id, d };\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data;\n    const reloop = restruct.reloops.get(id);\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.modelToCanvas(d, restruct.render.options);\n      reloop.visel.translate(scaled);\n    }\n    this.data.d = d.negated();\n  }\n\n  invert() {\n    const inverted = new LoopMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  rgid: any;\n  attribute: any;\n  value: any;\n};\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR);\n    this.data = { rgid: rgroupId, attribute, value };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data;\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!;\n\n      if (!rgp) {\n        return;\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute],\n        };\n      }\n\n      rgp[attribute] = value;\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid);\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data;\n      const rgroup = restruct.molecule.rgroups.get(rgid)!;\n      return rgroup[attribute] === value;\n    }\n    return false;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { RGroup } from 'domain/entities';\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any;\n  rg_new: any;\n  rgid_old: any;\n  rg_old: any;\n  frid: any;\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT);\n    this.rgid_new = rgroupId;\n    this.rg_new = rg;\n    this.rgid_old = null;\n    this.rg_old = null;\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid);\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null;\n\n    this.removeOld(struct, restruct);\n    this.setNew(struct, restruct);\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return;\n    }\n\n    this.rg_old.frags.delete(this.frid);\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel);\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old);\n      struct.rgroups.delete(this.rgid_old);\n      restruct.markItemRemoved();\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1);\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return;\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new);\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup();\n      struct.rgroups.set(this.rgid_new, rgNew);\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew));\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1);\n    }\n\n    rgNew.frags.add(this.frid);\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old);\n  }\n}\n","import { ReStruct, ReRGroupAttachmentPoint } from 'application/render';\nimport assert from 'assert';\nimport {\n  RGroupAttachmentPoint,\n  RGroupAttachmentPointType,\n} from 'domain/entities';\nimport { RGroupAttachmentPointRemove } from '.';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport BaseOperation from '../base';\n\ntype Data = {\n  atomId: number;\n  attachmentPointType: RGroupAttachmentPointType;\n  attachmentPointId?: number;\n};\n\nclass RGroupAttachmentPointAdd extends BaseOperation {\n  data: Data;\n\n  constructor(data: Data) {\n    super(\n      OperationType.R_GROUP_ATTACHMENT_POINT_ADD,\n      OperationPriority.R_GROUP_ATTACHMENT_POINT_ADD,\n    );\n    this.data = data;\n  }\n\n  execute(restruct: ReStruct) {\n    const { atomId, attachmentPointType } = this.data;\n    const newAttachmentPoint = new RGroupAttachmentPoint(\n      atomId,\n      attachmentPointType,\n    );\n\n    const struct = restruct.molecule;\n    const revertedId = this.data.attachmentPointId;\n    let attachmentPointId = 0;\n    if (revertedId === undefined) {\n      const newId = struct.rgroupAttachmentPoints.add(newAttachmentPoint);\n      attachmentPointId = newId;\n    } else {\n      struct.rgroupAttachmentPoints.set(revertedId, newAttachmentPoint);\n      attachmentPointId = revertedId;\n    }\n    this.data.attachmentPointId = attachmentPointId;\n\n    const reAtom = restruct.atoms.get(atomId);\n    assert(reAtom != null);\n    restruct.rgroupAttachmentPoints.set(\n      attachmentPointId,\n      new ReRGroupAttachmentPoint(newAttachmentPoint, reAtom),\n    );\n  }\n\n  invert() {\n    if (this.data.attachmentPointId === undefined) {\n      throw Error(`Inverted attachmentPointId doesn't exist`);\n    }\n    return new RGroupAttachmentPointRemove(this.data.attachmentPointId);\n  }\n}\n\nexport { RGroupAttachmentPointAdd };\n","import { ReStruct } from 'application/render';\nimport assert from 'assert';\nimport { RGroupAttachmentPointAdd } from '.';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport BaseOperation from '../base';\n\ntype Data = { atomId: number; attachmentPointType; attachmentPointId: number };\n\nconst INITIAL_DATA = {\n  atomId: 0,\n  attachmentPointType: 1,\n  attachmentPointId: 0,\n};\n\nclass RGroupAttachmentPointRemove extends BaseOperation {\n  data: Data;\n\n  constructor(attachmentPointId: number) {\n    super(\n      OperationType.R_GROUP_ATTACHMENT_POINT_REMOVE,\n      OperationPriority.R_GROUP_ATTACHMENT_POINT_REMOVE,\n    );\n    this.data = {\n      ...INITIAL_DATA,\n      attachmentPointId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { attachmentPointId } = this.data;\n    const struct = restruct.molecule;\n    const item = struct.rgroupAttachmentPoints.get(attachmentPointId);\n    const reItem = restruct.rgroupAttachmentPoints.get(attachmentPointId);\n    assert(item != null && reItem != null);\n\n    this.data.atomId = item.atomId;\n    this.data.attachmentPointType = item.type;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(reItem.visel);\n    restruct.rgroupAttachmentPoints.delete(attachmentPointId);\n\n    struct.rgroupAttachmentPoints.delete(attachmentPointId);\n  }\n\n  invert() {\n    return new RGroupAttachmentPointAdd(this.data);\n  }\n}\n\nexport { RGroupAttachmentPointRemove };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base';\nimport { OperationType } from '../OperationType';\nimport { Scale } from 'domain/helpers';\n\ninterface RxnArrowMoveData {\n  id: number;\n  d: any;\n  noinvalidate: boolean;\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData;\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const item = struct.rxnArrows.get(id);\n    item.pos.forEach((p) => p.add_(d));\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1);\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n    move.data = this.data;\n    return move;\n  }\n}\n","import utils from 'application/editor/shared/utils';\nimport { ReStruct } from 'application/render';\nimport { Vec2 } from 'domain/entities';\nimport { OperationType } from '../OperationType';\nimport Base from '../base';\n\ninterface RxnArrowRotateData {\n  id: number;\n  angle: number;\n  center: Vec2;\n  noinvalidate?: boolean;\n}\n\nexport class RxnArrowRotate extends Base {\n  data: RxnArrowRotateData;\n\n  constructor(id: number, angle: number, center: Vec2, noinvalidate?: boolean) {\n    super(OperationType.RXN_ARROW_ROTATE);\n    this.data = { id, angle, center, noinvalidate };\n  }\n\n  execute(reStruct: ReStruct) {\n    const degree = utils.degrees(this.data.angle);\n\n    const arrowId = this.data.id;\n    const arrow = reStruct.molecule.rxnArrows.get(arrowId);\n    if (arrow) {\n      // Note: Struct and ReStruct are in two different systems,\n      //       must manually update struct's position\n      arrow.pos = arrow.pos.map((p) =>\n        p.rotateAroundOrigin(degree, this.data.center),\n      );\n    }\n\n    const options = reStruct.render.options;\n    const drawingCenter = this.data.center\n      .scaled(options.microModeScale)\n      .add(options.offset);\n\n    reStruct.rxnArrows.get(arrowId)?.visel.rotate(degree, drawingCenter);\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(reStruct, 'rxnArrows', arrowId, 1);\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowRotate(\n      this.data.id,\n      -this.data.angle,\n      this.data.center,\n      this.data.noinvalidate,\n    );\n    return move;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from 'application/render';\nimport assert from 'assert';\nimport { RxnArrow, Vec2 } from 'domain/entities';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\nimport { OperationType } from '../OperationType';\nimport Base from '../base';\n\nexport const ARROW_MAX_SNAPPING_ANGLE = Math.PI / 12; // 15°\n\ninterface RxnArrowResizeData {\n  id: number;\n  d: Vec2;\n  current: Vec2;\n  anchor: Vec2 | null;\n  noinvalidate: boolean;\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData;\n  isSnappingEnabled: boolean;\n\n  constructor(\n    id: number,\n    d: Vec2,\n    current: Vec2,\n    anchor: Vec2 | null,\n    noinvalidate: boolean,\n    isSnappingEnabled: boolean,\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE);\n    this.data = { id, d, current, anchor, noinvalidate };\n    this.isSnappingEnabled = isSnappingEnabled;\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    let d = this.data.d;\n    const current = this.data.current;\n    const item = struct.rxnArrows.get(id);\n    const reItem = restruct.rxnArrows.get(id);\n    assert(item != null && reItem != null);\n    const anchor = this.data.anchor;\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0();\n      const previousPos1 = item.pos[1].get_xy0();\n      let middlePoint;\n\n      if (RxnArrow.isElliptical(item)) {\n        [, , middlePoint] = reItem.getReferencePoints();\n      }\n\n      if (\n        /**\n         *          (anchor)\n         *   (pos[1])   ^\n         *              |  ↘ (d)\n         *   (pos[0])   o —— > (current)\n         *\n         * more details: ./RxnArrowResize.doc.png\n         */\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        if (this.isSnappingEnabled) {\n          const currentArrowVector = current.sub(item.pos[0]);\n          const snappedArrowVector = getSnappedArrowVector(currentArrowVector);\n          const snappedCurrent = item.pos[0].add(snappedArrowVector);\n          current.x = snappedCurrent.x;\n          current.y = snappedCurrent.y;\n        }\n        item.pos[1].x = anchor.x = current.x;\n        current.x = previousPos1.x;\n        item.pos[1].y = anchor.y = current.y;\n        current.y = previousPos1.y;\n      }\n\n      if (\n        /**\n         *          (anchor)\n         *   (pos[0])   o\n         *              |  ↘ (d)\n         *   (pos[1])   x —— o  (current)\n         *\n         * more details: ./RxnArrowResize.doc.png\n         */\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        if (this.isSnappingEnabled) {\n          const currentArrowVector = current.sub(item.pos[1]);\n          const snappedArrowVector = getSnappedArrowVector(currentArrowVector);\n          const snappedCurrent = item.pos[1].add(snappedArrowVector);\n          current.x = snappedCurrent.x;\n          current.y = snappedCurrent.y;\n        }\n        item.pos[0].x = anchor.x = current.x;\n        current.x = previousPos0.x;\n        item.pos[0].y = anchor.y = current.y;\n        current.y = previousPos0.y;\n      }\n\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y,\n        );\n        const angleInRadians = (angle * Math.PI) / 180;\n        const cosAngle = Math.cos(angleInRadians);\n        const sinAngle = Math.sin(angleInRadians);\n\n        const diffX = current.x - anchor.x;\n        const diffY = current.y - anchor.y;\n\n        const diff = diffY * cosAngle - diffX * sinAngle;\n        if (item.height !== undefined) {\n          item.height -= diff;\n        }\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints();\n\n        anchor.y = newMiddlePoint.y;\n        anchor.x = newMiddlePoint.x;\n      }\n    } else {\n      if (this.isSnappingEnabled) {\n        d = getSnappedArrowVector(d);\n      }\n      item.pos[1].add_(d);\n    }\n\n    reItem.visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1);\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.isSnappingEnabled,\n    );\n  }\n}\n\nexport function getSnappedArrowVector(arrow: Vec2) {\n  const AXIS = {\n    POSITIVE_X: 0,\n    POSITIVE_Y: Math.PI / 2,\n    NEGATIVE_X: [Math.PI, -Math.PI],\n    NEGATIVE_Y: -Math.PI / 2,\n  };\n  const oxAngle = arrow.oxAngle();\n  const arrowLength = arrow.length();\n  const isSnappingToPositiveXAxis =\n    Math.abs(oxAngle - AXIS.POSITIVE_X) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToPositiveXAxis) {\n    return new Vec2(arrowLength, 0);\n  }\n  const isSnappingToPositiveYAxis =\n    Math.abs(oxAngle - AXIS.POSITIVE_Y) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToPositiveYAxis) {\n    return new Vec2(0, arrowLength);\n  }\n  const isSnappingToNegativeXAxis =\n    Math.abs(oxAngle - AXIS.NEGATIVE_X[0]) <= ARROW_MAX_SNAPPING_ANGLE ||\n    Math.abs(oxAngle - AXIS.NEGATIVE_X[1]) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToNegativeXAxis) {\n    return new Vec2(-arrowLength, 0);\n  }\n  const isSnappingToNegativeYAxis =\n    Math.abs(oxAngle - AXIS.NEGATIVE_Y) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToNegativeYAxis) {\n    return new Vec2(0, -arrowLength);\n  }\n  return arrow;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base';\nimport { OperationType } from '../../OperationType';\nimport { ReStruct } from '../../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n    noinvalidate: any;\n  };\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data;\n\n    const struct = restruct.molecule;\n    struct.rxnPluses.get(id)!.pp.add_(d); // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!;\n    const scaled = Scale.modelToCanvas(d, restruct.render.options);\n    rxn.visel.translate(scaled);\n\n    this.data.d = d.negated();\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1);\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReRxnPlus, ReStruct } from '../../../../render';\nimport { RxnPlus, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from '../../base';\nimport { OperationType } from '../../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any;\n  pos: any;\n};\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data;\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD);\n    this.data = { plid: null, pos };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    const newRxn = new RxnPlus();\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn);\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn);\n    }\n\n    const { pos, plid } = this.data;\n\n    const structRxn = struct.rxnPluses.get(plid);\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn));\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos));\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1);\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data;\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE);\n    this.data = { plid, pos: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data;\n\n    const struct = restruct.molecule;\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp;\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved();\n    const rxn = restruct.rxnPluses.get(plid);\n    if (!rxn) return;\n    restruct.clearVisel(rxn.visel);\n    restruct.rxnPluses.delete(plid);\n\n    struct.rxnPluses.delete(plid);\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete };\nexport * from './RxnPlusMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport Base from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReRxnArrow } from '../../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number;\n  pos: Array<Vec2>;\n  mode: RxnArrowMode;\n};\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData;\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number,\n  ) {\n    super(OperationType.RXN_ARROW_ADD);\n    this.data = { pos, mode, id };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = new RxnArrow({ mode: this.data.mode });\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item);\n      this.data.id = index;\n    } else {\n      struct.rxnArrows.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item));\n\n    const positions = [...this.data.pos];\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p)),\n    );\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1);\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!);\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number;\n  pos?: Array<Vec2>;\n  mode?: RxnArrowMode;\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData;\n  performed: boolean;\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE);\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle };\n    this.performed = false;\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = struct.rxnArrows.get(this.data.id) as any;\n    this.data.pos = item.pos;\n    this.data.mode = item.mode;\n    this.performed = true;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel);\n    restruct.rxnArrows.delete(this.data.id);\n\n    struct.rxnArrows.delete(this.data.id);\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id);\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete };\nexport * from './RxnArrowMove';\nexport * from './RxnArrowRotate';\nexport * from './RxnArrowResize';\nexport * from './plus';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities';\n\nimport Base from './base';\nimport { OperationType } from './OperationType';\nimport { ReSimpleObject } from '../../render';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\n\ninterface SimpleObjectAddData {\n  id?: number;\n  pos: Array<Vec2>;\n  mode: SimpleObjectMode;\n  toCircle: boolean;\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData;\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number,\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD);\n    this.data = { pos, mode, toCircle, id };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = new SimpleObject({ mode: this.data.mode });\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item);\n      this.data.id = index;\n    } else {\n      struct.simpleObjects.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item));\n\n    const positions = [...this.data.pos];\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1]);\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p)),\n    );\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1);\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!);\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number;\n  pos?: Array<Vec2>;\n  mode?: SimpleObjectMode;\n  toCircle?: boolean;\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData;\n  performed: boolean;\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE);\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false };\n    this.performed = false;\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = struct.simpleObjects.get(this.data.id) as any;\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos;\n    this.data.mode = item.mode;\n    this.data.toCircle = item.toCircle;\n    this.performed = true;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel);\n    restruct.simpleObjects.delete(this.data.id);\n\n    struct.simpleObjects.delete(this.data.id);\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id,\n    );\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number;\n  d: any;\n  noinvalidate: boolean;\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData;\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const item = struct.simpleObjects.get(id);\n    item.pos.forEach((p) => p.add_(d));\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1);\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n    // todo Need further investigation on why this is needed?\n    move.data = this.data;\n    return move;\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number;\n  d: any;\n  current: Vec2;\n  anchor: Vec2;\n  noinvalidate: boolean;\n  toCircle: boolean;\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0();\n  const previousPos1 = item.pos[1].get_xy0();\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x;\n    current.x = previousPos1.x;\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y;\n    current.y = previousPos1.y;\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x;\n    current.x = previousPos0.x;\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y;\n    current.y = previousPos0.y;\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData;\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean,\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE);\n    this.data = { id, d, current, anchor, noinvalidate, toCircle };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const current = this.data.current;\n    const item = struct.simpleObjects.get(id);\n    const anchor = this.data.anchor;\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current);\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0();\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current);\n        item.pos[1].x = circlePoint.x;\n        item.pos[1].y = circlePoint.y;\n        this.data.current = previousPos1;\n      } else {\n        const previousPos1 = item.pos[1].get_xy0();\n        item.pos[1].x = current.x;\n        item.pos[1].y = current.y;\n        this.data.current = previousPos1;\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0();\n      const previousPos1 = item.pos[1].get_xy0();\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x;\n        current.x = previousPos1.x;\n        item.pos[1].y = anchor.y = current.y;\n        current.y = previousPos1.y;\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x;\n        current.x = previousPos0.x;\n        item.pos[0].y = anchor.y = current.y;\n        current.y = previousPos0.y;\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current);\n    } else item.pos[1].add_(d);\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1);\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle,\n    );\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0);\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y;\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0,\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { SGroup } from 'domain/entities';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  aid: any;\n};\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, OperationPriority.S_GROUP_ATOM_ADD);\n    this.data = { sgid: sgroupId, aid };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data;\n\n    const struct = restruct.molecule;\n    const atom = struct.atoms.get(aid)!;\n    const sgroup = struct.sgroups.get(sgid)!;\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once',\n      );\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found');\n    }\n\n    struct.atomAddToSGroup(sgid, aid);\n    BaseOperation.invalidateAtom(restruct, aid);\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4);\n    this.data = { sgid: sgroupId, aid };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data;\n\n    const struct = restruct.molecule;\n    const atom = struct.atoms.get(aid)!;\n    const sgroup = struct.sgroups.get(sgid)!;\n\n    if (!atom || !sgroup) {\n      return;\n    }\n\n    SGroup.removeAtom(sgroup, aid);\n    atom.sgs.delete(sgid);\n    BaseOperation.invalidateAtom(restruct, aid);\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any;\n    attr: any;\n    value: any;\n  };\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, OperationPriority.S_GROUP_ATTR);\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroupId = this.data.sgid!;\n    const sgroup = struct.sgroups.get(sgroupId)!;\n\n    if (!sgroup) {\n      return;\n    }\n\n    const sgroupData = restruct.sgroupData.get(sgroupId);\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel);\n      restruct.sgroupData.delete(sgroupId);\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value);\n  }\n\n  invert() {\n    const inverted = new SGroupAttr();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n  };\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE);\n    this.data = { id, d };\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data;\n    const { sgroups } = restruct.molecule;\n\n    sgroups.get(id)!.pp?.add_(d); // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated();\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1);\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  parent?: any;\n  children?: any;\n};\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(\n      OperationType.S_GROUP_ADD_TO_HIERACHY,\n      OperationPriority.S_GROUP_ADD_TO_HIERACHY,\n    );\n    this.data = { sgid: sgroupId, parent, children };\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data;\n\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(sgid)!;\n    const relations = struct.sGroupForest.insert(sgroup, parent, children);\n\n    this.data.parent = relations.parent;\n    this.data.children = relations.children;\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110);\n    this.data = { sgid: sgroupId };\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data;\n    const struct = restruct.molecule;\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid);\n    this.data.children = struct.sGroupForest.children.get(sgid);\n    struct.sGroupForest.remove(sgid);\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities';\nimport { ReSGroup, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  type?: any;\n  pp?: any;\n  expanded?: boolean;\n  name?: string;\n  oldSgroup?: SGroup;\n};\n\nclass SGroupCreate extends BaseOperation {\n  data: Data;\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string,\n    oldSgroup?: SGroup,\n  ) {\n    super(OperationType.S_GROUP_CREATE);\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name,\n      oldSgroup,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { sgid, pp, expanded, name, oldSgroup } = this.data;\n    const sgroup =\n      oldSgroup instanceof MonomerMicromolecule\n        ? new MonomerMicromolecule(SGroup.TYPES.SUP, oldSgroup.monomer)\n        : new SGroup(this.data.type);\n\n    sgroup.id = sgid;\n    struct.sgroups.set(sgid, sgroup);\n\n    if (pp) {\n      sgroup!.pp = new Vec2(pp);\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded;\n    }\n\n    if (name) {\n      sgroup.data.name = name;\n    }\n\n    const existingSGroup = struct.sgroups.get(sgid);\n\n    if (existingSGroup) {\n      restruct.sgroups.set(sgid, new ReSGroup(existingSGroup));\n      if (\n        FunctionalGroup.isFunctionalGroup(sgroup) ||\n        SGroup.isSuperAtom(sgroup)\n      ) {\n        restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup));\n      }\n    }\n    this.data.sgid = sgid;\n  }\n\n  invert() {\n    const inverted = new SGroupDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, OperationPriority.S_GROUP_DELETE);\n    this.data = { sgid: sgroupId };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { sgid } = this.data;\n    const sgroup = restruct.sgroups.get(sgid);\n    const sgroupData = restruct.sgroupData.get(sgid);\n    if (!sgroup) return;\n    this.data.type = sgroup?.item?.type;\n    this.data.pp = sgroup?.item?.pp;\n\n    if (sgroup?.item?.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel);\n      restruct.sgroupData.delete(sgid);\n    }\n\n    restruct.clearVisel(sgroup.visel);\n    if (sgroup?.item?.atoms?.length !== 0) {\n      throw new Error('S-Group not empty!');\n    }\n\n    if (\n      FunctionalGroup.isFunctionalGroup(sgroup.item) ||\n      SGroup.isSuperAtom(sgroup.item)\n    ) {\n      let relatedFGroupId;\n      this.data.name = sgroup.item.data.name;\n      this.data.expanded = (sgroup.item as SGroup).isExpanded();\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid;\n        }\n      });\n      restruct.molecule.functionalGroups.delete(relatedFGroupId);\n    }\n\n    restruct.sgroups.delete(sgid);\n    struct.sgroups.delete(sgid);\n  }\n\n  invert() {\n    const inverted = new SGroupCreate();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupCreate, SGroupDelete };\nexport * from './sgroupAtom';\nexport * from './SGroupAttr';\nexport * from './SGroupDataMove';\nexport * from './sgroupHierarchy';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReStruct, ReText } from '../../../render';\nimport { Text, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\n\ninterface TextCreateData {\n  id?: number;\n  content: string;\n  pos: Array<Vec2>;\n  position: Vec2;\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData;\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE);\n    this.data = { content, position, pos, id };\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data);\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item);\n      this.data.id = index;\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.texts.set(itemId, new ReText(item));\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position));\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1);\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!);\n  }\n}\n\ninterface TextDeleteData {\n  id: number;\n  content?: string;\n  position?: Vec2;\n  pos?: Array<Vec2> | [];\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData;\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE);\n    this.data = { id };\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const item = struct.texts.get(this.data.id)!;\n    if (!item) return;\n\n    this.data.content = item.content!;\n    this.data.position = item.position;\n\n    restruct.markItemRemoved();\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel);\n    restruct.texts.delete(this.data.id);\n\n    struct.texts.delete(this.data.id);\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ninterface TextUpdateData {\n  id: number;\n  content: string;\n  previousContent?: string;\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData;\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE);\n    this.data = { id, content };\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data;\n    const text = restruct.molecule.texts.get(id);\n\n    if (text) {\n      this.data.previousContent = text.content!;\n      text.content = content;\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1);\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!);\n\n    inverted.data.previousContent = this.data.content;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\ninterface TextMoveData {\n  id: any;\n  d: any;\n  noinvalidate?: boolean;\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData;\n\n  constructor(id: any, d: any, noinvalidate?: boolean) {\n    super(OperationType.TEXT_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const difference = this.data.d;\n    const item = struct.texts.get(id);\n    const renderItem = restruct.texts.get(id);\n\n    if (!item || !renderItem) {\n      return;\n    }\n\n    item.position.add_(difference);\n    item.setPos(renderItem.getReferencePoints());\n\n    renderItem.visel.translate(\n      Scale.modelToCanvas(difference, restruct.render.options),\n    );\n\n    this.data.d = difference.negated();\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1);\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n\n    move.data = this.data;\n\n    return move;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base';\nimport { ReStruct } from '../../render';\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[];\n\n  constructor(operations = []) {\n    this.operations = operations;\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation);\n    }\n\n    return operation;\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations);\n    return this;\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct): Action {\n    const action = new Action();\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority,\n    );\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct);\n      action.addOp(invertedOperation);\n    });\n\n    return action;\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true),\n      ) === undefined\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/**\n * @param restruct { ReStruct }\n * @param _events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  _events,\n  simpleFusing,\n) {\n  const action = simpleFusing(restruct, template, bid);\n  return Promise.resolve(action);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities';\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4;\nconst SELECTION_WITHIN_TEXT = 0;\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText,\n};\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct);\n    const topX = referencePoints[0].x;\n    const topY = referencePoints[0].y;\n    const bottomX = referencePoints[2].x;\n    const bottomY = referencePoints[2].y;\n\n    const distances = [];\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y);\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY);\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y);\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition));\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition));\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition));\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition));\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x);\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX);\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT);\n      }\n    }\n\n    const dist = Math.min(...distances);\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null;\n  let refPoint = null;\n  let ret = null;\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(\n      pos,\n      restruct.render.options.microModeScale,\n    );\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist;\n      refPoint = dist.refPoint;\n\n      ret = { id, dist: minDist, ref: refPoint };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null;\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT;\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null;\n\n  minDist = minDist || maxMinDist;\n  minDist = Math.min(minDist, maxMinDist);\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return;\n\n    const dist = Vec2.dist(pos, atom.a.pp);\n\n    if (dist < minDist) {\n      closestAtom = aid;\n      minDist = dist;\n    }\n  });\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null;\n  let closestBondCenter = null;\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT;\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null;\n\n  minDist = minDist || maxMinDist;\n  minDist = Math.min(minDist, maxMinDist);\n\n  let minCDist = minDist;\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return;\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp;\n    const p2 = restruct.atoms.get(bond.b.end).a.pp;\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5);\n    const cdist = Vec2.dist(pos, mid);\n\n    if (cdist < minCDist) {\n      minCDist = cdist;\n      closestBondCenter = bid;\n    }\n  });\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return;\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const dir = hb.dir;\n    const norm = hb.norm;\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp;\n    const p2 = restruct.atoms.get(bond.b.end).a.pp;\n\n    const inStripe =\n      Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0;\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm));\n\n      if (dist < minDist) {\n        closestBond = bid;\n        minDist = dist;\n      }\n    }\n  });\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist,\n    };\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist;\n  let ret = null;\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id);\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return;\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id);\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return;\n\n    const dist = Math.abs(pos.y - p.y);\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected');\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea;\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x;\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x),\n      );\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist };\n        minDist = xDist;\n      }\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT,\n  );\n\n  const struct = restruct.molecule;\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist);\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist,\n    };\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale);\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin;\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT,\n  );\n\n  let ret = null;\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos);\n\n      if (!ret || dist < minDist) {\n        minDist = dist;\n        ret = { id: rgid, dist: minDist };\n      }\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null;\n  let refPoint = null;\n  let ret = null;\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(\n      pos,\n      restruct.render.options.microModeScale,\n    );\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist;\n      refPoint = dist.refPoint;\n\n      ret = { id, dist: minDist, ref: refPoint };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp;\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y));\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null;\n  let minDist = SELECTION_DISTANCE_COEFFICIENT;\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.isContracted()) {\n      const { position } = sg.getContractedPosition(restruct.molecule);\n      const d = sg.bracketDirection;\n      const n = d.rotateSC(1, 0);\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n));\n      const shift = new Vec2(0.625, 0.625);\n      const box = {\n        p0: Vec2.diff(position, shift),\n        p1: Vec2.sum(position, shift),\n      };\n\n      const inBox =\n        box.p0.y < pg.y &&\n        box.p1.y > pg.y &&\n        box.p0.x < pg.x &&\n        box.p1.x > pg.x;\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x),\n      );\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid;\n        minDist = xDist;\n      }\n    } else {\n      const d = sg.bracketDirection;\n      const n = d.rotateSC(1, 0);\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n));\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x;\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x),\n        );\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid;\n          minDist = xDist;\n        }\n      });\n    }\n  });\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps);\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null;\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale);\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item;\n      return {\n        map: mp,\n        id,\n        dist,\n        ...other,\n      };\n    }\n\n    return res;\n  }, null);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map(), // bid -> position\n  };\n\n  const struct = restruct.molecule;\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp);\n  });\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid);\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5,\n      ),\n    );\n  });\n\n  const result = {};\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId };\n      const item = findMaps[mp](\n        restruct,\n        pos[mp].get(srcId),\n        skip,\n        null,\n        scale,\n      );\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id);\n\n      return res;\n    }, new Map());\n  });\n\n  return result;\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomAttributes,\n  AtomQueryProperties,\n  Bond,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport closest from '../shared/closest';\nimport { difference } from 'lodash';\nimport { ReStruct } from 'application/render';\nimport { selectionKeys } from '../shared/constants';\nimport { EditorSelection } from '../editor.types';\n\nexport type AtomType = 'single' | 'list' | 'pseudo';\nexport type AtomAttributeName = keyof AtomAttributes;\nexport type AtomQueryPropertiesName = keyof AtomQueryProperties;\nexport type AtomAllAttributeName = AtomAttributeName | AtomQueryPropertiesName;\nexport type AtomAllAttributeValue =\n  | AtomAttributes[AtomAttributeName]\n  | AtomQueryProperties[AtomQueryPropertiesName];\n\nexport function atomGetAttr(\n  restruct: ReStruct,\n  aid: number,\n  name: AtomAttributeName,\n) {\n  const atom = restruct.molecule.atoms.get(aid);\n  if (!atom) return null;\n  return atom[name];\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length;\n}\n\nexport function atomGetSGroups(restruct, atomId: number): number[] {\n  return Array.from(restruct.atoms.get(atomId).a.sgs);\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp;\n}\n\nexport function findStereoAtoms(\n  struct: Struct,\n  atomIds: number[] | undefined,\n): number[] {\n  if (!atomIds) {\n    return [] as number[];\n  }\n\n  return atomIds.filter((atomId: number) => {\n    const atom = struct.atoms.get(atomId);\n    if (atom?.stereoLabel !== null) {\n      return true;\n    }\n    const connectedBonds = Atom.getConnectedBondIds(struct, atomId);\n    const connectedWithStereoBond = connectedBonds.some((bondId: number) => {\n      const bond = struct.bonds.get(bondId);\n      return bond?.begin === atomId && bond?.stereo;\n    });\n    return connectedWithStereoBond;\n  });\n}\n\nexport function structSelection(struct): EditorSelection {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys());\n    return res;\n  }, {});\n}\n\nexport function formatSelection(selection): any {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = selection[key] || [];\n\n    return res;\n  }, {});\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = [];\n  const pos = atomGetPos(restruct, id);\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id);\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined,\n  );\n  const prevBond = restruct.molecule.bonds.get(prevBondId);\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1;\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid);\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return;\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) });\n  });\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x),\n  );\n\n  let i;\n  let maxI = 0;\n  let angle;\n  let maxAngle = 0;\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v,\n    );\n\n    if (angle < 0) angle += 2 * Math.PI;\n\n    if (angle > maxAngle) {\n      maxI = i;\n      maxAngle = angle;\n    }\n  }\n\n  let v = new Vec2(1, 0);\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3);\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0];\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = [];\n        const neiPos = atomGetPos(restruct, nei.aid);\n        const neiV = Vec2.diff(pos, neiPos);\n        const neiAngle = Math.atan2(neiV.y, neiV.x);\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid);\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return;\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos);\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle;\n\n          if (ang < 0) ang += 2 * Math.PI;\n\n          neiNeighbours.push(ang);\n        });\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2);\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1;\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE);\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle;\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI;\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180;\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x);\n    }\n\n    v = v.rotate(angle);\n  }\n\n  v.add_(pos); // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1);\n  a = a === null ? { label: 'C' } : a.id;\n\n  return { atom: a, pos: v };\n}\n\nexport function getRelSGroupsBySelection(\n  struct: Struct,\n  selectedAtoms: number[],\n) {\n  return struct.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0,\n  );\n}\n\nexport function isAttachmentBond(\n  { begin, end }: Bond,\n  selection: EditorSelection,\n) {\n  if (!selection.atoms) {\n    return false;\n  }\n  const isBondStartsInSelectionAndEndsOutside =\n    selection.atoms.includes(begin) && !selection.atoms.includes(end);\n  const isBondEndsInSelectionAndStartsOutside =\n    selection.atoms.includes(end) && !selection.atoms.includes(begin);\n  return (\n    isBondStartsInSelectionAndEndsOutside ||\n    isBondEndsInSelectionAndStartsOutside\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations';\n\nimport { Action } from './action';\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]));\n  });\n\n  return action.perform(restruct);\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action();\n  action.addOp(new RGroupFragment(rgidNew, frid));\n\n  return action.perform(restruct);\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = [],\n) {\n  const action = new Action();\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids));\n  }\n\n  return action.perform(restruct);\n}\n","import { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { SGroupAttachmentPoint } from 'domain/entities';\nimport assert from 'assert';\n\ntype Data = {\n  sGroupId: number;\n  attachmentPoint: SGroupAttachmentPoint;\n};\n\nexport class SGroupAttachmentPointAdd extends BaseOperation {\n  data: Data;\n\n  constructor(sGroupId: number, attachmentPoint: SGroupAttachmentPoint) {\n    super(\n      OperationType.S_GROUP_ATTACHMENT_POINT_ADD,\n      OperationPriority.S_GROUP_ATTACHMENT_POINT_ADD,\n    );\n    this.data = { sGroupId, attachmentPoint };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(this.data.sGroupId);\n\n    assert(sgroup != null);\n\n    const attachmentPoint = this.data.attachmentPoint;\n    const apAtom = struct.atoms.get(attachmentPoint.atomId);\n\n    if (!apAtom) {\n      throw new Error(\n        `attachmentPoint for Atom with id \"${attachmentPoint.atomId}\" is not found`,\n      );\n    }\n\n    sgroup.addAttachmentPoint(attachmentPoint);\n  }\n\n  invert() {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new SGroupAttachmentPointRemove(\n      this.data.sGroupId,\n      this.data.attachmentPoint,\n    );\n  }\n}\n\nexport class SGroupAttachmentPointRemove extends BaseOperation {\n  data: Data;\n\n  constructor(sGroupId: number, attachmentPoint: SGroupAttachmentPoint) {\n    super(OperationType.S_GROUP_ATTACHMENT_POINT_REMOVE, 4);\n    this.data = { sGroupId, attachmentPoint };\n  }\n\n  execute(restruct: ReStruct) {\n    const { sGroupId, attachmentPoint } = this.data;\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(sGroupId);\n    sgroup?.removeAttachmentPoint(attachmentPoint.atomId);\n  }\n\n  invert() {\n    return new SGroupAttachmentPointAdd(\n      this.data.sGroupId,\n      this.data.attachmentPoint,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy,\n} from '../operations';\nimport { Pile, SGroup } from 'domain/entities';\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils';\n\nimport { Action } from './action';\nimport { SgContexts } from '..';\nimport { uniq } from 'lodash/fp';\nimport { fromAtomsAttrs } from './atom';\nimport {\n  SGroupAttachmentPointAdd,\n  SGroupAttachmentPointRemove,\n} from 'application/editor/operations/sgroup/sgroupAttachmentPoints';\nimport Restruct from 'application/render/restruct/restruct';\nimport assert from 'assert';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\nexport function fromSeveralSgroupAddition(\n  restruct: Restruct,\n  type,\n  atoms,\n  attrs,\n) {\n  const descriptors = attrs.fieldValue;\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId(),\n      [],\n    );\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs);\n    localAttrs.fieldValue = fValue;\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId(),\n        [],\n      ),\n    );\n  }, new Action());\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]));\n  });\n\n  return action.perform(restruct);\n}\n\nexport function setExpandSGroup(\n  restruct: Restruct,\n  sgid: number,\n  attrs: { expanded: boolean },\n) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]));\n  });\n\n  const sgroup = restruct.molecule.sgroups.get(sgid);\n  assert(sgroup != null);\n  const atoms = SGroup.getAtoms(restruct, sgroup);\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid)?.a, false),\n    );\n  });\n\n  return action.perform(restruct);\n}\n\n// todo delete after supporting expand - collapse for 2 attachment points\nexport function expandSGroupWithMultipleAttachmentPoint(restruct) {\n  const action = new Action();\n\n  const struct = restruct.molecule;\n\n  struct.sgroups.forEach((sgroup: SGroup) => {\n    if (\n      sgroup.isNotContractible(struct) &&\n      !(sgroup instanceof MonomerMicromolecule)\n    ) {\n      action.mergeWith(\n        setExpandSGroup(restruct, sgroup.id, {\n          expanded: true,\n        }),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]));\n  });\n\n  return action;\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action();\n  const struct = restruct.molecule;\n\n  const sG = restruct.sgroups.get(id).item;\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds();\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'));\n      }\n    });\n  }\n\n  const sg = struct.sgroups.get(id) as SGroup;\n  const atoms = SGroup.getAtoms(struct, sg);\n  const attrs = sg.getAttrs();\n\n  action.addOp(new SGroupRemoveFromHierarchy(id));\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom));\n  });\n\n  sg.getAttachmentPoints().forEach((attachmentPoint) => {\n    action.addOp(new SGroupAttachmentPointRemove(id, attachmentPoint));\n  });\n\n  action.addOp(new SGroupDelete(id));\n\n  action = action.perform(restruct);\n\n  action.mergeWith(sGroupAttributeAction(id, attrs));\n\n  return action;\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  attachmentPoints,\n  pp?,\n  expanded?,\n  name?,\n  oldSgroup?,\n) {\n  // eslint-disable-line\n  let action = new Action();\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId();\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name, oldSgroup));\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp));\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom));\n  });\n\n  if (type === 'SUP') {\n    attachmentPoints.forEach((attachmentPoint) => {\n      action.addOp(new SGroupAttachmentPointAdd(sgid, attachmentPoint));\n    });\n  }\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, []),\n  );\n\n  action = action.perform(restruct);\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds();\n    let asteriskAction = new Action();\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon();\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'));\n      }\n    });\n\n    asteriskAction = asteriskAction.perform(restruct);\n    asteriskAction.mergeWith(action);\n    action = asteriskAction;\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action);\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection,\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection);\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds);\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds));\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys()),\n    );\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms);\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms);\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms);\n  }\n\n  if (SGroup.isQuerySGroup(newSg)) {\n    return fromQueryComponentSGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms as number[],\n      Array.from(restruct.atoms.keys()),\n    );\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      newSourceAtoms,\n      newSg.attrs,\n    ),\n  };\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs),\n      );\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromQueryComponentSGroupAction(\n  restruct: Restruct,\n  newSg: {\n    type: string;\n    attrs: object;\n  },\n  sourceAtoms: number[],\n  targetAtoms: number[],\n) {\n  const selection: {\n    atoms: number[];\n    bonds: number[];\n  } = {\n    atoms: [],\n    bonds: [],\n  };\n\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid)?.a.fragment),\n  );\n\n  Array.from(allFragments).forEach((fragId) => {\n    const atoms = targetAtoms.reduce((res: number[], aid: number) => {\n      const atom = restruct.atoms.get(aid)?.a;\n      if (fragId === atom?.fragment) res.push(aid);\n\n      return res;\n    }, []);\n\n    const bonds = getAtomsBondIds(restruct.molecule, atoms) as number[];\n\n    selection.atoms = selection.atoms.concat(atoms);\n    selection.bonds = selection.bonds.concat(bonds);\n  });\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      selection.atoms,\n      newSg.attrs,\n    ),\n    selection,\n  };\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment),\n  );\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a;\n        if (fragId === atom.fragment) res.push(aid);\n\n        return res;\n      }, []);\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms);\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n      );\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms);\n      acc.selection.bonds = acc.selection.bonds.concat(bonds);\n\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule;\n  let bonds = getAtomsBondIds(struct, sourceAtoms);\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds));\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid);\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs,\n        ),\n      );\n\n      acc.selection.bonds.push(bondid);\n\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms);\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds,\n    },\n  };\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id);\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id));\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule;\n  const sgCounts = new Map();\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id);\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1);\n    });\n  });\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item;\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG);\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid) as SGroup;\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()));\n      action.addOp(new SGroupRemoveFromHierarchy(sid));\n      sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n        action.addOp(new SGroupAttachmentPointRemove(sid, attachmentPoint));\n      });\n      action.addOp(new SGroupDelete(sid));\n    }\n  });\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms);\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid);\n    return atomSet.has(bond.begin) && atomSet.has(bond.end);\n  });\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || [];\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid);\n    acc = acc.concat([bond.begin, bond.end]);\n    return acc;\n  }, []);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2,\n  AtomAttributes,\n  BondAttributes,\n  FunctionalGroup,\n} from 'domain/entities';\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag,\n} from '../operations';\nimport { atomForNewBond, atomGetAttr } from './utils';\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups,\n} from './atom';\n\nimport { Action } from './action';\nimport { ReStruct } from '../../render';\nimport { StereoValidator } from 'domain/helpers';\nimport utils from '../shared/utils';\n\nexport function fromBondAddition(\n  reStruct: ReStruct,\n  bond: Partial<BondAttributes>,\n  begin: number | AtomAttributes,\n  end: number | AtomAttributes,\n  beginAtomPos?: Vec2,\n  endAtomPos?: Vec2,\n): [Action, number, number, number] {\n  const action = new Action();\n  const struct = reStruct.molecule;\n\n  const mouseDownNothingAndUpNothing = (\n    beginAtomAttr: AtomAttributes,\n    endAtomAttr: AtomAttributes,\n  ) => {\n    const newFragmentId = (\n      action.addOp(new FragmentAdd().perform(reStruct)) as FragmentAdd\n    ).frid;\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: newFragmentId },\n          beginAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...endAtomAttr, fragment: newFragmentId },\n          endAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    return [newBeginAtomId, newEndAtomId] as const;\n  };\n\n  const mouseDownNothingAndUpAtom = (\n    beginAtomAttr: AtomAttributes,\n    endAtomId: number,\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, endAtomId, 'fragment');\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: fragmentId },\n          beginAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const endAtom = struct.atoms.get(endAtomId);\n    if (\n      endAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        endAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false,\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newBeginAtomId], endAtomId);\n    }\n    return [newBeginAtomId, endAtomId] as const;\n  };\n\n  const mouseDownAtomAndUpNothing = (\n    beginAtomId: number,\n    endAtomAttr: AtomAttributes,\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, beginAtomId, 'fragment');\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          {\n            ...endAtomAttr,\n            fragment: fragmentId,\n          },\n          endAtomPos ?? atomForNewBond(reStruct, begin, bond).pos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const beginAtom = struct.atoms.get(beginAtomId);\n    if (\n      beginAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        beginAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false,\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newEndAtomId], beginAtomId);\n    }\n\n    return [beginAtomId, newEndAtomId] as const;\n  };\n\n  let beginAtomId: number, endAtomId: number;\n\n  const startsOnAtom = typeof begin === 'number';\n  const endsOnAtom = typeof end === 'number';\n\n  if (!startsOnAtom && !endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownNothingAndUpNothing(begin, end);\n  } else if (!startsOnAtom && endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownNothingAndUpAtom(begin, end);\n  } else if (startsOnAtom && !endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownAtomAndUpNothing(begin, end);\n  } else {\n    [beginAtomId, endAtomId] = [begin as number, end as number];\n  }\n\n  if (atomGetAttr(reStruct, beginAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(beginAtomId, 'label', 'C').perform(reStruct));\n  }\n\n  if (atomGetAttr(reStruct, endAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(endAtomId, 'label', 'C').perform(reStruct));\n  }\n\n  const newBondId = (\n    action.addOp(\n      new BondAdd(beginAtomId, endAtomId, bond).perform(reStruct),\n    ) as BondAdd\n  ).data.bid;\n  const newBond = struct.bonds.get(newBondId);\n  if (newBond) {\n    action.addOp(\n      new CalcImplicitH([newBond.begin, newBond.end]).perform(reStruct),\n    );\n    action.mergeWith(fromBondStereoUpdate(reStruct, newBond));\n  }\n\n  action.operations.reverse();\n\n  const mergedFragmentId = mergeFragmentsIfNeeded(\n    action,\n    reStruct,\n    beginAtomId,\n    endAtomId,\n  );\n  if (struct.frags.get(mergedFragmentId || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(\n      new FragmentStereoFlag(mergedFragmentId || 0).perform(reStruct),\n    );\n  }\n\n  return [action, beginAtomId, endAtomId, newBondId];\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean,\n): Action {\n  const struct = restruct.molecule;\n  const action = new Action();\n  const bids = Array.isArray(ids) ? ids : [ids];\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return;\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key);\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct));\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid);\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct),\n          );\n          action.mergeWith(fromBondStereoUpdate(restruct, bond));\n        }\n      }\n    });\n  });\n\n  return action;\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>,\n): Action {\n  const struct = restruct.molecule;\n\n  const atomPairs = new Map();\n  let action = new Action();\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId);\n    const bondCI = struct.bonds.get(dstId);\n    if (!bond || !bondCI) return;\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI);\n    if (!params.merged) return;\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end);\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin);\n  });\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action);\n  });\n\n  return action;\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id);\n\n  const action = new Action();\n  action.addOp(new BondDelete(id).perform(restruct));\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct));\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action;\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean,\n): Action {\n  const action = new Action();\n  const struct = restruct.molecule;\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment;\n  const endFrId = struct.atoms.get(bond?.end)?.fragment;\n\n  const fragmentStereoBonds: Array<Bond> = [];\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond);\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond);\n    }\n  });\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond);\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond,\n) {\n  const stereoAtomsMap = new Map();\n  const correctAtomIds: Array<number> = [];\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin,\n      );\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end,\n      );\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct,\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel;\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`,\n          });\n        }\n        correctAtomIds.push(bond.begin);\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null,\n          });\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null,\n          });\n        }\n      }\n    }\n  });\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null,\n      });\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null,\n      });\n    }\n  }\n\n  return stereoAtomsMap;\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null;\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD;\n      break;\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER;\n      break;\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN;\n      break;\n  }\n  return newAtomParity;\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE,\n];\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any,\n): Action {\n  const action = new Action();\n  let newItemId = itemID;\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID));\n    newItemId = (action.operations[1] as BondAdd).data.bid;\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null;\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length];\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup, SGroupAttachmentPoint } from 'domain/entities';\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd,\n} from '../operations';\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils';\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup';\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup';\n\nimport { Action } from './action';\nimport { fromBondStereoUpdate } from './bond';\nimport { without } from 'lodash/fp';\nimport ReStruct from 'application/render/restruct/restruct';\nimport assert from 'assert';\nimport { SGroupAttachmentPointRemove } from '../operations/sgroup/sgroupAttachmentPoints';\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom);\n  const action = new Action();\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid;\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid;\n  action.addOp(new CalcImplicitH([aid]).perform(restruct));\n\n  return action;\n}\n\nexport function fromAtomsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: any,\n  reset: boolean | null,\n) {\n  const action = new Action();\n  const aids = Array.isArray(ids) ? ids : [ids];\n\n  aids.forEach((atomId) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attachmentPoints' && !(key in attrs)) return;\n      if (!(key in attrs) && !reset) return;\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key);\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          }\n          break;\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          }\n          break;\n        default:\n          action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          break;\n      }\n    });\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(atomId, 'atomList', null).perform(restruct));\n    }\n\n    action.addOp(new CalcImplicitH([atomId]).perform(restruct));\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(atomId);\n    const bond = restruct.molecule.bonds.get(atomNeighbors?.[0]?.bid as number);\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond));\n    }\n    // when a heteroatom connects to an aromatic ring it's necessary to add a ImplicitHCount\n    // property to this atom to specify the number of hydrogens on it.\n    const atom = restruct.molecule.atoms.get(atomId);\n    assert(atom != null);\n\n    if (Atom.isInAromatizedRing(restruct.molecule, atomId)) {\n      action.addOp(\n        new AtomAttr(atomId, 'implicitHCount', atom.implicitH).perform(\n          restruct,\n        ),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action();\n  const atom = restruct.molecule.atoms.get(aid);\n  if (atom) {\n    const frid = atom.fragment;\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct),\n      );\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct),\n      );\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct));\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct));\n      }\n    }\n    if (withReverse) action.operations.reverse();\n  }\n\n  return action;\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action();\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    const oldfrid = atom.fragment;\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid));\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid));\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid));\n    }\n  });\n\n  return action.perform(restruct);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action();\n\n  const fragAction = new Action();\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId);\n\n  const action = new Action();\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId);\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid);\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid));\n      return;\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId;\n    const end = bond.begin === nei.aid ? dstId : nei.aid;\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end);\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond));\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond);\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]));\n      });\n    }\n\n    action.addOp(new BondDelete(nei.bid));\n  });\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId));\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C';\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]));\n    }\n  });\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId);\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId]);\n\n  const sgroups = atomGetSGroups(restruct, srcId);\n  sgroups.forEach((sgroupId: number) => {\n    const sgroup = restruct.sgroups.get(sgroupId).item;\n    for (let i = 0; i < sgroup.attachmentPoints.length; ++i) {\n      if (sgroup.attachmentPoints[i].atomId === srcId) {\n        action.addOp(\n          new SGroupAttachmentPointRemove(\n            sgroupId,\n            new SGroupAttachmentPoint(srcId, undefined, undefined),\n          ),\n        );\n        return;\n      }\n    }\n  });\n\n  action.addOp(new AtomDelete(srcId));\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId);\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid,\n  );\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond));\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment') as number;\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment');\n  if (frid2 === frid || typeof frid !== 'number' || typeof frid2 !== 'number') {\n    return frid;\n  }\n\n  const struct = restruct.molecule;\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2);\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid));\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid);\n\n  const atomsToNewFrag: Array<any> = [];\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid);\n  });\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid);\n\n  mergeSgroups(action, restruct, fridAtoms, dstId);\n  action.addOp(new FragmentDelete(frid2).perform(restruct));\n  action.mergeWith(moveAtomsAction);\n\n  return frid;\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom);\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid);\n    const notExpandedContexts = ['Atom', 'Bond', 'Group'];\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return;\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms);\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct)),\n    );\n  });\n}\n\nexport function checkAtomValence(restruct, atomId) {\n  const action = new Action();\n\n  if (!restruct.atoms.has(atomId)) return action;\n\n  action.addOp(new CalcImplicitH([atomId]));\n\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations';\n\nimport { Action } from './action';\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action();\n\n  action.addOp(new CanvasLoad(struct));\n  return action.perform(restruct);\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action();\n  action.addOp(new AlignDescriptors());\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations';\n\nimport { Action } from './action';\nimport { Vec2 } from 'domain/entities';\nimport { atomGetAttr } from './utils';\nimport { fromBondAddition } from './bond';\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6);\n  const dy = Math.sin(Math.PI / 6);\n\n  let action = new Action();\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid;\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: [],\n  };\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct),\n          ) as AtomAdd\n        ).data.aid;\n\n  chainItems.atoms.push(id0);\n  action.operations.reverse();\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0);\n\n    const ret = fromBondAddition(\n      restruct,\n      {},\n      id0,\n      { label: 'C' },\n      undefined,\n      pos,\n    );\n    action = ret[0].mergeWith(action);\n    id0 = ret[2];\n    chainItems.bonds.push(ret[3]);\n    chainItems.atoms.push(id0);\n  }\n\n  return [action, chainItems];\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action';\nimport { checkAtomValence, fromAtomMerge } from './atom';\nimport { fromBondsMerge } from './bond';\nimport utils from '../shared/utils';\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action();\n\n  if (!items) return action;\n\n  const usedAtoms = new Set();\n\n  const connectedAtomIds = getAllConnectedAtomsIds(\n    restruct,\n    mergeMapOfItemsToSet(items.atoms),\n    mergeMapOfItemsToSet(items.bonds),\n  );\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return;\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action);\n    usedAtoms.add(dst).add(src);\n  });\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action);\n\n  action = valenceCheck(restruct, connectedAtomIds).mergeWith(action);\n\n  return action;\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule;\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys()),\n  };\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds']),\n  );\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null;\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values()),\n    ...(items.functionalGroups && {\n      functionalGroups: Array.from(items.functionalGroups.values()),\n    }),\n    ...(items.atomToFunctionalGroup && {\n      sgroups: Array.from(items.atomToFunctionalGroup.values()),\n    }),\n  };\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems };\n}\n\nexport function mergeMapOfItemsToSet(items: Map<number, number>): Set<number> {\n  const itemsSet = new Set<number>();\n  items.forEach((value, key) => {\n    itemsSet.add(value).add(key);\n  });\n  return itemsSet;\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds),\n    atomToFunctionalGroup: new Map(closestMap.atomToFunctionalGroup),\n  };\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId);\n    const bondCI = struct.bonds.get(dstId);\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin);\n      mergeMap.atoms.delete(bond.end);\n    } else {\n      mergeMap.bonds.delete(srcId);\n    }\n  });\n\n  if (\n    mergeMap.atoms.size === 0 &&\n    mergeMap.bonds.size === 0 &&\n    mergeMap.atomToFunctionalGroup.size === 0\n  ) {\n    return null;\n  }\n\n  return mergeMap;\n}\n\nfunction getAllConnectedAtomsIds(restruct, atomsIds, bondsIds) {\n  const initialAtoms = new Set(atomsIds);\n  const connectedAtoms = new Set();\n\n  for (const bondId of bondsIds) {\n    const bond = restruct.bonds.get(bondId);\n    if (bond) {\n      const { begin, end } = bond.b;\n      initialAtoms.add(begin).add(end);\n    }\n  }\n\n  for (const initialAtom of initialAtoms) {\n    if (connectedAtoms.has(initialAtom)) continue;\n    const relevantConnectedComponent = [\n      ...restruct.connectedComponents.values(),\n    ].find((component) => component.has(initialAtom));\n    if (relevantConnectedComponent)\n      relevantConnectedComponent.forEach((id) => connectedAtoms.add(id));\n  }\n\n  return connectedAtoms;\n}\n\nfunction valenceCheck(restruct, atomIds) {\n  let action = new Action();\n\n  if (!atomIds) return action;\n  const usedAtoms = new Set();\n\n  // merge single atoms\n  atomIds.forEach((atomId) => {\n    if (usedAtoms.has(atomId)) return;\n\n    action = checkAtomValence(restruct, atomId).mergeWith(action);\n    usedAtoms.add(atomId);\n  });\n\n  return action;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove,\n} from '../operations';\nimport { Pile, RGroup, Vec2 } from 'domain/entities';\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup';\n\nimport { Action } from './action';\nimport { fromAtomsFragmentAttr } from './atom';\nimport { getRelSGroupsBySelection } from './utils';\n\nexport function fromMultipleMove(restruct, lists, d: Vec2) {\n  d = new Vec2(d);\n\n  const action = new Action();\n  const struct = restruct.molecule;\n  const loops = new Pile();\n  const atomsToInvalidate = new Pile();\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms);\n    const bondlist: Array<number> = [];\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid);\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop;\n          if (loop >= 0) loops.add(loop);\n        });\n        return;\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin);\n        return;\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end);\n    });\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d));\n    });\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d));\n      }\n    });\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)));\n    });\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSGroupsBySelection(struct, lists.atoms);\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d));\n      });\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true));\n    });\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true));\n    });\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true));\n    });\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d));\n    });\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d));\n    });\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true));\n    });\n  }\n\n  return action.perform(restruct);\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action();\n\n  if (!flag) {\n    const struct = restruct.molecule;\n    const frag = restruct.molecule.frags.get(frid);\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid));\n      }\n    });\n  }\n\n  action.addOp(new FragmentStereoFlag(frid));\n  return action.perform(restruct);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid];\n  const usedIds = new Pile(queue);\n\n  while (queue.length > 0) {\n    const id = queue.shift();\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid);\n        queue.push(nei.aid);\n      }\n    });\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = [],\n) {\n  const action = new Action();\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid);\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid;\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid));\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid));\n    }\n  });\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid));\n    action.addOp(new FragmentDelete(frid).perform(restruct));\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove));\n  }\n\n  action.operations.reverse();\n  return action;\n}\n","import assert from 'assert';\nimport { ReStruct } from 'application/render';\nimport { AttachmentPoints, Struct } from 'domain/entities';\nimport {\n  RGroupAttachmentPointAdd,\n  RGroupAttachmentPointRemove,\n} from '../operations';\nimport { Action } from './action';\nimport { fromAtomsAttrs } from '.';\n\nexport function fromRGroupAttachmentPointUpdate(\n  restruct: ReStruct,\n  atomId: number,\n  attachmentPoints: AttachmentPoints | null,\n) {\n  const action = new Action();\n  action.mergeWith(fromRGroupAttachmentPointsDeletionByAtom(restruct, atomId));\n  action.mergeWith(\n    fromRGroupAttachmentPointAddition(restruct, attachmentPoints, atomId),\n  );\n  return action;\n}\n\nexport function fromRGroupAttachmentPointAddition(\n  restruct: ReStruct,\n  attachmentPoints: AttachmentPoints | null,\n  atomId: number,\n) {\n  const action = new Action();\n  switch (attachmentPoints) {\n    case AttachmentPoints.FirstSideOnly:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'primary',\n        }),\n      );\n      break;\n\n    case AttachmentPoints.SecondSideOnly:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'secondary',\n        }),\n      );\n      break;\n\n    case AttachmentPoints.BothSides:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'primary',\n        }),\n      );\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'secondary',\n        }),\n      );\n      break;\n\n    default:\n      break;\n  }\n  return action.perform(restruct);\n}\n\nfunction fromRGroupAttachmentPointsDeletionByAtom(\n  restruct: ReStruct,\n  atomId: number,\n) {\n  const action = new Action();\n  const attachmentPointsToDelete =\n    restruct.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n  attachmentPointsToDelete.forEach((rgroupAttachmentPointId) => {\n    action.addOp(new RGroupAttachmentPointRemove(rgroupAttachmentPointId));\n  });\n  return action.perform(restruct);\n}\n\nexport function fromRGroupAttachmentPointDeletion(\n  restruct: ReStruct,\n  id: number,\n) {\n  const { atomId, newAttachmentPoints } = getNewAtomAttachmentPoints(\n    restruct.molecule,\n    id,\n  );\n  const actionToUpdateAtomsAttrs = fromAtomsAttrs(\n    restruct,\n    atomId,\n    { attachmentPoints: newAttachmentPoints },\n    null,\n  );\n\n  const actionToDeletePoint = new Action();\n  actionToDeletePoint.addOp(new RGroupAttachmentPointRemove(id));\n\n  return actionToDeletePoint\n    .perform(restruct)\n    .mergeWith(actionToUpdateAtomsAttrs);\n}\n\nfunction getNewAtomAttachmentPoints(\n  struct: Struct,\n  rgroupAttachmentPointToDelete: number,\n) {\n  const pointToDelete = struct.rgroupAttachmentPoints.get(\n    rgroupAttachmentPointToDelete,\n  );\n  assert(pointToDelete != null);\n  const attachedAtomId = pointToDelete.atomId;\n  const attachedAtom = struct.atoms.get(attachedAtomId);\n  const currentAttachmentPoints = attachedAtom?.attachmentPoints;\n\n  let newAttachmentPoints = AttachmentPoints.None;\n  if (currentAttachmentPoints === AttachmentPoints.BothSides) {\n    const pointToDeleteType = pointToDelete.type;\n    if (pointToDeleteType === 'primary') {\n      newAttachmentPoints = AttachmentPoints.SecondSideOnly;\n    } else if (pointToDeleteType === 'secondary') {\n      newAttachmentPoints = AttachmentPoints.FirstSideOnly;\n    }\n  }\n\n  return { atomId: attachedAtomId, newAttachmentPoints };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RGroupAttachmentPointRemove,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete,\n} from '../operations';\nimport { RGroup } from 'domain/entities';\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup';\n\nimport { Action } from './action';\nimport assert from 'assert';\nimport { atomGetDegree, formatSelection } from './utils';\nimport { fromBondStereoUpdate } from '../actions/bond';\nimport { fromFragmentSplit } from './fragment';\nimport { fromRGroupAttachmentPointDeletion } from './rgroupAttachmentPoint';\n\nexport function fromOneAtomDeletion(restruct, atomId: number) {\n  return fromFragmentDeletion(restruct, { atoms: [atomId] });\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action();\n  const bond: any = restruct.molecule.bonds.get(bid);\n  const atomsToRemove: Array<any> = [];\n\n  action.addOp(new BondDelete(bid));\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin);\n    }\n\n    action.addOp(new AtomDelete(bond.begin));\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end);\n    }\n\n    action.addOp(new AtomDelete(bond.end));\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove);\n  action = action.perform(restruct);\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct));\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false));\n\n  action.operations.reverse();\n\n  return action;\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id);\n  let action = fromBondDeletion(restruct, id);\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action);\n\n  return action;\n}\n\nexport function fromFragmentDeletion(restruct, rawSelection) {\n  assert(!!rawSelection != null);\n\n  let action = new Action();\n  const atomsToRemove: Array<number> = [];\n  const frids: Array<number> = [];\n\n  const selection = formatSelection(rawSelection);\n\n  selection.sgroups.forEach((sgroupId) => {\n    const sgroup = restruct.sgroups.get(sgroupId);\n    const sgroupAtoms = sgroup.item.atoms;\n\n    selection.atoms = selection.atoms.concat(sgroupAtoms);\n\n    restruct.molecule.bonds.forEach((bond, bondId) => {\n      if (\n        sgroupAtoms.indexOf(bond.begin) >= 0 &&\n        sgroupAtoms.indexOf(bond.end) >= 0\n      ) {\n        selection.bonds.push(bondId);\n      }\n    });\n  });\n\n  selection.atoms = Array.from(new Set(selection.atoms));\n  selection.bonds = Array.from(new Set(selection.bonds));\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid]);\n      }\n    });\n  });\n\n  const actionRemoveBonds = new Action();\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid);\n    if (frids.indexOf(frid) < 0) frids.push(frid);\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms),\n    );\n  });\n\n  const removedRGroupAttachmentPoints: number[] = [];\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment;\n    if (frids.indexOf(frid3) < 0) frids.push(frid3);\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid);\n    }\n\n    action.addOp(new AtomDelete(aid));\n\n    const attachmentPointsToDelete =\n      restruct.molecule.getRGroupAttachmentPointsByAtomId(aid);\n    attachmentPointsToDelete.forEach((id) => {\n      action.addOp(new RGroupAttachmentPointRemove(id));\n      removedRGroupAttachmentPoints.push(id);\n    });\n  });\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove);\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id));\n  });\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id));\n  });\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id));\n  });\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id));\n  });\n\n  const actionToDeleteRGroupAttachmentPoints = new Action();\n  selection.rgroupAttachmentPoints.forEach((id) => {\n    if (!removedRGroupAttachmentPoints.includes(id)) {\n      actionToDeleteRGroupAttachmentPoints.mergeWith(\n        fromRGroupAttachmentPointDeletion(restruct, id),\n      );\n    }\n  });\n\n  action = action.perform(restruct);\n  action\n    .mergeWith(actionRemoveBonds)\n    .mergeWith(actionToDeleteRGroupAttachmentPoints);\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!,\n  );\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action,\n    );\n  }\n\n  return action;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH,\n  FragmentSetProperties,\n  BondAttr,\n  AtomAttr,\n} from '../operations';\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup';\n\nimport { Action } from './action';\nimport { SGroup, Struct, Vec2 } from 'domain/entities';\nimport { fromSgroupAddition } from './sgroup';\nimport { fromRGroupAttachmentPointAddition } from './rgroupAttachmentPoint';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\nexport function fromPaste(\n  restruct,\n  pstruct,\n  point,\n  angle = 0,\n  isPreview = false,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  const xy0 = getStructCenter(pstruct);\n  const offset = Vec2.diff(point, xy0);\n\n  const action = new Action();\n\n  const aidMap = new Map();\n  const fridMap = new Map();\n\n  const pasteItems = {\n    // only atoms and bonds now\n    atoms: [] as number[],\n    bonds: [] as number[],\n  };\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment) && !pstruct.isAtomFromMacromolecule(aid)) {\n      fridMap.set(\n        atom.fragment,\n        (\n          action.addOp(\n            new FragmentAdd(null, atom.fragment.properties).perform(restruct),\n          ) as FragmentAdd\n        ).frid,\n      );\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment),\n    });\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point),\n    ).perform(restruct) as AtomAdd;\n    action.addOp(operation);\n    aidMap.set(aid, operation.data.aid);\n\n    pasteItems.atoms.push(operation.data.aid);\n\n    action.mergeWith(\n      fromRGroupAttachmentPointAddition(\n        restruct,\n        tmpAtom.attachmentPoints,\n        operation.data.aid,\n      ),\n    );\n  });\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return;\n    if (frag.properties) {\n      action.addOp(\n        new FragmentSetProperties(fridMap.get(frid), frag.properties).perform(\n          restruct,\n        ),\n      );\n    }\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct,\n        ),\n      ),\n    );\n  });\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond,\n      false,\n    ).perform(restruct) as BondAdd;\n    action.addOp(operation);\n\n    pasteItems.bonds.push(operation.data.bid);\n    new BondAttr(operation.data.bid, 'isPreview', isPreview, false).perform(\n      restruct,\n    );\n  });\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct));\n    new AtomAttr(aid, 'isPreview', isPreview).perform(restruct);\n  });\n\n  pstruct.sgroups.forEach((sg: SGroup) => {\n    const newsgid = restruct.molecule.sgroups.newId();\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid));\n    const attachmentPoints = sg.cloneAttachmentPoints(aidMap);\n    if (\n      sg.isNotContractible(pstruct) &&\n      !(sg instanceof MonomerMicromolecule)\n    ) {\n      sg.setAttr('expanded', true);\n    }\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      attachmentPoints,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.isExpanded() : null,\n      sg.data.name,\n      sg,\n    );\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper);\n    });\n  });\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode,\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct));\n  });\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode,\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset)),\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct),\n      );\n    });\n    const ifThen = pstruct.rgroups.get(rgid).ifthen;\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0;\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen));\n  });\n\n  action.operations.reverse();\n  return [action, pasteItems];\n}\n\nfunction getStructCenter(struct: Struct): Vec2 {\n  const isOnlyOneSGroup = struct.sgroups.size === 1;\n  if (isOnlyOneSGroup) {\n    const onlyOneStructsSgroupId = struct.sgroups.keys().next().value;\n    const sgroup = struct.sgroups.get(onlyOneStructsSgroupId) as SGroup;\n    if (sgroup.isContracted()) {\n      return sgroup.getContractedPosition(struct).position;\n    }\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50;\n    let ymin = xmin;\n    let xmax = -xmin;\n    let ymax = -ymin;\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x);\n      ymin = Math.min(ymin, atom.pp.y);\n      xmax = Math.max(xmax, atom.pp.x);\n      ymax = Math.max(ymax, atom.pp.y);\n    });\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2); // TODO: check\n  }\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0)!.center();\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0)!.pp;\n  if (struct.simpleObjects.size > 0)\n    // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n    return struct.simpleObjects.get(0)!.center();\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.texts.size > 0) return struct.texts.get(0)!.position;\n\n  return new Vec2(0, 0);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from 'application/render';\nimport { Vec2 } from 'domain/entities';\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete,\n} from '../operations';\n\nimport { Action } from './action';\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action();\n  action.addOp(new RxnArrowAdd(pos, mode));\n  return action.perform(restruct);\n}\n\nexport function fromArrowResizing(\n  restruct: ReStruct,\n  id: number,\n  d: Vec2,\n  current: Vec2,\n  anchor: Vec2 | null,\n  isSnappingEnabled: boolean,\n) {\n  const action = new Action();\n  action.addOp(\n    new RxnArrowResize(id, d, current, anchor, false, isSnappingEnabled),\n  );\n  return action.perform(restruct);\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new RxnArrowDelete(id));\n  return action.perform(restruct);\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action();\n  action.addOp(new RxnPlusAdd(pos).perform(restruct));\n  return action;\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new RxnPlusDelete(id));\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnArrowRotate,\n  RxnPlusMove,\n  SGroupDataMove,\n  TextMove,\n} from '../operations';\nimport { Bond, Fragment, Struct, Vec2 } from 'domain/entities';\nimport { ReStruct } from 'application/render';\nimport { getRelSGroupsBySelection, structSelection } from './utils';\nimport { Action } from './action';\nimport { EditorSelection } from '../editor.types';\n\nexport type FlipDirection = 'horizontal' | 'vertical';\n\nexport function fromFlip(\n  reStruct: ReStruct,\n  selection: EditorSelection | null,\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n  const structToFlip = selection || structSelection(reStruct.molecule);\n\n  action.mergeWith(\n    fromStructureFlip(reStruct, structToFlip, flipDirection, center),\n  );\n\n  if (structToFlip.rxnArrows) {\n    action.mergeWith(\n      fromRxnArrowFlip(reStruct, structToFlip.rxnArrows, flipDirection, center),\n    );\n  }\n\n  if (structToFlip.rxnPluses) {\n    action.mergeWith(\n      fromRxnPlusFlip(reStruct, structToFlip.rxnPluses, flipDirection, center),\n    );\n  }\n\n  if (structToFlip.texts) {\n    action.mergeWith(\n      fromTextFlip(reStruct, structToFlip.texts, flipDirection, center),\n    );\n  }\n\n  return action;\n}\n\nfunction fromRxnArrowFlip(\n  reStruct: ReStruct,\n  rxnArrowIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  rxnArrowIds.forEach((arrowId) => {\n    const rxnArrow = reStruct.molecule.rxnArrows.get(arrowId);\n    if (!rxnArrow) {\n      return;\n    }\n\n    const [start, end] = rxnArrow.pos;\n    const oxAngle = end.sub(start).oxAngle();\n    const oyAngle = oxAngle - Math.PI / 2;\n    const rotateAngle =\n      flipDirection === 'vertical' ? -2 * oxAngle : -2 * oyAngle;\n    action.addOp(new RxnArrowRotate(arrowId, rotateAngle, rxnArrow.center()));\n\n    const difference = flipPointByCenter(\n      rxnArrow.center(),\n      center,\n      flipDirection,\n    );\n    action.addOp(new RxnArrowMove(arrowId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromRxnPlusFlip(\n  reStruct: ReStruct,\n  rxnPlusIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  rxnPlusIds.forEach((plusId) => {\n    const rxnPlus = reStruct.molecule.rxnPluses.get(plusId);\n    if (!rxnPlus) {\n      return;\n    }\n\n    const difference = flipPointByCenter(rxnPlus.pp, center, flipDirection);\n    action.addOp(new RxnPlusMove(plusId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromTextFlip(\n  reStruct: ReStruct,\n  textIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  textIds.forEach((textId) => {\n    const text = reStruct.molecule.texts.get(textId);\n    if (!text) {\n      return;\n    }\n\n    // Note: text has two position properties\n    //      `position`: the middle left point\n    //      `pos`: a box (not bounding box)\n    // `TextMove` is to move `position`, so we have to calculate the flipped `position`\n    const textMiddleLeft = text.pos[0];\n    const textMiddleRight = text.pos[2];\n    const textCenter = Vec2.centre(textMiddleLeft, textMiddleRight);\n\n    const difference = flipPointByCenter(textCenter, center, flipDirection);\n    action.addOp(new TextMove(textId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromStructureFlip(\n  reStruct: ReStruct,\n  selection: EditorSelection | null,\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const struct = reStruct.molecule;\n  const action = new Action();\n\n  selection?.atoms?.forEach((atomId) => {\n    const atom = struct.atoms.get(atomId);\n    if (!atom) {\n      return;\n    }\n\n    const difference = flipPointByCenter(atom.pp, center, flipDirection);\n    action.addOp(new AtomMove(atomId, difference));\n  });\n\n  const sGroups = getRelSGroupsBySelection(struct, selection?.atoms || []);\n  sGroups.forEach((sGroup) => {\n    if (!sGroup.pp) {\n      return;\n    }\n    const difference = flipPointByCenter(sGroup.pp, center, flipDirection);\n    action.addOp(new SGroupDataMove(sGroup.id, difference));\n  });\n\n  if (selection?.bonds) {\n    flipBonds(selection.bonds, struct, action);\n  }\n\n  return action.perform(reStruct);\n}\n\nfunction flipBonds(bondIds: number[], struct: Struct, action: Action) {\n  bondIds.forEach((bondId) => {\n    const bond = struct.bonds.get(bondId);\n\n    if (!bond) {\n      return;\n    }\n\n    if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n      return;\n    }\n\n    if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n      action.addOp(new BondAttr(bondId, 'stereo', Bond.PATTERN.STEREO.DOWN));\n      return;\n    }\n\n    if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n      action.addOp(new BondAttr(bondId, 'stereo', Bond.PATTERN.STEREO.UP));\n    }\n  });\n}\n\nfunction flipPointByCenter(\n  pointToFlip: Vec2,\n  center: Vec2,\n  flipDirection: FlipDirection,\n) {\n  const d = new Vec2();\n  if (flipDirection === 'horizontal') {\n    d.x =\n      center.x > pointToFlip.x\n        ? 2 * (center.x - pointToFlip.x)\n        : -2 * (pointToFlip.x - center.x);\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > pointToFlip.y\n        ? 2 * (center.y - pointToFlip.y)\n        : -2 * (pointToFlip.y - center.y);\n  }\n  return d;\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule;\n\n  const action = new Action();\n\n  if (!selection) {\n    selection = structSelection(struct);\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid);\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)));\n    });\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSGroupsBySelection(struct, selection.atoms);\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle)),\n        );\n      });\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((arrowId) => {\n      action.addOp(new RxnArrowRotate(arrowId, angle, center));\n    });\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid);\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)));\n    });\n  }\n\n  if (selection.texts) {\n    selection.texts.forEach((textId) => {\n      const text = struct.texts.get(textId);\n      action.addOp(\n        new TextMove(textId, rotateDelta(text.position, center, angle)),\n      );\n    });\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did);\n      action.addOp(\n        new SGroupDataMove(did, rotateDelta(data.pp, center, angle)),\n      );\n    });\n  }\n\n  if (selection.enhancedFlags) {\n    selection.enhancedFlags.forEach((flagId) => {\n      const frId = flagId;\n      const frag = restruct.molecule.frags.get(frId);\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle,\n          ),\n        ),\n      );\n    });\n  }\n\n  return action.perform(restruct);\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center);\n  v1 = v1.rotate(angle);\n  v1.add_(center); // eslint-disable-line no-underscore-dangle\n  return v1.sub(v);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize,\n} from '../operations';\n\nimport { Action } from './action';\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new SimpleObjectDelete(id));\n  return action.perform(restruct);\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action();\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle));\n  return action.perform(restruct);\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle,\n) {\n  const action = new Action();\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle));\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct, Vec2 } from 'domain/entities';\nimport { AtomAdd, BondAdd, BondAttr, CalcImplicitH } from '../operations';\nimport { atomForNewBond, atomGetAttr } from './utils';\nimport { fromAtomsAttrs, mergeSgroups } from './atom';\nimport { fromBondStereoUpdate, fromBondsAttrs, fromBondAddition } from './bond';\n\nimport { Action } from './action';\nimport closest from '../shared/closest';\nimport { fromAromaticTemplateOnBond } from './aromaticFusing';\nimport { fromPaste } from './paste';\nimport utils from '../shared/utils';\nimport { fromSgroupAddition } from './sgroup';\n\nconst benzeneMoleculeName = 'Benzene';\nconst cyclopentadieneMoleculeName = 'Cyclopentadiene';\nconst benzeneDoubleBondIndexes = [2, 4];\n\nexport function fromTemplateOnCanvas(\n  restruct,\n  template,\n  pos,\n  angle = 0,\n  isPreview = true,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle,\n    isPreview,\n  );\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct));\n\n  return [action, pasteItems];\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action();\n  const frid = atomGetAttr(restruct, aid, 'fragment');\n  let additionalAtom: any = null;\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid);\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      undefined,\n      middleAtom.pos.get_xy0(),\n    );\n    action = actionRes[0];\n    action.operations.reverse();\n    additionalAtom = actionRes[2];\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0(),\n    ).perform(restruct) as AtomAdd;\n\n    action.addOp(operation);\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct),\n    );\n\n    additionalAtom = operation.data.aid;\n  }\n\n  return { action, aid1: additionalAtom };\n}\n\nexport function fromTemplateOnAtom(\n  restruct,\n  template,\n  aid,\n  angle,\n  extraBond,\n  isPreview = false,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  let action = new Action();\n\n  const tmpl = template.molecule;\n  const struct = restruct.molecule;\n\n  const isTmplSingleGroup = template.molecule.isSingleGroup();\n\n  let atom = struct.atoms.get(aid); // aid - the atom that was clicked on\n  let aid1 = aid; // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null;\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle);\n    action = extraRes.action;\n    aid1 = extraRes.aid1;\n\n    atom = struct.atoms.get(aid1);\n    delta =\n      utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0;\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos);\n    }\n    delta = angle - template.angle0;\n  }\n\n  const map = new Map();\n  const xy0 = tmpl.atoms.get(template.aid).pp;\n  const frid = atomGetAttr(restruct, aid, 'fragment');\n\n  /* For merge */\n  const pasteItems = {\n    // only atoms and bonds now\n    atoms: [] as number[],\n    bonds: [] as number[],\n  };\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a);\n    attrs.fragment = frid;\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true));\n      map.set(id, aid1);\n      pasteItems.atoms.push(aid1);\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp);\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct,\n      ) as AtomAdd;\n      action.addOp(operation);\n      map.set(id, operation.data.aid);\n      pasteItems.atoms.push(operation.data.aid);\n    }\n  });\n\n  if (!isTmplSingleGroup) mergeSgroups(action, restruct, pasteItems.atoms, aid);\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond,\n    ).perform(restruct) as BondAdd;\n    action.addOp(operation);\n    new BondAttr(operation.data.bid, 'isPreview', isPreview).perform(restruct);\n\n    pasteItems.bonds.push(operation.data.bid);\n  });\n\n  tmpl.sgroups.forEach((sg: SGroup) => {\n    const newsgid = restruct.molecule.sgroups.newId();\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid));\n    const attachmentPoints = sg.cloneAttachmentPoints(map);\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      {\n        ...sg.data,\n        expanded: isPreview ? true : sg.data.expanded,\n      },\n      newsgid,\n      attachmentPoints,\n      atom.pp,\n      sg.type === 'SUP' ? sg.isExpanded() : null,\n      sg.data.name,\n    );\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper);\n    });\n  });\n\n  action.operations.reverse();\n\n  action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct));\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0]),\n    ),\n  );\n\n  return [action, pasteItems];\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force,\n  isPreview = false,\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip);\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip, isPreview); // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing,\n  );\n}\n\nfunction getConnectingBond(\n  template: Struct,\n  struct: Struct,\n  bondId: number,\n  bond: Bond,\n) {\n  const isBenzeneTemplate = template.name === benzeneMoleculeName;\n  const isCyclopentadieneTemplate =\n    template.name === cyclopentadieneMoleculeName;\n  if (template.bonds.size && (isBenzeneTemplate || isCyclopentadieneTemplate)) {\n    const { beginBondIds, endBondIds } = Bond.getBondNeighbourIds(\n      struct,\n      bondId,\n    );\n    const isOnlyTwoConnectingBonds =\n      beginBondIds.length === 1 && endBondIds.length === 1;\n\n    if (!isOnlyTwoConnectingBonds) {\n      return null;\n    }\n    const beginBond = struct.bonds.get(beginBondIds[0]);\n    const endBond = struct.bonds.get(endBondIds[0]);\n\n    if (!beginBond || !endBond) {\n      throw new Error('Incorrect bond id was provided');\n    }\n\n    if (isBenzeneTemplate) {\n      return Bond.getBenzeneConnectingBondType(bond, beginBond, endBond);\n    }\n\n    if (isCyclopentadieneTemplate) {\n      return Bond.getCyclopentadieneFusingBondType(bond, beginBond, endBond);\n    }\n  }\n  return null;\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip, isPreview = false) {\n  // TODO: refactor function !!\n  const action = new Action();\n\n  const tmpl = template.molecule;\n  const struct = restruct.molecule;\n\n  const bond = struct.bonds.get(bid);\n  const tmplBond = tmpl.bonds.get(template.bid);\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin);\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end],\n  ]);\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end,\n  };\n  const { angle, scale } = utils.mergeBondsParams(\n    struct,\n    bond,\n    tmpl,\n    bondAtoms,\n  );\n\n  const frid = struct.getBondFragment(bid);\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: [],\n  };\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom);\n    attrs.fragment = frid;\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\n      return;\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp);\n    const mergeA = closest.atom(restruct, v, null, 0.1);\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd;\n      action.addOp(operation);\n      atomsMap.set(id, operation.data.aid);\n      pasteItems.atoms.push(operation.data.aid);\n    } else {\n      atomsMap.set(id, mergeA.id);\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\n      // TODO [RB] need to merge fragments?\n    }\n  });\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin);\n\n  // When a template of \"Benzene\" molecule is attached it\n  // uses specific fusing rules when attaching to a bond\n  // that is connected exactly to one bond on each side.\n  // For more info please refer to: https://github.com/epam/ketcher/issues/1855\n  const fusingBondType = getConnectingBond(tmpl, struct, bid, bond);\n  const isFusingBenzeneBySpecialRules = fusingBondType !== null;\n\n  tmpl.bonds.forEach((tBond, tBondIndex) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end),\n    );\n    let previewBondId = null;\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond,\n      ).perform(restruct) as BondAdd;\n      action.addOp(operation);\n      const newBondId = operation.data.bid;\n      previewBondId = newBondId;\n\n      if (isFusingBenzeneBySpecialRules) {\n        const isBenzeneTemplate = tmpl.name === benzeneMoleculeName;\n        const isCyclopentadieneTemplate =\n          tmpl.name === cyclopentadieneMoleculeName;\n        if (isBenzeneTemplate) {\n          const newBondType = benzeneDoubleBondIndexes.includes(tBondIndex)\n            ? Bond.PATTERN.TYPE.DOUBLE\n            : Bond.PATTERN.TYPE.SINGLE;\n          action.addOp(\n            new BondAttr(newBondId, 'type', newBondType).perform(restruct),\n          );\n        }\n        if (isCyclopentadieneTemplate) {\n          const { beginBondIds, endBondIds } = Bond.getBondNeighbourIds(\n            struct,\n            bid,\n          );\n          const bondBegin = struct.bonds.get(beginBondIds[0])!;\n          const bondEnd = struct.bonds.get(endBondIds[0])!;\n          const newBondType = Bond.getCyclopentadieneDoubleBondIndexes(\n            bond,\n            bondBegin,\n            bondEnd,\n          ).includes(tBondIndex)\n            ? Bond.PATTERN.TYPE.DOUBLE\n            : Bond.PATTERN.TYPE.SINGLE;\n          action.addOp(\n            new BondAttr(newBondId, 'type', newBondType).perform(restruct),\n          );\n        }\n      }\n\n      pasteItems.bonds.push(newBondId);\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond;\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true));\n\n      if (isFusingBenzeneBySpecialRules && fusingBondType) {\n        action.addOp(\n          new BondAttr(bid, 'type', fusingBondType).perform(restruct),\n        );\n      }\n      previewBondId = bid;\n    }\n    action.addOp(\n      new BondAttr(previewBondId, 'isPreview', isPreview).perform(restruct),\n    );\n  });\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct,\n      ),\n    );\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0]),\n      ),\n    );\n  }\n\n  action.operations.reverse();\n\n  return [action, pasteItems];\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations';\n\nimport { Action } from './action';\nimport { ReStruct } from '../../render';\nimport { Vec2 } from 'domain/entities';\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>,\n) {\n  const action = new Action();\n  action.addOp(new TextCreate(content, position, pos));\n  return action.perform(restruct);\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string,\n) {\n  const action = new Action();\n  action.addOp(new TextUpdate(id, content));\n  return action.perform(restruct);\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action();\n\n  action.addOp(new TextDelete(id));\n\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { Highlight } from 'domain/entities';\nimport { ReStruct } from '../../render';\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\n\ntype Data = {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n  highlightId?: number;\n};\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data;\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number,\n  ) {\n    super(OperationType.ADD_HIGHLIGHT);\n    this.data = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data;\n\n    if (!color) {\n      return;\n    }\n\n    const struct = restruct.molecule;\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color,\n    });\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight);\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight);\n    }\n\n    notifyChanged(restruct, atoms, bonds);\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data;\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color);\n    return inverted;\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data;\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string,\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5);\n    this.data = {\n      highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white',\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule;\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId);\n      if (typeof highlightToRemove === 'undefined') {\n        return;\n      }\n\n      const { atoms, bonds, color } = highlightToRemove;\n\n      this.data.atoms = atoms;\n      this.data.bonds = bonds;\n      this.data.color = color;\n\n      struct.highlights.delete(this.data.highlightId);\n      notifyChanged(restruct, atoms, bonds);\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data;\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId);\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number };\n  oldData: Data & { highlightId: number };\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT);\n    this.newData = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData;\n    if (!color) {\n      return;\n    }\n\n    const highlightId = this.newData.highlightId;\n    const struct = restruct.molecule;\n\n    const highlightToUpdate = struct.highlights.get(highlightId);\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n      } = highlightToUpdate;\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId,\n      };\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color,\n      });\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight);\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds]);\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData;\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color,\n    );\n    return inverted;\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms;\n  const reBonds = restruct.bonds;\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1);\n      }\n    });\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1);\n      }\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render';\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight';\n\nimport { Action } from './action';\n\ntype HighlightType = {\n  atoms: number[];\n  bonds: number[];\n  color: string;\n};\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[],\n): Action {\n  const action = new Action();\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight;\n\n    action.addOp(new HighlightAdd(atoms, bonds, color));\n  });\n  return action.perform(restruct);\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action();\n\n  const highlights = restruct.molecule.highlights;\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key));\n  });\n\n  return action.perform(restruct);\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils';\n\nexport const vectorUtils = {\n  fracAngle: utils.fracAngle,\n  calcAngle: utils.calcAngle,\n  degrees: utils.degrees,\n  calcNewAtomPos: utils.calcNewAtomPos,\n};\n\nexport * from './operations';\nexport * from './actions';\nexport * from './shared/constants';\nexport * from './shared/coordinates';\nexport * from './editor.types';\nexport * from './Editor';\nexport * from './EditorHistory';\nexport * from './modes';\nexport * from './editorEvents';\nexport * from './editorSettings';\n","import { ShowHydrogenLabels } from 'application/render';\nimport { ketcherProvider } from 'application/utils';\n\nenum IndigoShowHydrogenLabelsMode {\n  OFF = 'none',\n  HETERO = 'hetero',\n  TERMINAL_HETERO = 'terminal-hetero',\n  ALL = 'all',\n}\n\nexport function getLabelRenderModeForIndigo() {\n  // Terminal does not supported by indigo so TERMINAL_HETERO used\n  // Off removing all labels in indigo so HETERO used\n  const renderModeMapping = {\n    [ShowHydrogenLabels.Off]: IndigoShowHydrogenLabelsMode.HETERO,\n    [ShowHydrogenLabels.Hetero]: IndigoShowHydrogenLabelsMode.HETERO,\n    [ShowHydrogenLabels.Terminal]: IndigoShowHydrogenLabelsMode.TERMINAL_HETERO,\n    [ShowHydrogenLabels.TerminalAndHetero]:\n      IndigoShowHydrogenLabelsMode.TERMINAL_HETERO,\n    [ShowHydrogenLabels.On]: IndigoShowHydrogenLabelsMode.ALL,\n  };\n\n  return (\n    renderModeMapping[\n      ketcherProvider.getKetcher().editor.options().showHydrogenLabels\n    ] || IndigoShowHydrogenLabelsMode.OFF\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { defaultBondThickness } from 'application/editor';\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  ExplicitHydrogensData,\n  ExplicitHydrogensResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions,\n} from 'domain/services';\nimport { KetcherLogger } from 'utilities';\nimport { getLabelRenderModeForIndigo } from 'infrastructure/services/helpers';\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val);\n            else setTimeout(iterate, timeGap);\n          } catch (error) {\n            KetcherLogger.error('remoteStructService.ts::pollDeferred', error);\n            reject(error);\n          }\n        },\n        (err) => reject(err),\n      );\n    }\n    setTimeout(iterate, startTimeGap || 0);\n  });\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val]);\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>,\n) {\n  let requestUrl = url;\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data);\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json',\n      },\n      headers,\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin',\n  });\n\n  if (responseHandler) {\n    response = responseHandler(response);\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error))),\n    );\n  }\n\n  return response;\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>,\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>,\n  ) {\n    const body = Object.assign({}, data);\n    body.options = Object.assign(body.options || {}, defaultOptions, options);\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders,\n      },\n      responseHandler,\n    );\n  };\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string;\n  private readonly defaultOptions: StructServiceOptions;\n  private readonly customHeaders?: Record<string, string>;\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>,\n  ) {\n    this.apiPath = apiPath;\n    this.defaultOptions = defaultOptions;\n    this.customHeaders = customHeaders;\n  }\n\n  getInChIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi',\n      },\n      {},\n    );\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string;\n    let imagoVersions: Array<string>;\n    let isAvailable = false;\n\n    try {\n      const response = await request('GET', this.apiPath + 'info');\n      indigoVersion = response.indigo_version;\n      imagoVersions = response.imago_versions;\n      isAvailable = true;\n    } catch (e) {\n      KetcherLogger.error(\n        'remoteStructService.ts::RemoteStructService::info',\n        e,\n      );\n      indigoVersion = '';\n      imagoVersions = [];\n      isAvailable = false;\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable,\n    };\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions,\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions,\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions,\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions,\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions,\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions,\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions,\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : '';\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream',\n      },\n    );\n    const status = request.bind(\n      null,\n      'GET',\n      this.apiPath + 'imago/uploads/:id',\n    );\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response;\n            return response.state === 'SUCCESS';\n          },\n          500,\n          300,\n        ),\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }));\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions,\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png';\n    const bondThickness: number =\n      options?.bondThickness || defaultBondThickness;\n\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(\n      { struct: data },\n      {\n        'render-output-format': outputFormat,\n        'render-bond-line-width': bondThickness,\n        'render-label-mode': getLabelRenderModeForIndigo(),\n      },\n      (response) => response.then((resp) => resp.text()),\n    );\n  }\n\n  toggleExplicitHydrogens(\n    data: ExplicitHydrogensData,\n    options?: StructServiceOptions,\n  ): Promise<ExplicitHydrogensResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert_explicit_hydrogens',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider,\n} from 'domain/services';\n\nimport { RemoteStructService } from './remoteStructService';\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string;\n  mode: ServiceMode = 'remote';\n  customHeaders?: Record<string, string>;\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath;\n    this.customHeaders = customHeaders;\n    const params = new URLSearchParams(document.location.search);\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!;\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/';\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService,\n} from 'domain/services';\nimport { StructOrString } from 'application/indigo.types';\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { defaultBondThickness } from './editor';\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d',\n];\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition',\n];\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType;\n};\ntype AutomapOptions = {\n  mode?: AutomapMode;\n};\ntype CheckOptions = {\n  types?: Array<CheckTypes>;\n};\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>;\n};\ntype RecognizeOptions = {\n  version?: string;\n};\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType;\n  backgroundColor?: string;\n  bondThickness?: number;\n};\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer,\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map();\n    const result = struct.clone(null, null, false, aidMap);\n\n    return serializer.serialize(result);\n  }\n\n  return struct;\n}\n\nexport class Indigo {\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n\n  constructor(structService) {\n    this.#structService = structService;\n    this.#ketSerializer = new KetSerializer();\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info();\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions,\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET;\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat,\n    });\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard';\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes;\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types,\n    });\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions,\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps;\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties,\n    });\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || '';\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions,\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png';\n    const backgroundColor = options?.backgroundColor || '';\n    const bondThickness = options?.bondThickness || defaultBondThickness;\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor,\n        bondThickness,\n      },\n    );\n  }\n\n  toggleExplicitHydrogens(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .toggleExplicitHydrogens({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FormatterFactory, SupportedFormat } from './formatters';\nimport { GenerateImageOptions, StructService } from 'domain/services';\n\nimport { CoreEditor, Editor, defaultBondThickness } from './editor';\nimport { Indigo } from 'application/indigo';\nimport { KetSerializer, MolfileFormat } from 'domain/serializers';\nimport { SGroup, Struct } from 'domain/entities';\nimport assert from 'assert';\nimport { EventEmitter } from 'events';\nimport {\n  LogSettings,\n  LogLevel,\n  runAsyncAction,\n  SettingsManager,\n} from 'utilities';\nimport {\n  deleteAllEntitiesOnCanvas,\n  getStructure,\n  parseAndAddMacromoleculesOnCanvas,\n  prepareStructToRender,\n} from './utils';\n\nconst allowedApiSettings = {\n  'general.dearomatize-on-load': 'dearomatize-on-load',\n  ignoreChiralFlag: 'ignoreChiralFlag',\n  disableQueryElements: 'disableQueryElements',\n  bondThickness: 'bondThickness',\n};\n\nexport class Ketcher {\n  logging: LogSettings;\n  #structService: StructService;\n  #formatterFactory: FormatterFactory;\n  #editor: Editor;\n  #indigo: Indigo;\n  #eventBus: EventEmitter;\n\n  get editor(): Editor {\n    return this.#editor;\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus;\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory,\n  ) {\n    assert(editor != null);\n    assert(structService != null);\n    assert(formatterFactory != null);\n\n    this.#editor = editor;\n    this.#structService = structService;\n    this.#formatterFactory = formatterFactory;\n    this.#indigo = new Indigo(this.#structService);\n    this.#eventBus = new EventEmitter();\n    this.logging = {\n      enabled: false,\n      level: LogLevel.ERROR,\n      showTrace: false,\n    };\n  }\n\n  get formatterFactory() {\n    return this.#formatterFactory;\n  }\n\n  get indigo() {\n    return this.#indigo;\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options();\n    const result = Object.entries(allowedApiSettings).reduce(\n      (acc, [apiSetting, clientSetting]) => {\n        if (clientSetting in options) {\n          return { ...acc, [apiSetting]: clientSetting };\n        }\n        return acc;\n      },\n      {},\n    );\n\n    if (!Object.keys(result).length) {\n      throw new Error('Allowed options are not provided');\n    }\n\n    return result;\n  }\n\n  // TODO: create options type\n  setSettings(settings: Record<string, string>) {\n    // TODO: need to expand this and refactor this method\n    if (!settings) {\n      throw new Error('Please provide settings');\n    }\n    const options = {};\n    for (const [apiSetting, clientSetting] of Object.entries(\n      allowedApiSettings,\n    )) {\n      options[clientSetting] = settings[apiSetting];\n    }\n\n    if (Object.hasOwn(settings, 'disableCustomQuery')) {\n      SettingsManager.disableCustomQuery = !!settings.disableCustomQuery;\n    }\n\n    return this.#editor.setOptions(JSON.stringify(options));\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SMILES format is not available in macro mode');\n    }\n    const format = isExtended\n      ? SupportedFormat.smilesExt\n      : SupportedFormat.smiles;\n    return getStructure(format, this.#formatterFactory, this.editor.struct());\n  }\n\n  async getMolfile(molfileFormat?: MolfileFormat): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrows.',\n      );\n    }\n\n    const formatPassed =\n      molfileFormat === 'v3000'\n        ? SupportedFormat.molV3000\n        : SupportedFormat.mol;\n    const format = molfileFormat ? formatPassed : SupportedFormat.molAuto;\n\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n\n    return molfile;\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('RXN format is not available in macro mode');\n    }\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.',\n      );\n    }\n    const format =\n      molfileFormat === 'v3000'\n        ? SupportedFormat.rxnV3000\n        : SupportedFormat.rxn;\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n\n    return rxnfile;\n  }\n\n  getKet(): Promise<string> {\n    return getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  getFasta(): Promise<string> {\n    return getStructure(\n      SupportedFormat.fasta,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  getSequence(): Promise<string> {\n    return getStructure(\n      SupportedFormat.sequence,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  getSmarts(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SMARTS format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.smarts,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getCml(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CML format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cml,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getSdf(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SDF format is not available in macro mode');\n    }\n    const format =\n      molfileFormat === 'v2000'\n        ? SupportedFormat.sdf\n        : SupportedFormat.sdfV3000;\n    return getStructure(format, this.#formatterFactory, this.#editor.struct());\n  }\n\n  getCDXml(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CDXML format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cdxml,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getCDX(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CDX format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cdx,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? SupportedFormat.inChIAuxInfo : SupportedFormat.inChI,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  async getInChIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n\n    return this.#structService.getInChIKey(struct);\n  }\n\n  containsReaction(): boolean {\n    const editor = CoreEditor.provideEditorInstance();\n    return (\n      this.editor.struct().hasRxnArrow() ||\n      editor?.drawingEntitiesManager?.micromoleculesHiddenEntities.hasRxnArrow()\n    );\n  }\n\n  isQueryStructureSelected(): boolean {\n    const structure = this.editor.struct();\n    const selection = this.editor.selection();\n\n    if (!selection) {\n      return false;\n    }\n\n    let hasQueryAtoms = false;\n    if (selection.atoms) {\n      hasQueryAtoms = selection.atoms.some((atomId) => {\n        const atom = structure.atoms.get(atomId);\n        assert(atom);\n        const sGroupIds = Array.from(atom.sgs.values());\n        const isQueryComponentSGroup = sGroupIds.some((sGroupId) => {\n          const sGroup = structure.sgroups.get(sGroupId);\n          assert(sGroup);\n          return SGroup.isQuerySGroup(sGroup);\n        });\n        return atom.isQuery() || isQueryComponentSGroup;\n      });\n    }\n\n    let hasQueryBonds = false;\n    if (selection.bonds) {\n      hasQueryBonds = selection.bonds.some((bondId) => {\n        const bond = structure.bonds.get(bondId);\n        assert(bond);\n        return bond.isQuery();\n      });\n    }\n    return hasQueryAtoms || hasQueryBonds;\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string');\n\n      if (window.isPolymerEditorTurnedOn) {\n        deleteAllEntitiesOnCanvas();\n        await parseAndAddMacromoleculesOnCanvas(structStr, this.#structService);\n      } else {\n        const struct: Struct = await prepareStructToRender(\n          structStr,\n          this.#structService,\n          this,\n        );\n\n        struct.rescale();\n        this.#editor.struct(struct);\n        this.#editor.zoomAccordingContent(struct);\n        this.#editor.centerStruct();\n      }\n    }, this.eventBus);\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string');\n\n      if (window.isPolymerEditorTurnedOn) {\n        await parseAndAddMacromoleculesOnCanvas(structStr, this.#structService);\n      } else {\n        const struct: Struct = await prepareStructToRender(\n          structStr,\n          this.#structService,\n          this,\n        );\n\n        struct.rescale();\n        this.#editor.structToAddFragment(struct);\n      }\n    }, this.eventBus);\n  }\n\n  async layout(): Promise<void> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('Layout is not available in macro mode');\n    }\n\n    runAsyncAction<void>(async () => {\n      const struct = await this.#indigo.layout(this.#editor.struct());\n      const ketSerializer = new KetSerializer();\n      this.setMolecule(ketSerializer.serialize(struct));\n    }, this.eventBus);\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('Recognize is not available in macro mode');\n    }\n    return this.#indigo.recognize(image, { version });\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = {\n      outputFormat: 'png',\n      bondThickness: defaultBondThickness,\n    },\n  ): Promise<Blob> {\n    let meta = '';\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml';\n        break;\n\n      case 'png':\n      default:\n        meta = 'image/png';\n        options.outputFormat = 'png';\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options,\n    );\n    const byteCharacters = atob(base64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], { type: meta });\n    return blob;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider,\n} from 'domain/services';\n\nimport { Editor } from 'application/editor';\nimport { FormatterFactory } from 'application/formatters';\nimport { Ketcher } from './ketcher';\nimport assert from 'assert';\nimport { ketcherProvider } from './utils';\n\nexport const DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false,\n  'ignore-no-chiral-flag': false,\n};\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider;\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider,\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider;\n    return this;\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null);\n    assert(this.#structServiceProvider != null);\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions,\n    };\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions);\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService),\n    );\n    ketcher[this.#structServiceProvider.mode] = true;\n\n    ketcherProvider.setKetcherInstance(ketcher);\n    return ketcher;\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","getAll","concat","Generics","itemSets","displayName","items","description","subGroups","getGenericsList","generics","_generics$","Array","isArray","map","item","result","_i","_Object$values","Object","values","length","subGroup","_toConsumableArray","genericsList","AtomList","params","_classCallCheck","notList","ids","_createClass","value","labelList","labels","_iterator","_createForOfIteratorHelper","_step","s","n","done","id","currenElement","push","err","e","f","join","equals","atomList","sort","toString","ifDef","target","defaultValue","undefined","tfx","parsedValue","parseFloat","toFixed","LogLevel","KetcherLogger","_window","window","ketcher","Error","logging","newSettings","_Object$entries","entries","_Object$entries$_i","_slicedToArray","settingName","settingValue","settings","log","isMinimumLogLevel","LOG","showTrace","_len","arguments","messages","_key","console","trace","info","INFO","_len2","_key2","warn","WARN","_len3","warnings","_key3","error","ERROR","_len4","errors","_key4","minimumLevel","_this$settings","enabled","level","KetcherAsyncEvents","runAsyncAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","eventEmitter","res","wrap","_callee$","_context","prev","next","emit","LOADING","sent","SUCCESS","abrupt","t0","FAILURE","stop","_x","_x2","apply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","blob","Blob","notifyRequestCompleted","event","Event","dispatchEvent","KETCHER_SAVED_SETTINGS_KEY","KETCHER_SAVED_OPTIONS_KEY","SettingsManager","getSettings","JSON","parse","localStorage","getItem","saveSettings","setItem","stringify","getOptions","saveOptions","options","_this$getSettings","selectionTool","_objectSpread","_disableCustomQuery","disableCustomQuery","_this$getOptions","ignoreChiralFlag","mac","navigator","test","platform","normalizeKeyName","name","parts","split","alt","ctrl","shift","meta","mod","normalizeKeyMap","copy","create","keys","forEach","prop","modifiers","altKey","ctrlKey","metaKey","shiftKey","rusToEng","replace","KN","keyCode","normalizeKeyEvent","base","isChar","isControlKey","keyNorm","obj","KeyboardEvent","_typeof","setHotKey","actName","hotKeys","initHotKeys","actions","act","shortcut","lookup","baseName","shortcutAliasMap","Escape","Delete","Mod","isMacOs","shortcutStr","shortcutKey","toUpperCase","generateMenuShortcuts","_obj$key","processedShortcut","Vec2","args","x","y","z","Math","sqrt","v","add","add_","get_xy0","sub","scaled","negated","yComplement","y1","addScaled","normalized","normalize","l","turnLeft","coordStr","max","assert","min","ceil","floor","rotate","angle","sin","cos","rotateSC","rotateAroundOrigin","angleInDegrees","angleInRadians","PI","offsetX","offsetY","rotatedX","rotatedY","Number","isInsidePolygon","points","inside","j","xi","yi","xj","yj","intersect","oxAngle","atan2","dist","a","b","diff","v1","v2","sum","dot","cross","lc","lc2","f1","f2","centre","getLinePoint","lineStart","lineEnd","difference","distance","ratio","crossProduct","radiansToDegrees","radians","degrees_to_radians","degrees","oxAngleForVector","findSecondPoint","startPoint","lineLength","lineAngleRadians","deltaX","deltaY","endPoint","_defineProperty","Pile","_Set","_inherits","_callSuper","find","setB","isSuperset","subset","_iterator2","_step2","has","expression","from","union","_iterator3","_step3","intersection","thisSet","unionIntersections","sets","unionized","setsToReturn","prevSets","curSet","isCurSetMerged","newSets","intersec","size","_wrapNativeSuper","Set","INVALID","BaseMicromoleculeEntity","initiallySelected","getInitiallySelected","setInitiallySelected","resetInitiallySelected","invalidate","AttachmentPoints","StereoLabel","CIP","Atom","_BaseMicromoleculeEnt","attributes","_this","fragment","getValueOrDefault","alias","attrlist","isotope","radical","cip","charge","rglabel","attachmentPoints","implicitHCount","explicitValence","isPreview","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","queryProperties","property","_attributes$queryProp","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","defineProperty","_assertThisInitialized","enumerable","getPseudo","isCorrectPseudo","setRGAttachmentPointForDisplayPurpose","FirstSideOnly","clone","fidMap","ret","isQuery","isAnyAtom","isAnyMetal","isAnyHalogen","isAnyGroup","Boolean","some","pureHydrogen","isPlainCarbon","isPseudo","hasRxnProps","calcValence","connectionCount","groupno","radicalCount","radicalElectrons","hydrogenCount","absCharge","abs","isHeteroAtom","calcValenceMinusHyd","conn","rad","getConnectedBondIds","struct","atomId","bonds","_step$value","bondId","bond","begin","end","getAttrHash","atom","attrs","attr","attrGetDefault","isInAromatizedRing","atoms","loops","_step2$value","_","loop","halfBondIds","hbs","aromatic","halfBondId","halfBond","halfBonds","RADICAL","NONE","SINGLET","DOUPLET","TRIPLET","STEREO_PARITY","ODD","EVEN","EITHER","aromaticity","ringMembership","ringSize","connectivity","chirality","customQuery","PATTERN","Bond","_attributes$cip","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","TYPE","ANY","center","TYPES","QUERY_BOND_TYPES","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","AROMATIC","includes","SINGLE","getCenter","p1","p2","getDir","aidMap","cp","getAttachedSGroups","_struct$atoms$get","_struct$atoms$get2","sGroupsWithBeginAtom","sGroupsWithEndAtom","getBondNeighbourIds","beginBondIds","endBondIds","getFusingConditions","bondBegin","bondEnd","_this$PATTERN$TYPE","DOUBLE","isFusingToDoubleBond","isFusingToSingleBond","isFusingDoubleSingleSingle","isFusingSingleSingleDouble","isAllSingle","getBenzeneConnectingBondType","_this$PATTERN$TYPE2","_Bond$getFusingCondit","getCyclopentadieneFusingBondType","_this$PATTERN$TYPE3","_Bond$getFusingCondit2","getCyclopentadieneDoubleBondIndexes","_Bond$getFusingCondit3","TRIPLE","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","filteredStereoAtoms","aid","hasAnotherLabel","stereoFlag","Mixed","_stereoLabel$match","match","Abs","And","Or","_enhancedStereoFlag","WeakMap","_stereoAtoms","Fragment","stereoAtoms","stereoFlagPosition","properties","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_classPrivateFieldGet","fr","updateStereoFlag","updateStereoAtom","frId","isAdd","addStereoAtom","deleteStereoAtom","fragmentId","getDefaultStereoFlagPosition","getFragment","bb","getCoordBoundingBox","canvasToModel","point","microModeScale","modelToCanvas","vector","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","_struct$atomGetNeighb","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","getFunctionalGroupsList","setFunctionalGroupsList","list","addToFunctionalGroupsList","getInstance","instance","SaltsAndSolventsProvider","saltsAndSolventsList","getSaltsAndSolventsList","setSaltsAndSolventsList","Box2Abs","p0","extend","lp","rb","include","p","contains","ext","translate","d","transform","sz","pos","hasZeroArea","fromRelBox","relBox","width","height","b1","b2","segmentIntersection","c","dc","dd","da","db","_classStaticPrivateMethodGet","_isPointOnSegment","call","segPointA","segPointB","minX","maxX","minY","maxY","SgContexts","Multifragment","Group","selectionKeys","defaultBondThickness","MonomerGroups","MonomerGroupCodes","MonomerCodeToGroup","R","SUGARS","A","BASES","G","T","X","PHOSPHATES","SGroupBracketParams","w","h","SGroup","bracketBox","bracketDirection","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","data","mul","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","getAttr","setFunctionalGroup","functionalGroup","getAttrs","setAttr","oldValue","checkAttr","updateOffset","isExpanded","isSuperAtom","isContracted","calculatePP","topLeftPoint","isAtomContext","context","isBondContent","contentBoxes","contentBB","bba","bbb","sgroups","descriptorIntersects","sAtom","sAtomPP","getMassCentre","isGroupAttached","getConnectionPointsCount","addAttachmentPoint","attachmentPoint","isAttachmentPointAlreadyExist","addAttachmentPoints","removeAttachmentPoint","attachmentPointAtomId","index","findIndex","_ref2","splice","getAttachmentPoints","connectionAtoms","isNotContractible","getAttachmentAtomId","_this$attachmentPoint","getContractedPosition","_this$attachmentPoint2","representAtom","position","cloneAttachmentPoints","atomIdMap","getOffset","sgroup","isSaltOrSolvent","moleculeName","saltsAndSolventsProvider","saltsAndSolvents","_ref3","abbreviation","isAtomInSaltOrSolvent","sgroupsOnCanvas","_this2","onlySaltsOrSolvents","_ref4","atomIdInSaltOrSolvent","isBondInSaltOrSolvent","_this3","_ref5","bondIdInSaltOrSolvent","filterAtoms","newAtoms","removeNegative","_mol","sg","atomMap","field","elem","allAtoms","addAtom","removeAtom","getCrossBonds","mol","parentAtomSet","crossBonds","bid","bracketPos","sGroup","crossBondsPerAtom","remol","render","BORDER_EXT","PADDING_VECTOR","flat","braketBox","getAtom","structBoundingBox","getVBoxObj","editor","attachmentPointsVBox","ctab","getRGroupAttachmentPointsVBoxByAtomIds","getBracketParameters","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","cl","cr","bracketHeight","cl0","cr0","dr","dl","getObjBBox","a0","getAtoms","_atom","getBonds","indexOf","prepareMulForSaving","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","_loop","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","isBondInContractedSGroup","sGroups","sGroupOrReSGroup","atomsInSGroup","SUP","isDataSGroup","DAT","isQuerySGroup","queryComponent","isSRUSGroup","SRU","isMulSGroup","MUL","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","GEN","contractedSGroup","sgBottomRightPoint","bottomRightPoint","_sgroup","FunctionalGroup","isFunctionalGroup","provider","functionalGroups","atomsInFunctionalGroup","fg","relatedSGroup","bondsInFunctionalGroup","molecule","isRGroupAttachmentPointInsideFunctionalGroup","rgroupAttachmentPoint","rgroupAttachmentPoints","attachedAtom","findFunctionalGroupByAtom","isFunctionalGroupReturned","relatedSGroupId","findFunctionalGroupByBond","_iterator4","_step4","findFunctionalGroupBySGroup","isAtomInContractedFunctionalGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","isBondInContractedFunctionalGroup","_sGroup","isHalfBondInContractedFunctionalGroup","HalfBond","dir","norm","ang","contra","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","isConvex","dblBonds","convex","hb","RGroup","atrributes","frags","resth","range","ifthen","fid","findRGroupByFragment","rgroups","frid","_rgid","rgroup","RGroupAttachmentPoint","atomToNewAtom","newAtomId","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","_attributes$height","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","getSGroupsBFS","order","queue","getAtomSetRelations","newId","isStrictSuperset","isSubset","parents","childs","childId","path","insert","_this$children$get","guess","resetParentLink","parentId","childIndex","remove","_this$children$get2","_this3$children$get","checkOverlapping","sGroupType","searchFunction","common","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","_Map","nextId","_get","_getPrototypeOf","prototype","keyOf","changeInitiallySelectedPropertiesForPool","MonomerMicromolecule","_SGroup","monomer","sgroupContractedPosition","monomerMicromolecule","monomerMicromoleculeClone","arrayAddIfMissing","array","Struct","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","_bid","hasRxnArrow","hasRxnPluses","isRxn","isBlank","isSingleGroup","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","rgroupAttachmentPointSet","bidMap","mergeInto","getScaffold","rg","_fnum","getFragmentIds","_fid","copyNonFragmentObjects","keepAllRGroups","bidMapEntity","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","sgroupIdMap","sgroupId","oldSgroup","soid","prepareLoopStructure","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","calcConn","findBondId","a1","a2","hb1","hb2","bondInitHalfBonds","halfBondUpdate","sgroup1","getGroupFromAtomId","sgroup2","startCoords","endCoords","coordsDifference","_this4","clear","setHbNext","hbid","halfBondSetAngle","left","hbl","atomAddNeighbor","ir","il","atomSortNeighbors","_this5","nei","nei2","nextNei","_this6","atomUpdateHalfBonds","_this7","_this8","sGroupsRecalcCrossBonds","_this9","sGroupDelete","_this10","atomSetPos","rxnPlusSetPos","rxnArrowSetPos","simpleObjectSetPos","textSetPosition","vec","global","getCoordBoundingBoxObj","getBondLengthData","_this11","totalLength","cnt","getAvgBondLength","bld","getAvgClosestAtomDistance","totalDist","minDist","k","checkBondExists","findConnectedComponent","firstaid","_this12","pop","neiId","findConnectedComponents","discardExistingFragments","_this13","addedAtoms","components","component","markFragment","idSet","_this14","frag","markFragments","_this15","comp","_comp","firstAtom","scale","rescale","avg","loopHasSelfIntersections","hbi","ai","bi","hbj","aj","bj","partitionLoop","subloops","continueFlag","atomToHalfBond","aid1","subloop","halfBondAngle","hbid1","hbid2","hba","hbb","loopIsConvex","_this16","every","loopArr","loopIsInner","_this17","totalAngle","hbida","hbidb","_this18","newLoops","bondsToMark","hbIdNext","hbId","loopId","calcImplicitHydrogen","_this$calcConn","_this$calcConn2","isAromatic","correctConn","hasImplicitH","setImplicitHydrogen","_this19","_this$atoms$get","_this20","getComponents","_this21","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","getBondFragment","_this$bonds$get","_this$atoms$get2","bindSGroupsToFunctionalGroups","_this22","getGroupIdFromAtomId","_Array$from","_Array$from$_i","groupId","_this$sgroups","getGroupIdFromBondId","_i2","_Array$from2","_Array$from2$_i","getGroupsIdsFromBondId","groupsIds","_i3","_Array$from3","_Array$from3$_i","getBondIdByHalfBond","getSelectedVisibleAtoms","selection","_selection$atoms","_this23","isAtomNotInContractedGroup","getRGroupAttachmentPointsByAtomId","_id","isAtomFromMacromolecule","isBondFromMacromolecule","isFunctionalGroupFromMacromolecule","functionalGroupId","isTargetFromMacromolecule","disableInitiallySelected","enableInitiallySelected","TextCommand","preparePositions","positions","Text","content","setPos","coords","Highlight","color","SGroupAttachmentPoint","leaveAtomId","attachmentId","newLeaveAtomId","convertToRGroupAttachmentPointForDisplayPurpose","attachedAtomId","editorSettings","macroModeScale","provideEditorSettings","canvasSelector","drawnStructuresSelector","notifyRenderComplete","debounce","notifyItemsToMergeInitializationComplete","AUTO_SCROLL_OFFSET_X","AUTO_SCROLL_OFFSET_Y","ZoomTool","drawingEntitiesManager","_this$zoom","zoom","translateBy","canvasWrapper","dx","_this$zoom2","dy","resizeObserver","ResizeObserver","drawScrollBars","observe","node","select","canvas","zoomLevel","zoomTransform","ZoomTransform","initActions","scaleExtent","MINZOOMSCALE","MAXZOOMSCALE","wheelDelta","defaultWheelDelta","preventDefault","on","zoomAction","bind","mouseWheeled","initMenuZoom","setZoom","getZoomLevel","setZoomTransform","requestAnimationFrame","dispatchZoomEventHandlers","subscribeOnZoomEvent","zoomEventHandler","zoomEventHandlers","initScrollBars","renderScrollBar","scrollBars","horizontal","vertical","scrollBar","hasOffset","offsetStart","offsetEnd","bar","updateScrollBarAttrs","drawScrollBar","_scrollBar$bar","_scrollBar$bar2","append","dragged","drag","_scrollBar$bar5","_this$calculateDynami","calculateDynamicAttr","start","_scrollBar$bar3","maxHeight","HORIZONTAL_DIST_TO_EDGE","WIDTH","_scrollBar$bar4","VERTICAL_DIST_TO_EDGE","RADIUS","COLOR","clamp","MARGIN","maxWidth","MIN_LENGTH","scrollTo","_this$canvasWrapper$n","_this$canvasWrapper$n2","_this$zoom3","canvasWrapperHeight","baseVal","canvasWrapperWidth","translateTo","isShiftKeydown","boxNode","_this$zoom4","_this$zoom5","_this$canvas$node","_this$canvasWrapper$n3","_this$canvasWrapper$n4","_this$canvasWrapper$n5","_this$scrollBars","_this$scrollBars2","boundingBox","getBoundingClientRect","wrapperBoundingBox","right","top","bottom","zoomIn","_this$zoom6","zoomStep","scaleTo","zoomOut","_this$zoom7","resetZoom","_this$zoom8","deltaMode","scaleCoordinates","newX","applyX","newY","applyY","invertZoom","invertX","invertY","unzoomValue","destroy","_this$scrollBars$hori","_this$scrollBars$vert","_this$resizeObserver","unobserve","_instance","initInstance","Coordinates","viewToModel","modelToView","canvasToView","viewToCanvas","BaseRenderer","drawingEntity","_ZoomTool$instance","_ZoomTool$instance2","_this$rootElement","rootNode","rootElement","getBBox","_this$rootBBox","rootBBox","_this$rootBBox2","_this$rootBBox3","_this$rootBBox4","_this$rootElement2","redrawHover","hovered","hoverElement","appendHover","hoverAreaElement","removeHover","move","BaseSequenceRenderer","_BaseRenderer","_hoverArea","appendHoverAreaElement","drawSelection","moveSelection","show","_theme","DrawingEntity","_position","moveRelative","moveAbsolute","turnOnHover","turnOffHover","turnOnSelection","turnOffSelection","selectIfLocatedInRectangle","rectangleTopLeftPoint","rectangleBottomRightPoint","isPreviousSelected","baseRenderer","prevSelectedValue","locatedInRectangle","setBaseRenderer","renderer","AttachmentPointName","attachmentPointNames","canvasToMonomerCoordinates","coordinatesOnCanvas","centerOFMonomer","monomerWidth","monomerHeight","zeroPointCoord","monomerCoord","findLabelPoint","pointOnBorder","lineOffset","labelSize","isUsed","angleRadians","pointOfAttachment","attachmentVector","rotatedVector","normalizedVector","normalizedAttachmentVector","addedOrtogonalOffset","addedParallelOffset","ortogonalOffset","parallelOffset","labelCoordinates","getSearchFunction","initialAngle","canvasOffset","findPointOnMonomerBorder","coordStart","secondPoint","newLength","round","newCoordStart","zoomedCoordinateOfSecondPoint","CoordinatesTool","newPointCoord","newAngle","elementsAtPoint","document","elementsFromPoint","isCurrentMonomerAtNewPoint","_monomer$renderer","bodyElement","anglesToSector","attachmentPointNumberToAngle","sectorsList","checkFor0and360","convertAttachmentPointNumberToLabel","attachmentPointNumber","attachmentPointLabel","rgi","BaseMonomer","_DrawingEntity","monomerItem","props","isMicromoleculeFragment","attachmentPointsToBonds","getAttachmentPointDict","potentialAttachmentPointsToBonds","getMonomerDefinitionAttachmentPoints","chosenFirstAttachmentPointForBond","potentialSecondAttachmentPointForBond","chosenSecondAttachmentPointForBond","maxAttachmentPointNumber","getMaxAttachmentPointNumber","attachmentPointList","turnOnAttachmentPointsVisibility","attachmentPointsVisible","turnOffAttachmentPointsVisibility","setChosenFirstAttachmentPoint","setChosenSecondAttachmentPoint","setPotentialSecondAttachmentPoint","setPotentialBond","potentialBond","getAttachmentPointByBond","attachmentPointName","getPotentialAttachmentPointByBond","hasAttachmentPoint","pointNumber","parseInt","isNaN","R1","R2","firstFreeAttachmentPoint","isAttachmentPointExistAndFree","isAttachmentPointUsed","setRenderer","forEachBond","callback","setBond","unsetBond","hasBonds","bondName","hasPotentialBonds","getPotentialBond","removeBond","polymerBond","removePotentialBonds","clearSelectedPoints","getBondByAttachmentPoint","getPotentialBondByAttachmentPoint","isAttachmentPointPotentiallyUsed","_BaseMonomer$getAttac","getAttachmentPointDictFromMonomerDefinition","attachmentPointDictionary","getAttachmentPointDictFromAtoms","moreThanTwo","monomerDefinitionAttachmentPoints","leavingGroupsAtoms","leavingGroupsAtom","attachmentAtomId","leavingGroupsAtomId","isNumber","attachmentAtom","leavingGroup","attachmentPointNumberToType","leavingGroupsAtomsArray","atom1","atom2","attachmentPointNameToBond","isMonomerTypeDifferentForChaining","monomerToChain","SubChainConstructor","attachmentPointsList","attachmentPointTypeToNumber","side","attachmentPointIndex","calculatedAttachmentPointNumber","getLabelByTypeAction","calculatedLabel","BaseSubChain","nodes","PeptideSubChain","_BaseSubChain","ChemSubChain","Peptide","_BaseMonomer","getValidSourcePoint","secondMonomer","unUsedAttachmentPointsNamesList","getValidTargetPoint","firstMonomer","Chem","RNABase","getAnotherMonomer","Sugar","PhosphateSubChain","RnaSubChain","Phosphate","getValidPoint","otherMonomer","potentialPointOnOther","_previousMonomer$atta","previousMonomer","isPreviousMonomerSugar","isSugarConnectedToBase","R3","nextMonomer","isNextMonomerRna","isPartOfRna","Axis","getMonomerUniqueKey","MonomerName","Name","checkIsR2R1Connection","_nextMonomer$attachme","getNextMonomerInChain","r2PolymerBond","getRnaBaseFromSugar","r3PolymerBond","r3ConnectedMonomer","getSugarFromRnaBase","r1PolymerBond","r1ConnectedMonomer","getPhosphateFromSugar","nextMonomerInChain","isMonomerBeginningOfChain","MonomerTypes","isPreviousMonomerPartOfChain","MonomerType","previousConnectionNotR2","isValidNucleotide","sugar","phosphate","nextMonomerAfterPhosphate","isValidNucleoside","isBaseTool","tool","editorEvents","resetEditorEvents","selectMonomer","Subscription","selectPreset","selectTool","createBondViaModal","cancelBondCreationViaModal","selectMode","layoutModeChange","selectHistory","openMonomerConnectionModal","mouseOverPolymerBond","mouseLeavePolymerBond","mouseOverMonomer","mouseOnMoveMonomer","mouseLeaveMonomer","mouseOverAttachmentPoint","mouseLeaveAttachmentPoint","mouseUpAttachmentPoint","mouseDownAttachmentPoint","mouseOverDrawingEntity","mouseLeaveDrawingEntity","mouseUpMonomer","rightClickSequence","rightClickCanvas","editSequence","startNewSequence","mouseOverSequenceItem","mouseOnMoveSequenceItem","mouseLeaveSequenceItem","changeSequenceTypeEnterMode","toggleSequenceEditMode","renderersEvents","hotkeysConfiguration","exit","handler","events","dispatch","undo","onSelectHistory","redo","erase","isSequenceEditMode","modelChanges","selectAllDrawingEntities","renderersContainer","update","AttachmentPoint","constructorParams","_constructorParams$ca","_constructorParams$mo","bodyWidth","bodyHeight","DOMRect","centerOfMonomer","isSnake","isPotentiallyUsed","fill","colors","fillPotentially","stroke","strokePotentially","fillUsed","strokeUsed","appendAttachmentPoint","_this$element","setTimeout","renderAttachmentPointByCoordinates","attachmentOnBorder","attachmentPointCoordinates","labelCoordinatesOnMonomer","attachmentPointElement","radius","labelGroup","text","style","renderHoverableArea","monomerCenter","attachmentPointCenter","angleDegrees","rotation","halfWidth","areaHeight","pow","lineFunction","hoverableAreaElement","_this$monomer$attachm","_this$monomer$attachm2","flip","isAttachmentpointR1","isMonomersOnSameHorizontalLine","rotateToAngle","_this$getCoordinates","getCoordinates","_this$getCoordinates2","attachmentToBorderCoordinates","attachmentToCenterCoordinates","hoverableArea","updateAttachmentPointStyleForHover","endPosition","_this$catchThePoint","catchThePoint","_this$catchThePoint2","labelPoint","updateCoords","_this$monomer$attachm3","_this$attachmentPoint3","_this$attachmentPoint4","_this$attachmentPoint5","_this$getCoordinates3","_this$getCoordinates4","rotationAngle","currentMonomerCenter","_findLabelPoint","attachmentPointLength","labelOffset","_findLabelPoint2","getElement","getAttachmentPointName","getHoverableArea","getAngle","hypot","attachmentPointVector","labelPositions","BaseMonomerRenderer","monomerSelectedElementId","monomerHoveredElementId","monomerSymbolElementId","_this$monomerSymbolEl","_this$monomerSymbolEl2","monomerSymbolElement","querySelector","monomerSize","getAttribute","isSnakeBondForAttachmentPoint","scaledMonomerPosition","WHITE","colorsMap","D","Q","MonomerNaturalAnalogCode","getMonomerColor","theme","_theme$monomer$color$","regular","redrawAttachmentPoints","hoveredAttachmenPoint","removeAttachmentPoints","drawAttachmentPoints","updateAttachmentPoints","redrawAttachmentPointsCoordinates","chosenAttachmentPointName","chosenAttachmentPoint","allAngles","isSectorOccupied","usedAttachmentPointsNamesList","newList","freeSectorsList","unrenderedAtPoints","properAngleForFreeAttachmentPoint","customAngle","attachmentPointParams","attPointInstance","hoverAttachmenPoint","appendRootElement","appendLabel","_labelPositions$monom","_labelPositions$monom2","fontSize","textElement","textColor","monomerUniqueKey","textBBox","getScaledMonomerPosition","appendSelection","selectionCircle","_this$canvas","selectionBorder","removeSelection","_this$selectionCircle","_this$selectionBorder","appendEvents","setEnumeration","enumeration","appendEnumeration","enumerationElementPosition","enumerationElement","redrawEnumeration","setBeginning","beginning","appendChainBeginning","beginningElementPosition","beginningElement","reDrawChainBeginning","appendBody","raiseElement","_this$selectionCircle2","raise","_this$rootElement3","_this$rootElement4","isSelectable","positionInAngstoms","monomerPositionInPixels","CHEM_SELECTED_ELEMENT_ID","CHEM_SYMBOL_ELEMENT_ID","ChemRenderer","_BaseMonomerRenderer","CHEM","PEPTIDE_SELECTED_ELEMENT_ID","PEPTIDE_HOVERED_ELEMENT_ID","PEPTIDE_SYMBOL_ELEMENT_ID","PeptideRenderer","PHOSPHATE_SELECTED_ELEMENT_ID","PHOSPHATE_SYMBOL_ELEMENT_ID","PhosphateRenderer","SUGAR_SELECTED_ELEMENT_ID","SUGAR_SYMBOL_ELEMENT_ID","SugarRenderer","RNABASE_SELECTED_ELEMENT_ID","RNABASE_SYMBOL_ELEMENT_ID","RNABaseRenderer","Command","addOperation","operation","operations","merge","command","setUndoOperationReverse","undoOperationReverse","invert","renderersManagers","runPostRenderMethods","execute","PolymerBondAddOperation","addPolymerBondChangeModel","deletePolymerBondChangeModel","renderersManager","addPolymerBond","deletePolymerBond","PolymerBondDeleteOperation","finishPolymerBondCreationModelChange","PolymerBondMoveOperation","movePolymerBond","PolymerBondShowInfoOperation","showPolymerBondInformation","PolymerBondCancelCreationOperation","cancelPolymerBondCreation","PolymerBondFinishCreationOperation","deletePolymerBondCreationModelChange","finishPolymerBondCreation","SelectLayoutModeOperation","_onExecute","_onInvert","prevMode","onExecute","onInvert","BaseMode","modeName","previousMode","changeMode","ModeConstructor","modesMap","setMode","initialize","CoreEditor","provideEditorInstance","FlexMode","_BaseMode","applyFlexLayoutMode","onKeyDown","_event","EmptySubChain","getEmptyMonomerItem","EmptyMonomer","EmptySequenceNode","CHAIN_START_ARROW_SYMBOL_ID","BaseSequenceItemRenderer","_BaseSequenceRenderer","firstNodeInChainPosition","monomerIndexInChain","isLastMonomerInChain","subChain","_isEditingSymbol","isEditingSymbol","indexInRow","symbolsInRow","rowIndex","nthSeparationInRow","scaledMonomerPositionForSequence","SequenceMode","isEditMode","appendBackgroundElement","backgroundElement","modified","isSequenceEditModeTurnedOn","appendSpacerElement","spacerGroupElement","appendCounterElement","appendCaretElement","_this$spacerElement","spacerElement","drawHover","_this$backgroundEleme","_this$backgroundEleme2","appendChainStartArrow","isBeginningOfChain","symbolToDisplay","needDisplayCounter","counterElement","selectionRectangle","_this$selectionRectan","_this$selectionRectan2","_this$rootElement5","_this$rootElement6","PeptideSequenceItemRenderer","_BaseSequenceItemRend","ChemSequenceItemRenderer","PhosphateSequenceItemRenderer","NucleotideSequenceItemRenderer","_this$node$monomer$at","RNA_DNA_NON_MODIFIED_PART","rnaDnaNaturalAnalogues","peptideNaturalAnalogues","getRnaPartLibraryItem","rnaBaseName","monomersLibrary","RNA","libraryItem","getPeptideLibraryItem","peptideName","PEPTIDE","getSugarBySequenceType","sequenceType","SequenceType","DNA","SUGAR_DNA","SUGAR_RNA","Nucleotide","rnaBase","fromSugar","needValidation","isNucleoside","createOnCanvas","rnaBaseLibraryItem","phosphateLibraryItem","PHOSPHATE","sugarName","sequenceTypeEnterMode","sugarLibraryItem","_editor$drawingEntiti","addRnaPreset","sugarPosition","rnaBasePosition","phosphatePosition","monomers","EmptySequenceItemRenderer","SequenceNodeRendererFactory","fromNode","firstMonomerInChainPosition","RendererClass","constructor","Nucleoside","PolymerBondSequenceRenderer","firstNode","secondNode","_this$firstNode","_this$secondNode","_this$secondMonomer","_this$firstMonomer$re","_this$secondMonomer2","_this$secondMonomer3","firstMonomerY","firstMonomerX","secondMonomerY","secondMonomerX","startPosition","scaledPosition","mainLineY","mainLineY1","mainLineY2","areMonomersOnSameRow","getBondPath","_this$selectionElemen","selectionElement","_this$selectionElemen2","moveStart","moveEnd","BackBoneBondSequenceRenderer","PolymerBond","setFirstMonomer","setSecondMonomer","moveToLinkedMonomers","firstMonomerCenter","secondMonomerCenter","moveBondStartAbsolute","moveBondEndAbsolute","isSideChainConnection","firstMonomerAttachmentPoint","secondMonomerAttachmentPoint","backBoneChainAttachmentPoints","MonomerSequenceNode","Chain","isCyclic","fillSubChains","_this$lastNode","needCreateNewSubchain","lastNode","subChains","lastSubChain","_this$lastSubChain","_this$firstSubChain","firstSubChain","forEachNode","ReinitializeSequenceModeCommand","_renderersManager","RestoreSequenceCaretPositionCommand","previousPosition","nextPosition","SequenceRenderer","setCaretPosition","Raphael","el","translateAbs","delta","st","Visel","paths","boxes","oldBoundingBox","exts","degree","ReObject","viselType","visel","changeSelectionStyle","hoverStyle","_this$hovering","_this$hovering2","vbox","setHover","noredraw","removed","paper","setStart","setFinish","hide","_render","makeSelectionPlate","_restruct","_paper","_styles","LayerMap","StereoColoringType","StereLabelStyleType","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","pos1","pos2","oPos2","getCIPValuePath","cipLabelPosition","atomOrBond","font","fontsz","rect","toFront","drawCIPLabel","restruct","_restruct$render","cipValuePath","addReObjectPath","additionalInfo","updateHalfBondCoordinates","xShift","util","rectangleArrowHighlightAndSelection","_ref$pos","endX","wOffset","hOffset","svgPath","ellipse","rx","ry","polyline","isResizing","shouldApplySnappingStyle","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","_ref2$pos","direction","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","transformedPath","lineattr","arrowSnappingStyle","_ref3$pos","triangleLength","triangleWidth","_ref4$pos","_ref5$pos","_ref6","_ref6$pos","_ref7","_ref7$pos","_ref8","_ref8$pos","_ref9","_ref9$pos","dashInterval","_ref10","_ref10$pos","failSignWidth","arrowCenter","_ref11","_ref11$pos","_ref12","_ref12$pos","arrowLen","arrowOffset","_ref13","_ref13$pos","_ref14","_ref14$pos","_ref15","_ref15$pos","unbalanceVal","_ref16","_ref16$pos","_ref17","_ref17$pos","_ref18","_ref18$pos","plus","bondSingle","halfBond1","halfBond2","isSnapping","makeStroke","bondSnappingStyle","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","q","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathDesc","bondMark","fontszsub","rbb","recenterText","radicalCap","point1","lineWidth","dw","dh","radicalBullet","circle","bracket","bracketAngleDirection","bondCenter","isBracketContainAttachment","halfBracketHeight","bracketPoint0","bracketPoint1","longHalfBracketHeight","shortHalfBracketHeight","bracketArc0","bracketArc1","sgroupBracketStyle","point2","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t1","black","t2","aromaticBondPaths","mask","relativeBox","vml","gap","shiftedAtomPositionVector","attachmentPointEnd","directionVector","linePath","curvePath","getSvgCurveShapeAttachmentPoint","resultShape","centerPosition","basicSize","attachmentPointSvgPathString","attachmentPointSvgPathSize","shapeScale","rgroupAttachmentPointLabel","labelPosition","labelText","labelPath","StereoLabelMinOpacity","MAX_LABEL_LENGTH","ShowHydrogenLabels","ShowHydrogenLabelNames","ReAtom","_ReObject","showLabel","hydrogenOnTheLeft","makeHoverPlate","getLabeledSelectionContour","radiusScaleFactor","padding","ps1","ps2","getUnlabeledSelectionContour","atomSelectionPlateRadius","ps","getSelectionContour","hasLabel","pseudo","getQueryAttrsText","selectionStyle","getShiftedSegmentPosition","renderOptions","_atomPosition","atomPosition","atomSymbolShift","_restruct$atoms$get","isPositionAtom","shouldHydrogenBeOnLeft","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","background","showAtomIds","idPos","draw","indices","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","pathAndRBoxTranslate","aamText","getAamText","customQueryText","checkIsSmartPropertiesExist","getOnlyQueryAttributesCustomQuery","shortenCustomQueryText","customQueryTooltipText","substring","displayStereoLabel","shouldDisplayStereoLabel","stereoLabelStyle","enhancedStereoFlag","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","bisectLargestSector","addTooltip","isHighlighted","highlightColor","highlight","_highlight$atoms","hasCurrentHighlight","getLargestSectorFromNeighbors","angles","largeAngles","largestAngle","neighborAngle","_this$getLargestSecto","bisectAngle","newVectorFromAngle","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","isAttachmentPointAtom","isCarbon","toLowerCase","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","nei1","sameNotStereo","hydrogenLabels","_atom$label","_atom$label2","Terminal","TerminalAndHetero","neighbor","neighborDirection","queryText","getAtomCustomQuery","tooltip","_options$connectedMon","_label$text","getLabelText","isMonomerAttachmentPoint","isMonomerAttachmentPointSelected","currentlySelectedMonomerAttachmentPoint","isMonomerAttachmentPointUsed","connectedMonomerAttachmentPoints","labelInMonomerConnectionsModal","_label$text2","previewOpacity","backgroundSize","hshift","vshift","mapValence","hydrogenLeft","assign","getRingBondCountAttrText","attrText","getRingConnectivity","getDegree","getSubstitutionCountAttrText","getAtomType","smartsSpecificProperties","_atom$queryProperties","includeOnlyQueryAttributes","queryAttrsText","nonQueryAttributes","addSemicolon","patterns","regExpResult","exec","propertyName","_atom$a","ReBond","doubleBondShift","getSelectionPoints","bondThickness","doubleBondWidth","stereoBondWidth","regularSelectionThikness","halfBondStart","halfBondEnd","isStereoBond","addPadding","contourStart","contourEnd","stereoBondStartHeightCoef","bondPadding","addStart","stereoBondEndHeightCoef","addEnd","contourPaddedStart","contourPaddedEnd","padStartPoint","padEndPoint","startTop","startBottom","startPadTop","startPadBottom","endTop","endBottom","endPadTop","endPadBottom","_this$getSelectionPoi","_this$getSelectionPoi2","pathString","bondRecalc","checkStereoBold","setDoubleBondShift","isSnappingBond","bondSkeleton","getReactingCenterPath","getBondMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","_highlight$bonds","highlightPath","getHighlightPath","endAtom","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","_restruct$atoms$get2","halfbonds","neihbid1","neihbid2","_restruct$atoms$get3","_restruct$atoms$get4","shiftA","shiftB","newHalfBonds","xShiftMinus1","xShiftPlus1","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","_struct$loops$get","_struct$loops$get2","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","n1","n2","selectDoubleBondShift","nLeft","nRight","_path","ReEnhancedFlag","hoverPath","_classPrivateFieldGet2","_classPrivateFieldGet3","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","fragGetAtoms","fragGetBonds","firstFrag","secondFrag","calcBBox","_ui_editor","_draw","ReRGroup","labelBox","rGroupBoundingBox","fragBox","rGroupAttachmentPointsVBox","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","logic","rLogicToString","logicPath","logicBox","fnum","drawing","cy","leftBracket","rightBracket","rLogic","ifThen","rangeExists","startsWith","restH","nextRg","ReRxnArrow","calcDistance","distRef","getReferencePointDistance","calculateDistanceToLine","_this$getReferencePoi","getReferencePoints","_this$getReferencePoi2","middlePoint","refPoint","refPoints","rp","current","generatePath","_item$pos","findMiddlePoint","makeAdditionalInfo","scaleFactor","selectionSet","scaledRP","styles","_this$getArrowParams","getArrowParams","x1","x2","y2","per","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","BracketParams","ReSGroup","SGroupdrawBracketsOptions","lowerIndexText","upperIndexText","indexAttribute","drawGroupDat","sgroupTypesWithBrackets","SGroupdrawBrackets","getTextHighlightDimensions","startX","startY","_sGroup$getContracted","reSGroupAtom","sGroupTextBoundingBox","_Scale$modelToCanvas","getContractedSelectionContour","_this$getTextHighligh","sGroupItem","_getHighlighPathInfo","getHighlighPathInfo","b0","_render$ctab","_render$ctab2","arr","rgroupAttachmentPointIds","crossBondsValues","rightBracketIndex","bracketR","renderIndex","isLowerText","lowerPath","getPath","bracketPoint2","indexPos","indexPath","indexBox","showValue","drawAttachedDat","drawAbsoluteDat","_sgroup$pp","sbox","sgroupData","nameI","boxI","sboxI","getBracketParamersWithCrossBondsLessThan2","getBracketParamersWithCrossBondsEquals2","getBracketParamersWithCrossBondsMoreThan2OnOneAtom","notTemplateShapeFirstAtom","bondDirections","needNegated","bondDirection","attachmentDirection","_render$ctab$rgroupAt","lineDirectionVector","_mol$sGroupForest","leftCenter","rightCenter","leftShift","rightShift","bracketShift","bracketShiftNegated","centerConnection","rightDirection","leftDirection","bracketDirectionNegated","_render$ctab3","_boundingBox","vext","contractedFunctionalGroupSize","_sgroup$getContracted","contractedPosition","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","getHoverPathStyle","isOuterShapeOfHoverPath","outerEllipse","stylesApplied","innerEllipse","outerRect","innerRect","poly","atan","enhPath","selectionPointsSet","selectionStyleSimpleObject","togglePoints","displayFlag","_this$selectionPoints","_this$selectionPoints2","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","isValid","SCALE","ReText","_this$getRelBox","getRelBox","leftTopPoint","rightBottomPoint","_this$getRelBox2","topLeft","_p1$sub","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","_this3$getRelBox","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","_range$style$match","nextRange","textRange","Bold","Italic","Subscript","Superscript","ReRGroupAttachmentPoint","reAtom","outlineEndPoint","normalizedLineDirectionVector","CURVE_OUTLINE_HEIGHT","OUTLINE_PADDING","getOutlinePoints","topLeftPadPoint","normalizedCurveDirectionVector","CURVE_OUTLINE_WIDTH","topRightPadPoint","topRightPoint","middleMostLeftPadPoint","middleMostLeftPoint","middleMostRightPadPoint","middleMostRightPoint","middleLeftPoint","LINE_OUTLINE_WIDTH","middleRightPoint","bottomLeftPadPoint","bottomLeftPoint","bottomRightPadPoint","getDistanceTo","destination","getAttachmentPointDirectionVector","showAttachmentPointShape","isAttachmentPointLabelRequired","showAttachmentPointLabel","getHoverPlatePath","outlinePoints","scaledOutlinePoints","_scaledOutlinePoints","hoverPlatePath","hoverPlate","isTrisectionAttachmentPoint","trisectionLargestSector","hasOnlyOneBond","getAttachmentDirectionForOnlyOneBond","BothSides","atomPositionVector","attachmentPointType","_atom$getLargestSecto","firstTrisectorAngle","secondTrisectorAngle","SecondSideOnly","_struct$bonds$get","DEGREE_120_FOR_ONE_BOND","DEGREE_180_FOR_TRIPLE_BOND","onlyNeighbor","neighbour","isTripleBond","finalAngle","getLabelPositionForAttachmentPoint","shapeHeight","normal","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reItem","connectedComponentRemoveAtom","cc","clearConnectedComponents","getConnectedComponent","adjacentComponents","addConnectedComponent","compId","aidSet","ccFragmentType","removeConnectedComponent","ccid","assignConnectedComponents","layers","visible","parentNode","insertBefore","maps","structChanged","markItemRemoved","markBond","markItem","markAtom","mapChanged","clearVisel","eachItem","func","getSelectionBoxCenter","atomPositionPoint","atomBox","selectionExceptAtoms","selectionExceptAtomsBoundingBox","getBoundingBoxForSelection","isSelectionEmpty","getAllElementsAsSelectionMap","elementKey","_selection$elementKey","elementId","scaleVisel","clearVisels","force","initialized","_item","_value","atomsChanged","emptyFrags","atomsChangedArray","verifyLoops","updLoops","updateLoops","showAtoms","showBonds","showRgroupAttachmentPoints","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","loopRemove","bondlist","atomsIds","_this24","allAtomAttachmentPointsVBox","attachmentPointIds","oneAtomAttachmentPointsVBox","previousVBox","attachmentPointId","currentVBox","_allAtomAttachmentPoi","_this25","isInsideContractedSGroup","_this26","_this27","enhancedFlagsChanged","chid","_this28","bondsChanged","setSelection","_this29","_this29$map$values","_this29$map$values2","mapValues","_item$item","_item$selectionPlate","sgId","sGroupAtoms","_item$item2","showItemSelection","toBack","exists","isSelectionSvgObjectExists","_item$additionalInfo","_item$cip","_item$additionalInfo2","_item$cip2","addSnappingBonds","snappingBonds","clearSnappingBonds","anySelection","scaleRPath","_item$selectionPlate2","_item$selectionPlate3","_item$selectionPlate4","_item$selectionPlate$","FRAC","setFracAngle","calcAngle","pos0","fracAngle","angle2","calcNewAtomPos","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","defaultOptions","scaleFactorMicro","scaleFactorMacro","rotationStep","utils","labelFontSize","disableQueryElements","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","movingStyle","cursor","viewBox","pointInCanvas","pageToView","renderClientArea","_renderClientArea$get","offsetTop","offsetLeft","clientX","clientY","pageToCanvas","pointInViewBox","clientArea","pageToModel","CoordinateTransformation","_calculateOffset","WeakSet","ScrollOffset","_classPrivateMethodInitSpec","getAbsViewBox","viewBoxMinXY","viewBoxMaxXY","getAbsBoundingBox","protoBoundingBox","boundingBoxMinXY","boundingBoxMaxXY","_classPrivateMethodGet","_calculateOffset2","hasVerticalOffset","up","down","hasHorizontalOffset","absBoundingBox","absViewBox","Scrollbar","redraw","updateAttr","_this$bar","getDynamicAttr","_this$bar2","_this$bar3","undrag","_this$getDynamicAttr","onDragMove","onDragStart","onDragEnd","_y","viewBoxBeforeDrag","stopPropagation","SCALE_FACTOR","getUserFriendlyScrollOffset","getUserFriendlyViewBoxDelta","getZoomedValue","_scrollOffset","VerticalScrollbar","_Scrollbar","scrollOffset","DIST_TO_EDGE","_dx","setViewBox","HorizontalScrollbar","_dy","_verticalBar","_horizontalBar","ScrollbarContainer","Render","reuseRestructIfExist","_global$ketcher","clientWidth","clientHeight","resizeViewBox","userOpts","getCanvasSizeVector","_global$ketcher2","scrollbar","updateOptions","opts","passedOptions","polygon","point0","page2obj","zoomedWidth","zoomedHeight","zoomOnMouse","zoomOnCanvasCenter","viewBoxX","viewBoxY","newWidth","newHeight","fixedPoint","widthRatio","heightRatio","arg","newViewBox","setMolecule","forceUpdateWithTimeout","viewSz","changes","downScale","isAutoScale","oldCb","sz1","marg","mv","csz","rescaleAmount","isForceDownscale","isBondsLengthFit","sz2","renderCache","previousOptions","MIN_ATTACHMENT_POINT_SIZE","attachmentPointRegExp","RenderStruct","prepareStruct","newStruct","convertAllSGroupAttachmentPointsToRGroupAttachmentPoints","removeSmallAttachmentPointLabelsInModal","isSmall","_options$cachePrefix","cachePrefix","_options$needCache","needCache","cacheKey","innerHTML","preparedStruct","rnd","attachmentPointAtom","chainsCollection","removeEmptyNodes","showNodes","emptySequenceItemRenderers","emptySequenceItemRenderer","_firstNode$monomer$re","currentChainStartPosition","currentMonomerIndexInChain","currentMonomerIndexOverall","chains","chain","emptySequenceNode","emptySubChain","_node$monomer","curr","caretPosition","getNextChainPosition","lastChainStartPosition","lastChain","handledMonomersToAttachmentPoints","handledAttachmentPoints","anotherMonomer","bondRenderer","connectedSugar","anotherMonomerHandledAttachmentPoints","_chain$firstMonomer","_subChainNode$rendere","_subChainNode$rendere2","oldSubChainNode","currentEdittingNode","_oldSubChainNode$rend","_oldSubChainNode$rend2","subChainNode","forEachCallback","nodeIndexOverall","chainIndex","subChainIndex","nodeIndex","setCaretPositionBySequenceItemRenderer","sequenceItemRenderer","newCaretPosition","setCaretPositionByMonomer","getMonomersByCaretPositionRange","startCaretPosition","endCaretPosition","moveCaretForward","nextCaretPosition","moveCaretBack","previousCaretPosition","newChainCaretPosition","moveCaretToNewChain","currentChainIndex","lastNodeCaretPosition","getChainByPointer","isEmpty","lastNodeIndex","getNodeByPointer","sequencePointer","nodeToReturn","chainToReturn","getLastNonEmptyNode","subChainBeforeLast","getLastNode","getPreviousNodeInSameChain","nodeOnNextPosition","nodeOnPreviousPosition","nodeToCompare","previousNode","previousNodeChainIndex","getNextNodeInSameChain","getPreviousNode","getNextNode","shiftArrowSelectionInEditMode","selectDrawingEntities","selectedNode","drawingEntities","getAllSelectedEntities","addDrawingEntitiesToSelection","arrowKey","code","previousNodeInSameChain","previousChain","previousChainLastEmptyNode","unselectEmptySequenceNodes","unselectDrawingEntity","selections","lastSelectionRangeIndex","_previousNode","naturalAnalogues","uniq","Direction","_isEditMode","_chainsCollection$fir","needScroll","clearCanvas","reArrangeChains","applyMonomersSequenceLayout","firstMonomerPosition","turnOnEditMode","turnOffEditMode","_onKeyDown","Promise","resolve","_this2$keyboardEventH","keyboardEventHandlers","hasNewChain","click","_event$target","eventData","__data__","isClickedOnEmptyPlace","isClickedOnSequenceItem","unselectAllEntities","mousedown","_event$target2","isEventOnSequenceItem","selectionStarted","selectionStartCaretPosition","mousemove","_event$target3","moveCaretOperation","mouseup","bondNodesThroughNewPhosphate","nextNode","addMonomer","additionalPhosphate","createPolymerBond","lastMonomerInNode","firstMonomerInNode","handlePeptideNodeAddition","enteredSymbol","currentNode","newNodePosition","newPeptideLibraryItem","peptideAddCommand","newPeptide","r2Bond","handleRnaDnaNodeAddition","addedNodeModelChanges","nodeToAdd","finishNodesDeletion","history","EditorHistory","handleNodesDeletion","selectionRange","selectionStartNode","selectionEndNode","isPhosphateAdditionalyDeleted","nodeBeforeSelection","nodeAfterSelection","nodeInSameChainBeforeSelection","moveMonomer","deleteMonomer","getNewSequenceItemPosition","deleteNode","nodeToDelete","Left","nodesToDelete","deleteSelectedDrawingEntities","Right","backspace","naturalAnalogue","deletionModelChanges","previousFromCurrentEdittingMonomer","nodeBeforePreviousNode","selectedEntities","entity","deleteDrawingEntity","offsetFromPrevious","unselectAllDrawingEntities","SnakeMode","LINE_FROM_MONOMER_LENGTH","VERTICAL_LINE_LENGTH","RNA_CHAIN_VERTICAL_LINE_LENGTH","CORNER_LENGTH","DOUBLE_CORNER_LENGTH","LINE_DIRECTION","PolymerBondRenderer","isSnakeBondAvailableForMonomer","_this$polymerBond$sec","firstMonomerPotentialAttachmentPoint","isAttachmentPointsEnabledForSnakeBond","attachmentPointsForSnakeBond","isSameAttachmentPoints","startPositionInPixels","endPositionInPixels","previousStateOfIsMonomersOnSameHorisontalLine","appendBond","appendSnakeBond","appendBondGraph","updateSnakeBondPath","finished","getMonomerWidth","_this$polymerBond$fir","_this$polymerBond$fir2","getMonomerHeight","_this$polymerBond$fir3","_this$polymerBond$fir4","reCheckAttachmentpoint","isR1TheCurrentAttachmentpointOfFirstMonomer","isBondConnectedWithNucleotide","isMonomerInRnaChainRow","verticalLineLength","isSecondMonomerBottomRight","addLine","Horizontal","addLineFromLeftToBottom","Vertical","addLineFromTopToRight","isSecondMonomerTopRight","addLineFromLeftToTop","addLineFromBottomToRight","isSecondMonomerBottomLeft","addLineFromTopToLeft","addLineFromRightToBottom","isSecondMonomerTopLeft","addLineFromRightToUp","isSecondMonomerLeft","addRandomLine","isHorisontal","moveSnakeBondEnd","moveGraphBondEnd","_this$selectionElemen3","_this$selectionElemen4","moveSnakeBondStart","moveGraphBondStart","_this$selectionElemen5","_this$selectionElemen6","payload","firstSelectedAttachmentPoint","secondSelectedAttachmentPoint","isBondConnectionModalOpen","selectedRenderer","startAttachmentPoint","startBondAttachmentPoint","_this$editor$drawingE","startPolymerBondCreation","lastCursorPositionOfCanvas","hidePolymerBondInformation","markForRecalculateBegin","_this$bondRenderer","_this$bondRenderer2","_this$bondRenderer3","shouldCalculateBonds","shouldInvokeModal","intendToFinishBondCreation","intendToStartBondCreation","_this$bondRenderer4","_this$bondRenderer5","_this$bondRenderer6","intendToFinishAttachmenPointBondCreation","intendToStartAttachmenPointBondCreation","_this$bondRenderer7","_this$bondRenderer8","cancelIntentionToFinishBondCreation","_this$bondRenderer9","_this$bondRenderer10","_this$bondRenderer11","isFirstMonomerHovered","_this$bondRenderer12","alreadyHasBond","showModal","finishBondCreation","hasFreeAttachmentPoint","_this$bondRenderer13","_this$bondRenderer14","checkForPotentialBonds","rnaMonomerClasses","firstMonomerIsRNA","RNAClass","secondMonomerIsRNA","hasPlentyAttachmentPoints","listOfAttachmentPoints","hasPlentyFreeAttachmentPoints","BothR1AttachmentPointUsed","BothR2AttachmentPointUsed","R1AndR2AttachmentPointUsed","MONOMER_CONST","AMINO_ACID","MODDNA","SUGAR","BASE","monomerFactory","Monomer","MonomerRenderer","ketMonomerClass","MonomerClass","MonomerTool","monomerPreviewRenderer","_this$monomerPreview","_this$monomerPreviewR","lastCursorPosition","MONOMER_PREVIEW_OFFSET_X","MONOMER_PREVIEW_OFFSET_Y","monomerPreview","mouseLeaveClientArea","hidePreview","mouseover","_this$monomerPreviewR2","_monomerFactory","_monomerFactory2","MONOMER_PREVIEW_SCALE_FACTOR","_this$monomerPreviewR3","RNA_MONOMER_DISTANCE","RnaPresetTool","preset","_this$sugarPreviewRen","sugarPreviewRenderer","phosphatePreviewRenderer","rnaBasePreviewRenderer","_this$sugarPreview","_this$rnaBasePreview","_this$phosphatePrevie","_this$rnaBasePreviewR","_this$phosphatePrevie2","_this$sugarPreviewRen2","sugarPreview","rnaBasePreview","RNA_BASE_PREVIEW_OFFSET_X","RNA_BASE_PREVIEW_OFFSET_Y","phosphatePreview","PHOSPHATE_PREVIEW_OFFSET_X","_this$sugarPreviewRen3","_this$phosphatePrevie3","_this$rnaBasePreviewR2","_this$sugarPreviewRen4","_this$rnaBasePreviewR3","_monomerFactory3","_monomerFactory4","_this$phosphatePrevie4","_monomerFactory5","_monomerFactory6","EraserTool","deleteSelectedEntities","selectedItemRenderer","intendToSelectDrawingEntity","cancelIntentionToSelectDrawingEntity","SelectRectangle","createBrush","brushArea","brush","d3Brush","brushed","mo","setSelectedEntities","_this$brush","onBrush","brushEvent","previousSelectedEntities","sourceEvent","handleResizeCanvas","extent","keyModifiers","canvasElement","canvasResizeObserver","mousePositionAfterMove","mousePositionBeforeMove","ModKey","moveStarted","currentSubChain","moveSelectedDrawingEntities","_renderer$drawingEnti","allEntities","_this$canvasResizeObs","disconnect","selectedTool","ClearTool","deleteAllEntities","toolsMap","RenderersManager","hoverDrawingEntity","selectDrawingEntity","moveDrawingEntity","markForReEnumeration","needRecalculateMonomersEnumeration","needRecalculateMonomersBeginning","monomerRenderer","_monomer$renderer2","redrawDrawingEntity","_drawingEntity$baseRe","_drawingEntity$baseRe2","deleteAllDrawingEntities","polymerBonds","polymerBondRenderer","_monomer$renderer3","_polymerBondRenderer$","_polymerBond$renderer","_polymerBond$renderer2","_polymerBond$renderer3","_polymerBond$firstMon","_polymerBond$renderer4","_polymerBond$firstMon2","_polymerBond$firstMon3","_polymerBond$secondMo","_polymerBond$secondMo2","_polymerBond$renderer5","_polymerBond$firstMon4","_polymerBond$firstMon5","_polymerBond$secondMo3","_polymerBond$secondMo4","recalculateEnumeration","recalculateBeginning","recalculatePeptideChainEnumeration","peptideRenderer","_currentEnumeration","currentEnumeration","stack","stackItem","isR2R1Connection","recalculateRnaChainEnumeration","rnaComponentRenderer","rnaBaseMonomer","_rnaBaseMonomer$rende","_rnaBaseMonomer$rende2","recalculatePeptideEnumeration","recalculateRnaEnumeration","recalculateMonomersEnumeration","isOnlyPartOfRnaChain","nextMonomerAfterPhospate","recalculateMonomersBeginning","CHAIN_BEGINNING","_rnaBaseMonomer$rende3","_polymerBond$firstMon6","_polymerBond$firstMon7","_polymerBond$firstMon8","_polymerBond$secondMo5","_polymerBond$secondMo6","_polymerBond$secondMo7","_polymerBond$renderer6","_polymerBond$firstMon9","_polymerBond$firstMon10","_polymerBond$firstMon11","_secondMonomer$render","_secondMonomer$render2","_secondMonomer$render3","hoverMonomer","needRedrawAttachmentPoints","_monomer$renderer4","hoverAttachmentPoint","_monomer$renderer5","_monomer$renderer6","MonomerAddOperation","addMonomerChangeModel","deleteMonomerChangeModel","MonomerMoveOperation","monomerMoveModelChange","invertMonomerMoveModelChange","MonomerHoverOperation","peptide","AttachmentPointHoverOperation","MonomerDeleteOperation","DrawingEntityHoverOperation","DrawingEntitySelectOperation","DrawingEntityMoveOperation","moveDrawingEntityChangeModel","invertMoveDrawingEntityChangeModel","redoDrawingEntityChangeModel","wasInverted","DrawingEntityRedrawOperation","drawingEntityRedrawModelChange","invertDrawingEntityRedrawModelChange","ChemicalMimeType","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","molAuto","Mol","molV3000","rxn","Rxn","rxnV3000","smiles","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","inChIKey","InChIKey","cml","CML","ket","KET","cdxml","CDXML","cdx","CDX","binaryCdx","sdf","SDF","sdfV3000","fasta","FASTA","sequence","SEQUENCE","unknown","UNKNOWN","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","getFormatMimeTypeByFileName","fileName","fileExtension","SupportedFormat","customizer","clonedValue","cloneDeep","getNodeWithInvertedYCoord","cloneDeepWith","setMonomerTemplatePrefix","templateName","setMonomerPrefix","monomerId","getKetRef","entityId","$ref","rotateCoordAxisBy180Degrees","axis","rotatedPosition","switchIntoChemistryCoordSystem","populateStructWithSelection","populatedStruct","_populatedStruct$enti","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","headerToKet","header","fromRlabel","val","moleculeToKet","body","rglabelToKet","atomToKet","bondToKet","sgroupToKet","source","_monomer$monomerItem$","MonomerCaps","stereoCare","weight","refsToRGroups","rgnumber","sgroupAttachmentPointToKet","mergeFragmentsToStruct","ketItem","atomsOffset","fragments","_fragment$atoms","_fragment$bonds","_fragment$atoms2","atomToStruct","bondToStruct","toRlabel","moleculeToStruct","rglabelToStruct","addRGroupAttachmentPointsToStruct","sgroupToStruct","queryAttribute","elements","_Elements$get","mapping","attributeName","newAtom","_source$$refs$map","_source$$refs","$refs","atomOffset","_source$attachmentPoi","sourceAttachmentPoint","sgroupAttachmentPointToStruct","placement","display","fieldData","leavingAtomId","leavingAtom","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","filteredFragmentIds","addMolecules","ketNode","filteredSGroups","filteredSGroupsMap","fragmentIds","sGroupFragmentsMap","generateSGroupFragmentsMap","mergedFragments","atomsInFragment","hasAtomInSGroup","sGroupId","fragmentSet","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","textToKet","textNode","textToStruct","monomerToDrawingEntity","template","colorScheme","favorite","fullName","naturalAnalogShort","MonomerFullName","classHELM","seqId","seqid","polymerBondToDrawingEntity","connection","monomerIdsMap","endpoint1","endpoint2","uri","ValidatorResult","SchemaError","require$$0","attribute","require$$1","require$$2","validate","validator","Validator","schema","valid","MacromoleculesConverter","convertMonomerToMonomerMicromolecule","addMonomerAtomToStruct","atomClone","convertAttachmentPointNameToNumber","findAttachmentPointAtom","convertDrawingEntitiesToStruct","reStruct","monomerToSgroup","monomerToFragmentId","micromoleculesHiddenEntities","clearMicromoleculesHiddenEntities","atomIdsMap","oldAtom","oldAtomId","_this$addMonomerAtomT","bondClone","conversionErrorMessage","convertMonomerMicromoleculeToMonomer","sgroupToMonomer","monomerAdditionCommand","convertFragmentToChem","fragmentNumber","fragmentStruct","fragmentBbox","getAttachmentPointLabel","atomRglabel","isInteger","getFragmentsGroupedBySgroup","groupedFragments","_fragment","isAlreadyGrouped","fragmentsGroup","fragmentSgroups","lastFragmentGroupIndex","atomFragmentId","convertStructToDrawingEntities","fragmentIdToMonomer","monomerAddCommand","beginAtomSgroup","endAtomSgroup","beginAtomAttachmentPointNumber","endAtomAttachmentPointNumber","setMicromoleculesHiddenEntities","parseNode","currentStruct","KetSerializer","deserializeMicromolecules","fillStruct","resultingStruct","root","serializeMicromolecules","moleculeId","validateMonomerNodeTemplate","parsedFileContent","templateId","validateConnectionTypeAndEndpoints","connectionType","parseAndValidateMacromolecules","fileContent","_parsedFileContent$ro","nodeDefinition","connections","deserializeToStruct","deserializedContent","deserializeToDrawingEntities","filterMacromoleculesContent","_parsedFileContent$ro2","fileContentForMicromolecules","templates","_parsedFileContent$ro3","_this$parseAndValidat","hasValidationErrors","DrawingEntitiesManager","_template$attachmentP","mol0","_attachmentPoint$leav","firstAtomInLeavingGroup","leavingGroupAtom","deserializedMicromolecules","bondAdditionCommand","deserialize","serializeMacromolecules","monomerName","monomerClass","templateNameWithPrefix","serializedMacromolecules","micromoleculesStruct","serialize","_this$serializeMacrom","serializedMicromoleculesStruct","paddedNum","precision","numStr","padStart","parseDecimalInt","str","partitionLine","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","fragmentType","shiftMol","xorig","over","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowStart","arrowEnd","rgMerge","scaffold","readKeyValuePairs","valueString","partition","count","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","_atomMap","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","endsWith","applyDataSGroupDataLine","strArray","parseSGroupSAPLineV2000","ctabString","_utils$partitionLine","_utils$partitionLine2","sss","nn6","chunksNumberInLine","attachmentPointsStr","CHUNK_SIZE","stringForParse","CHUNK_PARTS_LENGTHS","_utils$partitionLine3","_utils$partitionLine4","iii","ooo","leaveAtomParsedId","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","charAt","propValue","propertyData","rglabels","a2rs","a2ri","a2r","hhh","pool","parsePropertyLineAtomList","expandedSGroups","eg","_sGroup$parseSGroupSA","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","_matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","attpnt","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","molLinesAgents","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","prepareQueryComponentForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","parseCTFile","molfileLines","prepareSGroups","skipErrors","preserveIndigoDesc","_this$molecule","toRemove","errorIgnore","getCTab","writeCTab2000","saveMolecule","skipSGroupErrors","all","saver","submol","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","writePadded","writePaddedFloat","writeCTab2000Header","isAbsFlag","atomsProps","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","sgmap","sgmapback","sgorder","sGroupIdInCTab","writeSGroupAttachmentPointLine","expandedGroups","expandedGroupsLine","atomLabel","_this$mapping$attachm","MolSerializer","DefaultOptions","parseCTFileParams","reactionRelayout","badHeaderRecover","e1","e2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","each","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neighbours","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","writtenAtoms","writtenComponents","_Atom","lowercase","branch_cnt","paren_written","h_count","isBondInRing","inLoop","allowedLowercase","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializerOptions","molSerializer","chunk","propChunks","pc","valueArr","isFinite","sdfItems","KetFormatter","serializer","_ketSerializer","_getStructureFromStructAsync","getStructureFromStructAsync","_x3","_getStructureFromStringAsync","_callee2","_callee2$","_context2","getStructureFromStringAsync","_x4","parseMacromoleculeString","_smiSerializer","_structService","_format","_options","SmilesFormatter","smiSerializer","structService","ketSerializer","stringifiedMolfile","stringifiedStruct","serverFormatter","ServerFormatter","isContainsCoordinates","convertResult","convert","output_format","getCallingMethod","method","layout","withCoords","_this$getCallingMetho","parsedStruct","formatError","MolfileV2000Formatter","_molSerializer","FormatterFactory","separateOptions","structServiceOptions","_objectWithoutProperties","_excluded","molfileParseOptions","queryPropertiesAreUsed","_this$separateOptions","_this$separateOptions2","formatter","identifyStructFormat","sanitizedString","isRXN","isSDF","isV2000","isV3000","clearStr","isBase64String","cdxHeader","KetcherProvider","setKetcherInstance","ketcherInstance","getKetcher","ketcherProvider","getStructure","structureFormat","formatterFactory","prepareStructToRender","_prepareStructToRender","structStr","parseStruct","factory","service","deleteAllEntitiesOnCanvas","parseAndAddMacromoleculesOnCanvas","_x5","_parseAndAddMacromoleculesOnCanvas","ketStruct","deserialisedKet","getCurrentCenterPointOfCanvas","originalCenterPointOfCanvas","ChainsCollection","rearrange","chain1","chain2","_chain2$firstNode","_chain2$firstNode2","_chain1$firstNode","_chain1$firstNode2","_this$chains$","fromMonomers","_this$getFirstMonomer","getFirstMonomersInChains","_this$getFirstMonomer2","firstMonomersInRegularChains","firstMonomersInCycledChains","IsChainCycled","CYCLED","monomersList","firstMonomersInChains","getFirstMonomersInRegularChains","getFirstMonomersInCycledChains","_R1ConnectedMonomer$a","R1PolymerBond","isFirstMonomerWithR2R1connection","R1ConnectedMonomer","isRnaBaseConnectedToSugar","isSugarConnectedToR2RnaBase","handledMonomers","cyclicChains","monomersInSameChain","firstMonomersOfCycledChainsSet","cyclicChain","getMonomerWithLowerCoordsFromMonomerList","monomerList","monomerListShallowCopy","monomer1","monomer2","monomerWithLowerCoords","HORIZONTAL_DISTANCE_FROM_MONOMER","VERTICAL_DISTANCE_FROM_MONOMER","DISTANCE_FROM_RIGHT","DISTANCE_BETWEEN_MONOMERS","MONOMER_START_X_POSITION","MONOMER_START_Y_POSITION","mergedCommand","_monomer","needToDeleteConnectedEntities","createDrawingEntitySelectionCommand","selectionCommand","moveDrawingEntityModelChange","partOfMovementOffset","fullMovementOffset","createDrawingEntityMovingCommand","_drawingEntity$second","movingCommand","createDrawingEntityRedrawCommand","redrawCommand","needToDeleteConnectedBonds","isValueChanged","startPolymerBondCreationChangeModel","_polymerBond","firstMonomerValidSourcePoint","secondMonomerValidTargetPoint","connectFirstMonomerOperation","connectSecondMonomerOperation","monomersToAdd","monomerPosition","monomerAddOperation","attPointStart","attPointEnd","findChainByMonomer","monomerChain","monomersInChainSet","rearrangeChainModelChange","newPosition","getNucleotideSize","nucleotide","_nucleotide$sugar$ren","_nucleotide$phosphate","_nucleotide$sugar$ren2","_nucleotide$rnaBase$r","reArrangeChain","lastPosition","canvasWidth","rearrangedMonomersSet","monomersWithSideChain","maxVerticalDistance","_monomer$renderer$mon","_monomer$renderer$mon2","heightMonomerWithBond","oldMonomerPosition","nextPositionAndVerticalDistance","getNextMonomerPositionForSnakeLayout","reArrangeRnaChain","_nucleotide$sugar$ren3","_nucleotide$sugar$ren4","_nucleotide$rnaBase$r2","_nucleotide$rnaBase$r3","_nucleotide$rnaBase","_nucleotide$rnaBase2","nucleotideSize","heightWithBond","oldSugarPosition","addRnaOperations","_nucleotide$sugar$ren5","_nucleotide$sugar$ren6","_nucleotide$phosphate2","_nucleotide$phosphate3","_nucleotide$phosphate4","_nucleotide$phosphate5","lastMonomerInNucleotide","baseMonomer","nextMonomerPositionAndVerticalDistance","setRnaBaseSideChainMonomers","nextPositionAndDistance","getNextPositionAndDistance","isSnakeMode","needRedrawBonds","firstMonomers","reArrangeMonomers","redrawBonds","redrawBondsModelChange","currentMonomers","isBackBoneChainConnection","isSingleMonomerOrNucleoside","_ChainsCollection$get","_ChainsCollection$get2","cycledChains","reArrangeChainInRecursive","_lastPosition","_maxVerticalDistance","lastRearrangeResult","rearrangeMethod","entityToRearrange","nucleotideOrNucleoside","getNucleotideOrNucleoSideFromFirstMonomer","rearrangeResult","isMonomerFitCanvas","getFirstPosition","isPartOfR2R1Chain","_R1Bond$getAnotherMon","_R2Bond$getAnotherMon","R1Bond","R2Bond","getFirstMonomerInR2R1Chain","_R1Bond$getAnotherMon2","monomerWithSideChain","currentMonomerChain","firstMonomerInR2R1Chain","_monomerWithSideChain","_monomerWithSideChain2","targetDrawingEntitiesManager","monomerToNewMonomer","polymerBondCreateCommand","centerMacroStructure","centerPointOfModel","structCenter","getMacroStructureCenter","_Vec2$add","_Vec2$add2","endY","xmin","ymin","xmax","ymax","needToSelectConnectedBonds","nucleoside","validateIfApplicableForFasta","monomerTypes","monomerType","isNucleotide","HISTORY_SIZE","historyPointer","megreWithLatestHistoryCommand","latestCommand","historyStack","_this$editor","_this$editor2","lastCommand","turnOffSelectionCommand","isMouseMainButtonPressed","button","subscribeEvents","domEventSetup","setupContextMenuEvents","setupKeyboardEvents","zoomTool","micromoleculesEditor","switchToMacromolecules","setMonomersLibrary","_monomersLibrary","groupBy","handleHotKeyEvents","_keySettings$shortcut","keySettings","isInput","nodeName","setupHotKeysEvents","addEventListener","hotKeyEventHandler","onSelectMonomer","onSelectRNAPreset","onSelectTool","onCreateBond","onCancelBondCreation","onSelectMode","eventName","useToolIfNeeded","onEditSequence","onStartNewSequence","onChangeSequenceTypeEnterMode","handleBondCreation","handleBondCreationCancellation","mergeWithLatestHistoryCommand","ToolConstructor","oldTool","unsubscribeEvents","handlers","removeEventListener","trackedDomEvents","toolEventHandler","DOMSubscription","subs","updateLastCursorPosition","useModeIfNeeded","isToolUsed","clientAreaBoundingBox","pageX","pageY","eventHandlerName","_editorTool$isSelecti","editorTool","conditions","isSelectionRunning","condition","_editorTool$eventHand","_this$mode","_this$mode$eventHandl","switchToMicromolecules","_MacromoleculesConver","setMacromoleculeConvertionError","_this$micromoleculesE","_MacromoleculesConver2","BaseOperation","priority","perform","_inverted","isDummy","invalidateAtom","invalidateLoop","invalidateBond","invalidateItem","invalidateEnhancedFlag","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATTACHMENT_POINT_ADD","S_GROUP_ATTACHMENT_POINT_REMOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","R_GROUP_ATTACHMENT_POINT_ADD","R_GROUP_ATTACHMENT_POINT_REMOVE","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_ROTATE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_SET_PROPERTIES","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","POLYMER_BOND_ADD","POLYMER_BOND_DELETE","POLYMER_BOND_MOVE","POLYMER_BOND_FINISH_CREATION","POLYMER_BOND_CANCEL_CREATION","PEPTIDE_ADD","PEPTIDE_REMOVE","PEPTIDE_MOVE","PEPTIDE_HOVER","DRAWING_ENTITY_SELECT","DRAWING_ENTITY_HOVER","SHOW_POLYMER_BOND_INFORMATION","OperationPriority","AtomAttr","_BaseOperation","data2","_this$data","inverted","_this$data2","_this$data3","_this$data4","AtomMove","noinvalidate","reatom","AtomAdd","AtomDelete","_BaseOperation2","restructedAtom","BondAttr","needInvalidateBond","BondMove","BondAdd","needInvalidateAtoms","structBond","BondDelete","rebond","CanvasLoad","oldStruct","AlignDescriptors","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","FragmentSetProperties","_BaseOperation3","enhancedFalg","FragmentAddStereoAtom","FragmentDeleteStereoAtom","FragmentStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","removeOld","setNew","RGroupAttachmentPointAdd","newAttachmentPoint","revertedId","RGroupAttachmentPointRemove","INITIAL_DATA","RxnArrowMove","_Base","Base","RxnArrowRotate","_reStruct$rxnArrows$g","arrowId","drawingCenter","ARROW_MAX_SNAPPING_ANGLE","RxnArrowResize","anchor","isSnappingEnabled","_middlePoint","_middlePoint2","previousPos0","previousPos1","_reItem$getReferenceP","_reItem$getReferenceP2","currentArrowVector","snappedArrowVector","getSnappedArrowVector","snappedCurrent","_reItem$getArrowParam","cosAngle","sinAngle","diffX","diffY","_reItem$getReferenceP3","_reItem$getReferenceP4","newMiddlePoint","AXIS","POSITIVE_X","POSITIVE_Y","NEGATIVE_X","NEGATIVE_Y","isSnappingToPositiveXAxis","isSnappingToPositiveYAxis","isSnappingToNegativeXAxis","isSnappingToNegativeYAxis","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","RxnPlusDelete","RxnArrowAdd","itemId","RxnArrowDelete","_Base2","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","SimpleObjectDelete","SimpleObjectMove","_Base3","handleRectangleChangeWithAnchor","SimpleObjectResize","_Base4","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","SGroupAttr","SGroupDataMove","_sgroups$get$pp","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","existingSGroup","SGroupDelete","_sgroup$item","_sgroup$item2","_sgroup$item3","_sgroup$item4","relatedFGroupId","fgid","TextCreate","TextDelete","TextUpdate","previousContent","TextMove","renderItem","Action","addOp","mergeWith","sortedOperations","invertedOperation","fromAromaticTemplateOnBond","_events","simpleFusing","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","rxnArrow","_sg$getContractedPosi","pg","findClosestItem","mp","other","findCloseMerge","srcId","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","connectedBonds","connectedWithStereoBond","structSelection","formatSelection","atomForNewBond","_atomNeighbours$","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSGroupsBySelection","selectedAtoms","_sgid","isAttachmentBond","isBondStartsInSelectionAndEndsOutside","isBondEndsInSelectionAndStartsOutside","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","SGroupAttachmentPointAdd","apAtom","SGroupAttachmentPointRemove","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","expandSGroupWithMultipleAttachmentPoint","sGroupAttributeAction","fromSgroupDeletion","sG","asteriskAction","plainCarbon","fromSgroupAction","newSg","sourceAtoms","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","fromGroupAction","fromMultiFragmentAction","fromAtomAction","fromQueryComponentSGroupAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","beginAtomPos","endAtomPos","_struct$frags$get","mouseDownNothingAndUpNothing","beginAtomAttr","endAtomAttr","newFragmentId","newBeginAtomId","newEndAtomId","mouseDownNothingAndUpAtom","endAtomId","mergeSgroups","mouseDownAtomAndUpNothing","beginAtomId","startsOnAtom","endsOnAtom","_mouseDownNothingAndU","_mouseDownNothingAndU2","_mouseDownNothingAndU3","_mouseDownNothingAndU4","_mouseDownAtomAndUpNo","_mouseDownAtomAndUpNo2","newBondId","fromBondStereoUpdate","mergedFragmentId","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","withReverse","beginFrId","endFrId","fragmentStereoBonds","_struct$atoms$get3","_struct$atoms$get4","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","_struct$atoms$get5","fromStereoAtomAttrs","correctAtomIds","_struct$atoms$get6","_stereoAtomsMap$get","getStereoParity","newAtomParity","plainBondTypes","bondChangingAction","itemID","bondProps","newItemId","fromAtomAddition","_atomNeighbors$","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","_dstAtomNeighbors$","_atomNeighbors$2","fragAction","mergeBondId","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","checkAtomValence","fromNewCanvas","fromDescriptorsAlign","fromChain","chainItems","fromItemsFuse","usedAtoms","connectedAtomIds","getAllConnectedAtomsIds","mergeMapOfItemsToSet","valenceCheck","getItemsToFuse","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","atomToFunctionalGroup","now","itemsSet","closestMap","bondsIds","initialAtoms","connectedAtoms","_bond$b","initialAtom","relevantConnectedComponent","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromRGroupAttachmentPointUpdate","fromRGroupAttachmentPointsDeletionByAtom","fromRGroupAttachmentPointAddition","attachmentPointsToDelete","rgroupAttachmentPointId","fromRGroupAttachmentPointDeletion","_getNewAtomAttachment","getNewAtomAttachmentPoints","newAttachmentPoints","actionToUpdateAtomsAttrs","actionToDeletePoint","rgroupAttachmentPointToDelete","pointToDelete","currentAttachmentPoints","None","pointToDeleteType","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","rawSelection","frids","sgroupAtoms","actionRemoveBonds","removedRGroupAttachmentPoints","frid3","actionToDeleteRGroupAttachmentPoints","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","isOnlyOneSGroup","onlyOneStructsSgroupId","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","flipDirection","structToFlip","fromStructureFlip","fromRxnArrowFlip","fromRxnPlusFlip","fromTextFlip","rxnArrowIds","_rxnArrow$pos","oyAngle","rotateAngle","flipPointByCenter","rxnPlusIds","plusId","rxnPlus","textIds","textId","textMiddleLeft","textMiddleRight","textCenter","flipBonds","bondIds","pointToFlip","fromRotate","rotateDelta","did","flagId","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","benzeneMoleculeName","cyclopentadieneMoleculeName","benzeneDoubleBondIndexes","fromTemplateOnCanvas","_fromPaste","_fromPaste2","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","isTmplSingleGroup","extraRes","angle0","fromTemplateOnBondAction","fromTemplateOnBond","getConnectingBond","isBenzeneTemplate","isCyclopentadieneTemplate","_Bond$getBondNeighbou","isOnlyTwoConnectingBonds","beginBond","endBond","tmplBond","tmplBegin","atomsMap","bondAtoms","_utils$mergeBondsPara","mergeA","fusingBondType","isFusingBenzeneBySpecialRules","tBond","tBondIndex","existId","previewBondId","newBondType","_Bond$getBondNeighbou2","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","HighlightUpdate","newData","oldData","_this$newData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","_this$oldData","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","vectorUtils","IndigoShowHydrogenLabelsMode","getLabelRenderModeForIndigo","renderModeMapping","HETERO","TERMINAL_HETERO","ALL","OFF","pollDeferred","process","complete","timeGap","startTimeGap","reject","iterate","then","parametrizeUrl","url","request","headers","responseHandler","requestUrl","response","fetch","Accept","credentials","json","ok","indigoCall","baseUrl","customHeaders","RemoteStructService","apiPath","getInChIKey","_info","indigoVersion","imagoVersions","isAvailable","indigo_version","imago_versions","clean","aromatize","dearomatize","calculateCip","automap","check","calculate","recognize","parVersion","req","status","upload_id","metadata","mol_str","generateImageAsBase64","outputFormat","resp","toggleExplicitHydrogens","RemoteStructServiceProvider","currentApiPath","URLSearchParams","createStructService","defaultTypes","defaultCalcProps","convertStructToString","Indigo","types","image","backgroundColor","allowedApiSettings","_formatterFactory","_editor","_indigo","_eventBus","Ketcher","EventEmitter","apiSetting","clientSetting","setSettings","hasOwn","setOptions","getSmiles","isExtended","isPolymerEditorTurnedOn","_getMolfile","molfileFormat","_CoreEditor$provideEd","formatPassed","containsReaction","getMolfile","_getRxn","rxnfile","_args2","getRxn","getKet","_CoreEditor$provideEd2","getFasta","_CoreEditor$provideEd3","getSequence","_CoreEditor$provideEd4","getSmarts","getCml","getSdf","getCDXml","getCDX","getInchi","withAuxInfo","_getInChIKey","_callee3","_callee3$","_context3","isQueryStructureSelected","structure","hasQueryAtoms","sGroupIds","isQueryComponentSGroup","hasQueryBonds","_setMolecule","_callee5","_callee5$","_context5","_callee4","_callee4$","_context4","zoomAccordingContent","centerStruct","eventBus","_addFragment","_callee7","_callee7$","_context7","_callee6","_callee6$","_context6","structToAddFragment","addFragment","_layout","_callee9","_callee9$","_context9","_callee8","_callee8$","_context8","_generateImage","_callee10","base64","_args10","_callee10$","_context10","generateImage","DefaultStructServiceOptions","_structServiceProvider","KetcherBuilder","withStructServiceProvider","structServiceProvider","serviceOptions","mergedServiceOptions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,IAAMA,YAAY,GAAqB;AAC5CC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,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"}