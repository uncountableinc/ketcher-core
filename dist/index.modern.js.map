{"version":3,"file":"index.modern.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/constants/image.ts","../src/domain/entities/atomList.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/KetcherLogger.ts","../src/utilities/runAsyncAction.ts","../src/utilities/b64toBlob.ts","../src/utilities/notifyRequestCompleted.ts","../src/utilities/SettingsManager.ts","../../../node_modules/w3c-keyname/index.js","../src/utilities/keynorm.ts","../src/utilities/shortcutsUtil.ts","../src/domain/services/struct/structService.types.ts","../src/utilities/clipboardUtils.ts","../src/utilities/getSvgFromDrawnStructures.tsx","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/BaseMicromoleculeEntity.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/helpers/saltsAndSolventsProvider.ts","../src/domain/entities/box2Abs.ts","../src/application/editor/shared/constants.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rgroupAttachmentPoint.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/monomerMicromolecule.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/application/editor/editorSettings.ts","../src/application/editor/constants.ts","../src/application/render/notifyRenderComplete.ts","../src/application/editor/tools/Zoom.ts","../src/application/editor/shared/coordinates.ts","../src/domain/helpers/attachmentPointCalculations.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/mergeFragmentsToStruct.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/application/formatters/types/ket.ts","../src/domain/entities/Command.ts","../../../node_modules/subscription/index.js","../src/application/editor/tools/Tool.ts","../src/application/render/renderers/BaseRenderer.ts","../src/application/editor/editorEvents.ts","../src/domain/AttachmentPoint.ts","../src/application/render/renderers/BaseMonomerRenderer.ts","../src/application/render/renderers/sequence/BaseSequenceRenderer.ts","../src/domain/entities/DrawingEntity.ts","../src/domain/types/monomers.ts","../src/domain/types/entities.ts","../src/domain/entities/BaseMonomer.ts","../src/domain/entities/monomer-chains/BaseSubChain.ts","../src/domain/entities/monomer-chains/PeptideSubChain.ts","../src/domain/entities/monomer-chains/ChemSubChain.ts","../src/domain/entities/Peptide.ts","../src/domain/entities/Chem.ts","../src/domain/helpers/monomers.ts","../src/domain/entities/RNABase.ts","../src/domain/entities/monomer-chains/PhosphateSubChain.ts","../src/domain/entities/monomer-chains/RnaSubChain.ts","../src/domain/entities/Phosphate.ts","../src/domain/entities/Sugar.ts","../src/application/editor/tools/Bond.ts","../src/application/render/renderers/ChemRenderer.ts","../src/application/render/renderers/PeptideRenderer.ts","../src/application/render/renderers/PhosphateRenderer.ts","../src/application/render/renderers/SugarRenderer.ts","../src/application/render/renderers/RNABaseRenderer.ts","../src/application/editor/operations/polymerBond/index.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/structFormatter.types.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/smilesFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/formatters/constants.ts","../src/domain/entities/PolymerBond.ts","../src/application/utils.ts","../src/application/editor/operations/monomer/index.ts","../src/application/editor/operations/drawingEntity/index.ts","../src/application/editor/tools/RnaPreset.ts","../src/domain/entities/monomer-chains/EmptySubChain.ts","../src/domain/entities/monomer-chains/Chain.ts","../src/domain/entities/monomer-chains/ChainsCollection.ts","../src/application/render/raphael-ext.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/util.ts","../src/application/render/draw.ts","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/bracket-params.ts","../src/application/render/restruct/resgroup.ts","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/rergroupAttachmentPoint.ts","../src/application/render/restruct/reImage.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.ts","../src/application/render/options.ts","../src/application/render/coordinateTransformation.ts","../src/application/render/scrollbar/scroll-offset.ts","../src/application/render/scrollbar/scrollbar.ts","../src/application/render/scrollbar/utils.ts","../src/application/render/scrollbar/scrollbar-vertical.ts","../src/application/render/scrollbar/scrollbar-horizontal.ts","../src/application/render/scrollbar/scrollbar-container.ts","../src/application/render/raphaelRender.ts","../src/application/render/renderStruct.ts","../src/application/render/renderers/sequence/SequenceNodeRendererFactory.ts","../src/domain/entities/EmptyMonomer.ts","../src/domain/entities/EmptySequenceNode.ts","../src/application/render/renderers/sequence/BaseSequenceItemRenderer.ts","../src/application/render/renderers/sequence/PolymerBondSequenceRenderer.ts","../src/domain/constants/monomers.ts","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/image/imageMove.ts","../src/application/editor/operations/image/imageResize.ts","../src/application/editor/operations/image/imageUpsertDelete.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rgroupAttachmentPoint/RGroupAttachmentPointAdd.ts","../src/application/editor/operations/rgroupAttachmentPoint/RGroupAttachmentPointRemove.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowRotate.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/sgroupAttachmentPoints.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/rgroupAttachmentPoint.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/image.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/EditorHistory.ts","../src/application/editor/index.ts","../src/domain/helpers/rna.ts","../src/domain/entities/Nucleoside.ts","../src/application/render/renderers/sequence/BackBoneBondSequenceRenderer.ts","../src/application/editor/operations/modes/index.ts","../src/application/render/renderers/sequence/ui-controls/NewSequenceButton.ts","../src/application/render/renderers/sequence/SequenceRenderer.ts","../src/domain/entities/Nucleotide.ts","../src/domain/entities/canvas-matrix/Matrix.ts","../src/domain/entities/canvas-matrix/Cell.ts","../src/domain/entities/canvas-matrix/CanvasMatrix.ts","../src/application/editor/operations/modes/snake.ts","../src/domain/entities/DrawingEntitiesManager.ts","../src/application/editor/modes/BaseMode.ts","../src/application/editor/modes/FlexMode.ts","../src/domain/entities/MonomerSequenceNode.ts","../src/application/editor/modes/SequenceMode.ts","../src/application/render/renderers/RenderersManager.ts","../src/application/editor/modes/SnakeMode.ts","../src/application/editor/modes/types.ts","../src/application/editor/modes/index.ts","../src/application/render/renderers/PolymerBondRenderer.ts","../src/application/render/renderers/UnresolvedMonomerRenderer.ts","../src/application/render/renderers/UnsplitNucleotideRenderer.ts","../src/application/render/renderers/sequence/ChemSequenceItemRenderer.ts","../src/application/render/renderers/sequence/EmptySequenceItemRenderer.ts","../src/application/render/renderers/sequence/RNASequenceItemRenderer.ts","../src/application/render/renderers/sequence/NucleotideSequenceItemRenderer.ts","../src/application/render/renderers/sequence/NucleosideSequenceItemRenderer.ts","../src/application/render/renderers/sequence/PeptideSequenceItemRenderer.ts","../src/application/render/renderers/sequence/PhosphateSequenceItemRenderer.ts","../src/application/render/renderers/sequence/UnresolvedMonomerSequenceItemRenderer.ts","../src/application/render/renderers/sequence/UnsplitNucleotideSequenceItemRenderer.ts","../src/application/editor/operations/monomer/monomerFactory.ts","../src/application/editor/tools/Monomer.ts","../src/application/editor/tools/Erase.ts","../src/application/editor/tools/SelectRectangle.ts","../src/application/editor/tools/Clear.ts","../src/application/editor/tools/index.ts","../src/application/editor/MacromoleculesConverter.ts","../src/application/editor/Editor.ts","../src/domain/serializers/ket/fromKet/monomerToDrawingEntity.ts","../src/domain/serializers/ket/fromKet/polymerBondToDrawingEntity.ts","../../../node_modules/jsonschema/lib/helpers.js","../../../node_modules/jsonschema/lib/attribute.js","../../../node_modules/jsonschema/lib/scan.js","../../../node_modules/jsonschema/lib/validator.js","../../../node_modules/jsonschema/lib/index.js","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/toKet/imageToKet.ts","../src/domain/serializers/ket/fromKet/imageToStruct.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/entities/image.ts","../src/domain/entities/highlight.ts","../src/domain/entities/sGroupAttachmentPoint.ts","../src/domain/entities/Axis.ts","../src/domain/entities/monomer-chains/types.ts","../src/domain/entities/LinkerSequenceNode.ts","../src/domain/entities/UnresolvedMonomer.ts","../src/domain/entities/UnsplitNucleotide.ts","../src/infrastructure/services/helpers.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.types.ts","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types';\n\ntype ElementColorType = {\n  [key in ElementLabel]: string;\n};\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000',\n} as const;\n\ntype Keys = keyof typeof ElementColor;\nexport type AtomColor = typeof ElementColor[Keys];\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types';\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794,\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022,\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94,\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315,\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81,\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011,\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007,\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999,\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636,\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976,\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282,\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305,\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857,\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085,\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985,\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06,\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45,\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481,\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831,\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784,\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085,\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671,\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151,\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616,\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443,\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452,\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944,\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344,\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463,\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382,\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231,\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308,\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956,\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718,\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904,\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982,\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783,\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621,\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842,\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242,\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372,\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951,\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98,\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072,\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502,\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421,\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822,\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144,\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181,\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107,\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601,\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603,\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473,\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936,\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966,\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277,\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477,\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161,\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662,\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423,\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145,\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362,\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641,\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253,\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352,\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001,\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332,\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593,\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222,\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451,\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681,\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492,\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882,\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841,\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071,\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233,\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173,\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849,\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695,\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923,\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38,\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21,\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401,\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209,\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210,\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222,\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223,\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226,\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227,\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774,\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882,\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913,\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237,\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244,\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243,\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247,\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247,\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251,\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252,\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257,\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258,\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259,\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266,\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267,\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268,\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269,\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270,\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269,\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278,\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281,\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282,\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285,\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286,\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289,\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289,\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293,\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294,\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294,\n  },\n];\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element);\n  acc.set(element.number, element);\n  return acc;\n}, new Map<string | number, Element>());\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate);\n  },\n  getAll: () => [...elementsArray],\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string;\n  description?: string;\n};\n\nexport type GenItemSet = {\n  items: GenItem[];\n  displayName?: string;\n};\n\nexport type GenGroup = {\n  itemSets: GenItemSet[];\n  title: string;\n};\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType };\n};\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' },\n        ],\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)',\n          },\n          { label: 'QH', description: 'Any atom except C' },\n        ],\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' },\n        ],\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' },\n        ],\n      },\n    ],\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' },\n        ],\n      },\n    ],\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group',\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen',\n          },\n        ],\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure',\n          },\n          {\n            label: 'GH*',\n            description: 'Any group with a ring closure or hydrogen',\n          },\n        ],\n      },\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' },\n            ],\n          },\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' },\n                ],\n              },\n            ],\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' },\n                ],\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' },\n                ],\n              },\n            ],\n          },\n        },\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' },\n            ],\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms',\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen',\n              },\n            ],\n          },\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'aryl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' },\n                ],\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen',\n                  },\n                ],\n              },\n            ],\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen',\n                  },\n                ],\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' },\n                ],\n              },\n            ],\n          },\n        },\n      },\n    },\n  },\n};\n\nfunction getGenericsList(generics: GenericsType | GenGroup) {\n  if (Array.isArray(generics) && !generics[0]?.items) {\n    return generics.map((item) => item.label);\n  } else {\n    let result: string[] = [];\n    for (const subGroup of Object.values(generics)) {\n      if (typeof generics === 'string') continue;\n      result = [...result, ...getGenericsList(subGroup)];\n    }\n    return result;\n  }\n}\n\nexport const genericsList = getGenericsList(Generics);\n","import type { ImageReferenceName } from 'domain/entities';\n\nexport const IMAGE_KEY = 'images';\nexport const IMAGE_SERIALIZE_KEY = 'image';\n\nconst CURSOR_DIAGONAL_NWSE = 'nwse-resize';\nconst CURSOR_DIAGONAL_NESW = 'nesw-resize';\nconst CURSOR_VERTICAL = 'ns-resize';\nconst CURSOR_HORIZONTAL = 'ew-resize';\n\nexport const imageReferencePositionToCursor: Record<\n  ImageReferenceName,\n  string\n> = {\n  topLeftPosition: CURSOR_DIAGONAL_NWSE,\n  topMiddlePosition: CURSOR_VERTICAL,\n  topRightPosition: CURSOR_DIAGONAL_NESW,\n  rightMiddlePosition: CURSOR_HORIZONTAL,\n  bottomRightPosition: CURSOR_DIAGONAL_NWSE,\n  bottomMiddlePosition: CURSOR_VERTICAL,\n  bottomLeftPosition: CURSOR_DIAGONAL_NESW,\n  leftMiddlePosition: CURSOR_HORIZONTAL,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants';\n\nexport interface AtomListParams {\n  readonly notList: boolean;\n  readonly ids: Array<number>;\n}\n\nexport class AtomList {\n  notList: boolean;\n  ids: Array<number>;\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList;\n    this.ids = params.ids;\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = [];\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id);\n      currenElement && labels.push(currenElement!.label);\n    }\n\n    return labels;\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']';\n    if (this.notList) {\n      label = '!' + label;\n    }\n    return label;\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue,\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value;\n  }\n}\n","// TODO add tests and rename to toFixed\n// https://github.com/epam/ketcher/issues/2675\nexport function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number;\n  if (typeof value === 'number') {\n    parsedValue = value;\n  } else {\n    parsedValue = parseFloat(value);\n  }\n  return parsedValue.toFixed(8);\n}\n","export enum LogLevel {\n  ERROR = 0,\n  WARN = 1,\n  INFO = 2,\n  LOG = 3,\n}\n\nexport interface LogSettings {\n  enabled?: boolean;\n  showTrace?: boolean;\n  level?: LogLevel;\n}\n\nexport class KetcherLogger {\n  static get settings(): LogSettings {\n    if (typeof window === 'undefined') {\n      return {};\n    }\n\n    return window?.ketcher?.logging ?? {};\n  }\n\n  static set settings(newSettings: LogSettings) {\n    for (const [settingName, settingValue] of Object.entries(newSettings)) {\n      this.settings[settingName] = settingValue;\n    }\n  }\n\n  static log(...messages: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.LOG)) {\n      return;\n    }\n\n    const { showTrace } = this.settings;\n\n    if (showTrace) {\n      window.console.trace(messages);\n    } else {\n      window.console.log(messages);\n    }\n  }\n\n  static info(...messages: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.INFO)) {\n      return;\n    }\n\n    const { showTrace } = this.settings;\n\n    if (showTrace) {\n      window.console.trace(messages);\n    } else {\n      window.console.info(messages);\n    }\n  }\n\n  static warn(...warnings: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.WARN)) {\n      return;\n    }\n\n    window.console.warn(warnings);\n  }\n\n  static error(...errors: unknown[]): void {\n    if (!this.isMinimumLogLevel(LogLevel.ERROR)) {\n      return;\n    }\n\n    window.console.error(errors);\n  }\n\n  private static isMinimumLogLevel(minimumLevel: LogLevel): boolean {\n    const { enabled, level } = this.settings;\n\n    if (!enabled || level == null) {\n      return false;\n    }\n\n    return level >= minimumLevel;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events';\nimport { KetcherLogger } from './KetcherLogger';\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter,\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING);\n  try {\n    const res = await action();\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS);\n    return res;\n  } catch (e) {\n    KetcherLogger.error('runAsyncAction.ts::runAsyncAction', e);\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE);\n    return undefined;\n  }\n};\n","export function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Blob {\n  const byteCharacters: string = window.atob(b64Data);\n  const byteArrays: Array<Uint8Array> = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice: string = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers: Array<number> = new Array(slice.length);\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray: Uint8Array = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob: Blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n}\n","/**\n * Dispatch event when request is completed\n * Used only for QAs to prevent long delays in test cases\n * Triggers on Add to canvas / Aromatize / Dearomatize\n * Clean Up / Calculate CIP / Paste from clipboard\n * maybe somewhere else\n */\nexport function notifyRequestCompleted(): void {\n  const event = new Event('requestCompleted');\n  window.dispatchEvent(event);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetcherLogger } from './KetcherLogger';\n\nexport const KETCHER_SAVED_SETTINGS_KEY = 'ketcher_editor_saved_settings';\nexport const KETCHER_SAVED_OPTIONS_KEY = 'ketcher-opts';\n\ninterface SavedSettings {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectionTool?: any;\n  disableCustomQuery?: boolean;\n}\n\ninterface SavedOptions {\n  ignoreChiralFlag?: boolean;\n  showStereoFlags?: boolean;\n  disableQueryElements?: string[] | null;\n}\n\nexport class SettingsManager {\n  static _disableCustomQuery?: boolean;\n\n  static getSettings(): SavedSettings {\n    try {\n      return JSON.parse(\n        localStorage.getItem(KETCHER_SAVED_SETTINGS_KEY) || '{}',\n      );\n    } catch (e) {\n      KetcherLogger.error(\n        'settingsManager.ts::SettingsManager::getSettings',\n        e,\n      );\n      return {} as SavedSettings;\n    }\n  }\n\n  static saveSettings(settings: SavedSettings) {\n    if (!settings) {\n      return;\n    }\n    localStorage.setItem(KETCHER_SAVED_SETTINGS_KEY, JSON.stringify(settings));\n  }\n\n  static getOptions(): SavedOptions {\n    try {\n      return JSON.parse(\n        localStorage.getItem(KETCHER_SAVED_OPTIONS_KEY) || '{}',\n      );\n    } catch (e) {\n      KetcherLogger.error('SettingsManager.ts::SettingsManager::getOptions', e);\n      return {} as SavedOptions;\n    }\n  }\n\n  static saveOptions(options: SavedOptions) {\n    if (!options) {\n      return;\n    }\n    localStorage.setItem(KETCHER_SAVED_OPTIONS_KEY, JSON.stringify(options));\n  }\n\n  static get selectionTool() {\n    const { selectionTool } = this.getSettings();\n    return selectionTool;\n  }\n\n  static set selectionTool(selectionTool) {\n    const settings = this.getSettings();\n\n    this.saveSettings({\n      ...settings,\n      selectionTool,\n    });\n  }\n\n  static get disableCustomQuery() {\n    return this._disableCustomQuery;\n  }\n\n  static set disableCustomQuery(disableCustomQuery: boolean | undefined) {\n    this._disableCustomQuery = disableCustomQuery;\n  }\n\n  static get ignoreChiralFlag() {\n    const { ignoreChiralFlag } = this.getOptions();\n    return ignoreChiralFlag;\n  }\n\n  static set ignoreChiralFlag(ignoreChiralFlag: boolean | undefined) {\n    const options = this.getOptions();\n\n    this.saveOptions({\n      ...options,\n      ignoreChiralFlag,\n    });\n  }\n}\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport * as KN from 'w3c-keyname';\n\nconst mac =\n  typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false; // eslint-disable-line no-undef\n\nfunction normalizeKeyName(name) {\n  const parts = name.split(/\\+(?!$)/);\n  let result = parts[parts.length - 1];\n  if (result === 'Space') result = ' ';\n  let alt;\n  let ctrl;\n  let shift;\n  let meta;\n\n  for (let i = 0; i < parts.length - 1; i++) {\n    const mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true;\n    else if (/^a(lt)?$/i.test(mod)) alt = true;\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true;\n    else if (/^s(hift)?$/i.test(mod)) shift = true;\n    else if (/^mod$/i.test(mod))\n      if (mac) meta = true;\n      else ctrl = true;\n    else throw new Error('Unrecognized modifier name: ' + mod);\n  }\n\n  if (alt) result = 'Alt+' + result;\n  if (ctrl) result = 'Ctrl+' + result;\n  if (meta) result = 'Meta+' + result;\n  if (shift) result = 'Shift+' + result;\n\n  return result;\n}\n\nfunction normalizeKeyMap(map) {\n  const copy = Object.create(null);\n\n  Object.keys(map).forEach((prop) => {\n    copy[normalizeKeyName(prop)] = map[prop];\n  });\n\n  return copy;\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = 'Alt+' + name;\n  if (event.ctrlKey) name = 'Ctrl+' + name;\n  if (event.metaKey) name = 'Meta+' + name;\n  if (shift !== false && event.shiftKey) name = 'Shift+' + name;\n\n  return name;\n}\n\nfunction rusToEng(name, event) {\n  return name\n    .replace(/[а-я]/, KN.base[event.keyCode])\n    .replace(/[А-Я]/, KN.shift[event.keyCode]);\n}\n\nfunction normalizeKeyEvent(event, base = false) {\n  const name = rusToEng(KN.keyName(event), event);\n  const isChar = name.length === 1 && name !== ' ';\n\n  return isChar && !base\n    ? modifiers(name, event, !isChar)\n    : modifiers(KN.base[event.keyCode], event, true);\n}\n\nexport function isControlKey(event) {\n  return mac ? event.metaKey : event.ctrlKey;\n}\n\n// TODO rename and unify after moving all hotkeys to core editor\n//  to handle all events in same way and to have same structure for all hotkey configs\nfunction keyNorm(obj) {\n  if (obj instanceof KeyboardEvent) {\n    return normalizeKeyEvent(obj);\n  }\n\n  return typeof obj === 'object' ? normalizeKeyMap(obj) : normalizeKeyName(obj);\n}\n\nfunction setHotKey(key, actName, hotKeys) {\n  if (Array.isArray(hotKeys[key])) hotKeys[key].push(actName);\n  else hotKeys[key] = [actName];\n}\n\nexport function initHotKeys(actions) {\n  const hotKeys = {};\n  let act;\n\n  Object.keys(actions).forEach((actName) => {\n    act = actions[actName];\n    if (!act.shortcut) return;\n\n    if (Array.isArray(act.shortcut)) {\n      act.shortcut.forEach((key) => {\n        setHotKey(key, actName, hotKeys);\n      });\n    } else {\n      setHotKey(act.shortcut, actName, hotKeys);\n    }\n  });\n\n  return keyNorm(hotKeys);\n}\n\nfunction lookup(map, event) {\n  let name = rusToEng(KN.keyName(event), event);\n  if (name === 'Add') name = '+'; // numpad '+' and '-'\n  if (name === 'Subtract') name = '-';\n  const isChar = name.length === 1 && name !== ' ';\n  let res = map[modifiers(name, event, !isChar)];\n  let baseName;\n\n  if (event.shiftKey && isChar && (baseName = KN.base[event.keyCode]))\n    res = map[modifiers(baseName, event, true)] || res;\n\n  return res;\n}\n\nkeyNorm.lookup = lookup;\n\nexport { keyNorm };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { isMacOs } from 'react-device-detect';\n\nconst shortcutAliasMap = {\n  Escape: 'Esc',\n  Delete: 'Del',\n  Mod: isMacOs ? '⌘' : 'Ctrl',\n};\n\nexport function shortcutStr(shortcut?: string | string[]) {\n  if (!shortcut) {\n    return '';\n  }\n\n  const shortcutKey = Array.isArray(shortcut) ? shortcut[0] : shortcut;\n  return shortcutKey.replace(\n    /(\\b[a-z]\\b$|Mod|Escape|Delete)/g,\n    (key) => shortcutAliasMap[key] || key.toUpperCase(),\n  );\n}\n\nexport const generateMenuShortcuts = <T>(obj) =>\n  Object.keys(obj).reduce((acc, key) => {\n    if (obj[key]?.shortcut) {\n      const shortcut = obj[key].shortcut;\n      const processedShortcut = shortcutStr(shortcut);\n      acc[key] = processedShortcut;\n    }\n    return acc;\n  }, {}) as { [key in keyof T]: string };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  InChIKey = 'chemical/x-inchi-key',\n  CDX = 'chemical/x-cdx',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket',\n  UNKNOWN = 'chemical/x-unknown',\n  SDF = 'chemical/x-sdf',\n  FASTA = 'chemical/x-fasta',\n  SEQUENCE = 'chemical/x-sequence',\n  RNA = 'chemical/x-rna-sequence',\n  DNA = 'chemical/x-dna-sequence',\n  PEPTIDE = 'chemical/x-peptide-sequence',\n  IDT = 'chemical/x-idt',\n  HELM = 'chemical/x-helm',\n}\n\nexport interface WithStruct {\n  struct: string;\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType;\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType;\n}\nexport interface WithInputFormat {\n  input_format?: ChemicalMimeType;\n}\n\nexport interface WithSelection {\n  selected?: Array<number>;\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence';\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>;\n}\n\nexport interface CheckResult {\n  [key: string]: string;\n}\n\nexport interface ConvertData\n  extends WithStruct,\n    WithOutputFormat,\n    WithInputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport interface ExplicitHydrogensData extends WithStruct, WithOutputFormat {\n  mode?: 'auto' | 'fold' | 'unfold';\n}\n\nexport interface ExplicitHydrogensResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition';\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>;\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>;\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear';\n\nexport type AutoMapOptions = 'Discard' | 'Keep' | 'Alter' | 'Clear';\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode;\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string;\n  imagoVersions: Array<string>;\n  isAvailable: boolean;\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined;\n}\n\nexport type OutputFormatType = 'png' | 'svg';\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType;\n  backgroundColor?: string;\n  bondThickness: number;\n  stereoStyle?: 'ext' | 'old' | 'none';\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>;\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions,\n  ) => Promise<ConvertResult>;\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions,\n  ) => Promise<LayoutResult>;\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions,\n  ) => Promise<CleanResult>;\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions,\n  ) => Promise<AromatizeResult>;\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions,\n  ) => Promise<DearomatizeResult>;\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions,\n  ) => Promise<CalculateCipResult>;\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions,\n  ) => Promise<AutomapResult>;\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions,\n  ) => Promise<CheckResult>;\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions,\n  ) => Promise<CalculateResult>;\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>;\n  getInChIKey: (struct: string) => Promise<string>;\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions,\n  ) => Promise<string>;\n  toggleExplicitHydrogens: (\n    data: ExplicitHydrogensData,\n    options?: StructServiceOptions,\n  ) => Promise<ExplicitHydrogensResult>;\n  destroy?: () => void;\n}\n","import { ChemicalMimeType } from 'domain/services';\n\n/**\n *\n * Legacy browser API doesn't support async operations, so it is not possible\n * to call indigo, when copy/cut/paste\n */\nexport function isClipboardAPIAvailable() {\n  return (\n    typeof navigator?.clipboard?.writeText === 'function' &&\n    typeof navigator?.clipboard?.read === 'function'\n  );\n}\n\nexport function legacyCopy(clipboardData, data) {\n  let curFmt;\n  clipboardData.setData('text/plain', data['text/plain']);\n  try {\n    Object.keys(data).forEach((fmt) => {\n      curFmt = fmt;\n      clipboardData.setData(fmt, data[fmt]);\n    });\n  } catch (e) {\n    console.error('clipboardUtils.ts::legacyCopy', e);\n    console.info(`Could not write exact type ${curFmt}`);\n  }\n}\n\nexport function legacyPaste(cb, formats) {\n  let data = {};\n  data['text/plain'] = cb.getData('text/plain');\n  data = formats.reduce((res, fmt) => {\n    const d = cb.getData(fmt);\n    if (d) res[fmt] = d;\n    return res;\n  }, data);\n  return data;\n}\n\nexport function notifyCopyCut() {\n  const event = new Event('copyOrCutComplete');\n  window.dispatchEvent(event);\n}\n\nexport async function getStructStringFromClipboardData(\n  data: ClipboardItem[],\n): Promise<string> {\n  const clipboardItem = data[0];\n\n  if (clipboardItem && clipboardItem instanceof ClipboardItem) {\n    const structStr =\n      (await safelyGetMimeType(clipboardItem, `web ${ChemicalMimeType.KET}`)) ||\n      (await safelyGetMimeType(clipboardItem, `web ${ChemicalMimeType.Mol}`)) ||\n      (await safelyGetMimeType(clipboardItem, `web ${ChemicalMimeType.Rxn}`)) ||\n      (await safelyGetMimeType(clipboardItem, 'text/plain'));\n    return structStr === '' ? '' : structStr.text();\n  } else {\n    return (\n      data[ChemicalMimeType.KET] ||\n      data[ChemicalMimeType.Mol] ||\n      data[ChemicalMimeType.Rxn] ||\n      data['text/plain']\n    );\n  }\n}\n\nexport async function safelyGetMimeType(\n  clipboardItem: ClipboardItem,\n  mimeType: string,\n) {\n  try {\n    const result = await clipboardItem.getType(mimeType);\n    return result;\n  } catch {\n    return '';\n  }\n}\n","import { KetcherLogger } from 'utilities';\n\nconst SVG_NAMESPACE_URI = 'http://www.w3.org/2000/svg';\nconst ADDITIONAL_TOP_MARGIN = 54;\nconst ADDITIONAL_LEFT_MARGIN = 50;\nconst DEFAULT_MARGIN = 10;\n\nexport const getSvgFromDrawnStructures = (\n  canvas: SVGSVGElement,\n  type: 'preview' | 'file',\n  margin = DEFAULT_MARGIN,\n) => {\n  // Copy and clean up svg structures before previewing or saving\n  let svgInnerHTML = canvas?.innerHTML || '';\n  const wrapper = document.createElementNS(SVG_NAMESPACE_URI, 'svg');\n  wrapper.innerHTML = svgInnerHTML;\n  // remove #rectangle-selection-area\n  wrapper.querySelector('#rectangle-selection-area')?.remove();\n  // remove dynamic elements (scrolls, highlighters, attachment points...)\n  wrapper.querySelectorAll('.dynamic-element')?.forEach((el) => el.remove());\n  // set default cursor, mostly for sequence mode\n  wrapper\n    .querySelectorAll('text')\n    ?.forEach((el) => el.setAttribute('cursor', 'default'));\n  wrapper.querySelectorAll('rect')?.forEach((el) => {\n    if (el.getAttribute('cursor') === 'text') el.removeAttribute('cursor');\n  });\n  // remove opacity of structures, mostly for sequence \"edit in RNA builder\" mode\n  wrapper.querySelectorAll('g')?.forEach((el) => {\n    if (el.hasAttribute('opacity')) el.removeAttribute('opacity');\n  });\n  svgInnerHTML = wrapper.innerHTML;\n  // remove \"cursor: pointer\" style\n  svgInnerHTML = svgInnerHTML?.replaceAll('cursor: pointer;', '');\n\n  const drawStructureClientRect = canvas\n    ?.getElementsByClassName('drawn-structures')[0]\n    .getBoundingClientRect();\n\n  if (!drawStructureClientRect || !svgInnerHTML) {\n    const errorMessage = 'Cannot get drawn structures!';\n    KetcherLogger.error(errorMessage);\n    return;\n  }\n\n  const viewBoxX = drawStructureClientRect.x - ADDITIONAL_LEFT_MARGIN - margin;\n  const viewBoxY = drawStructureClientRect.y - ADDITIONAL_TOP_MARGIN - margin;\n  const viewBoxWidth = drawStructureClientRect.width + margin * 2;\n  const viewBoxHeight = drawStructureClientRect.height + margin * 2;\n  const viewBox = `${viewBoxX} ${viewBoxY} ${viewBoxWidth} ${viewBoxHeight}`;\n\n  if (type === 'preview')\n    return `<svg width='100%' height='100%' style='position: absolute' viewBox='${viewBox}'>${svgInnerHTML}</svg>`;\n  else if (type === 'file')\n    return `<svg width='${viewBoxWidth}' height='${viewBoxHeight}' viewBox='${viewBox}' xmlns='${SVG_NAMESPACE_URI}'>${svgInnerHTML}</svg>`;\n  else return `<svg xmlns='${SVG_NAMESPACE_URI}' />`;\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert';\nimport { tfx } from 'utilities';\n\nexport interface Point {\n  x?: number;\n  y?: number;\n  z?: number;\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0);\n  static UNIT = new Vec2(1, 1);\n\n  x: number;\n  y: number;\n  z: number;\n\n  constructor(point: Point);\n  constructor(x?: number, y?: number, z?: number);\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0);\n      this.y = parseFloat(args[0].y || 0);\n      this.z = parseFloat(args[0].z || 0);\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0);\n      this.y = parseFloat(args[1] || 0);\n      this.z = 0;\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0]);\n      this.y = parseFloat(args[1]);\n      this.z = parseFloat(args[2]);\n    } else {\n      throw new Error('Vec2(): invalid arguments');\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length();\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z),\n    );\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z),\n    );\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x;\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2));\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2();\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number);\n    }\n    return v;\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2,\n    );\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5);\n  }\n\n  static getLinePoint(lineStart: Vec2, lineEnd: Vec2, length) {\n    const difference = lineStart.sub(lineEnd);\n    const distance = difference.length();\n    const ratio = length / distance;\n    return new Vec2(\n      lineStart.x + difference.x * ratio,\n      lineStart.y + difference.y * ratio,\n    );\n  }\n\n  static crossProduct(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x;\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y);\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n\n  scaled(sInitial: number): Vec2 {\n    const s = isFinite(sInitial) ? sInitial : 1;\n    return new Vec2(this.x * s, this.y * s, this.z * s);\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z);\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0;\n    return new Vec2(this.x, y1 - this.y, this.z);\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f);\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length());\n  }\n\n  normalize(): boolean {\n    const l = this.length();\n\n    if (l < 0.000001) return false;\n\n    this.x /= l;\n    this.y /= l;\n\n    return true;\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z);\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString();\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')';\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null);\n\n    return Vec2.max(this, v);\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v);\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    return this.rotateSC(sin, cos);\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin);\n    assert(cos === 0 || !!cos);\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z,\n    );\n  }\n\n  rotateAroundOrigin(angleInDegrees: number, origin: Vec2) {\n    const angleInRadians = (angleInDegrees * Math.PI) / 180;\n    const offsetX = this.x - origin.x;\n    const offsetY = this.y - origin.y;\n\n    const rotatedX =\n      Math.cos(angleInRadians) * offsetX - Math.sin(angleInRadians) * offsetY;\n    const rotatedY =\n      Math.sin(angleInRadians) * offsetX + Math.cos(angleInRadians) * offsetY;\n\n    const x = rotatedX + origin.x;\n    const y = rotatedY + origin.y;\n\n    return new Vec2(Number(tfx(x)), Number(tfx(y)), this.z || 0);\n  }\n\n  isInsidePolygon(points: Vec2[]) {\n    // ray-casting algorithm based on\n    // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n    const { x, y } = this;\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i].x || 0;\n      const yi = points[i].y || 0;\n      const xj = points[j].x || 0;\n      const yj = points[j].y || 0;\n\n      const intersect =\n        yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n\n  calculateDistanceToLine(line: [Vec2, Vec2]): number {\n    if (\n      (this.x < Math.min(line[0].x, line[1].x) ||\n        this.x > Math.max(line[0].x, line[1].x)) &&\n      (this.y < Math.min(line[0].y, line[1].y) ||\n        this.y > Math.max(line[0].y, line[1].y))\n    ) {\n      return Math.min(Vec2.dist(line[0], this), Vec2.dist(line[1], this));\n    } else {\n      const a = Vec2.dist(line[0], line[1]);\n      const b = Vec2.dist(line[0], this);\n      const c = Vec2.dist(line[1], this);\n      const per = (a + b + c) / 2;\n      return (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c));\n    }\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  static radiansToDegrees(radians) {\n    return radians * (180 / Math.PI);\n  }\n\n  static degrees_to_radians(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n\n  static oxAngleForVector(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(v2.y - v1.y, v2.x - v1.x);\n  }\n\n  static findSecondPoint(\n    startPoint: { x: number; y: number },\n    lineLength: number,\n    lineAngleRadians: number,\n  ) {\n    const cos = Math.cos(lineAngleRadians);\n    const sin = Math.sin(lineAngleRadians);\n\n    const deltaX = lineLength * cos;\n    const deltaY = lineLength * sin;\n\n    const endPoint = {\n      x: startPoint.x + deltaX,\n      y: startPoint.y + deltaY,\n    };\n    return endPoint;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item;\n    }\n\n    return null;\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this);\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false;\n    }\n\n    return true;\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression));\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this);\n\n    for (const item of setB) union.add(item);\n\n    return union;\n  }\n\n  intersection(setB: Pile): Pile<TValue> {\n    const thisSet = new Pile(this);\n    return new Pile([...thisSet].filter((item) => setB.has(item)));\n  }\n\n  /**\n   * Union multiple sets which have intersections\n   * @example ```\n   * const setA = new Pile([0, 1])\n   * const setB = new Pile([1, 2])\n   * const setC = new Pile([2, 3])\n   * const setD = new Pile([4, 5])\n   * console.log(Pile.unionMultiple([setA, setB, setC, setD]))\n   * // [{0, 1, 2, 3}, {4, 5}]\n   * ```\n   */\n  static unionIntersections<T>(sets: Array<Pile<T>>): Array<Pile<T>> {\n    let unionized = false;\n\n    // Union two of sets\n    const setsToReturn = sets.reduce((prevSets, curSet) => {\n      let isCurSetMerged = false;\n\n      const newSets = prevSets.map((set) => {\n        const intersec = set.intersection(curSet);\n        if (intersec.size > 0) {\n          unionized = true;\n          isCurSetMerged = true;\n          return set.union(curSet);\n        }\n        return set;\n      });\n\n      if (!isCurSetMerged) newSets.push(curSet);\n      return newSets;\n    }, new Array<Pile<T>>());\n\n    // Recursively union two of sets === union all sets\n    return unionized ? Pile.unionIntersections(setsToReturn) : setsToReturn;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const INVALID = 'invalid';\nexport type initiallySelectedType = boolean | 'invalid';\nexport abstract class BaseMicromoleculeEntity {\n  initiallySelected?: initiallySelectedType;\n\n  protected constructor(initiallySelected?: initiallySelectedType) {\n    this.initiallySelected = initiallySelected;\n  }\n\n  getInitiallySelected(): boolean | undefined {\n    if (this.initiallySelected === INVALID) {\n      throw new Error(\n        'this field is used only for serialization/deserialization',\n      );\n    }\n    return this.initiallySelected;\n  }\n\n  setInitiallySelected(value?: boolean): void {\n    if (this.initiallySelected === INVALID) {\n      throw new Error(\n        'this field is used only for serialization/deserialization',\n      );\n    }\n    this.initiallySelected = value;\n  }\n\n  resetInitiallySelected(invalidate?: boolean): void {\n    this.initiallySelected = invalidate ? INVALID : undefined;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList';\nimport { Point, Vec2 } from './vec2';\n\nimport { Elements } from 'domain/constants';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\nimport { isNumber } from 'lodash';\n\n/**\n * Return unions of Pick.\n * Difference with <Partial<Pick<O,P>>>  that this type always require at least one property\n *\n * Example:\n * interface O {\n *   field1 : 1;\n *   field2: 2;\n *   field3: 3\n * }\n * SubsetOfFields<O, 'field1'| 'field2'>\n * @returns Pick<O, \"field1\"> | Pick<O, \"field2\">\n */\ntype SubsetOfFields<O, P extends keyof O> = P extends P ? Pick<O, P> : never;\n\nexport enum AttachmentPoints {\n  None = 0,\n  FirstSideOnly = 1,\n  SecondSideOnly = 2,\n  BothSides = 3,\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or',\n}\n\nenum CIP {\n  S = 'S',\n  R = 'R',\n  s = 's',\n  r = 'r',\n}\n\nexport type Aromaticity = 'aromatic' | 'aliphatic';\nexport type Chirality = 'clockwise' | 'anticlockwise';\n\nexport interface AtomQueryProperties {\n  aromaticity?: Aromaticity | null;\n  ringMembership?: number | null;\n  ringSize?: number | null;\n  connectivity?: number | null;\n  chirality?: Chirality | null;\n  customQuery?: string | null;\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number;\n  stereoLabel?: string | null;\n  exactChangeFlag?: number;\n  rxnFragmentType?: number;\n  invRet?: number;\n  aam?: number;\n  hCount?: number;\n  isPreview?: boolean;\n  unsaturatedAtom?: number;\n  substitutionCount?: number;\n  ringBondCount?: number;\n  queryProperties?: AtomQueryProperties;\n  explicitValence?: number;\n  /**\n   * Rgroup member attachment points\n   * Its value is indigo-converted `ATTCHPT`\n   * Ref: https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf P15\n   * Note: value `-1` has been converted to `3` by indigo.\n   */\n  attachmentPoints?: AttachmentPoints | null;\n  rglabel?: string | null;\n  charge?: number | null;\n  radical?: number;\n  cip?: CIP | null;\n  isotope?: number | null;\n  alias?: string | null;\n  pseudo?: string;\n  atomList?: AtomListParams | null;\n  label: string;\n  fragment?: number;\n  pp?: Point;\n  implicitH?: number;\n  implicitHCount?: number | null;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport type AtomPropertiesInContextMenu = SubsetOfFields<\n  AtomAttributes,\n  | 'hCount'\n  | 'ringBondCount'\n  | 'substitutionCount'\n  | 'unsaturatedAtom'\n  | 'implicitHCount'\n>;\n\nexport class Atom extends BaseMicromoleculeEntity {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3,\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3,\n    },\n  };\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: null,\n    radical: 0,\n    cip: null,\n    charge: null,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    queryProperties: {\n      aromaticity: null,\n      ringMembership: null,\n      ringSize: null,\n      connectivity: null,\n      chirality: null,\n      customQuery: null,\n    },\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attachmentPoints: null,\n    aam: 0,\n    isPreview: false,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0,\n    implicitHCount: null,\n  };\n\n  label: string;\n  fragment: number;\n  atomList: AtomList | null;\n  attachmentPoints: AttachmentPoints | null;\n  isotope: number | null;\n  isPreview: boolean;\n  hCount: number;\n  radical: number;\n  cip: CIP | null;\n  charge: number | null;\n  explicitValence: number;\n  ringBondCount: number;\n  queryProperties: AtomQueryProperties;\n  unsaturatedAtom: number;\n  substitutionCount: number;\n  valence: number;\n  implicitH: number;\n  implicitHCount: number | null;\n  pp: Vec2;\n  neighbors: Array<number>;\n  sgs: Pile<number>;\n  badConn: boolean;\n  alias: string | null;\n  rglabel: string | null;\n  aam: number;\n  invRet: number;\n  exactChangeFlag: number;\n  rxnFragmentType: number;\n  stereoLabel?: string | null;\n  stereoParity: number;\n  hasImplicitH?: boolean;\n  pseudo!: string;\n\n  /** @deprecated */\n  get attpnt() {\n    return this.attachmentPoints;\n  }\n\n  constructor(attributes: AtomAttributes) {\n    super(attributes?.initiallySelected);\n    this.label = attributes.label;\n    this.fragment = getValueOrDefault(attributes.fragment, -1);\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias);\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope);\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical);\n    this.cip = getValueOrDefault(attributes.cip, Atom.attrlist.cip);\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge);\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel);\n    this.attachmentPoints = getValueOrDefault(\n      attributes.attachmentPoints,\n      Atom.attrlist.attachmentPoints,\n    );\n    this.implicitHCount = getValueOrDefault(attributes.implicitHCount, null);\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence,\n    );\n    this.isPreview = getValueOrDefault(\n      attributes.isPreview,\n      Atom.attrlist.isPreview,\n    );\n\n    this.valence = 0;\n    this.implicitH = attributes.implicitHCount || attributes.implicitH || 0; // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2();\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile();\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount,\n    );\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount,\n    );\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom,\n    );\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount);\n    this.queryProperties = {};\n    for (const property in Atom.attrlist.queryProperties) {\n      this.queryProperties[property] = getValueOrDefault(\n        attributes.queryProperties?.[property],\n        Atom.attrlist.queryProperties[property],\n      );\n    }\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam);\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet);\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag,\n    );\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1);\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel,\n    );\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity,\n    );\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null;\n    this.neighbors = []; // set of half-bonds having this atom as their origin\n    this.badConn = false;\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label);\n      },\n      set: function (value) {\n        if (isCorrectPseudo(value)) {\n          this.label = value;\n        }\n      },\n    });\n  }\n\n  get isRGroupAttachmentPointEditDisabled() {\n    return this.label === 'R#' && this.rglabel !== null;\n  }\n\n  /**\n   * Trick: used for cloned struct for tooltips, for preview, for templates\n   *\n   * Why?\n   * Currently, tooltips are implemented with removing sgroups (wrong implementation)\n   * That's why we need to mark atoms as sgroup attachment points.\n   *\n   * If we change preview approach to flagged (option for showing sgroups without abbreviation),\n   * then we will be able to remove this hack.\n   */\n  setRGAttachmentPointForDisplayPurpose() {\n    this.attachmentPoints = AttachmentPoints.FirstSideOnly;\n  }\n\n  static getConnectedBondIds(struct: Struct, atomId: number): number[] {\n    const result: number[] = [];\n    for (const [bondId, bond] of struct.bonds.entries()) {\n      if (bond.begin === atomId || bond.end === atomId) {\n        result.push(bondId);\n      }\n    }\n    return result;\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {};\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr];\n    }\n    return attrs;\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr];\n    }\n  }\n\n  static isHeteroAtom(label: string): boolean {\n    return label !== 'C' && label !== 'H';\n  }\n\n  static isInAromatizedRing(struct: Struct, atomId: number): boolean {\n    const atom = struct.atoms.get(atomId);\n    if (atom && Atom.isHeteroAtom(atom.label)) {\n      for (const [_, loop] of struct.loops) {\n        const halfBondIds = loop.hbs;\n        if (loop.aromatic) {\n          for (const halfBondId of halfBondIds) {\n            const halfBond = struct.halfBonds.get(halfBondId);\n            if (!halfBond) return false;\n            const { begin, end } = halfBond;\n            if (begin === atomId || end === atomId) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  clone(fidMap?: Map<number, number>): Atom {\n    const ret = new Atom(this);\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!;\n    }\n    return ret;\n  }\n\n  isQuery(): boolean {\n    const { queryProperties } = this;\n    const isAnyAtom = this.label === 'A';\n    const isAnyMetal = this.label === 'M' || this.label === 'MH';\n    const isAnyHalogen = this.label === 'X' || this.label === 'XH';\n    const isAnyGroup =\n      this.label === 'G' ||\n      this.label === 'G*' ||\n      this.label === 'GH' ||\n      this.label === 'GH*';\n    return Boolean(\n      this.substitutionCount !== 0 ||\n        this.unsaturatedAtom !== 0 ||\n        this.ringBondCount !== 0 ||\n        isAnyAtom ||\n        isAnyMetal ||\n        isAnyHalogen ||\n        isAnyGroup ||\n        this.hCount !== 0 ||\n        this.atomList !== null ||\n        Object.values(queryProperties).some((value) => value),\n    );\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0;\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === null &&\n      this.radical === 0 &&\n      this.charge === null &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    );\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label);\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attachmentPoints !== null ||\n      this.aam\n    );\n  }\n\n  calcValence(connectionCount: number): boolean {\n    const label = this.label;\n    const charge = this.charge || 0;\n    if (this.isQuery() || this.attachmentPoints) {\n      this.implicitH = 0;\n      return true;\n    }\n    const element = Elements.get(label);\n\n    const groupno = element?.group;\n    const radicalCount = radicalElectrons(this.radical);\n    let valence = connectionCount;\n    let hydrogenCount: any = 0;\n    const absCharge = Math.abs(charge);\n\n    if (groupno === undefined) {\n      if (label === 'D' || label === 'T') {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      } else {\n        this.implicitH = 0;\n        return true;\n      }\n    } else if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      }\n    } else if (groupno === 2) {\n      if (\n        connectionCount + radicalCount + absCharge === 2 ||\n        connectionCount + radicalCount + absCharge === 0\n      ) {\n        valence = 2;\n      } else hydrogenCount = -1;\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount;\n        } else {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (radicalCount + connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount;\n          }\n        } else if (charge === -2) {\n          if (radicalCount + connectionCount <= 3) {\n            valence = 3;\n            hydrogenCount = 3 - radicalCount - connectionCount;\n          } else {\n            valence = 5;\n            hydrogenCount = 5 - radicalCount - connectionCount;\n          }\n        } else if (radicalCount + connectionCount + absCharge <= 1) {\n          valence = 1;\n          hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4;\n        hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount;\n        } else if (charge === 2) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else if (\n          label === 'N' ||\n          radicalCount + connectionCount + absCharge <= 3\n        ) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5;\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (radicalCount + connectionCount <= 2 && label !== 'As') {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount;\n          }\n        } else if (charge === 2) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else if (radicalCount + connectionCount <= 3) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount - absCharge;\n        } else {\n          valence = 5;\n          hydrogenCount = 5 - radicalCount - connectionCount - absCharge;\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3;\n          hydrogenCount = 3 - radicalCount - connectionCount;\n        } else {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (connectionCount <= 3) {\n            valence = 3;\n            hydrogenCount = 3 - radicalCount - connectionCount;\n          } else {\n            valence = 5;\n            hydrogenCount = 5 - radicalCount - connectionCount;\n          }\n        } else if (connectionCount + radicalCount + absCharge <= 2) {\n          valence = 2;\n          hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n        } else if (connectionCount + radicalCount + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4;\n          hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6;\n          hydrogenCount = 6 - radicalCount - connectionCount - absCharge;\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount - absCharge;\n          } else if (connectionCount <= 4) {\n            valence = 4;\n            hydrogenCount = 4 - radicalCount - connectionCount - absCharge;\n          } else if (charge === 0 && connectionCount <= 6) {\n            valence = 6;\n            hydrogenCount = 6 - radicalCount - connectionCount - absCharge;\n          } else {\n            hydrogenCount = -1;\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1;\n        hydrogenCount = 1 - radicalCount - connectionCount - absCharge;\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (connectionCount <= 2) {\n            valence = 2;\n            hydrogenCount = 2 - radicalCount - connectionCount;\n          } else if (\n            connectionCount === 3 ||\n            connectionCount === 5 ||\n            connectionCount >= 7\n          ) {\n            hydrogenCount = -1;\n          }\n        } else if (charge === 0) {\n          if (connectionCount <= 1) {\n            valence = 1;\n            hydrogenCount = 1 - radicalCount - connectionCount;\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (\n            connectionCount === 2 ||\n            connectionCount === 4 ||\n            connectionCount === 6\n          ) {\n            if (radicalCount === 1) {\n              valence = connectionCount;\n              hydrogenCount = 0;\n            } else {\n              hydrogenCount = -1; // will throw an error in the end\n            }\n          } else if (connectionCount > 7) {\n            hydrogenCount = -1; // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (connectionCount + radicalCount + absCharge === 0) valence = 1;\n      else hydrogenCount = -1;\n    }\n    if (Atom.isHeteroAtom(label) && this.implicitHCount !== null) {\n      hydrogenCount = this.implicitHCount;\n    }\n    this.valence = valence;\n    this.implicitH = hydrogenCount;\n    if (this.implicitH < 0) {\n      this.valence = connectionCount;\n      this.implicitH = 0;\n      this.badConn = true;\n      return false;\n    }\n    return true;\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge || 0;\n    const label = this.label;\n    const element = Elements.get(this.label);\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0;\n      return 0;\n    }\n\n    const groupno = element.group;\n    const rad = radicalElectrons(this.radical);\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn;\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn;\n        if (charge === 2) return rad + conn;\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn;\n        else if (charge === 2) return rad + conn;\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn;\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn;\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn;\n      }\n    }\n\n    return rad + conn + Math.abs(charge);\n  }\n\n  public static getSuperAtomAttachmentPointByAttachmentAtom(\n    struct: Struct,\n    atomId: number,\n  ) {\n    const sgroup = struct.getGroupFromAtomId(atomId);\n    return sgroup\n      ?.getAttachmentPoints()\n      .find((attachmentPoint) => attachmentPoint.atomId === atomId);\n  }\n\n  public static getSuperAtomAttachmentPointByLeavingGroup(\n    struct: Struct,\n    atomId: number,\n  ) {\n    const sgroup = struct.getGroupFromAtomId(atomId);\n    return sgroup\n      ?.getAttachmentPoints()\n      .find((attachmentPoint) => attachmentPoint.leaveAtomId === atomId);\n  }\n\n  public static isSuperatomLeavingGroupAtom(struct: Struct, atomId?: number) {\n    if (atomId === undefined) {\n      return false;\n    }\n\n    return Boolean(\n      Atom.getSuperAtomAttachmentPointByLeavingGroup(struct, atomId),\n    );\n  }\n\n  public static isSuperatomAttachmentAtom(struct: Struct, atomId?: number) {\n    if (atomId === undefined) {\n      return false;\n    }\n\n    return Boolean(\n      Atom.getSuperAtomAttachmentPointByAttachmentAtom(struct, atomId),\n    );\n  }\n\n  public static getAttachmentAtomExternalConnections(\n    struct: Struct,\n    attachmentAtomId?: number,\n    leavingGroupAtomid?: number,\n  ) {\n    const bonds = struct.bonds;\n    const atomId = isNumber(attachmentAtomId)\n      ? attachmentAtomId\n      : (leavingGroupAtomid as number);\n    const atom = struct.atoms.get(atomId);\n    const attachmentPoint = isNumber(attachmentAtomId)\n      ? Atom.getSuperAtomAttachmentPointByAttachmentAtom(struct, atomId)\n      : Atom.getSuperAtomAttachmentPointByLeavingGroup(struct, atomId);\n    const attachmentPointAtomBonds =\n      attachmentPoint &&\n      bonds.filter(\n        (_, bond) =>\n          (bond.begin === attachmentPoint.atomId &&\n            bond.end !== attachmentPoint.leaveAtomId) ||\n          (bond.end === attachmentPoint.atomId &&\n            bond.begin !== attachmentPoint.leaveAtomId),\n      );\n    const attachmentAtomExternalConnection =\n      attachmentPointAtomBonds &&\n      attachmentPointAtomBonds.filter((_, bond) => {\n        const beginAtom = struct.atoms.get(bond.begin);\n        const endAtom = struct.atoms.get(bond.end);\n        return (\n          beginAtom?.fragment !== atom?.fragment ||\n          endAtom?.fragment !== atom?.fragment\n        );\n      });\n\n    return attachmentAtomExternalConnection;\n  }\n\n  public static isHiddenLeavingGroupAtom(struct: Struct, atomId: number) {\n    const attachmentAtomExternalConnections =\n      Atom.getAttachmentAtomExternalConnections(struct, undefined, atomId);\n    const attachmentPoint = Atom.getSuperAtomAttachmentPointByLeavingGroup(\n      struct,\n      atomId,\n    );\n    const sgroup = struct.getGroupFromAtomId(atomId);\n\n    if (!sgroup || !sgroup?.isSuperatomWithoutLabel) {\n      return false;\n    }\n\n    return (\n      Atom.isSuperatomLeavingGroupAtom(struct, atomId) &&\n      attachmentAtomExternalConnections &&\n      attachmentAtomExternalConnections.find((_, bond) =>\n        bond.begin === attachmentPoint?.atomId\n          ? bond.beginSuperatomAttachmentPointNumber ===\n            attachmentPoint?.attachmentPointNumber\n          : bond.endSuperatomAttachmentPointNumber ===\n            attachmentPoint?.attachmentPointNumber,\n      )\n    );\n  }\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0;\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1;\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2;\n  } else {\n    return 0;\n  }\n}\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue;\n}\n\nfunction isCorrectPseudo(label) {\n  return (\n    !Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#'\n  );\n}\n\nfunction getPseudo(label: string) {\n  return isCorrectPseudo(label) ? label : '';\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport { Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nenum CIP {\n  E = 'E',\n  Z = 'Z',\n  M = 'M',\n  P = 'P',\n}\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number | null;\n  topology?: number | null;\n  customQuery?: string | null;\n  stereo?: number;\n  xxx?: string;\n  type: number;\n  end: number;\n  begin: number;\n  cip?: CIP | null;\n  isPreview?: boolean;\n  initiallySelected?: initiallySelectedType;\n  beginSuperatomAttachmentPointNumber?: number;\n  endSuperatomAttachmentPointNumber?: number;\n}\n\nexport class Bond extends BaseMicromoleculeEntity {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10,\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3,\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2,\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12,\n    },\n  };\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED,\n    cip: null,\n    customQuery: null,\n  };\n\n  begin: number;\n  end: number;\n  readonly type: number;\n  readonly xxx: string;\n  readonly stereo: number;\n  readonly topology: number | null;\n  readonly reactingCenterStatus: number | null;\n  customQuery: string | null;\n  len: number;\n  sb: number;\n  sa: number;\n  cip?: CIP | null;\n  hb1?: number;\n  hb2?: number;\n  angle: number;\n  center: Vec2;\n  isPreview: boolean;\n  beginSuperatomAttachmentPointNumber?: number;\n  endSuperatomAttachmentPointNumber?: number;\n\n  constructor(attributes: BondAttributes) {\n    super(attributes.initiallySelected);\n    this.begin = attributes.begin;\n    this.end = attributes.end;\n    this.type = attributes.type;\n    this.xxx = attributes.xxx || '';\n    this.stereo = Bond.PATTERN.STEREO.NONE;\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER;\n    this.customQuery = null;\n    this.reactingCenterStatus = 0;\n    this.cip = attributes.cip ?? null;\n    this.len = 0;\n    this.sb = 0;\n    this.sa = 0;\n    this.angle = 0;\n    this.isPreview = false;\n    this.beginSuperatomAttachmentPointNumber =\n      attributes.beginSuperatomAttachmentPointNumber;\n    this.endSuperatomAttachmentPointNumber =\n      attributes.endSuperatomAttachmentPointNumber;\n\n    if (attributes.stereo) this.stereo = attributes.stereo;\n    if (attributes.topology) this.topology = attributes.topology;\n    if (attributes.customQuery) {\n      this.customQuery = attributes.customQuery;\n      this.type = Bond.PATTERN.TYPE.ANY;\n      this.reactingCenterStatus = null;\n      this.topology = null;\n    }\n\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus;\n    }\n\n    this.center = new Vec2();\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {};\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr];\n      }\n    }\n    return attrs;\n  }\n\n  static getBondNeighbourIds(struct: Struct, bondId: number) {\n    const bond = struct.bonds.get(bondId)!;\n    const { begin, end } = bond;\n    const beginBondIds = Atom.getConnectedBondIds(struct, begin).filter(\n      (id) => id !== bondId,\n    );\n    const endBondIds = Atom.getConnectedBondIds(struct, end).filter(\n      (id) => id !== bondId,\n    );\n    return { beginBondIds, endBondIds };\n  }\n\n  static getFusingConditions(bond: Bond, bondBegin: Bond, bondEnd: Bond) {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const isFusingToDoubleBond =\n      bondBegin.type === SINGLE &&\n      bond.type === DOUBLE &&\n      bondEnd.type === SINGLE;\n    const isFusingToSingleBond =\n      bondBegin.type === DOUBLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === DOUBLE;\n    const isFusingDoubleSingleSingle =\n      bondBegin.type === DOUBLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === SINGLE;\n    const isFusingSingleSingleDouble =\n      bondBegin.type === SINGLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === DOUBLE;\n    const isAllSingle =\n      bondBegin.type === SINGLE &&\n      bond.type === SINGLE &&\n      bondEnd.type === SINGLE;\n    return {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n      isFusingSingleSingleDouble,\n      isAllSingle,\n    };\n  }\n\n  static getBenzeneConnectingBondType(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ): number | null {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const { isFusingToSingleBond, isFusingToDoubleBond } =\n      Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToDoubleBond) {\n      return DOUBLE;\n    } else if (isFusingToSingleBond) {\n      return SINGLE;\n    }\n    return null;\n  }\n\n  static getCyclopentadieneFusingBondType(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ): number | null {\n    const { DOUBLE, SINGLE } = this.PATTERN.TYPE;\n    const {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n      isAllSingle,\n    } = Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToDoubleBond) {\n      return DOUBLE;\n    } else if (\n      isFusingToSingleBond ||\n      isAllSingle ||\n      isFusingDoubleSingleSingle\n    ) {\n      return SINGLE;\n    }\n    return null;\n  }\n\n  static getCyclopentadieneDoubleBondIndexes(\n    bond: Bond,\n    bondBegin: Bond,\n    bondEnd: Bond,\n  ) {\n    const {\n      isFusingToSingleBond,\n      isFusingToDoubleBond,\n      isFusingDoubleSingleSingle,\n    } = Bond.getFusingConditions(bond, bondBegin, bondEnd);\n\n    if (isFusingToSingleBond || isFusingToDoubleBond) {\n      return [3];\n    }\n\n    if (isFusingDoubleSingleSingle) {\n      return [2, 4];\n    }\n\n    return [1, 3];\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr];\n    }\n  }\n\n  isQuery(): boolean {\n    const TYPES = Bond.PATTERN.TYPE;\n    const QUERY_BOND_TYPES = [\n      TYPES.ANY,\n      TYPES.SINGLE_OR_DOUBLE,\n      TYPES.SINGLE_OR_AROMATIC,\n      TYPES.DOUBLE_OR_AROMATIC,\n      TYPES.AROMATIC,\n    ];\n    return (\n      this.customQuery !== null ||\n      QUERY_BOND_TYPES.includes(this.type) ||\n      (TYPES.SINGLE === this.type && this.stereo === Bond.PATTERN.STEREO.EITHER)\n    );\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus;\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp;\n    const p2 = struct.atoms.get(this.end).pp;\n    return Vec2.lc2(p1, 0.5, p2, 0.5);\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp;\n    const p2 = struct.atoms.get(this.end)!.pp;\n    return p2.sub(p1).normalized();\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this);\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!;\n      cp.end = aidMap.get(cp.end)!;\n    }\n    return cp;\n  }\n\n  getAttachedSGroups(struct: Struct) {\n    const sGroupsWithBeginAtom =\n      struct.atoms.get(this.begin)?.sgs || new Pile();\n    const sGroupsWithEndAtom = struct.atoms.get(this.end)?.sgs || new Pile();\n    return sGroupsWithBeginAtom?.intersection(sGroupsWithEndAtom);\n  }\n\n  public static isBondToHiddenLeavingGroup(struct: Struct, bond: Bond) {\n    const beginSuperatomAttachmentPoint =\n      Atom.getSuperAtomAttachmentPointByLeavingGroup(struct, bond.begin);\n    const endSuperatomAttachmentPoint =\n      Atom.getSuperAtomAttachmentPointByLeavingGroup(struct, bond.end);\n\n    return (\n      (beginSuperatomAttachmentPoint &&\n        Atom.isHiddenLeavingGroupAtom(struct, bond.begin) &&\n        bond.end === beginSuperatomAttachmentPoint.atomId) ||\n      (endSuperatomAttachmentPoint &&\n        Atom.isHiddenLeavingGroupAtom(struct, bond.end) &&\n        bond.begin === endSuperatomAttachmentPoint.atomId)\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\n\nimport { Bond } from './bond';\nimport { StereoLabel } from './atom';\nimport { Struct, StructProperty } from './struct';\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR',\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>,\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined;\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel);\n  if (!filteredStereoAtoms.length) return undefined;\n\n  const atom = filteredStereoAtoms[0]!;\n  const stereoLabel = atom.stereoLabel!; // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel,\n  );\n\n  let stereoFlag: StereoFlag;\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed;\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0];\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs;\n        break;\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And;\n        break;\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or;\n        break;\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`);\n      }\n    }\n  }\n  return stereoFlag;\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag;\n  stereoFlagPosition?: Vec2;\n  properties?: Array<StructProperty>;\n  #stereoAtoms: Array<number>;\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms];\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag;\n  }\n\n  constructor(\n    stereoAtoms: Array<number> = [],\n    stereoFlagPosition?: Point | null,\n    properties?: Array<StructProperty>,\n  ) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition);\n    }\n    if (properties) {\n      this.properties = properties;\n    }\n    this.#stereoAtoms = stereoAtoms;\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number,\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId);\n    if (!fragment) return undefined;\n    const bb = fragment.getCoordBoundingBox();\n    return new Vec2(bb.max.x, bb.min.y - 1);\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!);\n    const fr = new Fragment(\n      stereoAtoms,\n      this.stereoFlagPosition,\n      this.properties,\n    );\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag;\n    return fr;\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\n    return this.#enhancedStereoFlag;\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid);\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE,\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid);\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId);\n      return true;\n    }\n    return false;\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number,\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId);\n      return true;\n    }\n    return false;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities';\n\nexport interface ScaleOptions {\n  microModeScale: number;\n  macroModeScale: number;\n}\n\nfunction canvasToModel(point: Vec2, options: ScaleOptions): Vec2 {\n  return point.scaled(1 / options.microModeScale);\n}\n\nfunction modelToCanvas(vector: Vec2, options: ScaleOptions): Vec2 {\n  return vector.scaled(options.microModeScale);\n}\n\nexport const Scale = {\n  canvasToModel,\n  modelToCanvas,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities';\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct,\n) {\n  const beginAtom = struct.atoms.get(bond.begin);\n\n  let EndAtomNeigh: number | undefined = NaN;\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid;\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false;\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false;\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities';\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider;\n  functionalGroupsList: Struct[];\n  constructor() {\n    this.functionalGroupsList = [];\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider();\n    }\n    return FunctionalGroupsProvider.instance;\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList;\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list;\n  }\n\n  public addToFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = [...this.functionalGroupsList, ...list];\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities';\n\nexport class SaltsAndSolventsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: SaltsAndSolventsProvider;\n  saltsAndSolventsList: Struct[];\n  constructor() {\n    this.saltsAndSolventsList = [];\n  }\n\n  public static getInstance(): SaltsAndSolventsProvider {\n    if (!SaltsAndSolventsProvider.instance) {\n      SaltsAndSolventsProvider.instance = new SaltsAndSolventsProvider();\n    }\n    return SaltsAndSolventsProvider.instance;\n  }\n\n  public getSaltsAndSolventsList() {\n    return this.saltsAndSolventsList;\n  }\n\n  public setSaltsAndSolventsList(list: Struct[]): void {\n    this.saltsAndSolventsList = list;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2';\nimport assert from 'assert';\n\nexport class Box2Abs {\n  readonly p0: Vec2;\n  readonly p1: Vec2;\n\n  constructor();\n  constructor(p: Vec2);\n  constructor(p0: Vec2, p1: Vec2);\n  constructor(x0: number, y0: number, x1: number, y1: number);\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min;\n      this.p1 = args[0].max;\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0];\n      this.p1 = args[1];\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1]);\n      this.p1 = new Vec2(args[2], args[3]);\n    } else if (args.length === 0) {\n      this.p0 = new Vec2();\n      this.p1 = new Vec2();\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!',\n      );\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString();\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1);\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp;\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb));\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null);\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p));\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null);\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    );\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d));\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function');\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options));\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0);\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1);\n  }\n\n  pos() {\n    return this.p0;\n  }\n\n  hasZeroArea() {\n    const size = this.sz();\n    return size.x === 0 && size.y === 0;\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height,\n    );\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1));\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x);\n\n    if (dc === 0 && dd === 0 && da === 0 && db === 0) {\n      // Check for collinearity and overlapping cases\n      return (\n        Box2Abs.#isPointOnSegment(a, b, c) ||\n        Box2Abs.#isPointOnSegment(a, b, d) ||\n        Box2Abs.#isPointOnSegment(c, d, a) ||\n        Box2Abs.#isPointOnSegment(c, d, b)\n      );\n    } else return dc * dd < 0 && da * db < 0;\n  }\n\n  // Helper function to check if a point is on a line segment\n  static #isPointOnSegment(\n    segPointA: Vec2,\n    segPointB: Vec2,\n    point: Vec2,\n  ): boolean {\n    const minX = Math.min(segPointA.x, segPointB.x);\n    const maxX = Math.max(segPointA.x, segPointB.x);\n    const minY = Math.min(segPointA.y, segPointB.y);\n    const maxY = Math.max(segPointA.y, segPointB.y);\n\n    return (\n      point.x >= minX && point.x <= maxX && point.y >= minY && point.y <= maxY\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { IMAGE_KEY } from 'domain/constants';\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group',\n};\n\nexport const selectionKeys = [\n  'atoms',\n  'bonds',\n  'frags',\n  'sgroups',\n  'rgroups',\n  'rgroupAttachmentPoints',\n  'rxnArrows',\n  'rxnPluses',\n  'simpleObjects',\n  'texts',\n  IMAGE_KEY,\n] as const;\n\nexport const defaultBondThickness = 2;\n\nexport enum MonomerGroups {\n  SUGARS = 'Sugars',\n  BASES = 'Bases',\n  PHOSPHATES = 'Phosphates',\n}\n\nexport enum MonomerGroupCodes {\n  R = 'R',\n  A = 'A',\n  C = 'C',\n  G = 'G',\n  T = 'T',\n  U = 'U',\n  X = 'X',\n  P = 'P',\n}\n\nexport const MonomerCodeToGroup: Record<MonomerGroupCodes, MonomerGroups> = {\n  R: MonomerGroups.SUGARS,\n  A: MonomerGroups.BASES,\n  C: MonomerGroups.BASES,\n  G: MonomerGroups.BASES,\n  T: MonomerGroups.BASES,\n  U: MonomerGroups.BASES,\n  X: MonomerGroups.BASES,\n  P: MonomerGroups.PHOSPHATES,\n} as const;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom';\nimport { Bond } from './bond';\nimport { Box2Abs } from './box2Abs';\nimport { Pile } from './pile';\nimport { Struct } from './struct';\nimport { SaltsAndSolventsProvider } from '../helpers';\nimport { Vec2 } from './vec2';\nimport { ReStruct } from '../../application/render';\nimport { FunctionalGroup, Pool, SGroupAttachmentPoint } from 'domain/entities';\nimport { ReSGroup } from 'application/render';\nimport { SgContexts } from 'application/editor/shared/constants';\nimport assert from 'assert';\nimport { isNumber } from 'lodash';\n\nexport class SGroupBracketParams {\n  readonly c: Vec2;\n  readonly d: Vec2;\n  readonly n: Vec2;\n  readonly w: number;\n  readonly h: number;\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c;\n    this.d = d;\n    this.n = d.rotateSC(1, 0);\n    this.w = w;\n    this.h = h;\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN',\n    queryComponent: 'queryComponent',\n  };\n\n  type: string;\n  id: number;\n  label: number;\n  bracketBox: any;\n  bracketDirection: Vec2;\n  areas: any;\n  hover: boolean;\n  hovering: any;\n  selected: boolean;\n  selectionPlate: any;\n  atoms: any;\n  atomSet: any;\n  parentAtomSet: any;\n  patoms?: any;\n  allAtoms: any;\n  bonds: any;\n  xBonds: any;\n  neiAtoms: any;\n  pp: Vec2 | null;\n  data: any;\n  dataArea: any;\n  functionalGroup: FunctionalGroup | undefined;\n  private readonly attachmentPoints: SGroupAttachmentPoint[];\n\n  constructor(type: string) {\n    this.type = type;\n    this.id = -1;\n    this.label = -1;\n    this.bracketBox = null;\n    this.bracketDirection = new Vec2(1, 0);\n    this.areas = [];\n\n    this.hover = false;\n    this.hovering = null;\n    this.selected = false;\n    this.selectionPlate = null;\n\n    this.atoms = [];\n    this.patoms = [];\n    this.bonds = [];\n    this.xBonds = [];\n    this.neiAtoms = [];\n    this.attachmentPoints = [];\n    this.pp = null;\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: '',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: '',\n    };\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr];\n  }\n\n  setFunctionalGroup(functionalGroup: FunctionalGroup) {\n    this.functionalGroup = functionalGroup;\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {};\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr];\n    });\n    return attrs;\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr];\n    this.data[attr] = value;\n    return oldValue;\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value;\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset);\n  }\n\n  isExpanded(): boolean {\n    // flag \".data.expanded\" exists only for the SuperAtom\n    if (SGroup.isSuperAtom(this)) {\n      return Boolean(this.data.expanded);\n    } else {\n      return true;\n    }\n  }\n\n  isContracted(): boolean {\n    return !this.isExpanded();\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint;\n\n    const isAtomContext = this.data.context === SgContexts.Atom;\n    const isBondContent = this.data.context === SgContexts.Bond;\n    if (isAtomContext || isBondContent) {\n      const contentBoxes: Array<any> = [];\n      let contentBB: Box2Abs | null = null;\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid);\n        const pos = new Vec2(atom!.pp);\n\n        const ext = new Vec2(0.05 * 3, 0.05 * 3);\n        const bba = new Box2Abs(pos, pos).extend(ext, ext);\n        contentBoxes.push(bba);\n      });\n\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null;\n        [bba.p0.x, bba.p1.x].forEach((x) => {\n          [bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y);\n            bbb = !bbb ? new Box2Abs(v, v) : bbb!.include(v);\n          });\n        });\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!);\n      });\n\n      topLeftPoint = isBondContent ? contentBB!.centre() : contentBB!.p0;\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5));\n    }\n\n    const sgroups = Array.from(struct.sgroups.values());\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break;\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5));\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0];\n        const sAtomPP = struct.atoms.get(sAtom)?.pp;\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP;\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms);\n      }\n    }\n\n    this.pp = topLeftPoint;\n  }\n\n  isGroupAttached(struct: Struct): boolean {\n    return this.getConnectionPointsCount(struct) >= 1;\n  }\n\n  addAttachmentPoint(attachmentPoint: SGroupAttachmentPoint): void {\n    const isAttachmentPointAlreadyExist = this.attachmentPoints.some(\n      ({ atomId, leaveAtomId }) =>\n        attachmentPoint.atomId === atomId &&\n        attachmentPoint.leaveAtomId === leaveAtomId,\n    );\n\n    if (isAttachmentPointAlreadyExist) {\n      throw new Error(\n        'The same attachment point cannot be added to an S-group more than once',\n      );\n    }\n\n    this.attachmentPoints.push(attachmentPoint);\n  }\n\n  addAttachmentPoints(\n    attachmentPoints:\n      | ReadonlyArray<SGroupAttachmentPoint>\n      | SGroupAttachmentPoint[],\n  ): void {\n    for (const attachmentPoint of attachmentPoints) {\n      this.addAttachmentPoint(attachmentPoint);\n    }\n  }\n\n  removeAttachmentPoint(attachmentPoint: SGroupAttachmentPoint): boolean {\n    const index = this.attachmentPoints.indexOf(attachmentPoint);\n    if (index !== -1) {\n      this.attachmentPoints.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  getAttachmentPoints(): ReadonlyArray<SGroupAttachmentPoint> {\n    return this.attachmentPoints;\n  }\n\n  /**\n   * Connection point - is not! the same as Attachment point.\n   * Connection point is a fact for the sgroup - is the atom that has connected bond to an external atom.\n   * So it doesn't matter how it happens (connection atom).\n   * When we talk about \"Attachment point\" it is a hypothetical, suitable place to connect to sgroup.\n   * But there are cases when sgroup doesn't have attachment points but have connection (read from external file)\n   */\n  private getConnectionPointsCount(struct: Struct): number {\n    const connectionAtoms = new Set<number>();\n    for (const atomId of this.atoms) {\n      const neighbors = struct.atomGetNeighbors(atomId) ?? [];\n      for (const { aid } of neighbors) {\n        if (!this.atoms.includes(aid)) {\n          connectionAtoms.add(atomId);\n          break;\n        }\n      }\n    }\n    return connectionAtoms.size;\n  }\n\n  isNotContractible(struct: Struct): boolean {\n    return this.getConnectionPointsCount(struct) > 1;\n  }\n\n  /**\n   * Why only one?\n   * Currently other parts of application don't support several attachment points for sgroup.\n   * So to support it - it's required to refactor almost every peace of code with sgroups.\n   *\n   *\n   * Why return 'undefined' without fallback?\n   * If sgroup doesn't have attachment points it can't be attached, (salt and solvents for example).\n   */\n  getAttachmentAtomId(): number | undefined {\n    return this.attachmentPoints[0]?.atomId;\n  }\n\n  /**\n   * WHY? When group is contracted we need to understand the represent atom to calculate position.\n   * It is not always the attachmentPoint!! if no attachment point - use the first atom\n   */\n  getContractedPosition(struct: Struct): {\n    atomId: number;\n    position: Vec2;\n  } {\n    let atomId = this.attachmentPoints[0]?.atomId;\n    let representAtom = struct.atoms.get(atomId);\n    // if there is no attachment points in sgroup - use first externally connected atom if exist or just first atom\n    if (!representAtom) {\n      let externalConnectionAtom;\n      struct.bonds.forEach((bond) => {\n        const isBeginAtomInCurrentSgroup =\n          this.atoms.indexOf(bond.begin) !== -1;\n        const isEndAtomInCurrentSgroup = this.atoms.indexOf(bond.end) !== -1;\n\n        if (isBeginAtomInCurrentSgroup && !isEndAtomInCurrentSgroup) {\n          externalConnectionAtom = bond.begin;\n        } else if (isEndAtomInCurrentSgroup && !isBeginAtomInCurrentSgroup) {\n          externalConnectionAtom = bond.end;\n        }\n      });\n\n      atomId = isNumber(externalConnectionAtom)\n        ? externalConnectionAtom\n        : this.atoms[0];\n      representAtom = struct.atoms.get(atomId);\n    }\n    assert(representAtom != null);\n    return { atomId, position: representAtom.pp };\n  }\n\n  cloneAttachmentPoints(\n    atomIdMap: Map<number, number>,\n  ): ReadonlyArray<SGroupAttachmentPoint> {\n    return this.attachmentPoints.map((point) => point.clone(atomIdMap));\n  }\n\n  public get isSuperatomWithoutLabel() {\n    return this.type === SGroup.TYPES.SUP && !this.data.name;\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp || !sgroup.bracketBox) return null;\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1);\n  }\n\n  static isSaltOrSolvent(moleculeName: string): boolean {\n    const saltsAndSolventsProvider = SaltsAndSolventsProvider.getInstance();\n    const saltsAndSolvents = saltsAndSolventsProvider.getSaltsAndSolventsList();\n    return saltsAndSolvents.some(\n      ({ name, abbreviation }) =>\n        name === moleculeName || moleculeName === abbreviation,\n    );\n  }\n\n  static isAtomInSaltOrSolvent(\n    atomId: number,\n    sgroupsOnCanvas: SGroup[],\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name),\n    );\n    return onlySaltsOrSolvents.some(({ atoms }) =>\n      atoms.some((atomIdInSaltOrSolvent) => atomIdInSaltOrSolvent === atomId),\n    );\n  }\n\n  static isBondInSaltOrSolvent(\n    bondId: number,\n    sgroupsOnCanvas: SGroup[],\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name),\n    );\n    return onlySaltsOrSolvents.some(({ bonds }) =>\n      bonds.some((bondIdInSaltOrSolvent) => bondIdInSaltOrSolvent === bondId),\n    );\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = [];\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i];\n      if (typeof map[aid] !== 'number') newAtoms.push(aid);\n      else if (map[aid] >= 0) newAtoms.push(map[aid]);\n      else newAtoms.push(-1);\n    }\n    return newAtoms;\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = [];\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j]);\n    }\n    return newAtoms;\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap));\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type);\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field];\n    });\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem));\n    cp.pp = sgroup.pp;\n    cp.bracketBox = sgroup.bracketBox;\n    cp.patoms = null;\n    cp.bonds = null;\n    cp.allAtoms = sgroup.allAtoms;\n    cp.data.expanded = sgroup.data.expanded;\n    cp.addAttachmentPoints(sgroup.cloneAttachmentPoints(aidMap));\n    return cp;\n  }\n\n  static addAtom(sgroup: SGroup, aid: number, struct: Struct): void {\n    sgroup.atoms.push(aid);\n    if (sgroup.isNotContractible(struct)) {\n      sgroup.setAttr('expanded', true);\n    }\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    if (!sgroup) {\n      return;\n    }\n\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>,\n  ): { [key: number]: Array<number> } {\n    const crossBonds: { [key: number]: Array<number> } = {};\n    mol.bonds.forEach((bond, bid: number) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = [];\n        }\n        crossBonds[bond.begin].push(bid);\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = [];\n        }\n        crossBonds[bond.end].push(bid);\n      }\n    });\n    return crossBonds;\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom?: { [key: number]: Array<number> },\n    remol?: ReStruct,\n    render?,\n  ): void {\n    const BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3);\n    const PADDING_VECTOR = new Vec2(0.2, 0.4);\n    const atoms = sGroup.atoms;\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null;\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDirection = new Vec2(1, 0);\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol);\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol);\n      sGroup.bracketDirection = Vec2.diff(p2, p1).normalized();\n    }\n    const d = sGroup.bracketDirection;\n\n    let braketBox: Box2Abs | null = null;\n    const contentBoxes: Array<any> = [];\n    const getAtom = (aid) => {\n      if (remol && render) {\n        return remol.atoms.get(aid);\n      }\n      return mol.atoms.get(aid);\n    };\n    atoms.forEach((aid) => {\n      const atom = getAtom(aid);\n      let position;\n      let structBoundingBox;\n      if ('getVBoxObj' in atom && render) {\n        structBoundingBox = atom.getVBoxObj(render);\n      } else {\n        position = new Vec2(atom.pp);\n        structBoundingBox = new Box2Abs(position, position);\n      }\n      contentBoxes.push(structBoundingBox.extend(BORDER_EXT, BORDER_EXT));\n    });\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null;\n      [bba.p0.x, bba.p1.x].forEach((x) => {\n        [bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y);\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)));\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p);\n        });\n      });\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!);\n    });\n    if (!render) {\n      const vext = new Vec2(0.2, 0.4);\n      if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext);\n    } else {\n      let attachmentPointsVBox =\n        render.ctab.getRGroupAttachmentPointsVBoxByAtomIds(atoms);\n      attachmentPointsVBox = attachmentPointsVBox\n        ? attachmentPointsVBox.extend(BORDER_EXT, BORDER_EXT)\n        : attachmentPointsVBox;\n      braketBox =\n        attachmentPointsVBox && braketBox\n          ? Box2Abs.union(braketBox, attachmentPointsVBox)\n          : braketBox;\n      if (braketBox)\n        braketBox = (braketBox as Box2Abs).extend(\n          PADDING_VECTOR,\n          PADDING_VECTOR,\n        );\n    }\n    sGroup.bracketBox = braketBox;\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n,\n  ): Array<any> {\n    const brackets: Array<any> = [];\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom);\n    const crossBonds = crossBondsPerAtomValues.flat();\n    if (crossBonds.length < 2) {\n      (function () {\n        d = d || new Vec2(1, 0);\n        n = n || d.rotateSC(1, 0);\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3);\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y));\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y));\n        const bracketHeight = bb.sz().y;\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight),\n        );\n      })();\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      (function () {\n        const b1 = mol.bonds.get(crossBonds[0]);\n        const b2 = mol.bonds.get(crossBonds[1]);\n        const cl0 = b1.getCenter(mol);\n        const cr0 = b2.getCenter(mol);\n        const dr = Vec2.diff(cr0, cl0).normalized();\n        const dl = dr.negated();\n\n        const bracketWidth = 0.25;\n        const bracketHeight = 1.5;\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight,\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight,\n          ),\n        );\n      })();\n    } else {\n      (function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i]);\n          const c = b.getCenter(mol);\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated();\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0));\n        }\n      })();\n    }\n    return brackets;\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp;\n    let bb = new Box2Abs(a0, a0);\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i];\n      const atom = mol.atoms.get(aid);\n      const p = atom.pp;\n      bb = bb.include(p);\n    }\n    return bb;\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms;\n    const atoms: Array<any> = [];\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid);\n    });\n    return atoms;\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg);\n    const bonds: Array<any> = [];\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid);\n      }\n    });\n    return bonds;\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b);\n    sgroup.atomSet = new Pile(sgroup.atoms);\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet);\n    const inBonds: Array<any> = [];\n    const xBonds: Array<any> = [];\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid);\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid);\n      }\n    });\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number');\n    }\n\n    let xAtom1 = -1;\n    let xAtom2 = -1;\n    let crossBond = null;\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0]);\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end;\n\n      const bond2 = mol.bonds.get(xBonds[1]);\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end;\n      crossBond = bond2;\n    }\n\n    let tailAtom = xAtom2;\n\n    const newAtoms: Array<any> = [];\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {};\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid);\n        const aid2 = mol.atoms.add(new Atom(atom));\n        newAtoms.push(aid2);\n        sgroup.atomSet.add(aid2);\n        amap[aid] = aid2;\n      });\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid);\n        const newBond = new Bond(bond);\n        newBond.begin = amap[newBond.begin];\n        newBond.end = amap[newBond.end];\n        mol.bonds.add(newBond);\n      });\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond);\n        newCrossBond.begin = tailAtom;\n        newCrossBond.end = amap[xAtom1];\n        mol.bonds.add(newCrossBond);\n        tailAtom = amap[xAtom2];\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1]);\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom;\n      else xBond2.end = tailAtom;\n    }\n    sgroup.bonds = xBonds;\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid);\n        });\n    });\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2(); // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length);\n    }\n    return c;\n  }\n\n  static isAtomInContractedSGroup = (atom, sGroups) => {\n    const contractedSGroup: number[] = [];\n\n    sGroups.forEach((sGroupOrReSGroup) => {\n      const sGroup =\n        'item' in sGroupOrReSGroup ? sGroupOrReSGroup.item : sGroupOrReSGroup;\n      if (sGroup.isContracted()) {\n        contractedSGroup.push(sGroup.id);\n      }\n    });\n    return contractedSGroup.some((sg) => atom.sgs.has(sg));\n  };\n\n  static isBondInContractedSGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n  ) {\n    return [...sGroups.values()].some((sGroupOrReSGroup) => {\n      const sGroup: SGroup | undefined =\n        'item' in sGroupOrReSGroup ? sGroupOrReSGroup.item : sGroupOrReSGroup;\n      const atomsInSGroup = sGroup?.atoms;\n      return (\n        sGroup?.isContracted() &&\n        atomsInSGroup.includes(bond?.begin) &&\n        atomsInSGroup.includes(bond?.end)\n      );\n    });\n  }\n\n  static isSuperAtom(sGroup?: SGroup): boolean {\n    if (!sGroup) {\n      return false;\n    }\n    return sGroup?.type === SGroup.TYPES.SUP;\n  }\n\n  static isDataSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.DAT;\n  }\n\n  static isQuerySGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.queryComponent;\n  }\n\n  static isSRUSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.SRU;\n  }\n\n  static isMulSGroup(sGroup: SGroup): boolean {\n    return sGroup.type === SGroup.TYPES.MUL;\n  }\n}\n\nfunction descriptorIntersects(sgroups: SGroup[], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false;\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5));\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5));\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint,\n    );\n  });\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ReSGroup } from 'application/render';\nimport assert from 'assert';\nimport { FunctionalGroupsProvider } from '../helpers';\nimport { Atom } from './atom';\nimport { Bond } from './bond';\nimport { Pool } from './pool';\nimport { SGroup } from './sgroup';\nimport { Struct } from './struct';\nimport { HalfBond } from './halfBond';\n\nexport class FunctionalGroup {\n  #sgroup: SGroup;\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null);\n\n    this.#sgroup = sgroup;\n    sgroup.setFunctionalGroup(this);\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name;\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id;\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded;\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup;\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance();\n    const functionalGroups = provider.getFunctionalGroupsList();\n    const {\n      data: { name },\n      type,\n    } = sgroup;\n    return (\n      type === 'SUP' &&\n      (functionalGroups.some((type) => type.name === name) ||\n        SGroup.isSaltOrSolvent(name))\n    );\n  }\n\n  static atomsInFunctionalGroup(\n    functionalGroups,\n    atom,\n    isNeedCheckForGroups = false,\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null;\n    }\n    for (const fg of functionalGroups.values()) {\n      const isFunctionalGroup = isNeedCheckForGroups\n        ? this.isFunctionalGroup(fg.relatedSGroup)\n        : true;\n      if (isFunctionalGroup && fg.relatedSGroup.atoms.includes(atom))\n        return atom;\n    }\n    return null;\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond,\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null;\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup);\n      if (bonds.includes(bond)) return bond;\n    }\n    return null;\n  }\n\n  static isRGroupAttachmentPointInsideFunctionalGroup(\n    molecule: Struct,\n    id: number,\n  ) {\n    const rgroupAttachmentPoint = molecule.rgroupAttachmentPoints.get(id);\n    assert(rgroupAttachmentPoint != null);\n    const attachedAtom = rgroupAttachmentPoint.atomId;\n    return FunctionalGroup.atomsInFunctionalGroup(\n      molecule.functionalGroups,\n      attachedAtom,\n    );\n  }\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n  ): number | null;\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned: true,\n  ): FunctionalGroup | null;\n\n  static findFunctionalGroupByAtom(\n    functionalGroups: Pool<FunctionalGroup>,\n    atomId: number,\n    isFunctionalGroupReturned?: boolean,\n  ): number | FunctionalGroup | null {\n    for (const fg of functionalGroups.values()) {\n      if (\n        !fg.relatedSGroup.isSuperatomWithoutLabel &&\n        fg.relatedSGroup.atoms.includes(atomId)\n      )\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId;\n    }\n    return null;\n  }\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n  ): number | null;\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned: true,\n  ): FunctionalGroup | null;\n\n  static findFunctionalGroupByBond(\n    molecule: Struct,\n    functionalGroups: Pool<FunctionalGroup>,\n    bondId: number | null,\n    isFunctionalGroupReturned?: boolean,\n  ): FunctionalGroup | number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup);\n      if (!fg.relatedSGroup.isSuperatomWithoutLabel && bonds.includes(bondId)) {\n        return isFunctionalGroupReturned ? fg : fg.relatedSGroupId;\n      }\n    }\n    return null;\n  }\n\n  static findFunctionalGroupBySGroup(\n    functionalGroups: Pool<FunctionalGroup>,\n    sGroup?: SGroup,\n  ) {\n    const key = functionalGroups.find(\n      (_, functionalGroup) => functionalGroup.relatedSGroupId === sGroup?.id,\n    );\n    return key !== null ? functionalGroups.get(key) : undefined;\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup);\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom: Atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean,\n  ): boolean {\n    const contractedFunctionalGroups: number[] = [];\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.item, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.item.id);\n        }\n      });\n    } else {\n      sgroups.forEach((sg) => {\n        if (FunctionalGroup.isContractedFunctionalGroup(sg, functionalGroups)) {\n          contractedFunctionalGroups.push(sg.id);\n        }\n      });\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg));\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond: Bond,\n    sGroups: Map<number, ReSGroup> | Pool<SGroup>,\n    functionalGroups: Pool<FunctionalGroup>,\n  ) {\n    return [...sGroups.values()].some((_sGroup) => {\n      const sGroup = 'item' in _sGroup ? _sGroup?.item : _sGroup;\n      const atomsInSGroup = sGroup?.atoms;\n      const isContracted = FunctionalGroup.isContractedFunctionalGroup(\n        sGroup,\n        functionalGroups,\n      );\n      return (\n        isContracted &&\n        atomsInSGroup.includes(bond.begin) &&\n        atomsInSGroup.includes(bond.end)\n      );\n    });\n  }\n\n  static isHalfBondInContractedFunctionalGroup(\n    halfBond: HalfBond,\n    struct: Struct,\n  ) {\n    const bond = struct.bonds.get(halfBond.bid);\n    assert(bond != null);\n    return this.isBondInContractedFunctionalGroup(\n      bond,\n      struct.sgroups,\n      struct.functionalGroups,\n    );\n  }\n\n  static isContractedFunctionalGroup(sgroup, functionalGroups): boolean {\n    let isFunctionalGroup = false;\n    let expanded = false;\n\n    if (sgroup instanceof SGroup) {\n      if (sgroup.functionalGroup) {\n        isFunctionalGroup = true;\n        expanded = sgroup.functionalGroup.isExpanded;\n      }\n    } else {\n      functionalGroups.forEach((fg) => {\n        if (fg.relatedSGroupId === sgroup) {\n          isFunctionalGroup = true;\n          expanded = fg.isExpanded;\n        }\n      });\n    }\n    return !expanded && isFunctionalGroup;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2';\nimport assert from 'assert';\n\n/** @internal */\nexport class HalfBond {\n  begin: number;\n  end: number;\n  bid: number;\n  dir: Vec2;\n  norm: Vec2;\n  ang: number;\n  p: Vec2;\n  loop: number;\n  contra: number;\n  next: number;\n  leftSin: number;\n  leftCos: number;\n  leftNeighbor: number;\n  rightSin: number;\n  rightCos: number;\n  rightNeighbor: number;\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.');\n\n    this.begin = begin;\n    this.end = end;\n    this.bid = bid;\n\n    // rendering properties\n    this.dir = new Vec2(); // direction\n    this.norm = new Vec2(); // left normal\n    this.ang = 0; // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2(); // corrected origin position\n    this.loop = -1; // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1; // the half bond contrary to this one\n    this.next = -1; // the half-bond next ot this one in CCW order\n    this.leftSin = 0;\n    this.leftCos = 0;\n    this.leftNeighbor = 0;\n    this.rightSin = 0;\n    this.rightCos = 0;\n    this.rightNeighbor = 0;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond';\nimport { Struct } from './struct';\n\nexport class Loop {\n  hbs: number[];\n  dblBonds: number;\n  aromatic: boolean;\n  convex: boolean;\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs; // set of half-bonds involved\n    this.dblBonds = 0; // number of double bonds in the loop\n    this.aromatic = true;\n    this.convex = isConvex || false;\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!;\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false;\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++;\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile';\nimport { Pool } from './pool';\n\nexport interface RGroupAttributes {\n  index?: number;\n  ifthen?: number;\n  resth?: boolean;\n  range?: string;\n}\nexport class RGroup {\n  frags: Pile<number>;\n  resth: boolean;\n  range: string;\n  ifthen: number;\n  index: number;\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>();\n    this.resth = atrributes?.resth || false;\n    this.range = atrributes?.range || '';\n    this.ifthen = atrributes?.ifthen || 0;\n    this.index = atrributes?.index || -1;\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid));\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index,\n    };\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this);\n    this.frags.forEach((fid) => {\n      if (!fidMap || fidMap.has(fid)) {\n        ret.frags.add(fidMap ? fidMap.get(fid)! : fid);\n      }\n    });\n    return ret;\n  }\n}\n","import {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport type RGroupAttachmentPointType = 'primary' | 'secondary';\n\nexport class RGroupAttachmentPoint extends BaseMicromoleculeEntity {\n  atomId: number;\n  type: RGroupAttachmentPointType;\n\n  constructor(\n    atomId: number,\n    type: RGroupAttachmentPointType,\n    initiallySelected?: initiallySelectedType,\n  ) {\n    super(initiallySelected);\n    this.atomId = atomId;\n    this.type = type;\n  }\n\n  clone(atomToNewAtom?: Map<number, number> | null) {\n    const newAtomId = atomToNewAtom?.get(this.atomId);\n    return new RGroupAttachmentPoint(\n      newAtomId ?? this.atomId,\n      this.type,\n      this.initiallySelected,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle',\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode;\n  pos?: Array<Point>;\n  height?: number;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class RxnArrow extends BaseMicromoleculeEntity {\n  mode: RxnArrowMode;\n  pos: Array<Vec2>;\n  height?: number;\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle,\n    ].includes(arrow.mode);\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = [];\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i];\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2();\n      }\n    }\n    this.mode = attributes.mode;\n    const defaultHeight = 2;\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight;\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this);\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1]);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport interface RxnPlusAttributes {\n  pp?: Point;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class RxnPlus extends BaseMicromoleculeEntity {\n  pp: Vec2;\n\n  constructor(attributes?: RxnPlusAttributes) {\n    super(attributes?.initiallySelected);\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2();\n  }\n\n  clone() {\n    return new RxnPlus(this);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile';\nimport { SGroup } from './sgroup';\nimport assert from 'assert';\nimport { Struct } from './struct';\nimport { KetcherLogger } from 'utilities';\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>;\n  /** node id -> list of child ids */\n  children: Map<number, number[]>;\n  atomSets: Map<number, any>;\n\n  constructor() {\n    this.parent = new Map();\n    this.children = new Map();\n\n    this.children.set(-1, []); // extra root node\n    this.atomSets = new Map();\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = [];\n    const queue = Array.from(this.children.get(-1) as Array<number>);\n    while (queue.length > 0) {\n      const id = queue.shift();\n      if (typeof id !== 'number') {\n        break;\n      }\n      const children = this.children.get(id);\n      if (typeof children === 'undefined') {\n        break;\n      }\n\n      children.forEach((id) => {\n        queue.push(id);\n      });\n\n      order.push(id);\n    }\n\n    return order;\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map();\n    const isSubset = new Map();\n\n    this.atomSets.delete(newId);\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms));\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms),\n      );\n    });\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false;\n      }\n      const childs = this.children.get(sgid);\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0;\n    });\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id)),\n    );\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0],\n    };\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = [];\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id);\n    }\n    return path;\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest');\n    assert(!this.children.has(id), 'sgid already present in the forest');\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms));\n      parent = guess.parent;\n      children = guess.children;\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id);\n    });\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id)),\n    );\n    this.parent.set(id, parent);\n    this.children.get(parent)?.push(id);\n    this.atomSets.set(id, new Pile(atoms));\n\n    return { parent, children };\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId);\n    if (typeof parentId === 'undefined') {\n      return;\n    }\n\n    const childs = this.children.get(parentId);\n    if (!childs) {\n      return;\n    }\n\n    const childIndex = childs.indexOf(childId);\n    childs.splice(childIndex, 1);\n    this.parent.set(childId, id);\n  }\n\n  remove(id) {\n    try {\n      assert(this.parent.has(id), 'sgid is not in the forest');\n      assert(this.children.has(id), 'sgid is not in the forest');\n    } catch (e) {\n      KetcherLogger.error('sgroupForest.ts::SGroupForest::remove', e);\n      console.info('error: sgid is not in the forest');\n    }\n\n    const parentId = this.parent.get(id) as any;\n    const childs = this.children.get(parentId) as any;\n\n    if (!parentId || !childs) return;\n\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId);\n      this.children.get(parentId)?.push(childId);\n    });\n\n    const i = childs.indexOf(id);\n    childs.splice(i, 1);\n\n    this.children.delete(id);\n    this.parent.delete(id);\n    this.atomSets.delete(id);\n  }\n}\n\nexport function checkOverlapping(\n  struct: Struct,\n  atoms: number[] = [],\n  sGroupType: 'queryComponent' | 'common',\n) {\n  const searchFunction = {\n    common: (sid: number) => {\n      const sg = struct.sgroups.get(sid);\n      if (sg?.type === 'DAT') return false;\n      const sgAtoms = SGroup.getAtoms(struct, sg);\n\n      return sgAtoms.length < atoms.length\n        ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n        : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0;\n    },\n    queryComponent: (sid: number) => {\n      const sg = struct.sgroups.get(sid);\n      if (sg?.type !== 'queryComponent') return false;\n      const sgAtoms = SGroup.getAtoms(struct, sg);\n\n      return atoms.some((aid) => sgAtoms.includes(aid));\n    },\n  };\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid);\n    return atom ? res.union(atom.sgs) : res;\n  }, new Pile());\n\n  return Array.from(sgroups).some(searchFunction[sGroupType]);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line',\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode;\n  pos?: Array<Point>;\n  initiallySelected?: initiallySelectedType;\n}\n\nexport class SimpleObject extends BaseMicromoleculeEntity {\n  pos: Array<Vec2>;\n  mode: SimpleObjectMode;\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = [];\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i];\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2();\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line;\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this);\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1]);\n      }\n      default:\n        return this.pos[0];\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0;\n\n  add(item: TValue): number {\n    const id = this.nextId++;\n    super.set(id, item);\n    return id;\n  }\n\n  newId(): number {\n    return this.nextId++;\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key;\n    }\n\n    return null;\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key;\n    }\n\n    return null;\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value)),\n    );\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  changeInitiallySelectedPropertiesForPool(invalidate?: boolean): void {\n    this.forEach((value, key) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      if (typeof value.resetInitiallySelected === 'function') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        value.resetInitiallySelected(invalidate);\n        this.set(key, value);\n      }\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { SGroup } from 'domain/entities/sgroup';\nimport { Struct } from 'domain/entities/struct';\nimport assert from 'assert';\n\nexport class MonomerMicromolecule extends SGroup {\n  constructor(type: string, public monomer) {\n    super(type);\n    this.data.absolute = false;\n    this.data.attached = false;\n  }\n\n  public override getContractedPosition(struct: Struct) {\n    assert(this.pp);\n    const sgroupContractedPosition = super.getContractedPosition(struct);\n    return { position: this.pp, atomId: sgroupContractedPosition.atomId };\n  }\n\n  public static clone(\n    monomerMicromolecule: MonomerMicromolecule,\n    atomIdMap?: Map<number, number>,\n  ) {\n    const monomerMicromoleculeClone = new MonomerMicromolecule(\n      monomerMicromolecule.type,\n      monomerMicromolecule.monomer,\n    );\n    monomerMicromoleculeClone.pp = monomerMicromolecule.pp;\n    monomerMicromoleculeClone.atoms = atomIdMap\n      ? monomerMicromolecule.atoms.map((elem) => atomIdMap.get(elem))\n      : monomerMicromolecule.atoms;\n\n    return monomerMicromoleculeClone;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert';\nimport { Atom, radicalElectrons } from './atom';\nimport { EditorSelection } from 'application/editor';\nimport { Bond } from './bond';\nimport { Box2Abs } from './box2Abs';\nimport { Elements } from 'domain/constants';\nimport { Fragment } from './fragment';\nimport { FunctionalGroup } from './functionalGroup';\nimport { HalfBond } from './halfBond';\nimport { Loop } from './loop';\nimport { Pile } from './pile';\nimport { Pool } from './pool';\nimport { RGroup } from './rgroup';\nimport { RxnArrow } from './rxnArrow';\nimport { RxnPlus } from './rxnPlus';\nimport { SGroup } from './sgroup';\nimport { SGroupForest } from './sgroupForest';\nimport { SimpleObject } from './simpleObject';\nimport { Text } from './text';\nimport { Vec2 } from './vec2';\nimport { Highlight } from './highlight';\nimport { RGroupAttachmentPoint } from './rgroupAttachmentPoint';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { isNumber } from 'lodash';\nimport { Image } from './image';\n\nexport type Neighbor = {\n  aid: number;\n  bid: number;\n};\n\nexport type StructProperty = {\n  key: string;\n  value: string;\n};\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false;\n  }\n  array.push(item);\n  return true;\n}\n\nexport class Struct {\n  atoms: Pool<Atom>;\n  bonds: Pool<Bond>;\n  sgroups: Pool<SGroup>;\n  halfBonds: Pool<HalfBond>;\n  loops: Pool<Loop>;\n  isReaction: boolean;\n  rxnArrows: Pool<RxnArrow>;\n  rxnPluses: Pool<RxnPlus>;\n  frags: Pool<Fragment | null>;\n  rgroups: Pool<RGroup>;\n  rgroupAttachmentPoints: Pool<RGroupAttachmentPoint>;\n  name: string;\n  abbreviation?: string;\n  sGroupForest: SGroupForest;\n  simpleObjects: Pool<SimpleObject>;\n  images: Pool<Image>;\n  texts: Pool<Text>;\n  functionalGroups: Pool<FunctionalGroup>;\n  highlights: Pool<Highlight>;\n\n  constructor() {\n    this.atoms = new Pool<Atom>();\n    this.bonds = new Pool<Bond>();\n    this.sgroups = new Pool<SGroup>();\n    this.halfBonds = new Pool<HalfBond>();\n    this.loops = new Pool<Loop>();\n    this.isReaction = false;\n    this.rxnArrows = new Pool<RxnArrow>();\n    this.rxnPluses = new Pool<RxnPlus>();\n    this.frags = new Pool<Fragment>();\n    this.rgroups = new Pool<RGroup>();\n    this.rgroupAttachmentPoints = new Pool<RGroupAttachmentPoint>();\n    this.name = '';\n    this.abbreviation = '';\n    this.sGroupForest = new SGroupForest();\n    this.simpleObjects = new Pool<SimpleObject>();\n    this.texts = new Pool<Text>();\n    this.functionalGroups = new Pool<FunctionalGroup>();\n    this.highlights = new Pool<Highlight>();\n    this.images = new Pool<Image>();\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    );\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1;\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0;\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses();\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0 &&\n      this.images.size === 0\n    );\n  }\n\n  isSingleGroup(): boolean {\n    if (!this.sgroups.size || this.sgroups.size > 1) return false;\n    const sgroup = this.sgroups.values().next().value; // get sgroup from map\n    return this.atoms.size === sgroup.atoms.length;\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null,\n    rgroupAttachmentPointSet?: Pile<number> | null,\n    imagesSet?: Pile<number> | null,\n    bidMap?: Map<number, number> | null,\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet,\n      rgroupAttachmentPointSet,\n      imagesSet,\n      bidMap,\n    );\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>();\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid);\n    });\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid);\n        });\n      });\n    });\n\n    return this.clone(atomSet);\n  }\n\n  getFragmentIds(_fid: number | number[]): Pile<number> {\n    const atomSet = new Pile<number>();\n    const fid = Array.isArray(_fid) ? _fid : [_fid];\n    this.atoms.forEach((atom, aid) => {\n      if (fid.includes(atom.fragment)) atomSet.add(aid);\n    });\n\n    return atomSet;\n  }\n\n  getFragment(\n    fid: number | number[],\n    copyNonFragmentObjects = true,\n    aidMap?: Map<number, number>,\n  ): Struct {\n    return this.clone(\n      this.getFragmentIds(fid),\n      null,\n      true,\n      aidMap,\n      copyNonFragmentObjects ? undefined : new Pile(),\n      copyNonFragmentObjects ? undefined : new Pile(),\n      copyNonFragmentObjects ? undefined : new Pile(),\n      copyNonFragmentObjects ? undefined : new Pile(),\n    );\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null,\n    rgroupAttachmentPointSet?: Pile<number> | null,\n    imagesSet?: Pile<number> | null,\n    bidMapEntity?: Map<number, number> | null,\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys());\n    bondSet = bondSet || new Pile<number>(this.bonds.keys());\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys());\n    textsSet = textsSet || new Pile<number>(this.texts.keys());\n    imagesSet = imagesSet || new Pile<number>(this.images.keys());\n    rgroupAttachmentPointSet =\n      rgroupAttachmentPointSet ||\n      new Pile<number>(this.rgroupAttachmentPoints.keys());\n    aidMap = aidMap || new Map();\n    const bidMap = bidMapEntity || new Map();\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!;\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end);\n    });\n\n    const fidMask = new Pile();\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment);\n    });\n\n    const fidMap = new Map();\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null));\n    });\n\n    const rgroupsIds: Array<number> = [];\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups;\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid);\n          if (fidMask.has(fid)) keepGroup = true;\n        });\n\n        if (!keepGroup) return;\n      }\n\n      const rg = cp.rgroups.get(rgid);\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid);\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid));\n        });\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap));\n      }\n    });\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)));\n      }\n    });\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)));\n      }\n    });\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid);\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)); // clone Fragments\n      }\n    });\n\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)));\n    });\n\n    const sgroupIdMap = {};\n    this.sgroups.forEach((sg, sgroupId) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return;\n      const oldSgroup = sg;\n\n      sg =\n        oldSgroup instanceof MonomerMicromolecule\n          ? MonomerMicromolecule.clone(oldSgroup, aidMap!)\n          : SGroup.clone(sg, aidMap!);\n\n      const id = cp.sgroups.add(sg);\n      sg.id = id;\n\n      sgroupIdMap[sgroupId] = id;\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid);\n        if (atom) {\n          atom.sgs.add(id);\n        }\n      });\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, []);\n      else cp.sGroupForest.insert(sg);\n    });\n\n    this.functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroup.atoms.some((aid) => !atomSet!.has(aid))) return;\n      const sgroup = cp.sgroups.get(sgroupIdMap[fg.relatedSGroupId]);\n      // It is possible that there is no sgroup in case of templates library rendering\n      // Sgroup is deleteing before render to show templates without brackets (see RenderStruct.prepareStruct method)\n      fg = sgroup ? new FunctionalGroup(sgroup) : FunctionalGroup.clone(fg);\n      cp.functionalGroups.add(fg);\n    });\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone());\n    });\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone());\n    });\n\n    imagesSet.forEach((id) => {\n      cp.images.add(this.images.get(id)!.clone());\n    });\n\n    rgroupAttachmentPointSet.forEach((id) => {\n      const rgroupAttachmentPoint = this.rgroupAttachmentPoints.get(id);\n      assert(rgroupAttachmentPoint != null);\n      cp.rgroupAttachmentPoints.add(rgroupAttachmentPoint.clone(aidMap));\n    });\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction;\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone());\n      });\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone());\n      });\n    }\n\n    cp.name = this.name;\n\n    return cp;\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds();\n    this.initNeighbors();\n    this.updateHalfBonds(Array.from(this.atoms.keys()));\n    this.sortNeighbors(Array.from(this.atoms.keys()));\n    this.findLoops();\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid, this);\n    this.atoms.get(aid)!.sgs.add(sgid);\n  }\n\n  calcConn(atom) {\n    let conn = 0;\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!;\n      const bond = this.bonds.get(hb.bid)!;\n\n      if (Bond.isBondToHiddenLeavingGroup(this, bond)) {\n        continue;\n      }\n\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1;\n          break;\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2;\n          break;\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3;\n          break;\n        case Bond.PATTERN.TYPE.DATIVE:\n          break;\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break;\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true];\n          return [atom.neighbors.length, true];\n        default:\n          return [-1, false];\n      }\n    }\n    return [conn, false];\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin),\n    );\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = [];\n    });\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!;\n      const a2 = this.atoms.get(bond.end)!;\n      a1.neighbors.push(bond.hb1!);\n      a2.neighbors.push(bond.hb2!);\n    });\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!;\n    bond.hb1 = 2 * bid;\n    bond.hb2 = 2 * bid + 1; // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid));\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid));\n    const hb1 = this.halfBonds.get(bond.hb1)!;\n    const hb2 = this.halfBonds.get(bond.hb2)!;\n    hb1.contra = bond.hb2;\n    hb2.contra = bond.hb1;\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!;\n    const sgroup1 = this.getGroupFromAtomId(halfBond.begin);\n    const sgroup2 = this.getGroupFromAtomId(halfBond.end);\n    const startCoords =\n      sgroup1 instanceof MonomerMicromolecule\n        ? (sgroup1.pp as Vec2)\n        : this.atoms.get(halfBond.begin)!.pp;\n    const endCoords =\n      sgroup2 instanceof MonomerMicromolecule\n        ? (sgroup2.pp as Vec2)\n        : this.atoms.get(halfBond.end)!.pp;\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized();\n\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0);\n    halfBond.norm = halfBond.dir.turnLeft();\n    halfBond.ang = halfBond.dir.oxAngle();\n    if (halfBond.loop < 0) halfBond.loop = -1;\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear();\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond);\n    });\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next;\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!;\n    const hbl = this.halfBonds.get(left)!;\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir);\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir);\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir);\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir);\n\n    hb.leftNeighbor = left;\n    hbl.rightNeighbor = hbid;\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!;\n    const atom = this.atoms.get(hb.begin)!;\n\n    let i;\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break;\n    }\n    atom.neighbors.splice(i, 0, hbid);\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length];\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length];\n    this.setHbNext(il, hbid);\n    this.setHbNext(hbid, ir);\n    this.halfBondSetAngle(hbid, il);\n    this.halfBondSetAngle(ir, hbid);\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!;\n    const halfBonds = this.halfBonds;\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length];\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei;\n        this.halfBondSetAngle(nextNei, nei);\n      });\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid);\n      });\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid);\n      });\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid);\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra);\n    });\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId);\n      });\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId);\n      });\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = [];\n      sg.neiAtoms = [];\n    });\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!;\n      const a2 = this.atoms.get(bond.end)!;\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!;\n          sg.xBonds.push(bid);\n          arrayAddIfMissing(sg.neiAtoms, bond.end);\n        }\n      });\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!;\n          sg.xBonds.push(bid);\n          arrayAddIfMissing(sg.neiAtoms, bond.begin);\n        }\n      });\n    });\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid);\n    });\n\n    this.sGroupForest.remove(sgid);\n    this.sgroups.delete(sgid);\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!;\n    item.pp = pp;\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!;\n    item.pp = pp;\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id);\n    if (item) {\n      item.pos = pos;\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!;\n    item.pos = pos;\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id);\n\n    if (item) {\n      item.position = position;\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null;\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp,\n        };\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec);\n            bb.max = Vec2.max(bb.max, vec);\n          });\n        } else {\n          bb.min = Vec2.min(bb.min, pp);\n          bb.max = Vec2.max(bb.max, pp);\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0;\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp);\n    });\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp);\n      });\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos);\n      });\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos);\n      });\n      this.texts.forEach((item) => {\n        extend(item.position);\n      });\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1),\n      };\n    }\n    return bb;\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null;\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp),\n        };\n      } else {\n        bb.min = Vec2.min(bb.min, pp);\n        bb.max = Vec2.max(bb.max, pp);\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp);\n    });\n    return bb;\n  }\n\n  getBondLengthData() {\n    let totalLength = 0;\n    let cnt = 0;\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp,\n      );\n      cnt++;\n    });\n    return { cnt, totalLength };\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData();\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1;\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0;\n    let minDist;\n    let dist = 0;\n    const keys = Array.from(this.atoms.keys());\n    let k;\n    let j;\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1;\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue; // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp,\n        );\n        if (minDist < 0 || minDist > dist) minDist = dist;\n      }\n      totalDist += minDist;\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1;\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end),\n    );\n\n    return key !== undefined;\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid];\n    const ids = new Pile<number>();\n    while (list.length > 0) {\n      const aid = list.pop()!;\n      ids.add(aid);\n      const atom = this.atoms.get(aid)!;\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end;\n        if (!ids.has(neiId)) list.push(neiId);\n      });\n    }\n\n    return ids;\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds();\n      this.initNeighbors();\n      this.updateHalfBonds(Array.from(this.atoms.keys()));\n      this.sortNeighbors(Array.from(this.atoms.keys()));\n    }\n\n    let addedAtoms = new Pile<number>();\n\n    const components: Array<any> = [];\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid);\n        components.push(component);\n        addedAtoms = addedAtoms.union(component);\n      }\n    });\n\n    return components;\n  }\n\n  markFragment(idSet: Pile<number>, properties: [StructProperty]) {\n    const frag = new Fragment([], undefined, properties);\n    const fid = this.frags.add(frag);\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!;\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true);\n      atom.fragment = fid;\n    });\n  }\n\n  markFragments(properties?) {\n    const components = this.findConnectedComponents();\n    components.forEach((comp) => {\n      const [firstAtom] = comp;\n      const sgroup = this.getGroupFromAtomId(firstAtom);\n      if (sgroup instanceof MonomerMicromolecule) {\n        return;\n      }\n      this.markFragment(comp, properties);\n    });\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return;\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale);\n    });\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale);\n    });\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale));\n    });\n\n    this.sgroups.forEach((item) => {\n      if (item instanceof MonomerMicromolecule) {\n        return;\n      }\n      item.pp = item.pp ? item.pp.scaled(scale) : null;\n    });\n\n    this.texts.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale));\n      item.position = item.position.scaled(scale);\n    });\n\n    this.simpleObjects.forEach((simpleObjects) => {\n      simpleObjects.pos = simpleObjects.pos.map((p) => p.scaled(scale));\n    });\n\n    this.images.forEach((image) => image.rescaleSize(scale));\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength();\n    if (avg <= 0) {\n      return;\n    }\n    if (avg < 1e-3) avg = 1;\n\n    const scale = 1 / avg;\n    this.scale(scale);\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!;\n      const ai = this.atoms.get(hbi.begin)!.pp;\n      const bi = this.atoms.get(hbi.end)!.pp;\n      const set = new Pile([hbi.begin, hbi.end]);\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!;\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue; // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp;\n        const bj = this.atoms.get(hbj.end)!.pp;\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = [];\n    let continueFlag = true;\n    while (continueFlag) {\n      const atomToHalfBond = {}; // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false;\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l];\n        const aid1 = this.halfBonds.get(hbid)!.begin;\n        const aid2 = this.halfBonds.get(hbid)!.end;\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2]; // where the subloop begins\n          const subloop = loop.slice(s, l + 1);\n          subloops.push(subloop);\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1);\n          }\n          continueFlag = true;\n          break;\n        }\n        atomToHalfBond[aid1] = l;\n      }\n      if (!continueFlag) subloops.push(loop); // we're done, no more subloops found\n    }\n    return subloops;\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!;\n    const hbb = this.halfBonds.get(hbid2)!;\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir));\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length]);\n      return angle <= 0;\n    });\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI;\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length];\n      const hbb = this.halfBonds.get(hbidb)!;\n      const angle = this.halfBondAngle(hbida, hbidb);\n      totalAngle += hbb.contra === hbida ? Math.PI : angle; // back and forth along the same edge\n    });\n    return Math.abs(totalAngle) < Math.PI;\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = [];\n    const bondsToMark = new Pile<number>();\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop;\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return;\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext);\n          continue; // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop);\n        subloops.forEach((loop) => {\n          let loopId;\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop);\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop)),\n            );\n          } else {\n            loopId = -2;\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId;\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid);\n          });\n\n          if (loopId >= 0) newLoops.push(loopId);\n        });\n        break;\n      }\n    });\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark),\n    };\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    if (Atom.isHiddenLeavingGroupAtom(this, aid)) {\n      return;\n    }\n\n    const atom = this.atoms.get(aid)!;\n    const charge = atom.charge || 0;\n    const [conn, isAromatic] = this.calcConn(atom);\n    let correctConn = conn;\n    atom.badConn = false;\n\n    if (isAromatic) {\n      if (atom.label === 'C' && charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical);\n          return;\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical);\n          return;\n        }\n      } else if (\n        (atom.label === 'O' && charge === 0) ||\n        (atom.label === 'N' && charge === 0 && conn === 3) ||\n        (atom.label === 'N' && charge === 1 && conn === 3) ||\n        (atom.label === 'S' && charge === 0 && conn === 3) ||\n        !atom.implicitH\n      ) {\n        atom.implicitH = 0;\n        return;\n      } else if (!atom.hasImplicitH) {\n        correctConn++;\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery() || atom.attachmentPoints) {\n      atom.implicitH = 0;\n      return;\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label);\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0;\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0;\n        atom.badConn = true;\n      }\n    } else {\n      atom.calcValence(correctConn);\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true;\n      }\n    });\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid);\n      });\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid);\n        }\n      });\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!;\n      return {\n        aid: hb.end,\n        bid: hb.bid,\n      };\n    });\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true);\n    const barriers: Array<any> = [];\n    let arrowPos: number | null = null;\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x;\n    });\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x);\n    });\n\n    if (arrowPos !== null) barriers.push(arrowPos);\n\n    barriers.sort((a, b) => a - b);\n\n    const components: Array<any> = [];\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component);\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5);\n      let j = 0;\n\n      while (c.x > barriers[j]) ++j;\n\n      components[j] = components[j] || new Pile();\n      components[j] = components[j].union(component);\n    });\n\n    const submolTexts: Array<string> = [];\n    const reactants: Array<any> = [];\n    const products: Array<any> = [];\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('');\n        return;\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0,\n      );\n\n      if (rxnFragmentType === 1) reactants.push(component);\n      else products.push(component);\n    });\n\n    return {\n      reactants,\n      products,\n    };\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset);\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5);\n    return c.x < arrowpos ? 1 : 2;\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin;\n    return aid && this.atoms.get(aid)?.fragment;\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (\n        FunctionalGroup.isFunctionalGroup(sgroup) ||\n        SGroup.isSuperAtom(sgroup)\n      ) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup));\n      }\n    });\n  }\n\n  getGroupIdFromAtomId(atomId: number): number | null {\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (sgroup.atoms.includes(atomId)) return groupId;\n    }\n    return null;\n  }\n\n  getGroupFromAtomId(atomId: number | undefined): SGroup | undefined {\n    const sgroupId = this.getGroupIdFromAtomId(atomId as number);\n    return this.sgroups?.get(sgroupId as number);\n  }\n\n  // TODO: simplify if bonds ids ever appear in sgroup\n  // ! deprecate\n  getGroupIdFromBondId(bondId: number): number | null {\n    const bond = this.bonds.get(bondId);\n    if (!bond) return null;\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        return groupId;\n      }\n    }\n    return null;\n  }\n\n  getGroupFromBondId(atomId: number): SGroup | undefined {\n    const sgroupId = this.getGroupIdFromBondId(atomId);\n\n    if (!isNumber(sgroupId)) {\n      return;\n    }\n\n    return this.sgroups?.get(sgroupId as number);\n  }\n\n  getGroupsIdsFromBondId(bondId: number): number[] {\n    const bond = this.bonds.get(bondId);\n    if (!bond) return [];\n\n    const groupsIds: number[] = [];\n\n    for (const [groupId, sgroup] of Array.from(this.sgroups)) {\n      if (\n        sgroup.atoms.includes(bond.begin) ||\n        sgroup.atoms.includes(bond.end)\n      ) {\n        groupsIds.push(groupId);\n      }\n    }\n    return groupsIds;\n  }\n\n  getBondIdByHalfBond(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId);\n    if (halfBond) {\n      return halfBond.bid;\n    }\n    return undefined;\n  }\n\n  /**\n   * @returns visibleAtoms = selected atoms\n   *                       - atoms in contracted functional groups\n   *                       + functional groups's attachment atoms\n   */\n  getSelectedVisibleAtoms(selection: EditorSelection | null) {\n    return (\n      selection?.atoms?.filter((atomId) => {\n        const atom = this.atoms.get(atomId);\n        if (!atom) {\n          return false;\n        }\n        const isAtomNotInContractedGroup =\n          !FunctionalGroup.isAtomInContractedFunctionalGroup(\n            atom,\n            this.sgroups,\n            this.functionalGroups,\n            false,\n          );\n        if (isAtomNotInContractedGroup) {\n          return true;\n        }\n        const groupId = this.getGroupIdFromAtomId(atomId);\n        const sgroup = this.sgroups.get(groupId as number);\n        return sgroup?.getAttachmentAtomId() === atomId;\n      }) || []\n    );\n  }\n\n  getRGroupAttachmentPointsByAtomId(atomId: number) {\n    const rgroupAttachmentPoints = this.rgroupAttachmentPoints.filter(\n      (_id, attachmentPoint) => attachmentPoint.atomId === atomId,\n    );\n    return [...rgroupAttachmentPoints.keys()];\n  }\n\n  isAtomFromMacromolecule(atomId: number) {\n    const sgroup = this.getGroupFromAtomId(atomId);\n    return sgroup instanceof MonomerMicromolecule;\n  }\n\n  isBondFromMacromolecule(bondId: number) {\n    const bond = this.bonds.get(bondId);\n\n    assert(bond);\n\n    return (\n      this.isAtomFromMacromolecule(bond.begin) ||\n      this.isAtomFromMacromolecule(bond.end)\n    );\n  }\n\n  isFunctionalGroupFromMacromolecule(functionalGroupId: number) {\n    const functionalGroup = this.functionalGroups.get(functionalGroupId);\n\n    return functionalGroup?.relatedSGroup instanceof MonomerMicromolecule;\n  }\n\n  isTargetFromMacromolecule(target?: { id: number; map: string } | null) {\n    return (\n      target &&\n      ((target.map === 'functionalGroups' &&\n        this.isFunctionalGroupFromMacromolecule(target.id)) ||\n        (target.map === 'atoms' && this.isAtomFromMacromolecule(target.id)) ||\n        (target.map === 'bonds' && this.isBondFromMacromolecule(target.id)))\n    );\n  }\n\n  disableInitiallySelected(): void {\n    // Those fields are used only in serialization/deserialization phase\n    // so we are disabling them to avoid confusion\n    this.atoms.changeInitiallySelectedPropertiesForPool(true);\n    this.bonds.changeInitiallySelectedPropertiesForPool(true);\n    this.rxnPluses.changeInitiallySelectedPropertiesForPool(true);\n    this.rxnArrows.changeInitiallySelectedPropertiesForPool(true);\n    this.texts.changeInitiallySelectedPropertiesForPool(true);\n  }\n\n  enableInitiallySelected(): void {\n    this.atoms.changeInitiallySelectedPropertiesForPool();\n    this.bonds.changeInitiallySelectedPropertiesForPool();\n    this.rxnPluses.changeInitiallySelectedPropertiesForPool();\n    this.rxnArrows.changeInitiallySelectedPropertiesForPool();\n    this.texts.changeInitiallySelectedPropertiesForPool();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2';\nimport {\n  BaseMicromoleculeEntity,\n  initiallySelectedType,\n} from 'domain/entities/BaseMicromoleculeEntity';\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE',\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string;\n  position: Point;\n  pos: Array<Point>;\n  initiallySelected?: initiallySelectedType;\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()];\n  }\n\n  return positions.map((position) => new Vec2(position));\n}\n\nexport class Text extends BaseMicromoleculeEntity {\n  content: string;\n  position: Vec2;\n  pos: Array<Vec2>;\n\n  constructor(attributes?: TextAttributes) {\n    super(attributes?.initiallySelected);\n    this.pos = preparePositions(attributes?.pos);\n    this.content = attributes?.content || '';\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2();\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || [];\n  }\n\n  clone(): Text {\n    return new Text(this);\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Axis, Axises, Struct } from 'domain/entities';\nimport { cloneDeepWith, cloneDeep } from 'lodash';\nimport { EditorSelection } from 'application/editor';\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value);\n    clonedValue.y = -clonedValue.y;\n    return clonedValue;\n  }\n};\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer);\n\nexport const setMonomerTemplatePrefix = (templateName: string) =>\n  `monomerTemplate-${templateName}`;\nexport const setMonomerPrefix = (monomerId: number) => `monomer${monomerId}`;\n\nexport const getKetRef = (entityId: string) => {\n  return { $ref: entityId };\n};\n\nconst rotateCoordAxisBy180Degrees = (position: Vec2, axis: Axises): Vec2 => {\n  const rotatedPosition = {\n    x: position.x,\n    y: position.y,\n    z: position.z,\n  };\n\n  rotatedPosition[axis] = -rotatedPosition[axis];\n\n  return new Vec2(rotatedPosition.x, rotatedPosition.y, rotatedPosition.z);\n};\n\n/**\n *\n * System coordinates for browser and for chemistry files format (mol, ket, etc.) area are different.\n * It needs to rotate them by 180 degrees in y-axis.\n *\n * @param position - coordinates of the structure\n *\n */\nexport const switchIntoChemistryCoordSystem = (position: Vec2) => {\n  return rotateCoordAxisBy180Degrees(position, Axis.y);\n};\n\nexport const populateStructWithSelection = (\n  populatedStruct: Struct,\n  selection?: EditorSelection,\n) => {\n  if (!selection) {\n    return populatedStruct;\n  }\n  Object.keys(selection).forEach((entity) => {\n    const selectedEntities = selection[entity];\n    populatedStruct[entity]?.forEach((value, key) => {\n      if (typeof value.setInitiallySelected === 'function') {\n        value.setInitiallySelected(selectedEntities.includes(key) || undefined);\n      }\n    });\n  });\n  return populatedStruct;\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data),\n    selected: arrowNode.selected,\n  };\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center;\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data,\n    selected: plusNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities';\nimport { ifDef } from 'utilities';\n\nexport function headerToKet(struct: Struct): any {\n  const header = {};\n\n  ifDef(header, 'moleculeName', struct.name, '');\n  ifDef(header, 'creatorProgram', null, '');\n  ifDef(header, 'comment', null, '');\n\n  return Object.keys(header).length !== 0 ? header : null;\n}\n","const editorSettings = {\n  microModeScale: 40, // Angstroms To Pixels Factor\n  macroModeScale: 40, // Angstroms To Pixels Factor\n};\n\nexport function provideEditorSettings() {\n  return editorSettings;\n}\n","export const canvasSelector = '#polymer-editor-canvas';\nexport const drawnStructuresSelector = '.drawn-structures';\n","import _ from 'lodash';\n\nexport const notifyRenderComplete = _.debounce(() => {\n  const event = new Event('renderComplete');\n  window.dispatchEvent(event);\n}, 750);\n\nexport const notifyItemsToMergeInitializationComplete = () => {\n  const event = new Event('itemsToMergeInitializationComplete');\n  window.dispatchEvent(event);\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { zoom, select, ZoomTransform, ZoomBehavior, drag } from 'd3';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { canvasSelector, drawnStructuresSelector } from '../constants';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { clamp, isNumber } from 'lodash';\nimport { notifyRenderComplete } from 'application/render/internal';\n\nexport enum SCROLL_POSITION {\n  CENTER = 'CENTER',\n  BOTTOM = 'BOTTOM',\n}\n\ninterface ScrollBar {\n  name: string;\n  offsetStart: number;\n  offsetEnd: number;\n  maxWidth: number;\n  maxHeight: number;\n  bar?: D3SvgElementSelection<SVGRectElement, void> | undefined;\n}\n\n// in percents\nconst AUTO_SCROLL_OFFSET_X = 10;\nconst AUTO_SCROLL_OFFSET_Y = 10;\n\nexport class ZoomTool implements BaseTool {\n  public canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  public canvasWrapper: D3SvgElementSelection<SVGSVGElement, void>;\n  private zoom!: ZoomBehavior<SVGSVGElement, void> | null;\n  private zoomLevel: number;\n  private zoomTransform: ZoomTransform;\n  private resizeObserver: ResizeObserver | null = null;\n  drawingEntitiesManager: DrawingEntitiesManager;\n  private zoomEventHandlers: Array<(transform?) => void> = [];\n  private scrollBars!: {\n    horizontal: ScrollBar;\n    vertical: ScrollBar;\n  };\n\n  COLOR = '#a5afb9';\n  MIN_LENGTH = 40;\n  RADIUS = 2;\n  MARGIN = 5;\n  HORIZONTAL_DIST_TO_EDGE = 16;\n  VERTICAL_DIST_TO_EDGE = 4;\n  WIDTH = 4;\n  MINZOOMSCALE = 0.2;\n  MAXZOOMSCALE = 4;\n\n  // eslint-disable-next-line no-use-before-define\n  private static _instance: ZoomTool;\n  public static get instance() {\n    return ZoomTool._instance;\n  }\n\n  static initInstance(drawingEntitiesManager: DrawingEntitiesManager) {\n    ZoomTool._instance = new ZoomTool(drawingEntitiesManager);\n    return ZoomTool._instance;\n  }\n\n  private constructor(drawingEntitiesManager: DrawingEntitiesManager) {\n    this.canvasWrapper = select(canvasSelector);\n    this.canvas = select(drawnStructuresSelector);\n\n    this.zoomLevel = 1;\n    this.zoomTransform = new ZoomTransform(1, 0, 0);\n    this.drawingEntitiesManager = drawingEntitiesManager;\n\n    this.initActions();\n  }\n\n  initActions() {\n    this.zoom = zoom<SVGSVGElement, void>()\n      .scaleExtent([this.MINZOOMSCALE, this.MAXZOOMSCALE])\n      .wheelDelta(this.defaultWheelDelta)\n      .filter((e) => {\n        e.preventDefault();\n        if (e.ctrlKey && e.type === 'wheel') {\n          return true;\n        }\n        return false;\n      })\n      .on('zoom', this.zoomAction.bind(this))\n      .on('end', () => {\n        notifyRenderComplete();\n      });\n    this.canvasWrapper.call(this.zoom);\n\n    this.canvasWrapper.on('wheel', (event) => {\n      if (event.ctrlKey) {\n        event.preventDefault();\n      } else {\n        this.mouseWheeled(event);\n      }\n    });\n  }\n\n  setZoom(zoomLevel: number) {\n    this.zoomLevel = zoomLevel;\n  }\n\n  getZoomLevel() {\n    return this.zoomLevel;\n  }\n\n  setZoomTransform(transform: ZoomTransform) {\n    this.zoomTransform = transform;\n  }\n\n  zoomAction({ transform }) {\n    this.canvas.attr('transform', transform);\n    this.zoomLevel = transform.k;\n    this.zoomTransform = transform;\n    this.drawScrollBars();\n    requestAnimationFrame(() => {\n      this.dispatchZoomEventHandlers(transform);\n    });\n  }\n\n  subscribeOnZoomEvent(zoomEventHandler: (transform?) => void) {\n    this.zoomEventHandlers.push(zoomEventHandler);\n  }\n\n  dispatchZoomEventHandlers(transform) {\n    this.zoomEventHandlers.forEach((zoomEventHandler) => {\n      zoomEventHandler(transform);\n    });\n  }\n\n  drawScrollBars() {\n    if (this.canvas.node() && this.canvasWrapper.node()) {\n      this.initScrollBars();\n      this.renderScrollBar(this.scrollBars.horizontal);\n      this.renderScrollBar(this.scrollBars.vertical);\n    }\n  }\n\n  renderScrollBar(scrollBar: ScrollBar) {\n    const hasOffset = scrollBar.offsetStart < 0 || scrollBar.offsetEnd < 0;\n    if (hasOffset) {\n      if (scrollBar.bar) {\n        this.updateScrollBarAttrs(scrollBar);\n      } else {\n        this.drawScrollBar(scrollBar);\n      }\n    } else {\n      scrollBar.bar?.remove();\n      scrollBar.bar = undefined;\n    }\n  }\n\n  drawScrollBar(scrollBar: ScrollBar) {\n    scrollBar.bar = this.canvasWrapper.append('rect');\n    const dragged = drag().on(\n      'drag',\n      this.dragged(scrollBar.name).bind(this),\n    ) as never;\n    scrollBar.bar?.call(dragged);\n    this.updateScrollBarAttrs(scrollBar);\n  }\n\n  updateScrollBarAttrs(scrollBar: ScrollBar) {\n    const { start, length } = this.calculateDynamicAttr(scrollBar);\n\n    if (scrollBar.name === 'horizontal') {\n      scrollBar.bar\n        ?.attr('x', start)\n        .attr('y', scrollBar.maxHeight - this.HORIZONTAL_DIST_TO_EDGE)\n        .attr('width', length)\n        .attr('height', this.WIDTH);\n    } else {\n      scrollBar.bar\n        ?.attr('x', scrollBar.maxHeight - this.VERTICAL_DIST_TO_EDGE)\n        .attr('y', start)\n        .attr('width', this.WIDTH)\n        .attr('height', length);\n    }\n\n    scrollBar.bar\n      ?.attr('rx', this.RADIUS)\n      .attr('draggable', true)\n      .attr('cursor', 'pointer')\n      .attr('stroke', this.COLOR)\n      .attr('fill', this.COLOR)\n      .attr('data-testid', scrollBar.name + '-bar')\n      .attr('class', 'dynamic-element');\n  }\n\n  calculateDynamicAttr(scrollBar: ScrollBar) {\n    const start = clamp(\n      -scrollBar.offsetStart,\n      this.MARGIN,\n      scrollBar.maxWidth - this.MIN_LENGTH - this.MARGIN,\n    );\n    const end =\n      scrollBar.maxWidth -\n      clamp(-scrollBar.offsetEnd, this.MARGIN, scrollBar.maxWidth);\n    const length = Math.max(end - start, this.MIN_LENGTH);\n    return { start, length };\n  }\n\n  dragged = (name: string) => (event) => {\n    if (name === 'horizontal') {\n      this.zoom?.translateBy(this.canvasWrapper, -event.dx, 0);\n    } else {\n      this.zoom?.translateBy(this.canvasWrapper, 0, -event.dy);\n    }\n  };\n\n  public scrollTo(\n    position: Vec2,\n    stickToBottom = false,\n    xOffset?,\n    yOffset?,\n    isOffsetInPercents = true,\n  ) {\n    const canvasWrapperHeight =\n      this.canvasWrapper.node()?.height.baseVal.value || 0;\n\n    const canvasWrapperWidth =\n      this.canvasWrapper.node()?.width.baseVal.value || 0;\n\n    const offset = new Vec2(\n      canvasWrapperWidth / 2 -\n        (isNumber(xOffset) && !isOffsetInPercents\n          ? xOffset\n          : (canvasWrapperWidth * (xOffset || AUTO_SCROLL_OFFSET_X)) / 100),\n      canvasWrapperHeight / 2 -\n        (isNumber(yOffset) && !isOffsetInPercents\n          ? yOffset\n          : (canvasWrapperHeight * (yOffset || AUTO_SCROLL_OFFSET_Y)) / 100),\n    );\n\n    this.zoom?.translateTo(\n      this.canvasWrapper,\n      position.x + this.unzoomValue(offset.x),\n      position.y + this.unzoomValue(offset.y * (stickToBottom ? -1 : 1)),\n    );\n  }\n\n  public scrollToVerticalCenter(structCenterY: number) {\n    const centerPointOfModel =\n      this.drawingEntitiesManager.getCurrentCenterPointOfCanvas();\n    const offsetY = centerPointOfModel.y - structCenterY;\n    this.zoom?.translateBy(this.canvasWrapper, 0, offsetY);\n  }\n\n  public scrollToVerticalBottom() {\n    this.drawScrollBars();\n    if (this.scrollBars.vertical.offsetEnd < 0) {\n      this.zoom?.translateBy(\n        this.canvasWrapper,\n        0,\n        this.scrollBars.vertical.offsetEnd / this.zoomLevel,\n      );\n    }\n  }\n\n  mouseWheeled(event) {\n    const isShiftKeydown = event.shiftKey;\n    const boxNode = this.canvasWrapper.node();\n    if (boxNode && (event.deltaX || event.deltaY)) {\n      const x = -event.deltaX / this.zoomLevel;\n      const y = -event.deltaY / this.zoomLevel;\n      if (isShiftKeydown) {\n        this.zoom?.translateBy(this.canvasWrapper, x - y, 0);\n      } else {\n        this.zoom?.translateBy(this.canvasWrapper, x, y);\n      }\n    }\n  }\n\n  initScrollBars() {\n    const boundingBox = this.canvas.node()?.getBoundingClientRect() as DOMRect;\n    const wrapperBoundingBox = this.canvasWrapper\n      .node()\n      ?.getBoundingClientRect() as DOMRect;\n    const canvasWrapperHeight =\n      this.canvasWrapper.node()?.height.baseVal.value || 0;\n\n    const canvasWrapperWidth =\n      this.canvasWrapper.node()?.width.baseVal.value || 0;\n    this.scrollBars = {\n      horizontal: {\n        name: 'horizontal',\n        offsetStart: boundingBox.left - wrapperBoundingBox.left,\n        offsetEnd: wrapperBoundingBox.width - boundingBox.right,\n        maxWidth: canvasWrapperWidth,\n        maxHeight: canvasWrapperHeight,\n        bar: this.scrollBars?.horizontal?.bar,\n      },\n      vertical: {\n        name: 'vertical',\n        offsetStart: boundingBox.top - wrapperBoundingBox.top,\n        offsetEnd: wrapperBoundingBox.height - boundingBox.bottom,\n        maxWidth: canvasWrapperHeight,\n        maxHeight: canvasWrapperWidth,\n        bar: this.scrollBars?.vertical?.bar,\n      },\n    };\n  }\n\n  private get zoomStep() {\n    return 0.1;\n  }\n\n  public zoomIn(zoomStep = this.zoomStep) {\n    this.zoom?.scaleTo(this.canvasWrapper, this.zoomLevel + zoomStep);\n  }\n\n  public zoomOut(zoomStep = this.zoomStep) {\n    this.zoom?.scaleTo(this.canvasWrapper, this.zoomLevel - zoomStep);\n  }\n\n  public zoomTo(zoomLevel: number) {\n    this.zoom?.scaleTo(this.canvasWrapper, zoomLevel);\n  }\n\n  public resetZoom() {\n    this.zoom?.transform(this.canvasWrapper, new ZoomTransform(1, 0, 0));\n  }\n\n  observeCanvasResize = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.drawScrollBars();\n    });\n    this.resizeObserver.observe(this.canvasWrapper.node() as SVGSVGElement);\n  };\n\n  defaultWheelDelta(event) {\n    return (\n      -event.deltaY *\n      (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002)\n    );\n  }\n\n  scaleCoordinates(position: Vec2) {\n    const newX = this.zoomTransform.applyX(position.x);\n    const newY = this.zoomTransform.applyY(position.y);\n    return new Vec2(newX, newY);\n  }\n\n  invertZoom(position: Vec2) {\n    const newX = this.zoomTransform.invertX(position.x);\n    const newY = this.zoomTransform.invertY(position.y);\n    return new Vec2(newX, newY);\n  }\n\n  unzoomValue(value: number) {\n    return value / this.zoomLevel;\n  }\n\n  zoomValue(value: number) {\n    return value * this.zoomLevel;\n  }\n\n  destroy() {\n    this.scrollBars.horizontal?.bar?.remove();\n    this.scrollBars.vertical?.bar?.remove();\n    this.resizeObserver?.unobserve(this.canvasWrapper.node() as SVGSVGElement);\n    this.zoom = null;\n    this.zoomEventHandlers = [];\n  }\n\n  isFitToCanvasHeight(height) {\n    const canvasWrapperHeight = this.canvasWrapperHeight;\n\n    return (\n      height <\n      this.unzoomValue(\n        canvasWrapperHeight -\n          (canvasWrapperHeight * AUTO_SCROLL_OFFSET_Y) / 100,\n      )\n    );\n  }\n\n  private get canvasWrapperHeight() {\n    // TODO create class for Canvas and move this getter there\n    const canvasWrapperBbox = this.canvasWrapper\n      .node()\n      ?.getBoundingClientRect();\n    return canvasWrapperBbox?.height || 0;\n  }\n}\n\nexport default ZoomTool;\n","import { Vec2 } from 'domain/entities';\nimport { provideEditorSettings } from '../editorSettings';\nimport ZoomTool from '../tools/Zoom';\n/**\n * `model` -- The original coordinates of entities, namely angstroms\n * `canvas` -- The real coordinates used to draw entities\n * `view` -- The zoomed canvas coordinates\n */\nexport class Coordinates {\n  static canvasToModel(position: Vec2) {\n    const settings = provideEditorSettings();\n    return position.scaled(1 / settings.macroModeScale);\n  }\n\n  static viewToModel(position: Vec2) {\n    const settings = provideEditorSettings();\n    const pos = ZoomTool.instance.invertZoom(position);\n    return pos.scaled(1 / settings.macroModeScale);\n  }\n\n  static modelToView(position: Vec2) {\n    const settings = provideEditorSettings();\n    return ZoomTool.instance.scaleCoordinates(\n      position.scaled(settings.macroModeScale),\n    );\n  }\n\n  static modelToCanvas(position: Vec2) {\n    const settings = provideEditorSettings();\n    return position.scaled(settings.macroModeScale);\n  }\n\n  // convert the original coordinates to transformed coordinates after the d3 transformation\n  static canvasToView(position: Vec2) {\n    return ZoomTool.instance.scaleCoordinates(position);\n  }\n\n  // convert the transformed coordinates to coordinates before the d3 transformation\n  static viewToCanvas(position: Vec2) {\n    return ZoomTool.instance.invertZoom(position);\n  }\n}\n","import { Coordinates as CoordinatesTool } from 'application/editor/shared/coordinates';\nimport { BaseMonomer } from 'domain/entities';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { AttachmentPointName } from 'domain/types';\n\nexport type Coordinates = { x: number; y: number };\n\n// eslint-disable-next-line camelcase\nexport function canvasToMonomerCoordinates(\n  coordinatesOnCanvas: Coordinates,\n  centerOFMonomer: Coordinates,\n  monomerWidth: number,\n  monomerHeight: number,\n) {\n  const zeroPointCoord = {\n    x: centerOFMonomer.x - monomerWidth / 2,\n    y: centerOFMonomer.y - monomerHeight / 2,\n  };\n\n  const monomerCoord = {\n    x: coordinatesOnCanvas.x - zeroPointCoord.x,\n    y: coordinatesOnCanvas.y - zeroPointCoord.y,\n  };\n\n  return monomerCoord;\n}\n\nexport function findLabelPoint(\n  pointOnBorder: Coordinates,\n  angle: number,\n  lineLength: number,\n  lineOffset: number,\n  labelSize: { x: number; y: number },\n  isUsed: boolean,\n) {\n  // based on https://ru.stackoverflow.com/a/1442905\n\n  const angleRadians = Vec2.degrees_to_radians(angle);\n\n  const pointOfAttachment = Vec2.findSecondPoint(\n    pointOnBorder,\n    lineLength,\n    angleRadians,\n  );\n\n  // find vector between pointOnBorder and pointOfAttachment\n\n  const attachmentVector = {\n    x: pointOfAttachment.x - pointOnBorder.x,\n    y: pointOfAttachment.y - pointOnBorder.y,\n  };\n\n  // rotate this vector at 90 degrees - change x and y, then make one negative\n  const rotatedVector = { x: -attachmentVector.y, y: attachmentVector.x };\n\n  // normalize vector\n  const normalizedVector = {\n    x: rotatedVector.x / lineLength,\n    y: rotatedVector.y / lineLength,\n  };\n\n  const normalizedAttachmentVector = {\n    x: attachmentVector.x / lineLength,\n    y: attachmentVector.y / lineLength,\n  };\n\n  // find vector for Label, using normalized vector and length\n\n  let addedOrtogonalOffset = 0;\n  const addedParallelOffset =\n    lineOffset + Math.max(labelSize.x, labelSize.y) + 1;\n  if (isUsed) {\n    if (angle >= -270 && angle <= 0) {\n      addedOrtogonalOffset = 5;\n    } else if (angle >= -360 && angle < -270) {\n      addedOrtogonalOffset = -5;\n    }\n  }\n\n  const ortogonalOffset = {\n    x: normalizedVector.x * addedOrtogonalOffset,\n    y: normalizedVector.y * addedOrtogonalOffset,\n  };\n\n  const parallelOffset = {\n    x: normalizedAttachmentVector.x * addedParallelOffset,\n    y: normalizedAttachmentVector.y * addedParallelOffset,\n  };\n\n  // add this vector to point of attachment\n  const labelCoordinates = {\n    x: pointOfAttachment.x + ortogonalOffset.x + parallelOffset.x - labelSize.x,\n    y: pointOfAttachment.y + ortogonalOffset.y + parallelOffset.y + labelSize.y,\n  };\n\n  return [labelCoordinates, pointOfAttachment];\n}\n\nexport function getSearchFunction(\n  initialAngle: number,\n  canvasOffset: Coordinates,\n  monomer: BaseMonomer,\n) {\n  return function findPointOnMonomerBorder(\n    coordStart: Coordinates,\n    length: number,\n    angle = initialAngle,\n  ) {\n    const angleRadians = Vec2.degrees_to_radians(angle);\n\n    const secondPoint = Vec2.findSecondPoint(coordStart, length, angleRadians);\n\n    const diff = Vec2.diff(\n      new Vec2(coordStart.x, coordStart.y),\n      new Vec2(secondPoint.x, secondPoint.y),\n    );\n\n    // exit recursion\n    if (diff.length() < 1.01) {\n      return secondPoint;\n    }\n\n    const newLength = Math.round(diff.length() / 1.4);\n    const newCoordStart = { x: secondPoint.x, y: secondPoint.y };\n\n    const zoomedCoordinateOfSecondPoint = CoordinatesTool.canvasToView(\n      new Vec2(secondPoint),\n    );\n\n    const newPointCoord = {\n      x: Math.round(zoomedCoordinateOfSecondPoint.x) + canvasOffset.x,\n      y: Math.round(zoomedCoordinateOfSecondPoint.y) + canvasOffset.y,\n    };\n    let newAngle: number = initialAngle;\n\n    const elementsAtPoint = document.elementsFromPoint(\n      newPointCoord.x,\n      newPointCoord.y,\n    );\n\n    const isCurrentMonomerAtNewPoint = elementsAtPoint.some(\n      (element) => element === monomer.renderer?.bodyElement?.node(),\n    );\n    if (isCurrentMonomerAtNewPoint) {\n      newAngle = initialAngle;\n    } else {\n      newAngle = initialAngle - 180;\n    }\n\n    return findPointOnMonomerBorder(newCoordStart, newLength, newAngle);\n  };\n}\n\nexport const anglesToSector = {\n  '45': {\n    min: 23,\n    max: 68,\n    center: 45,\n  },\n  '90': {\n    min: 68,\n    max: 113,\n    center: 90,\n  },\n  '135': {\n    min: 113,\n    max: 148,\n    center: 135,\n  },\n  '180': {\n    min: 148,\n    max: 203,\n    center: 180,\n  },\n  '225': {\n    min: 203,\n    max: 248,\n    center: 225,\n  },\n  '270': {\n    min: 248,\n    max: 293,\n    center: 270,\n  },\n  '315': {\n    min: 293,\n    max: 228,\n    center: 315,\n  },\n  '360': {\n    min: 338,\n    max: 360,\n    center: 360,\n  },\n  '0': {\n    min: 0,\n    max: 23,\n    center: 0,\n  },\n};\n\nexport enum attachmentPointNumberToAngle {\n  'R1' = 0,\n  'R2' = 180,\n  'R3' = 90,\n  'R4' = 270,\n  'R5' = 45,\n  'R6' = 135,\n  'R7' = 315,\n  'R8' = 225,\n}\n\nexport const sectorsList = [45, 90, 135, 180, 225, 270, 315, 0, 360];\n\nexport function checkFor0and360(sectorsList: number[]) {\n  if (!sectorsList.includes(0) && sectorsList.includes(360)) {\n    return sectorsList.filter((item) => item !== 360);\n  }\n  if (!sectorsList.includes(360) && sectorsList.includes(0)) {\n    return sectorsList.filter((item) => item !== 0);\n  }\n  return sectorsList;\n}\n\n/* attachmentPointName - R1, R2, ...\n * returns number of attachment point with left binary shift:\n * [attachmentPointNumber]: [binaryShiftedAttachmentPointNumber]\n * 1: 1\n * 2: 2\n * 3: 4\n * 4: 8\n * 5: 16\n * 6: 32\n * It needs for conversion of attachment points to rglabels (just for same view in monomer preview)\n * rglabel 3 means that atom has two r-group attachment points\n * */\nexport function getAttachmentPointLabelWithBinaryShift(\n  attachmentPointNumber: number,\n) {\n  let attachmentPointLabel = '';\n  for (let rgi = 0; rgi < 32; rgi++) {\n    if (attachmentPointNumber & (1 << rgi)) {\n      attachmentPointLabel += getAttachmentPointLabel(rgi + 1);\n    }\n  }\n  return attachmentPointLabel;\n}\n\nexport function getAttachmentPointLabel(attachmentPointNumber: number) {\n  return `R${attachmentPointNumber}` as AttachmentPointName;\n}\n\nexport function getAttachmentPointNumberFromLabel(\n  attachmentPointLabel: AttachmentPointName,\n) {\n  return Number(attachmentPointLabel.replace('R', ''));\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SGroup,\n  Struct,\n  SGroupAttachmentPoint,\n  AtomQueryProperties,\n  BaseMonomer,\n  Vec2,\n} from 'domain/entities';\nimport { switchIntoChemistryCoordSystem } from 'domain/serializers/ket/helpers';\n\nimport { ifDef } from 'utilities';\nimport { getAttachmentPointLabelWithBinaryShift } from 'domain/helpers/attachmentPointCalculations';\nimport { isNumber } from 'lodash';\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = [];\n  let rgi;\n  let val;\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1;\n      res.push(val); // push the string\n    }\n  }\n  return res;\n}\n\nexport function moleculeToKet(struct: Struct, monomer?: BaseMonomer): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      // For the monomers we need to serialize leaving groups as usual atom label like H, O, etc\n      if (atom.label === 'R#' && !monomer) return rglabelToKet(atom);\n      return atomToKet(atom, monomer);\n    }),\n  };\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet);\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup),\n    );\n  }\n\n  const fragment = struct.frags.get(0);\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null);\n    if (fragment.properties) {\n      body.properties = fragment.properties;\n    }\n  }\n  return {\n    type: 'molecule',\n    ...body,\n  };\n}\n\nfunction atomToKet(source, monomer?: BaseMonomer) {\n  const result: { queryProperties?: AtomQueryProperties; type?: 'atom-list' } =\n    {};\n\n  if (source.label !== 'L#') {\n    ifDef(\n      result,\n      'label',\n      source.label === 'R#' && monomer\n        ? monomer.monomerItem.props.MonomerCaps?.[\n            getAttachmentPointLabelWithBinaryShift(source.rglabel)\n          ]\n        : source.label,\n    );\n    // reaction\n    ifDef(result, 'mapping', parseInt(source.aam), 0);\n  } else if (source.atomList) {\n    result.type = 'atom-list';\n    ifDef(result, 'elements', source.atomList.labelList());\n    ifDef(result, 'notList', source.atomList.notList, false);\n  }\n\n  ifDef(result, 'alias', source.alias);\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(source.pp.x, source.pp.y, source.pp.z),\n  );\n  ifDef(result, 'location', [position.x, position.y, position.z]);\n  ifDef(result, 'charge', source.charge);\n  ifDef(result, 'explicitValence', source.explicitValence, -1);\n  ifDef(result, 'isotope', source.isotope);\n  ifDef(result, 'radical', source.radical, 0);\n  ifDef(result, 'attachmentPoints', source.attachmentPoints, 0);\n  ifDef(result, 'cip', source.cip, '');\n  ifDef(result, 'selected', source.getInitiallySelected());\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null);\n  ifDef(result, 'stereoParity', source.stereoCare, 0);\n  ifDef(result, 'weight', source.weight, 0);\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0);\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0);\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false);\n  ifDef(result, 'hCount', source.hCount, 0);\n  // query properties\n  if (\n    Object.values(source.queryProperties).some((property) => property !== null)\n  ) {\n    result.queryProperties = {};\n    Object.keys(source.queryProperties).forEach((name) => {\n      ifDef(result.queryProperties, name, source.queryProperties[name]);\n    });\n  }\n  ifDef(result, 'invRet', source.invRet, 0);\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false);\n  ifDef(result, 'implicitHCount', source.implicitHCount);\n  return result;\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label',\n  };\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(source.pp.x, source.pp.y, source.pp.z),\n  );\n  ifDef(result, 'location', [position.x, position.y, position.z]);\n  ifDef(result, 'attachmentPoints', source.attachmentPoints, 0);\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`,\n  );\n  ifDef(result, '$refs', refsToRGroups);\n  ifDef(result, 'selected', source.getInitiallySelected());\n\n  return result;\n}\n\nfunction bondToKet(source) {\n  const result = {};\n  if (source.customQuery) {\n    ifDef(result, 'atoms', [source.begin, source.end]);\n    ifDef(result, 'customQuery', source.customQuery);\n  } else {\n    ifDef(result, 'type', source.type);\n    ifDef(result, 'atoms', [source.begin, source.end]);\n    ifDef(result, 'stereo', source.stereo, 0);\n    ifDef(result, 'topology', source.topology, 0);\n    ifDef(result, 'center', source.reactingCenterStatus, 0);\n    ifDef(result, 'cip', source.cip, '');\n  }\n  ifDef(result, 'selected', source.getInitiallySelected());\n  return result;\n}\n\nfunction sgroupToKet(struct: Struct, source: SGroup) {\n  const result = {};\n\n  ifDef(result, 'type', source.type);\n  ifDef(result, 'atoms', source.atoms);\n\n  switch (source.type) {\n    case 'GEN':\n      break;\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1);\n      break;\n    }\n    case 'queryComponent': {\n      break;\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n');\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht',\n      );\n      break;\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '');\n      ifDef(result, 'expanded', source.data.expanded);\n      ifDef(result, 'id', source.id);\n      ifDef(\n        result,\n        'attachmentPoints',\n        source.getAttachmentPoints().map(sgroupAttachmentPointToKet),\n        [],\n      );\n      break;\n    }\n    case 'DAT': {\n      const data = source.data;\n      ifDef(result, 'placement', data.absolute, true);\n      ifDef(result, 'display', data.attached, false);\n      ifDef(result, 'context', data.context);\n      ifDef(result, 'fieldName', data.fieldName);\n      ifDef(result, 'fieldData', data.fieldValue);\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source));\n      break;\n    }\n    default:\n      break;\n  }\n\n  return result;\n}\n\nfunction sgroupAttachmentPointToKet(source: SGroupAttachmentPoint) {\n  const result = {};\n\n  ifDef(result, 'attachmentAtom', source.atomId);\n  ifDef(result, 'leavingAtom', source.leaveAtomId);\n  ifDef(\n    result,\n    'attachmentId',\n    isNumber(source.attachmentPointNumber)\n      ? source.attachmentPointNumber.toString()\n      : source.attachmentId,\n  );\n\n  return result;\n}\n","import { Struct } from 'domain/entities';\nimport { atomToStruct, bondToStruct } from './moleculeToStruct';\nimport { KetItem } from './types';\n\nexport function mergeFragmentsToStruct(\n  ketItem: KetItem,\n  struct: Struct,\n): Struct {\n  let atomsOffset = 0;\n  if (ketItem.fragments) {\n    ketItem.fragments.forEach((fragment) => {\n      fragment.atoms?.forEach((atom) => struct.atoms.add(atomToStruct(atom)));\n      fragment.bonds?.forEach((bond) =>\n        struct.bonds.add(bondToStruct(bond, atomsOffset)),\n      );\n      atomsOffset += fragment.atoms?.length || 0;\n    });\n  }\n  return struct;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  SGroup,\n  Struct,\n  SGroupAttachmentPoint,\n  RGroupAttachmentPoint,\n  AttachmentPoints,\n  AtomQueryProperties,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport { ifDef } from 'utilities';\nimport { mergeFragmentsToStruct } from './mergeFragmentsToStruct';\nimport { initiallySelectedType } from 'domain/entities/BaseMicromoleculeEntity';\n\nexport function toRlabel(values) {\n  let res = 0;\n  values.forEach((val) => {\n    const rgi = val - 1;\n    res |= 1 << rgi;\n  });\n  return res;\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = mergeFragmentsToStruct(ketItem, new Struct());\n\n  if (ketItem.atoms) {\n    ketItem.atoms.forEach((atom) => {\n      let atomId: number | null = null;\n      if (atom.type === 'rg-label') {\n        atomId = struct.atoms.add(rglabelToStruct(atom));\n      }\n      if (!atom.type || atom.type === 'atom-list') {\n        atomId = struct.atoms.add(atomToStruct(atom));\n      }\n      if (atomId !== null) {\n        addRGroupAttachmentPointsToStruct(\n          struct,\n          atomId,\n          atom.attachmentPoints,\n          atom.selected,\n        );\n      }\n    });\n  }\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)));\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroupData) => {\n      const sgroup = sgroupToStruct(sgroupData);\n      const id = struct.sgroups.add(sgroup);\n      sgroup.id = id;\n    });\n  }\n\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.markFragments(ketItem.properties);\n  struct.bindSGroupsToFunctionalGroups();\n\n  return struct;\n}\n\nexport function atomToStruct(source) {\n  const params: any = {};\n\n  const queryAttribute: Array<keyof AtomQueryProperties> = [\n    'aromaticity',\n    'ringMembership',\n    'connectivity',\n    'ringSize',\n    'chirality',\n    'customQuery',\n  ];\n  if (source.type === 'atom-list') {\n    params.label = 'L#';\n    const ids = source.elements\n      .map((el) => Elements.get(el)?.number)\n      .filter((id) => id);\n    ifDef(params, 'atomList', {\n      ids,\n      notList: source.notList,\n    });\n  } else {\n    ifDef(params, 'label', source.label);\n    // reaction\n    ifDef(params, 'aam', source.mapping);\n  }\n  ifDef(params, 'alias', source.alias);\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0,\n  });\n  ifDef(params, 'charge', source.charge);\n  ifDef(params, 'explicitValence', source.explicitValence);\n  ifDef(params, 'isotope', source.isotope);\n  ifDef(params, 'radical', source.radical);\n  ifDef(params, 'cip', source.cip);\n  ifDef(params, 'attachmentPoints', source.attachmentPoints);\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel);\n  ifDef(params, 'stereoParity', source.stereoParity);\n  ifDef(params, 'weight', source.weight);\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount);\n  ifDef(params, 'substitutionCount', source.substitutionCount);\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)));\n  ifDef(params, 'hCount', source.hCount);\n  if (\n    source.queryProperties &&\n    Object.values(source.queryProperties).some((property) => property !== null)\n  ) {\n    params.queryProperties = {};\n    queryAttribute.forEach((attributeName) => {\n      ifDef(\n        params.queryProperties,\n        attributeName,\n        source.queryProperties[attributeName],\n      );\n    });\n  }\n\n  // reaction\n  ifDef(params, 'invRet', source.invRet);\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)));\n  // implicit hydrogens\n  ifDef(params, 'implicitHCount', source.implicitHCount);\n\n  const newAtom = new Atom(params);\n  newAtom.setInitiallySelected(source.selected);\n  return newAtom;\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {};\n  params.label = 'R#';\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0,\n  });\n  ifDef(params, 'attachmentPoints', source.attachmentPoints);\n  const rglabel = toRlabel(\n    source.$refs?.map((el) => parseInt(el.slice(3))) ?? [],\n  );\n  ifDef(params, 'rglabel', rglabel);\n  const newAtom = new Atom(params);\n  newAtom.setInitiallySelected(source.selected);\n  return newAtom;\n}\n\nfunction addRGroupAttachmentPointsToStruct(\n  struct: Struct,\n  attachedAtomId: number,\n  attachmentPoints: AttachmentPoints | null,\n  initiallySelected?: initiallySelectedType,\n) {\n  const rgroupAttachmentPoints: RGroupAttachmentPoint[] = [];\n  if (attachmentPoints === AttachmentPoints.FirstSideOnly) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'primary', initiallySelected),\n    );\n  } else if (attachmentPoints === AttachmentPoints.SecondSideOnly) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'secondary', initiallySelected),\n    );\n  } else if (attachmentPoints === AttachmentPoints.BothSides) {\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'primary', initiallySelected),\n    );\n    rgroupAttachmentPoints.push(\n      new RGroupAttachmentPoint(attachedAtomId, 'secondary', initiallySelected),\n    );\n  }\n  rgroupAttachmentPoints.forEach((rgroupAttachmentPoint) => {\n    struct.rgroupAttachmentPoints.add(rgroupAttachmentPoint);\n  });\n}\n\n/**\n *\n * @param source\n * @param atomOffset – if bond is a part of a fragment, then we need to consider atoms from previous fragment.\n * source.atoms contains numbers related to fragment, but we need to count atoms related to struct. Example:\n * fragments: [{\n *   atoms: [...],\n *   bonds: [...], this bonds point to atoms in the first fragment\n * }, {\n *   atoms: [...],\n *   bonds: [...], this bonds point to atoms in the second fragment\n * }]\n * When we add bonds from second fragment we need to count atoms from fragments[0].atoms.length + 1, not from zero\n * @returns newly created Bond\n */\nexport function bondToStruct(source, atomOffset = 0) {\n  const params: any = {};\n\n  ifDef(params, 'type', source.type);\n  ifDef(params, 'topology', source.topology);\n  ifDef(params, 'reactingCenterStatus', source.center);\n  ifDef(params, 'stereo', source.stereo);\n  ifDef(params, 'cip', source.cip);\n  ifDef(params, 'customQuery', source.customQuery);\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0] + atomOffset);\n  ifDef(params, 'end', source.atoms[1] + atomOffset);\n  ifDef(params, 'initiallySelected', source.selected);\n\n  const newBond = new Bond(params);\n  newBond.setInitiallySelected(source.selected);\n  return newBond;\n}\n\ntype KetAttachmentPoint = {\n  attachmentAtom: number;\n  leavingAtom?: number;\n  attachmentId?: string;\n};\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type);\n  ifDef(sgroup, 'atoms', source.atoms);\n  switch (source.type) {\n    case 'GEN':\n      break;\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul);\n      break;\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript);\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase());\n      break;\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name);\n      ifDef(sgroup.data, 'expanded', source.expanded);\n      ifDef(sgroup, 'id', source.id);\n      source.attachmentPoints?.forEach(\n        (\n          sourceAttachmentPoint: KetAttachmentPoint,\n          sourceAttachmentPointIndex: number,\n        ) => {\n          sgroup.addAttachmentPoint(\n            sgroupAttachmentPointToStruct(\n              sourceAttachmentPoint,\n              sourceAttachmentPointIndex + 1,\n            ),\n          );\n        },\n      );\n      break;\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement);\n      ifDef(sgroup.data, 'attached', source.display);\n      ifDef(sgroup.data, 'context', source.context);\n      ifDef(sgroup.data, 'fieldName', source.fieldName);\n      ifDef(sgroup.data, 'fieldValue', source.fieldData);\n      break;\n    }\n    default:\n      break;\n  }\n  return sgroup;\n}\n\nfunction sgroupAttachmentPointToStruct(\n  source: KetAttachmentPoint,\n  attachmentPointNumber?: number,\n): SGroupAttachmentPoint {\n  const atomId = source.attachmentAtom;\n  const leavingAtomId = source.leavingAtom;\n  const attachmentId = source.attachmentId;\n  return new SGroupAttachmentPoint(\n    atomId,\n    leavingAtomId,\n    attachmentId,\n    attachmentId ? Number(attachmentId) : attachmentPointNumber,\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, Pool, SGroup, Struct, Vec2 } from 'domain/entities';\nimport { KetFileNode } from '../../serializers.types';\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: KetFileNode[] = [];\n\n  const rgFrags = new Set(); // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid));\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile(),\n    );\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup },\n    });\n  }\n\n  const filteredFragmentIds = Array.from(struct.frags.keys()).filter(\n    (fid) => !rgFrags.has(fid),\n  );\n  addMolecules(ketNodes, filteredFragmentIds, struct);\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {},\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos,\n      },\n      selected: item.getInitiallySelected(),\n    });\n  });\n\n  struct.images.forEach((image) => {\n    ketNodes.push(image.toKetNode());\n  });\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values());\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined),\n      );\n      const filteredSGroupsMap = new Pool<SGroup>();\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg);\n      });\n      ketNode.fragment.sgroups = filteredSGroupsMap;\n    }\n  });\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes;\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet);\n  return Vec2.centre(bb.min, bb.max);\n}\n\n/**\n * Merge fragments which are in the same S-Groups to one fragment(molecule)\n * and add new fragments(molecules) to KetNodes\n * See: https://github.com/epam/ketcher/issues/2142\n */\nfunction addMolecules(\n  ketNodes: KetFileNode[],\n  fragmentIds: number[],\n  struct: Struct,\n) {\n  const sGroupFragmentsMap = generateSGroupFragmentsMap(\n    ketNodes,\n    fragmentIds,\n    struct,\n  );\n  const mergedFragments = Pile.unionIntersections(\n    Array.from(sGroupFragmentsMap.values()),\n  );\n\n  mergedFragments.forEach((fragments) => {\n    let atomSet = new Pile<number>();\n    fragments.forEach((fragmentId) => {\n      atomSet = atomSet.union(struct.getFragmentIds(fragmentId));\n    });\n    ketNodes.push({\n      type: 'molecule',\n      fragment: struct.clone(atomSet),\n      center: getFragmentCenter(struct, atomSet),\n    });\n  });\n}\n\n/**\n * @example Give `fragmentIds` is `[0, 1]`,\n * and S-Group0 includes fragment0 and fragment1,\n * and S-Group1 includes fragment1,\n * then return value should be\n * ```\n * {\n *   0: [0, 1],\n *   1: [1]\n * }\n * ```\n */\nfunction generateSGroupFragmentsMap(\n  ketNodes: KetFileNode[],\n  fragmentIds: number[],\n  struct: Struct,\n) {\n  const sGroupFragmentsMap = new Map<number, Pile<number>>();\n\n  fragmentIds.forEach((fragmentId) => {\n    const atomsInFragment = struct.getFragmentIds(fragmentId);\n\n    let hasAtomInSGroup = false;\n    atomsInFragment.forEach((atomId) => {\n      struct.atoms.get(atomId)?.sgs.forEach((sGroupId) => {\n        hasAtomInSGroup = true;\n        const fragmentSet = sGroupFragmentsMap.get(sGroupId);\n        if (fragmentSet) {\n          fragmentSet.add(fragmentId);\n        } else {\n          sGroupFragmentsMap.set(sGroupId, new Pile([fragmentId]));\n        }\n      });\n    });\n\n    if (!hasAtomInSGroup) {\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(atomsInFragment),\n        center: getFragmentCenter(struct, atomsInFragment),\n      });\n    }\n  });\n\n  return sGroupFragmentsMap;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities';\nimport { ifDef } from 'utilities';\nimport { moleculeToKet } from './moleculeToKet';\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct),\n  };\n\n  return {\n    ...body,\n    type: 'rgroup',\n  };\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {};\n\n  ifDef(result, 'number', rgnumber);\n  ifDef(result, 'range', rglogic.range, '');\n  ifDef(result, 'resth', rglogic.resth, false);\n  ifDef(result, 'ifthen', rglogic.ifthen, 0);\n\n  return result;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities';\n\nimport { ifDef } from 'utilities';\nimport { moleculeToStruct } from './moleculeToStruct';\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem);\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic);\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key);\n  });\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup);\n  return struct;\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {};\n  ifDef(params, 'range', rglogic.range);\n  ifDef(params, 'resth', rglogic.resth);\n  ifDef(params, 'ifthen', rglogic.ifthen);\n\n  return new RGroup(params);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    const arrow = new RxnArrow(getNodeWithInvertedYCoord(ketItem.data));\n    arrow.setInitiallySelected(ketItem.selected);\n    struct.rxnArrows.add(arrow);\n  } else {\n    const plus = new RxnPlus({\n      pp: {\n        x: ketItem.location[0],\n        y: -ketItem.location[1],\n        z: ketItem.location[2],\n      },\n    });\n    plus.setInitiallySelected(ketItem.selected);\n    struct.rxnPluses.add(plus);\n  }\n  return struct;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data),\n    selected: simpleObjectNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data;\n  const simpleObject = new SimpleObject(getNodeWithInvertedYCoord(object));\n  simpleObject.setInitiallySelected(ketItem.selected);\n  struct.simpleObjects.add(simpleObject);\n  return struct;\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0]);\n  const pos0 = ketItem.data.pos[0];\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius),\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius),\n      },\n    ],\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data),\n    selected: textNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities';\nimport { getNodeWithInvertedYCoord } from '../helpers';\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const text = new Text(getNodeWithInvertedYCoord(ketItem.data));\n  text.setInitiallySelected(ketItem.selected);\n  struct.texts.add(text);\n  return struct;\n}\n","import { AttachmentPointName } from 'domain/types';\n\nexport interface IKetMonomerNode {\n  type: 'monomer';\n  id: string;\n  seqid?: number;\n  position: {\n    x: number;\n    y: number;\n  };\n  alias?: string;\n  templateId: string;\n}\n\nexport interface IKetGroupNode {\n  type: 'group';\n}\n\nexport type KetNode = IKetMonomerNode | IKetGroupNode;\n\nexport interface IKetConnectionMonomerEndPoint {\n  monomerId: string;\n  attachmentPointId?: string;\n  groupId?: string;\n}\n\nexport interface IKetConnectionMoleculeEndPoint {\n  moleculeId: string;\n  atomId: string;\n}\n\nexport type IKetConnectionEndPoint = IKetConnectionMonomerEndPoint &\n  IKetConnectionMoleculeEndPoint;\n\nexport enum KetConnectionType {\n  SINGLE = 'single',\n  HYDROGEN = 'hydrogen',\n}\n\nexport interface IKetTemplateConnectionEndPoint {\n  monomerTemplateId: string;\n  attachmentPointId: AttachmentPointName;\n}\n\nexport interface IKetTemplateConnection {\n  connectionType: KetConnectionType;\n  endpoint1: IKetTemplateConnectionEndPoint;\n  endpoint2: IKetTemplateConnectionEndPoint;\n}\n\nexport interface IKetConnection {\n  connectionType: KetConnectionType;\n  label?: string;\n  endpoint1: IKetConnectionEndPoint;\n  endpoint2: IKetConnectionEndPoint;\n}\n\nexport type monomerClass =\n  | 'RNA'\n  | 'PEPTIDE'\n  | 'CHEM'\n  | 'UNKNOWN'\n  | 'DNA'\n  | 'MODDNA';\n\nexport enum KetMonomerClass {\n  AminoAcid = 'AminoAcid',\n  Sugar = 'Sugar',\n  Phosphate = 'Phosphate',\n  Base = 'Base',\n  Terminator = 'Terminator',\n  Linker = 'Linker',\n  Unknown = 'Unknown',\n  CHEM = 'CHEM',\n  RNA = 'RNA',\n  DNA = 'DNA',\n}\nexport type IKetAttachmentPointType = 'left' | 'right' | 'side';\n\nexport interface IKetAttachmentPoint {\n  attachmentAtom: number;\n  leavingGroup: {\n    atoms: number[];\n  };\n  type?: IKetAttachmentPointType;\n  label?: string;\n}\n\nexport interface IKetIdtAliases {\n  base: string;\n  modifications?: {\n    internal?: string;\n    endpoint3?: string;\n    endpoint5?: string;\n  };\n}\n\nexport enum KetTemplateType {\n  MONOMER_TEMPLATE = 'monomerTemplate',\n  MONOMER_GROUP_TEMPLATE = 'monomerGroupTemplate',\n}\n\nexport interface IKetMonomerTemplate {\n  type: KetTemplateType.MONOMER_TEMPLATE;\n  class?: monomerClass;\n  monomerSubClass?:\n    | 'AminoAcid'\n    | 'Sugar'\n    | 'Phosphate'\n    | 'Base'\n    | 'Terminator'\n    | 'Linker'\n    | 'Unknown'\n    | 'CHEM';\n  naturalAnalogShort: string;\n  id: string;\n  fullName?: string;\n  alias?: string;\n  naturalAnalog?: string;\n  attachmentPoints?: IKetAttachmentPoint[];\n  root: {\n    nodes;\n  };\n  classHELM?: string;\n  name?: string;\n  idtAliases?: IKetIdtAliases;\n  unresolved?: boolean;\n  atoms: [];\n  bonds: [];\n}\n\nexport interface IKetMonomerTemplateRef {\n  $ref: string;\n}\n\nexport enum KetMonomerGroupTemplateClass {\n  RNA = 'RNA',\n}\n\nexport interface IKetMonomerGroupTemplate {\n  id: string;\n  name: string;\n  type: KetTemplateType;\n  class?: KetMonomerGroupTemplateClass;\n  templates: IKetMonomerTemplateRef[];\n  connections: IKetTemplateConnection[];\n  idtAliases?: IKetIdtAliases;\n}\n\nexport interface IKetNodeRef {\n  $ref: string;\n}\n\nexport interface IKetMacromoleculesContentRootProperty {\n  root: {\n    nodes: IKetNodeRef[];\n    connections: IKetConnection[];\n    templates: IKetMonomerTemplateRef[];\n  };\n}\n\nexport interface IKetMacromoleculesContentOtherProperties {\n  [key: string]: KetNode | IKetMonomerTemplate | IKetMonomerGroupTemplate;\n}\n\nexport type IKetMacromoleculesContent = IKetMacromoleculesContentRootProperty &\n  IKetMacromoleculesContentOtherProperties;\n","import { Operation } from 'domain/entities/Operation';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\n\nexport class Command {\n  public operations: Operation[] = [];\n  private undoOperationReverse = false;\n  private setUndoOperationByPriority = false;\n\n  public addOperation(operation: Operation) {\n    this.operations.push(operation);\n  }\n\n  public merge(command: Command) {\n    this.operations = [...this.operations, ...command.operations];\n  }\n\n  public setUndoOperationReverse() {\n    // this method marks command that operations should be invoked in opposite sequence during invert()\n    this.undoOperationReverse = true;\n  }\n\n  public setUndoOperationsByPriority() {\n    this.setUndoOperationByPriority = true;\n  }\n\n  public invert(renderersManagers: RenderersManager) {\n    const operations = this.undoOperationReverse\n      ? this.operations.slice().reverse()\n      : [...this.operations];\n\n    if (this.setUndoOperationByPriority) {\n      operations.sort((a, b) => (a.priority || 0) - (b.priority || 0));\n    }\n\n    operations.forEach((operation) => operation.invert(renderersManagers));\n    renderersManagers.runPostRenderMethods();\n  }\n\n  public execute(renderersManagers: RenderersManager) {\n    this.operations.forEach((operation) =>\n      operation.execute(renderersManagers),\n    );\n    renderersManagers.runPostRenderMethods();\n  }\n\n  public clear() {\n    this.operations = [];\n  }\n}\n","function Handler(f, once, priority) {\n  this.f = f\n  this.once = once\n  this.priority = priority\n}\n\nfunction Subscription() {\n  this.handlers = []\n}\nexports.Subscription = Subscription\n\nfunction insert(s, handler) {\n  var pos = 0\n  for (; pos < s.handlers.length; pos++)\n    if (s.handlers[pos].priority < handler.priority) break\n  s.handlers = s.handlers.slice(0, pos).concat(handler).concat(s.handlers.slice(pos))\n}\n\nSubscription.prototype.handlersForDispatch = function() {\n  var handlers = this.handlers, updated = null\n  for (var i = handlers.length - 1; i >= 0; i--) if (handlers[i].once) {\n    if (!updated) updated = handlers.slice()\n    updated.splice(i, 1)\n  }\n  if (updated) this.handlers = updated\n  return handlers\n}\n\nSubscription.prototype.add = function(f, priority) {\n  insert(this, new Handler(f, false, priority || 0))\n}\n\nSubscription.prototype.addOnce = function(f, priority) {\n  insert(this, new Handler(f, true, priority || 0))\n}\n\nSubscription.prototype.remove = function(f) {\n  for (var i = 0; i < this.handlers.length; i++) if (this.handlers[i].f == f) {\n    this.handlers = this.handlers.slice(0, i).concat(this.handlers.slice(i + 1))\n    return\n  }\n}\n\nSubscription.prototype.hasHandler = function() {\n  return this.handlers.length > 0\n}\n\nSubscription.prototype.dispatch = function() {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    handlers[i].f.apply(null, arguments)\n}\n\nfunction PipelineSubscription() {\n  Subscription.call(this)\n}\nexports.PipelineSubscription = PipelineSubscription\n\nPipelineSubscription.prototype = new Subscription\n\nPipelineSubscription.prototype.dispatch = function(value) {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    value = handlers[i].f(value)\n  return value\n}\n\nfunction StoppableSubscription() {\n  Subscription.call(this)\n}\nexports.StoppableSubscription = StoppableSubscription\n\nStoppableSubscription.prototype = new Subscription\n\nStoppableSubscription.prototype.dispatch = function() {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++) {\n    var result = handlers[i].f.apply(null, arguments)\n    if (result) return result\n  }\n}\n\nfunction DOMSubscription() {\n  Subscription.call(this)\n}\nexports.DOMSubscription = DOMSubscription\n\nDOMSubscription.prototype = new Subscription\n\nDOMSubscription.prototype.dispatch = function(event) {\n  var handlers = this.handlersForDispatch()\n  for (var i = 0; i < handlers.length; i++)\n    if (handlers[i].f(event) || event.defaultPrevented) return true\n  return false\n}\n","import { MonomerItemType, Entities } from 'domain/types';\nimport { IKetMonomerGroupTemplate } from 'application/formatters';\n\ninterface ToolEventHandler {\n  click?(event: Event): void;\n\n  dblclick?(event: Event): void;\n\n  mousedown?(event: Event): void;\n\n  mousemove?(event: Event): void;\n\n  mouseup?(event: Event): void;\n\n  mouseleave?(event: Event): void;\n\n  mouseLeaveClientArea?(event: Event): void;\n\n  mouseover?(event: Event): void;\n\n  mouseOverPolymerBond?(event: Event): void;\n\n  mouseLeavePolymerBond?(event: Event): void;\n\n  mouseOverMonomer?(event: Event): void;\n\n  mouseOverAttachmentPoint?(event: Event): void;\n\n  mouseLeaveAttachmentPoint?(event: Event): void;\n\n  mouseUpAttachmentPoint?(event: Event): void;\n\n  mouseDownAttachmentPoint?(event: Event): void;\n\n  mouseOnMoveMonomer?(event: Event): void;\n\n  mouseLeaveMonomer?(event: Event): void;\n\n  mouseOverDrawingEntity?(event: Event): void;\n\n  mouseLeaveDrawingEntity?(event: Event): void;\n\n  mouseUpMonomer?(event: Event): void;\n\n  rightClickSequence?(event: Event): void;\n\n  rightClickCanvas?(event: Event): void;\n\n  rightClickPolymerBond?(event: Event): void;\n\n  editSequence?(): void;\n\n  startNewSequence?(): void;\n\n  turnOnSequenceEditInRNABuilderMode?(): void;\n\n  turnOffSequenceEditInRNABuilderMode?(): void;\n\n  modifySequenceInRnaBuilder?(): void;\n\n  mouseOverSequenceItem?(event: Event): void;\n\n  mouseOnMoveSequenceItem?(event: Event): void;\n\n  mouseLeaveSequenceItem?(event: Event): void;\n\n  changeSequenceTypeEnterMode?(event: Event): void;\n\n  toggleSequenceEditMode?(event: Event): void;\n\n  toggleSequenceEditInRNABuilderMode?(event: Event): void;\n\n  clickOnSequenceItem?(event: Event): void;\n\n  mousedownBetweenSequenceItems?(event: Event): void;\n\n  mouseDownOnSequenceItem?(event: Event): void;\n\n  doubleClickOnSequenceItem?(event: Event): void;\n}\n\nexport interface IRnaPreset {\n  name?: string;\n  nameInList?: string;\n  base?: MonomerItemType;\n  sugar?: MonomerItemType;\n  phosphate?: MonomerItemType;\n  default?: boolean;\n  favorite?: boolean;\n  editedName?: boolean;\n}\n\nexport interface IRnaLabeledPreset\n  extends Omit<IRnaPreset, 'base' | 'sugar' | 'phosphate'>,\n    Pick<IKetMonomerGroupTemplate, 'templates'> {}\n\nexport type LabeledNodesWithPositionInSequence = {\n  type: Entities;\n  nodeIndexOverall: number;\n  baseLabel?: string;\n  sugarLabel?: string;\n  phosphateLabel?: string;\n  isNucleosideConnectedAndSelectedWithPhosphate?: boolean;\n  hasR1Connection?: boolean;\n};\n\nexport interface Tool extends ToolEventHandler {\n  cancel?(): void;\n\n  isSelectionRunning?(): boolean;\n\n  isNotActiveTool?: boolean;\n}\n\nexport interface BaseTool extends Tool {\n  destroy(): void;\n}\n\nexport type PeptideToolOptions = MonomerItemType;\n\n// export type ToolOptions = MonomerItemType;\n// !todo\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ToolOptions = any;\nexport type ToolConstructorInterface = {\n  new (editor, ...args: ToolOptions[]): Tool | BaseTool;\n};\n\nexport type ToolEventHandlerName = keyof ToolEventHandler;\n\nexport function isBaseTool(\n  tool: Tool | BaseTool | undefined,\n): tool is BaseTool {\n  return (tool as BaseTool)?.destroy !== undefined;\n}\n","import { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { provideEditorSettings } from 'application/editor/editorSettings';\nimport ZoomTool from 'application/editor/tools/Zoom';\nimport { select } from 'd3';\nimport {\n  canvasSelector,\n  drawnStructuresSelector,\n} from 'application/editor/constants';\n\nexport interface IBaseRenderer {\n  show(theme): void;\n  remove(): void;\n}\n\nexport abstract class BaseRenderer implements IBaseRenderer {\n  protected rootElement?: D3SvgElementSelection<SVGGElement, void>;\n\n  public bodyElement?: D3SvgElementSelection<SVGElement, this>;\n\n  protected hoverElement?: D3SvgElementSelection<\n    SVGUseElement & SVGGElement,\n    void\n  >;\n\n  protected hoverAreaElement?: D3SvgElementSelection<\n    SVGGElement | SVGLineElement,\n    void\n  >;\n\n  protected hoverCircleAreaElement?: D3SvgElementSelection<\n    SVGGElement | SVGCircleElement,\n    void\n  >;\n\n  protected canvasWrapper: D3SvgElementSelection<SVGSVGElement, void>;\n\n  protected canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  protected constructor(public drawingEntity: DrawingEntity) {\n    this.canvasWrapper =\n      ZoomTool.instance?.canvasWrapper || select(canvasSelector);\n    this.canvas = ZoomTool.instance?.canvas || select(drawnStructuresSelector);\n  }\n\n  protected get editorSettings() {\n    return provideEditorSettings();\n  }\n\n  public get rootBBox() {\n    const rootNode = this.rootElement?.node();\n    if (!rootNode) return;\n\n    return rootNode.getBBox();\n  }\n\n  public get rootBoundingClientRect() {\n    const rootNode = this.rootElement?.node();\n    if (!rootNode) return;\n\n    return rootNode.getBoundingClientRect();\n  }\n\n  public get width() {\n    return this.rootBBox?.width || 0;\n  }\n\n  public get height() {\n    return this.rootBBox?.height || 0;\n  }\n\n  public get x() {\n    return this.rootBBox?.x || 0;\n  }\n\n  public get y() {\n    return this.rootBBox?.y || 0;\n  }\n\n  public abstract show(theme, force?: boolean): void;\n  public abstract drawSelection(): void;\n  public abstract moveSelection(): void;\n  protected abstract appendHover(\n    hoverArea,\n  ): D3SvgElementSelection<SVGUseElement, void> | void;\n\n  protected abstract removeHover(): void;\n  protected abstract appendHoverAreaElement(): void;\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n  }\n\n  public redrawHover() {\n    if (this.drawingEntity.hovered) {\n      const hoverElement = this.appendHover(this.hoverAreaElement);\n      if (hoverElement) {\n        this.hoverElement = hoverElement;\n      }\n    } else {\n      this.removeHover();\n      this.hoverElement = undefined;\n    }\n  }\n\n  move() {}\n}\n","import { Subscription } from 'subscription';\nimport { ToolEventHandlerName } from 'application/editor/tools/Tool';\nimport { CoreEditor } from 'application/editor/Editor';\nimport ZoomTool from 'application/editor/tools/Zoom';\n\nexport let editorEvents;\n\nexport function resetEditorEvents() {\n  editorEvents = {\n    selectMonomer: new Subscription(),\n    selectPreset: new Subscription(),\n    selectTool: new Subscription(),\n    createBondViaModal: new Subscription(),\n    cancelBondCreationViaModal: new Subscription(),\n    selectMode: new Subscription(),\n    layoutModeChange: new Subscription(),\n    selectHistory: new Subscription(),\n    error: new Subscription(),\n    openErrorModal: new Subscription(),\n    openMonomerConnectionModal: new Subscription(),\n    mouseOverPolymerBond: new Subscription(),\n    mouseLeavePolymerBond: new Subscription(),\n    mouseOverMonomer: new Subscription(),\n    mouseOnMoveMonomer: new Subscription(),\n    mouseLeaveMonomer: new Subscription(),\n    mouseOverAttachmentPoint: new Subscription(),\n    mouseLeaveAttachmentPoint: new Subscription(),\n    mouseUpAttachmentPoint: new Subscription(),\n    mouseDownAttachmentPoint: new Subscription(),\n    mouseOverDrawingEntity: new Subscription(),\n    mouseLeaveDrawingEntity: new Subscription(),\n    mouseUpMonomer: new Subscription(),\n    rightClickSequence: new Subscription(),\n    rightClickCanvas: new Subscription(),\n    rightClickPolymerBond: new Subscription(),\n    editSequence: new Subscription(),\n    startNewSequence: new Subscription(),\n    turnOnSequenceEditInRNABuilderMode: new Subscription(),\n    turnOffSequenceEditInRNABuilderMode: new Subscription(),\n    modifySequenceInRnaBuilder: new Subscription(),\n    mouseOverSequenceItem: new Subscription(),\n    mouseOnMoveSequenceItem: new Subscription(),\n    mouseLeaveSequenceItem: new Subscription(),\n    changeSequenceTypeEnterMode: new Subscription(),\n    toggleSequenceEditMode: new Subscription(),\n    toggleSequenceEditInRNABuilderMode: new Subscription(),\n    clickOnSequenceItem: new Subscription(),\n    mousedownBetweenSequenceItems: new Subscription(),\n    mouseDownOnSequenceItem: new Subscription(),\n    doubleClickOnSequenceItem: new Subscription(),\n    openConfirmationDialog: new Subscription(),\n  };\n}\nresetEditorEvents();\nexport const renderersEvents: ToolEventHandlerName[] = [\n  'mouseOverPolymerBond',\n  'mouseLeavePolymerBond',\n  'mouseOverMonomer',\n  'mouseOnMoveMonomer',\n  'mouseOverAttachmentPoint',\n  'mouseLeaveAttachmentPoint',\n  'mouseUpAttachmentPoint',\n  'mouseDownAttachmentPoint',\n  'mouseLeaveMonomer',\n  'mouseOverDrawingEntity',\n  'mouseLeaveDrawingEntity',\n  'mouseUpMonomer',\n  'rightClickSequence',\n  'rightClickCanvas',\n  'rightClickPolymerBond',\n  'editSequence',\n  'startNewSequence',\n  'turnOnSequenceEditInRNABuilderMode',\n  'turnOffSequenceEditInRNABuilderMode',\n  'modifySequenceInRnaBuilder',\n  'mouseOverSequenceItem',\n  'mouseOnMoveSequenceItem',\n  'mouseLeaveSequenceItem',\n  'changeSequenceTypeEnterMode',\n  'toggleSequenceEditMode',\n  'toggleSequenceEditInRNABuilderMode',\n  'clickOnSequenceItem',\n  'mousedownBetweenSequenceItems',\n  'mouseDownOnSequenceItem',\n  'doubleClickOnSequenceItem',\n];\n\nexport const hotkeysConfiguration = {\n  exit: {\n    shortcut: ['Shift+Tab', 'Escape'],\n    handler: (editor: CoreEditor) => {\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  undo: {\n    shortcut: 'Mod+z',\n    handler: (editor: CoreEditor) => {\n      editor.onSelectHistory('undo');\n    },\n  },\n  redo: {\n    shortcut: ['Mod+Shift+z', 'Mod+y'],\n    handler: (editor: CoreEditor) => {\n      editor.onSelectHistory('redo');\n    },\n  },\n  erase: {\n    shortcut: ['Delete', 'Backspace'],\n    handler: (editor: CoreEditor) => {\n      // TODO create an ability to stop event propagation from mode event handlers to keyboard shortcuts handlers\n      if (editor.isSequenceEditMode) return;\n      editor.events.selectTool.dispatch('erase');\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  clear: {\n    shortcut: ['Mod+Delete', 'Mod+Backspace'],\n    handler: (editor: CoreEditor) => {\n      editor.events.selectTool.dispatch('clear');\n      editor.events.selectTool.dispatch('select-rectangle');\n    },\n  },\n  'zoom-plus': {\n    shortcut: 'Mod+=',\n    handler: () => {\n      ZoomTool.instance.zoomIn();\n    },\n  },\n  'zoom-minus': {\n    shortcut: 'Mod+-',\n    handler: () => {\n      ZoomTool.instance.zoomOut();\n    },\n  },\n  'zoom-reset': {\n    shortcut: 'Mod+0',\n    handler: () => {\n      ZoomTool.instance.resetZoom();\n    },\n  },\n  'select-all': {\n    shortcut: 'Mod+a',\n    handler: (editor: CoreEditor) => {\n      const modelChanges =\n        editor.drawingEntitiesManager.selectAllDrawingEntities();\n      editor.renderersContainer.update(modelChanges);\n    },\n  },\n};\n","import { Vec2 } from 'domain/entities/vec2';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Selection, line } from 'd3';\nimport { BaseMonomer } from './entities/BaseMonomer';\nimport assert from 'assert';\nimport {\n  canvasToMonomerCoordinates,\n  findLabelPoint,\n  Coordinates,\n  getSearchFunction,\n} from './helpers/attachmentPointCalculations';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport { AttachmentPointConstructorParams, AttachmentPointName } from './types';\n\nexport class AttachmentPoint {\n  static attachmentPointVector = 6;\n  static attachmentPointLength = Math.hypot(\n    AttachmentPoint.attachmentPointVector,\n    AttachmentPoint.attachmentPointVector,\n  );\n\n  static labelOffset = 3.5;\n  static radius = 3;\n  static labelSize = { x: 3.5, y: 2.5 };\n  static colors = {\n    fillUsed: '#0097A8',\n    fill: 'white',\n    fillPotentially: '#167782',\n    strokeUsed: '#0097A8',\n    stroke: '#167782',\n    strokePotentially: '#167782',\n  };\n\n  private rootElement: D3SvgElementSelection<SVGGElement, void>;\n  private attachmentPoint: D3SvgElementSelection<SVGGElement, this> | null;\n  public monomer: BaseMonomer;\n  private bodyWidth: number;\n  private bodyHeight: number;\n  private attachmentPointName: AttachmentPointName;\n  private canvasOffset: Coordinates;\n  private centerOfMonomer: Coordinates;\n  private element: Selection<SVGGElement, this, HTMLElement, never> | undefined;\n  private hoverableArea:\n    | Selection<SVGGElement, this, HTMLElement, never>\n    | undefined;\n\n  private initialAngle = 0;\n  private isUsed: boolean;\n  private isSnake;\n  private editorEvents: typeof editorEvents;\n\n  constructor(constructorParams: AttachmentPointConstructorParams) {\n    this.rootElement = constructorParams.rootElement;\n    this.monomer = constructorParams.monomer;\n    this.bodyWidth = constructorParams.bodyWidth;\n    this.bodyHeight = constructorParams.bodyHeight;\n    this.canvasOffset =\n      constructorParams.canvas.node()?.getBoundingClientRect() ||\n      new DOMRect(0, 0, 0, 0);\n    this.attachmentPointName = constructorParams.attachmentPointName;\n    this.centerOfMonomer =\n      constructorParams.monomer.renderer?.center || new Vec2(0, 0, 0);\n    this.isSnake = constructorParams.isSnake;\n    this.isUsed = constructorParams.isUsed;\n    this.initialAngle = constructorParams.angle;\n    this.editorEvents = editorEvents;\n    this.attachmentPoint = null;\n\n    this.appendAttachmentPoint();\n  }\n\n  private get fill() {\n    if (\n      this.monomer.isAttachmentPointPotentiallyUsed(this.attachmentPointName)\n    ) {\n      return AttachmentPoint.colors.fillPotentially;\n    } else if (this.monomer.isAttachmentPointUsed(this.attachmentPointName)) {\n      return AttachmentPoint.colors.fillUsed;\n    } else {\n      return AttachmentPoint.colors.fill;\n    }\n  }\n\n  private get stroke() {\n    if (\n      this.monomer.isAttachmentPointPotentiallyUsed(this.attachmentPointName)\n    ) {\n      return AttachmentPoint.colors.strokePotentially;\n    } else if (this.monomer.isAttachmentPointUsed(this.attachmentPointName)) {\n      return AttachmentPoint.colors.strokeUsed;\n    } else {\n      return AttachmentPoint.colors.stroke;\n    }\n  }\n\n  public removeAttachmentPoint() {\n    this.element?.remove();\n  }\n\n  private renderAttachmentPointByCoordinates(\n    attachmentOnBorder: Coordinates,\n    attachmentPointCoordinates: Coordinates,\n    labelCoordinatesOnMonomer: Coordinates,\n  ) {\n    const fill = this.fill;\n    const stroke = this.stroke;\n\n    this.attachmentPoint = this.rootElement\n      .insert('g', ':first-child')\n      .data([this])\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .attr('class', 'dynamic-element');\n\n    const attachmentPointElement = this.attachmentPoint.append('g');\n\n    attachmentPointElement\n      .append('line')\n      .attr('x1', attachmentOnBorder.x)\n      .attr('y1', attachmentOnBorder.y)\n      .attr('x2', attachmentPointCoordinates.x)\n      .attr('y2', attachmentPointCoordinates.y)\n      .attr('stroke', stroke)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', '1px');\n\n    attachmentPointElement\n      .append('circle')\n      .attr('r', AttachmentPoint.radius)\n      .attr('cx', attachmentPointCoordinates.x)\n      .attr('cy', attachmentPointCoordinates.y)\n      .attr('stroke', fill === 'white' ? '#0097A8' : 'white')\n      .attr('stroke-width', '1px')\n      .attr('fill', fill);\n\n    const labelGroup = this.attachmentPoint.append('text');\n\n    labelGroup\n      .text(this.attachmentPointName)\n      .attr('x', labelCoordinatesOnMonomer.x)\n      .attr('y', labelCoordinatesOnMonomer.y)\n      .style('font-size', '6px')\n      .style('fill', '#585858')\n      .style('user-select', 'none');\n\n    return this.attachmentPoint;\n  }\n\n  private renderHoverableArea(\n    monomerCenter: Coordinates,\n    attachmentPointCenter: Coordinates,\n    angleDegrees: number,\n  ) {\n    if (!this.element) {\n      return;\n    }\n\n    const rotation = angleDegrees + 90;\n    const halfWidth = 8;\n\n    const areaHeight = Math.sqrt(\n      (monomerCenter.x - attachmentPointCenter.x) ** 2 +\n        (monomerCenter.y - attachmentPointCenter.y) ** 2,\n    );\n\n    const points: Coordinates[] = [\n      { x: -AttachmentPoint.radius, y: AttachmentPoint.radius + 2 },\n      { x: AttachmentPoint.radius, y: AttachmentPoint.radius + 2 },\n      {\n        x: halfWidth,\n        y: -areaHeight + 10,\n      },\n      {\n        x: -halfWidth,\n        y: -areaHeight + 10,\n      },\n      { x: -AttachmentPoint.radius, y: AttachmentPoint.radius + 2 },\n    ];\n\n    const lineFunction = line<Coordinates>()\n      .x(({ x }) => x)\n      .y(({ y }) => y);\n\n    const hoverableAreaElement = this.element.append('g');\n\n    hoverableAreaElement\n      .append('path')\n      .attr('d', lineFunction(points) + 'z')\n      .attr('stroke', 'black')\n      .attr('stroke-width', '1px')\n      .attr('fill', '#0097A8')\n      .style('opacity', '0')\n      .style('pointer-events', 'auto')\n      .attr(\n        'transform',\n        `translate(${attachmentPointCenter.x},${attachmentPointCenter.y})rotate(${rotation})`,\n      );\n\n    hoverableAreaElement\n      .on('mouseover', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseOverAttachmentPoint.dispatch(event);\n      })\n      .on('mouseleave', (event) => {\n        this.editorEvents.mouseLeaveAttachmentPoint.dispatch(event);\n      })\n      .on('mousedown', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseDownAttachmentPoint.dispatch(event);\n      })\n      .on('mouseup', (event) => {\n        event.attachmentPointName = this.attachmentPointName;\n        this.editorEvents.mouseUpAttachmentPoint.dispatch(event);\n      });\n\n    return hoverableAreaElement;\n  }\n\n  public appendAttachmentPoint() {\n    let angleDegrees;\n    let angleRadians: number;\n    const polymerBond =\n      this.monomer.attachmentPointsToBonds[this.attachmentPointName];\n    const flip = this.monomer.id === polymerBond?.firstMonomer?.id;\n    const isAttachmentpointR1 = this.attachmentPointName === 'R1';\n    if (!polymerBond) {\n      angleDegrees = this.initialAngle;\n    } else if (\n      this.isSnake &&\n      !polymerBond?.renderer?.isMonomersOnSameHorizontalLine()\n    ) {\n      angleRadians = isAttachmentpointR1 ? 0 : Math.PI;\n      angleDegrees = Vec2.radiansToDegrees(angleRadians);\n    } else {\n      angleRadians = this.rotateToAngle(polymerBond, flip);\n\n      angleDegrees = Vec2.radiansToDegrees(angleRadians);\n    }\n\n    const [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ] = this.getCoordinates(angleDegrees);\n\n    const attachmentToCenterCoordinates = canvasToMonomerCoordinates(\n      this.centerOfMonomer,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const attachmentPoint = this.renderAttachmentPointByCoordinates(\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    );\n\n    this.element = attachmentPoint;\n\n    const hoverableArea = this.renderHoverableArea(\n      attachmentToCenterCoordinates,\n      attachmentPointCoordinates,\n      angleDegrees,\n    );\n\n    this.hoverableArea = hoverableArea;\n\n    return attachmentPoint;\n  }\n\n  public updateAttachmentPointStyleForHover() {\n    this.attachmentPoint?.select('line').style('stroke', this.stroke);\n    this.attachmentPoint\n      ?.select('circle')\n      .style('fill', this.fill)\n      .attr('stroke', this.fill === 'white' ? '#0097A8' : 'white');\n  }\n\n  public rotateToAngle(polymerBond: PolymerBond, flip = false) {\n    let angleRadians = 0;\n    if (flip) {\n      angleRadians = Vec2.oxAngleForVector(\n        polymerBond.endPosition,\n        polymerBond.position,\n      );\n    } else {\n      angleRadians = Vec2.oxAngleForVector(\n        polymerBond.position,\n        polymerBond.endPosition,\n      );\n    }\n\n    return angleRadians;\n  }\n\n  private getCoordinates(angleDegrees) {\n    const [pointOnBorder, pointOfAttachment, labelPoint] =\n      this.catchThePoint(angleDegrees);\n\n    const attachmentToBorderCoordinates = canvasToMonomerCoordinates(\n      pointOnBorder,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const attachmentPointCoordinates = canvasToMonomerCoordinates(\n      pointOfAttachment,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    const labelCoordinates = canvasToMonomerCoordinates(\n      labelPoint,\n      this.centerOfMonomer,\n      this.bodyWidth,\n      this.bodyHeight,\n    );\n\n    return [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ];\n  }\n\n  public updateCoords() {\n    const polymerBond =\n      this.monomer.attachmentPointsToBonds[this.attachmentPointName];\n\n    assert(polymerBond);\n\n    const flip = this.monomer.id === polymerBond?.firstMonomer?.id;\n\n    const angleRadians = this.rotateToAngle(polymerBond, flip);\n    const angleDegrees = Vec2.radiansToDegrees(angleRadians);\n\n    const [\n      attachmentToBorderCoordinates,\n      attachmentPointCoordinates,\n      labelCoordinates,\n    ] = this.getCoordinates(angleDegrees);\n\n    this.attachmentPoint\n      ?.select('line')\n      .attr('x1', attachmentToBorderCoordinates.x)\n      .attr('y1', attachmentToBorderCoordinates.y)\n      .attr('x2', attachmentPointCoordinates.x)\n      .attr('y2', attachmentPointCoordinates.y);\n\n    this.attachmentPoint\n      ?.select('circle')\n      .attr('cx', attachmentPointCoordinates.x)\n      .attr('cy', attachmentPointCoordinates.y)\n      .attr('stroke', 'white')\n      .attr('fill', AttachmentPoint.colors.fillPotentially);\n\n    this.attachmentPoint\n      ?.select('text')\n      .attr('x', labelCoordinates.x)\n      .attr('y', labelCoordinates.y);\n  }\n\n  private catchThePoint(rotationAngle: number): Coordinates[] {\n    assert(this.monomer.renderer);\n\n    const currentMonomerCenter = {\n      x: this.monomer.renderer.center.x,\n      y: this.monomer.renderer.center.y,\n    };\n\n    this.initialAngle = rotationAngle;\n\n    const findPointOnMonomerBorder = getSearchFunction(\n      this.initialAngle - 180,\n      this.canvasOffset,\n      this.monomer,\n    );\n\n    const pointOnBorder = findPointOnMonomerBorder(\n      currentMonomerCenter,\n      (this.bodyWidth + this.bodyHeight) / 2,\n    );\n\n    const [labelPoint, pointOfAttachment] = findLabelPoint(\n      pointOnBorder,\n      this.initialAngle - 180,\n      AttachmentPoint.attachmentPointLength,\n      AttachmentPoint.labelOffset,\n      AttachmentPoint.labelSize,\n      this.isUsed,\n    );\n    return [pointOnBorder, pointOfAttachment, labelPoint];\n  }\n\n  public getElement() {\n    return this.element;\n  }\n\n  public getAttachmentPointName() {\n    return this.attachmentPointName;\n  }\n\n  public getHoverableArea() {\n    return this.hoverableArea;\n  }\n\n  public getAngle() {\n    if (this.initialAngle < 0 && this.isUsed) {\n      return this.initialAngle + 360;\n    }\n    return this.initialAngle;\n  }\n}\n","import { BaseRenderer } from './BaseRenderer';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport { CoreEditor, SelectRectangle } from 'application/editor/internal';\nimport assert from 'assert';\nimport {\n  attachmentPointNumberToAngle,\n  anglesToSector,\n  sectorsList,\n  checkFor0and360,\n} from 'domain/helpers/attachmentPointCalculations';\nimport { AttachmentPoint } from 'domain/AttachmentPoint';\nimport { Vec2 } from 'domain/entities/vec2';\nimport {\n  AttachmentPointConstructorParams,\n  AttachmentPointName,\n} from 'domain/types';\nimport { Coordinates } from 'application/editor/shared/coordinates';\n\nconst labelPositions: { [key: string]: { x: number; y: number } | undefined } =\n  {};\nexport const MONOMER_CSS_CLASS = 'monomer';\n\nexport abstract class BaseMonomerRenderer extends BaseRenderer {\n  private editorEvents: typeof editorEvents;\n  private editor: CoreEditor;\n  private selectionCircle?: D3SvgElementSelection<SVGCircleElement, void>;\n  private selectionBorder?: D3SvgElementSelection<SVGUseElement, void>;\n\n  private freeSectorsList: number[] = sectorsList;\n\n  private attachmentPoints: AttachmentPoint[] | [] = [];\n  private hoveredAttachmenPoint: AttachmentPointName | null = null;\n\n  private monomerSymbolElement?: SVGUseElement | SVGRectElement;\n  public monomerSize: { width: number; height: number };\n\n  private enumerationElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public enumeration: number | null = null;\n\n  private beginningElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public beginning: string | null = null;\n\n  static isSelectable() {\n    return true;\n  }\n\n  protected constructor(\n    public monomer: BaseMonomer,\n    private monomerSelectedElementId: string,\n    private monomerHoveredElementId: string,\n    monomerSymbolElementId: string,\n    private scale?: number,\n  ) {\n    super(monomer as DrawingEntity);\n    this.monomer.setRenderer(this);\n    this.editorEvents = editorEvents;\n    this.editor = CoreEditor?.provideEditorInstance();\n    this.monomerSymbolElement = document.querySelector(\n      `${monomerSymbolElementId} .monomer-body`,\n    ) as SVGUseElement | SVGRectElement;\n    // Cross-browser width and height detection via getAttribute()\n    // as getBoundingClientRect() and getBBox() return 0 values in Firefox\n    // in this case (<path> inside <symbol>, <defs>)\n    this.monomerSize = {\n      width: +(\n        this.monomerSymbolElement?.getAttribute('data-actual-width') || 0\n      ),\n      height: +(\n        this.monomerSymbolElement?.getAttribute('data-actual-height') || 0\n      ),\n    };\n  }\n\n  private isSnakeBondForAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return (\n      this.monomer.attachmentPointsToBonds[attachmentPointName]?.renderer\n        ?.isSnake &&\n      !this.monomer.attachmentPointsToBonds[\n        attachmentPointName\n      ]?.renderer?.isMonomersOnSameHorizontalLine()\n    );\n  }\n\n  public get center() {\n    return new Vec2(\n      this.scaledMonomerPosition.x + this.monomerSize.width / 2,\n      this.scaledMonomerPosition.y + this.monomerSize.height / 2,\n    );\n  }\n\n  public get textColor() {\n    const WHITE = 'white';\n    const colorsMap = {\n      D: WHITE,\n      F: WHITE,\n      K: WHITE,\n      Q: WHITE,\n      R: WHITE,\n      W: WHITE,\n      Y: WHITE,\n    };\n    return (\n      colorsMap[this.monomer.monomerItem.props.MonomerNaturalAnalogCode] ||\n      'black'\n    );\n  }\n\n  protected getMonomerColor(theme) {\n    return (\n      theme.monomer.color[\n        this.monomer.monomerItem.props.MonomerNaturalAnalogCode\n      ]?.regular || theme.monomer.color.default.regular\n    );\n  }\n\n  public redrawAttachmentPoints() {\n    this.hoveredAttachmenPoint = null;\n    if (!this.rootElement) return;\n    if (this.monomer.attachmentPointsVisible) {\n      this.removeAttachmentPoints();\n      this.drawAttachmentPoints();\n    } else {\n      this.removeAttachmentPoints();\n    }\n  }\n\n  public updateAttachmentPoints() {\n    this.hoveredAttachmenPoint = null;\n    if (!this.rootElement) return;\n    if (this.attachmentPoints.length > 0) {\n      this.attachmentPoints.forEach((point) => {\n        point.updateAttachmentPointStyleForHover();\n      });\n    } else {\n      this.drawAttachmentPoints();\n    }\n  }\n\n  public redrawAttachmentPointsCoordinates() {\n    const chosenAttachmentPointName =\n      this.monomer.chosenFirstAttachmentPointForBond;\n    const chosenAttachmentPoint = this.attachmentPoints.find(\n      (item) => item.getAttachmentPointName() === chosenAttachmentPointName,\n    );\n    const angle = chosenAttachmentPoint?.getAngle();\n    const allAngles = this.attachmentPoints.map((item) => {\n      return item.getAngle();\n    });\n    const isSectorOccupied = allAngles.some((item) => {\n      if (angle !== item && typeof angle === 'number') {\n        return Math.abs(angle - item) < 20 || Math.abs(angle - item) > 340;\n      }\n      return false;\n    });\n\n    if (isSectorOccupied) {\n      this.redrawAttachmentPoints();\n      return;\n    }\n\n    const attachmentPoint = this.attachmentPoints.find(\n      (item) => item.getAttachmentPointName() === chosenAttachmentPointName,\n    );\n\n    assert(attachmentPoint);\n    attachmentPoint.updateCoords();\n  }\n\n  public drawAttachmentPoints() {\n    if (this.attachmentPoints.length) {\n      return;\n    }\n\n    // draw used attachment points\n    this.monomer.usedAttachmentPointsNamesList.forEach((item) => {\n      const attachmentPoint = this.appendAttachmentPoint(item);\n      const angle = attachmentPoint.getAngle();\n\n      this.attachmentPoints.push(attachmentPoint as never);\n\n      if (typeof angle === 'number') {\n        // remove this sector from list of free sectors\n        const newList = this.freeSectorsList.filter((item) => {\n          return (\n            anglesToSector[item].min > angle ||\n            anglesToSector[item].max <= angle\n          );\n        });\n        this.freeSectorsList = checkFor0and360(newList);\n      }\n    });\n\n    const unrenderedAtPoints: AttachmentPointName[] = [];\n\n    // draw free attachment points\n    this.monomer.unUsedAttachmentPointsNamesList.forEach((item) => {\n      const properAngleForFreeAttachmentPoint =\n        attachmentPointNumberToAngle[item];\n\n      // if this angle is free for unused att point, draw it\n      if (this.freeSectorsList.includes(properAngleForFreeAttachmentPoint)) {\n        const attachmentPoint = this.appendAttachmentPoint(\n          item,\n          properAngleForFreeAttachmentPoint,\n        );\n        this.attachmentPoints.push(attachmentPoint as never);\n\n        // remove this sector from list\n        const newList = this.freeSectorsList.filter((item) => {\n          return item !== properAngleForFreeAttachmentPoint;\n        });\n        this.freeSectorsList = checkFor0and360(newList);\n      } else {\n        // if this sector is already taken - add name to unrendered list\n        unrenderedAtPoints.push(item);\n      }\n    });\n\n    unrenderedAtPoints.forEach((item) => {\n      const customAngle = this.freeSectorsList.shift();\n      const attachmentPoint = this.appendAttachmentPoint(item, customAngle);\n      this.attachmentPoints.push(attachmentPoint as never);\n    });\n  }\n\n  public appendAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n    customAngle?: number,\n  ) {\n    let rotation;\n\n    if (!this.monomer.isAttachmentPointUsed(attachmentPointName)) {\n      rotation = attachmentPointNumberToAngle[attachmentPointName];\n    }\n    const attachmentPointParams: AttachmentPointConstructorParams = {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      rootElement: this.rootElement!,\n      monomer: this.monomer,\n      bodyWidth: this.monomerSize.width,\n      bodyHeight: this.monomerSize.height,\n      canvas: this.canvasWrapper,\n      attachmentPointName,\n      isUsed: this.monomer.isAttachmentPointUsed(attachmentPointName),\n      isPotentiallyUsed:\n        this.monomer.isAttachmentPointPotentiallyUsed(attachmentPointName) ||\n        this.hoveredAttachmenPoint === attachmentPointName,\n      angle: customAngle || rotation,\n      isSnake: !!this.isSnakeBondForAttachmentPoint(attachmentPointName),\n    };\n\n    const attPointInstance = new AttachmentPoint(attachmentPointParams);\n    return attPointInstance;\n  }\n\n  public removeAttachmentPoints() {\n    this.attachmentPoints.forEach((item) => {\n      item.removeAttachmentPoint();\n    });\n    this.attachmentPoints = [];\n    this.freeSectorsList = sectorsList;\n  }\n\n  public hoverAttachmenPoint(attachmentPointName: AttachmentPointName) {\n    this.hoveredAttachmenPoint = attachmentPointName;\n  }\n\n  private appendRootElement(\n    canvas: D3SvgElementSelection<SVGSVGElement, void>,\n  ) {\n    return canvas\n      .append('g')\n      .data([this])\n      .attr('class', MONOMER_CSS_CLASS)\n      .attr('transition', 'transform 0.2s')\n      .attr(\n        'transform',\n        `translate(${this.scaledMonomerPosition.x}, ${\n          this.scaledMonomerPosition.y\n        }) scale(${this.scale || 1})`,\n      ) as never as D3SvgElementSelection<SVGGElement, void>;\n  }\n\n  protected appendLabel(rootElement: D3SvgElementSelection<SVGGElement, void>) {\n    const fontSize = 6;\n    const textElement = rootElement\n      .append('text')\n      .text(this.monomer.label)\n      .attr('fill', this.textColor)\n      .attr('font-size', `${fontSize}px`)\n      .attr('line-height', `${fontSize}px`)\n      .attr('font-weight', '700')\n      .style('cursor', 'pointer')\n      .style('user-select', 'none')\n      .attr('pointer-events', 'none');\n\n    // cache label position to reuse it form other monomers with same label\n    // need to improve performance for large amount of monomers\n    // getBBox triggers reflow\n    const monomerUniqueKey =\n      this.monomer.label + this.monomer.monomerItem.props.MonomerType;\n\n    if (!labelPositions[monomerUniqueKey]) {\n      const textBBox = (textElement.node() as SVGTextElement).getBBox();\n      labelPositions[monomerUniqueKey] = {\n        x: this.width / 2 - textBBox.width / 2,\n        y: this.height / 2,\n      };\n    }\n    textElement\n      .attr('x', labelPositions[monomerUniqueKey]?.x || 0)\n      .attr('y', labelPositions[monomerUniqueKey]?.y || 0);\n\n    if (this.scale && this.scale !== 1) {\n      labelPositions[monomerUniqueKey] = undefined;\n    }\n  }\n\n  public appendHover(\n    hoverAreaElement: D3SvgElementSelection<SVGGElement, void>,\n  ) {\n    let cursor = 'default';\n\n    if (this.hoverElement) this.hoverElement.remove();\n    if (this.editor.selectedTool instanceof SelectRectangle) cursor = 'move';\n\n    return hoverAreaElement\n      .style('cursor', cursor)\n      .append('use')\n      .attr('href', this.monomerHoveredElementId)\n      .attr('pointer-events', 'none')\n      .attr('class', 'dynamic-element');\n  }\n\n  public removeHover() {\n    if (!this.hoverElement) return;\n    this.hoverElement.remove();\n  }\n\n  public static getScaledMonomerPosition(\n    positionInAngstoms: Vec2,\n    monomerSize: { width: number; height: number } = { width: 0, height: 0 },\n  ) {\n    // we need to convert monomer coordinates(stored in angstroms) to pixels.\n    // it needs to be done in view layer of application (like renderers)\n    const monomerPositionInPixels =\n      Coordinates.modelToCanvas(positionInAngstoms);\n\n    return new Vec2(\n      monomerPositionInPixels.x - monomerSize.width / 2,\n      monomerPositionInPixels.y - monomerSize.height / 2,\n    );\n  }\n\n  public get scaledMonomerPosition() {\n    return BaseMonomerRenderer.getScaledMonomerPosition(\n      this.monomer.position,\n      this.monomerSize,\n    );\n  }\n\n  public appendSelection() {\n    if (this.selectionCircle) {\n      this.selectionCircle.attr('cx', this.center.x).attr('cy', this.center.y);\n    } else {\n      this.selectionBorder = this.rootElement\n        ?.append('use')\n        .attr('href', this.monomerSelectedElementId)\n        .attr('stroke', '#57FF8F')\n        .attr('pointer-events', 'none')\n        .attr('class', 'dynamic-element');\n\n      this.selectionCircle = this.canvas\n        ?.insert('circle', ':first-child')\n        .attr('r', '21px')\n        .attr('opacity', '0.7')\n        .attr('cx', this.center.x)\n        .attr('cy', this.center.y)\n        .attr('fill', '#57FF8F')\n        .attr('class', 'dynamic-element');\n    }\n  }\n\n  public removeSelection() {\n    this.selectionCircle?.remove();\n    this.selectionBorder?.remove();\n    this.selectionCircle = undefined;\n    this.selectionBorder = undefined;\n  }\n\n  protected abstract appendBody(\n    rootElement: D3SvgElementSelection<SVGGElement, void>,\n    theme?,\n  );\n\n  protected appendHoverAreaElement() {\n    this.hoverAreaElement = this.rootElement;\n  }\n\n  private appendEvents() {\n    assert(this.bodyElement);\n    this.bodyElement\n      .on('mouseover', (event) => {\n        this.editorEvents.mouseOverDrawingEntity.dispatch(event);\n        this.editorEvents.mouseOverMonomer.dispatch(event);\n      })\n      .on('mousemove', (event) => {\n        this.editorEvents.mouseOnMoveMonomer.dispatch(event);\n      })\n      .on('mouseleave', (event) => {\n        this.editorEvents.mouseLeaveDrawingEntity.dispatch(event);\n        this.editorEvents.mouseLeaveMonomer.dispatch(event);\n      })\n      .on('mouseup', (event) => {\n        this.editorEvents.mouseUpMonomer.dispatch(event);\n      });\n  }\n\n  protected abstract get enumerationElementPosition(): {\n    x: number;\n    y: number;\n  } | void;\n\n  protected abstract get beginningElementPosition(): {\n    x: number;\n    y: number;\n  } | void;\n\n  public setEnumeration(enumeration: number | null) {\n    this.enumeration = enumeration;\n  }\n\n  protected appendEnumeration() {\n    assert(this.rootElement);\n    assert(this.enumerationElementPosition);\n    this.enumerationElement = this.rootElement\n      .append('text')\n      .attr('direction', 'rtl')\n      .attr('fill', '#7C7C7F')\n      .attr('font-size', '6px')\n      .attr('line-height', '7px')\n      .attr('font-weight', '500')\n      .attr('text-align', 'right')\n      .attr('style', 'user-select: none;')\n      .attr('x', this.enumerationElementPosition.x)\n      .attr('y', this.enumerationElementPosition.y)\n      .text(this.enumeration);\n  }\n\n  public redrawEnumeration() {\n    assert(this.enumerationElement);\n    this.enumerationElement.text(this.enumeration);\n  }\n\n  public setBeginning(beginning: string | null) {\n    this.beginning = beginning;\n  }\n\n  protected appendChainBeginning() {\n    assert(this.rootElement);\n    assert(this.beginningElementPosition);\n    this.beginningElement = this.rootElement\n      .append('text')\n      .attr('direction', 'rtl')\n      .attr('fill', '#0097A8')\n      .attr('font-size', '6px')\n      .attr('line-height', '7px')\n      .attr('font-weight', '700')\n      .attr('text-align', 'right')\n      .attr('style', 'user-select: none;')\n      .attr('x', this.beginningElementPosition.x)\n      .attr('y', this.beginningElementPosition.y)\n      .text(this.beginning);\n  }\n\n  public reDrawChainBeginning() {\n    assert(this.beginningElement);\n    assert(this.beginningElementPosition);\n    this.beginningElement\n      .attr('x', this.beginningElementPosition.x)\n      .attr('y', this.beginningElementPosition.y)\n      .text(this.beginning);\n  }\n\n  public show(theme?) {\n    this.rootElement =\n      this.rootElement ||\n      this.appendRootElement(this.scale ? this.canvasWrapper : this.canvas);\n    this.bodyElement = this.appendBody(this.rootElement, theme);\n    this.appendEvents();\n\n    this.appendLabel(this.rootElement);\n    this.appendHoverAreaElement();\n    if (this.monomer.selected) {\n      this.drawSelection();\n    }\n    this.redrawAttachmentPoints();\n  }\n\n  public drawSelection() {\n    if (!this.rootElement) {\n      return;\n    }\n    if (this.monomer.selected) {\n      this.appendSelection();\n      this.raiseElement();\n    } else {\n      this.removeSelection();\n    }\n  }\n\n  private raiseElement() {\n    this.selectionCircle?.raise();\n    this.rootElement?.raise();\n  }\n\n  public moveSelection() {\n    assert(this.rootElement);\n    this.appendSelection();\n    this.move();\n  }\n\n  public move() {\n    this.rootElement?.attr(\n      'transform',\n      `translate(${this.scaledMonomerPosition.x}, ${\n        this.scaledMonomerPosition.y\n      }) scale(${this.scale || 1})`,\n    );\n  }\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n    this.removeSelection();\n    if (this.monomer.hovered) {\n      this.editorEvents.mouseLeaveMonomer.dispatch();\n    }\n  }\n}\n","import { BaseRenderer } from 'application/render/renderers/internal';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities/vec2';\n\nexport class BaseSequenceRenderer extends BaseRenderer {\n  protected appendHover(\n    _hoverArea,\n  ): D3SvgElementSelection<SVGUseElement, void> | void {\n    return undefined;\n  }\n\n  protected appendHoverAreaElement(): void {}\n\n  drawSelection(): void {}\n\n  moveSelection(): void {}\n\n  protected removeHover(): void {}\n\n  show(_theme?): void {}\n\n  get center() {\n    return new Vec2(0, 0, 0);\n  }\n}\n","import { Vec2 } from 'domain/entities/vec2';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport assert from 'assert';\nimport { Coordinates } from 'application/editor/shared/coordinates';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nlet id = 0;\n\nexport interface DrawingEntityConfig {\n  generateId: boolean;\n}\nexport abstract class DrawingEntity {\n  public selected = false;\n  public hovered = false;\n  public id = 0;\n  public baseRenderer?: BaseRenderer;\n\n  protected constructor(\n    private _position: Vec2 = new Vec2(0, 0),\n    private config: DrawingEntityConfig = {\n      generateId: true,\n    },\n  ) {\n    this._position = _position || new Vec2(0, 0);\n    if (this.config?.generateId === true) {\n      this.id = id;\n      id++;\n    }\n  }\n\n  moveRelative(position: Vec2) {\n    this._position.x += position.x;\n    this._position.y += position.y;\n  }\n\n  public moveAbsolute(position: Vec2) {\n    this._position = position;\n  }\n\n  get position() {\n    return this._position;\n  }\n\n  public turnOnHover() {\n    this.hovered = true;\n  }\n\n  public turnOffHover() {\n    this.hovered = false;\n  }\n\n  public turnOnSelection() {\n    this.selected = true;\n  }\n\n  public turnOffSelection() {\n    this.selected = false;\n  }\n\n  public abstract get center(): Vec2;\n\n  public selectIfLocatedInRectangle(\n    rectangleTopLeftPoint: Vec2,\n    rectangleBottomRightPoint: Vec2,\n    isPreviousSelected = false,\n    shiftKey = false,\n  ) {\n    assert(this.baseRenderer);\n    const prevSelectedValue = this.selected;\n    let center = Coordinates.modelToCanvas(this.center);\n    if (this.baseRenderer instanceof BaseSequenceRenderer) {\n      center = this.baseRenderer.center;\n    }\n    const locatedInRectangle =\n      rectangleBottomRightPoint.x > center.x &&\n      rectangleBottomRightPoint.y > center.y &&\n      rectangleTopLeftPoint.x < center.x &&\n      rectangleTopLeftPoint.y < center.y;\n    if ((shiftKey && !isPreviousSelected) || !shiftKey) {\n      if (locatedInRectangle) {\n        this.turnOnSelection();\n      } else {\n        this.turnOffSelection();\n      }\n    }\n\n    return prevSelectedValue !== this.selected;\n  }\n\n  public setBaseRenderer(renderer: BaseRenderer) {\n    this.baseRenderer = renderer;\n  }\n}\n","import {\n  BaseMonomer,\n  Chem,\n  Peptide,\n  Phosphate,\n  RNABase,\n  Struct,\n  Sugar,\n} from 'domain/entities';\nimport {\n  IKetAttachmentPoint,\n  IKetIdtAliases,\n} from 'application/formatters/types/ket';\nimport { D3SvgElementSelection } from 'application/render/types';\n\nexport type MonomerColorScheme = {\n  regular: string;\n  hover: string;\n};\n\nexport type MonomerItemType = {\n  label: string;\n  colorScheme?: MonomerColorScheme;\n  favorite?: boolean;\n  struct: Struct;\n  props: {\n    id?: string;\n    MonomerNaturalAnalogCode: string;\n    MonomerName: string;\n    MonomerFullName?: string;\n    Name: string;\n    // TODO determine whenever these props are optional or not\n    BranchMonomer?: string;\n    MonomerCaps?: { [key: string]: string };\n    MonomerCode?: string;\n    MonomerType?: string;\n    // TODO: Specify the type. `readonly MonomerClass: KetMonomerClass`?\n    MonomerClass?: string;\n    isMicromoleculeFragment?: boolean;\n    idtAliases?: IKetIdtAliases;\n    unresolved?: boolean;\n  };\n  attachmentPoints?: IKetAttachmentPoint[];\n  seqId?: number;\n};\n\nexport enum AttachmentPointName {\n  R1 = 'R1',\n  R2 = 'R2',\n  R3 = 'R3',\n  R4 = 'R4',\n  R5 = 'R5',\n  R6 = 'R6',\n  R7 = 'R7',\n  R8 = 'R8',\n}\n\nexport const attachmentPointNames = [\n  'R1',\n  'R2',\n  'R3',\n  'R4',\n  'R5',\n  'R6',\n  'R7',\n  'R8',\n];\n\nexport type LeavingGroup = 'O' | 'OH' | 'H';\n\nexport type AttachmentPointConstructorParams = {\n  rootElement: D3SvgElementSelection<SVGGElement, void>;\n  monomer: BaseMonomer;\n  bodyWidth: number;\n  bodyHeight: number;\n  canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  attachmentPointName: AttachmentPointName;\n  isUsed: boolean;\n  isPotentiallyUsed: boolean;\n  angle: number;\n  isSnake: boolean;\n};\n\nexport type ConcreteMonomer = Peptide | Sugar | RNABase | Phosphate | Chem;\n","export enum Entities {\n  Nucleotide = 'Nucleotide',\n  Nucleoside = 'Nucleoside',\n  Phosphate = 'Phosphate',\n}\n","import { DrawingEntity, DrawingEntityConfig } from './DrawingEntity';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { getAttachmentPointLabel } from 'domain/helpers/attachmentPointCalculations';\nimport assert from 'assert';\nimport {\n  IKetAttachmentPoint,\n  IKetAttachmentPointType,\n} from 'application/formatters/types/ket';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { isNumber } from 'lodash';\n\nexport type BaseMonomerConfig = DrawingEntityConfig;\n\nexport abstract class BaseMonomer extends DrawingEntity {\n  public renderer?: BaseMonomerRenderer | BaseSequenceItemRenderer = undefined;\n  public attachmentPointsToBonds: Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > = {};\n\n  public chosenFirstAttachmentPointForBond: AttachmentPointName | null;\n  public potentialSecondAttachmentPointForBond: AttachmentPointName | null;\n  public chosenSecondAttachmentPointForBond: AttachmentPointName | null;\n\n  public potentialAttachmentPointsToBonds: {\n    [key: string]: PolymerBond | null | undefined;\n  } = {};\n\n  public attachmentPointsVisible = false;\n  public monomerItem: MonomerItemType;\n  public isMonomerInRnaChainRow = false;\n\n  constructor(\n    monomerItem: MonomerItemType,\n    _position?: Vec2,\n    config?: BaseMonomerConfig,\n  ) {\n    super(_position, config);\n\n    this.monomerItem = { ...monomerItem };\n    this.attachmentPointsToBonds = this.getAttachmentPointDict();\n    this.potentialAttachmentPointsToBonds = this.getAttachmentPointDict();\n    this.monomerItem.attachmentPoints =\n      this.monomerItem.attachmentPoints ||\n      this.getMonomerDefinitionAttachmentPoints();\n    this.chosenFirstAttachmentPointForBond = null;\n    this.potentialSecondAttachmentPointForBond = null;\n    this.chosenSecondAttachmentPointForBond = null;\n  }\n\n  public get label() {\n    return this.monomerItem.label;\n  }\n\n  public get center() {\n    return this.position;\n  }\n\n  public get listOfAttachmentPoints() {\n    const maxAttachmentPointNumber = this.getMaxAttachmentPointNumber();\n    const attachmentPointList: AttachmentPointName[] = [];\n    for (let i = 1; i <= maxAttachmentPointNumber; i++) {\n      const attachmentPointLabel = getAttachmentPointLabel(i);\n\n      if (this.attachmentPointsToBonds[attachmentPointLabel] !== undefined) {\n        attachmentPointList.push(attachmentPointLabel);\n      }\n    }\n    return attachmentPointList;\n  }\n\n  public turnOnAttachmentPointsVisibility() {\n    this.attachmentPointsVisible = true;\n  }\n\n  public turnOffAttachmentPointsVisibility() {\n    this.attachmentPointsVisible = false;\n  }\n\n  public setChosenFirstAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.chosenFirstAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setChosenSecondAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.chosenSecondAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setPotentialSecondAttachmentPoint(\n    attachmentPoint: AttachmentPointName | null,\n  ) {\n    this.potentialSecondAttachmentPointForBond = attachmentPoint;\n  }\n\n  public setPotentialBond(\n    attachmentPoint: string | undefined,\n    potentialBond?: PolymerBond | null,\n  ) {\n    if (attachmentPoint !== undefined) {\n      this.potentialAttachmentPointsToBonds[attachmentPoint] = potentialBond;\n    }\n  }\n\n  public getAttachmentPointByBond(\n    bond: PolymerBond,\n  ): AttachmentPointName | undefined {\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[attachmentPointName] === bond) {\n        return attachmentPointName as AttachmentPointName;\n      }\n    }\n\n    return undefined;\n  }\n\n  public abstract getValidSourcePoint(\n    monomer?: BaseMonomer,\n  ): AttachmentPointName | undefined;\n\n  public abstract getValidTargetPoint(monomer: BaseMonomer): string | undefined;\n\n  public getPotentialAttachmentPointByBond(bond: PolymerBond) {\n    for (const attachmentPointName in this.potentialAttachmentPointsToBonds) {\n      if (this.potentialAttachmentPointsToBonds[attachmentPointName] === bond) {\n        return attachmentPointName as AttachmentPointName;\n      }\n    }\n\n    return undefined;\n  }\n\n  public get firstFreeAttachmentPoint() {\n    const maxAttachmentPointNumber = this.getMaxAttachmentPointNumber();\n    for (let i = 1; i <= maxAttachmentPointNumber; i++) {\n      const attachmentPoint = `R${i}` as AttachmentPointName;\n      if (\n        this.hasAttachmentPoint(attachmentPoint) &&\n        this.attachmentPointsToBonds[attachmentPoint] === null\n      ) {\n        return attachmentPoint;\n      }\n    }\n\n    return undefined;\n  }\n\n  private getMaxAttachmentPointNumber() {\n    let maxAttachmentPointNumber = 1;\n    for (const attachmentPoint in this.attachmentPointsToBonds) {\n      const match = attachmentPoint.match(/R(\\d+)/);\n      if (match) {\n        const pointNumber = parseInt(match[1]);\n        if (!isNaN(pointNumber) && pointNumber > maxAttachmentPointNumber) {\n          maxAttachmentPointNumber = pointNumber;\n        }\n      }\n    }\n    return maxAttachmentPointNumber;\n  }\n\n  public get R1AttachmentPoint(): AttachmentPointName | undefined {\n    if (this.attachmentPointsToBonds.R1 === null) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public get R2AttachmentPoint(): AttachmentPointName | undefined {\n    if (this.attachmentPointsToBonds.R2 === null) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public get hasFreeAttachmentPoint() {\n    return Boolean(this.firstFreeAttachmentPoint);\n  }\n\n  public isAttachmentPointExistAndFree(attachmentPoint: AttachmentPointName) {\n    return (\n      this.hasAttachmentPoint(attachmentPoint) &&\n      !this.isAttachmentPointUsed(attachmentPoint)\n    );\n  }\n\n  public setRenderer(renderer: BaseMonomerRenderer) {\n    super.setBaseRenderer(renderer as BaseRenderer);\n    this.renderer = renderer;\n  }\n\n  public forEachBond(\n    callback: (\n      polymerBond: PolymerBond,\n      attachmentPointName: AttachmentPointName,\n    ) => void,\n  ) {\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[attachmentPointName]) {\n        callback(\n          this.attachmentPointsToBonds[attachmentPointName],\n          attachmentPointName as AttachmentPointName,\n        );\n      }\n    }\n  }\n\n  public setBond(attachmentPointName: AttachmentPointName, bond: PolymerBond) {\n    this.attachmentPointsToBonds[attachmentPointName] = bond;\n  }\n\n  public unsetBond(attachmentPointName: AttachmentPointName) {\n    this.attachmentPointsToBonds[attachmentPointName] = null;\n  }\n\n  public get hasBonds() {\n    let hasBonds = false;\n    for (const bondName in this.attachmentPointsToBonds) {\n      if (this.attachmentPointsToBonds[bondName]) {\n        hasBonds = true;\n      }\n    }\n    return hasBonds;\n  }\n\n  public hasPotentialBonds() {\n    return Object.values(this.potentialAttachmentPointsToBonds).some(\n      (bond) => !!bond,\n    );\n  }\n\n  public getPotentialBond(attachmentPointName: string) {\n    return this.potentialAttachmentPointsToBonds[attachmentPointName];\n  }\n\n  public removeBond(polymerBond: PolymerBond) {\n    const attachmentPointName = this.getAttachmentPointByBond(polymerBond);\n    if (!attachmentPointName) return;\n    this.unsetBond(attachmentPointName);\n  }\n\n  public removePotentialBonds(clearSelectedPoints = false) {\n    if (clearSelectedPoints) {\n      this.chosenFirstAttachmentPointForBond = null;\n      this.chosenSecondAttachmentPointForBond = null;\n      this.potentialSecondAttachmentPointForBond = null;\n    }\n\n    for (const attachmentPointName in this.potentialAttachmentPointsToBonds) {\n      this.potentialAttachmentPointsToBonds[attachmentPointName] = null;\n    }\n  }\n\n  public get availableAttachmentPointForBondEnd() {\n    if (this.chosenSecondAttachmentPointForBond) {\n      return this.chosenSecondAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public hasAttachmentPoint(attachmentPointName: AttachmentPointName) {\n    return this.attachmentPointsToBonds[attachmentPointName] !== undefined;\n  }\n\n  public get usedAttachmentPointsNamesList() {\n    const list: AttachmentPointName[] = [];\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (\n        this.isAttachmentPointUsed(attachmentPointName as AttachmentPointName)\n      ) {\n        list.push(attachmentPointName as AttachmentPointName);\n      }\n    }\n    return list;\n  }\n\n  public get unUsedAttachmentPointsNamesList() {\n    const list: AttachmentPointName[] = [];\n    for (const attachmentPointName in this.attachmentPointsToBonds) {\n      if (\n        !this.isAttachmentPointUsed(attachmentPointName as AttachmentPointName)\n      ) {\n        list.push(attachmentPointName as AttachmentPointName);\n      }\n    }\n    return list;\n  }\n\n  public getBondByAttachmentPoint(attachmentPointName: AttachmentPointName) {\n    return this.attachmentPointsToBonds[attachmentPointName];\n  }\n\n  public getPotentialBondByAttachmentPoint(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return this.potentialAttachmentPointsToBonds[attachmentPointName];\n  }\n\n  public isAttachmentPointUsed(attachmentPointName: AttachmentPointName) {\n    return Boolean(this.getBondByAttachmentPoint(attachmentPointName));\n  }\n\n  public isAttachmentPointPotentiallyUsed(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return Boolean(this.getPotentialBondByAttachmentPoint(attachmentPointName));\n  }\n\n  private getAttachmentPointDict(): Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > {\n    if (this.monomerItem.attachmentPoints) {\n      const { attachmentPointDictionary } =\n        BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n          this.monomerItem.attachmentPoints,\n        );\n      return attachmentPointDictionary;\n    } else {\n      return this.getAttachmentPointDictFromAtoms();\n    }\n  }\n\n  public static getAttachmentPointDictFromMonomerDefinition(\n    attachmentPoints: IKetAttachmentPoint[],\n  ): {\n    attachmentPointDictionary: Partial<\n      Record<AttachmentPointName, PolymerBond | null>\n    >;\n    attachmentPointsList: AttachmentPointName[];\n  } {\n    const attachmentPointDictionary = {};\n    const attachmentPointsList: AttachmentPointName[] = [];\n    const attachmentPointTypeToNumber: {\n      [key in IKetAttachmentPointType]: (\n        attachmentPointNumber?: number,\n      ) => number;\n    } = {\n      left: () => 1,\n      right: () => 2,\n      side: (attachmentPointNumber) => {\n        assert(attachmentPointNumber);\n        return (\n          attachmentPointNumber +\n          Number(!('R1' in attachmentPointDictionary)) +\n          Number(!('R2' in attachmentPointDictionary))\n        );\n      },\n    };\n    attachmentPoints.forEach((attachmentPoint, attachmentPointIndex) => {\n      const attachmentPointNumber = attachmentPointIndex + 1;\n      let calculatedAttachmentPointNumber;\n      if (attachmentPoint.type) {\n        const getLabelByTypeAction =\n          attachmentPointTypeToNumber[attachmentPoint.type];\n        calculatedAttachmentPointNumber =\n          typeof getLabelByTypeAction === 'function'\n            ? attachmentPointTypeToNumber[attachmentPoint.type](\n                attachmentPointNumber,\n              )\n            : attachmentPointNumber;\n      } else {\n        calculatedAttachmentPointNumber = attachmentPointNumber;\n      }\n      const calculatedLabel =\n        attachmentPoint.label || `R${calculatedAttachmentPointNumber}`;\n      attachmentPointDictionary[calculatedLabel] = null;\n      attachmentPointsList.push(calculatedLabel as AttachmentPointName);\n    });\n    return { attachmentPointDictionary, attachmentPointsList };\n  }\n\n  public get attachmentPointNumberToType() {\n    return {\n      1: 'left',\n      2: 'right',\n      moreThanTwo: 'side',\n    };\n  }\n\n  private getMonomerDefinitionAttachmentPoints() {\n    const monomerDefinitionAttachmentPoints: IKetAttachmentPoint[] = [];\n    this.superatomAttachmentPoints.forEach((superatomAttachmentPoint) => {\n      if (!isNumber(superatomAttachmentPoint.attachmentPointNumber)) {\n        return;\n      }\n\n      const bondsToLeavingGroupAtom = this.monomerItem.struct.bonds.filter(\n        (_, bond) => {\n          return (\n            bond.begin === superatomAttachmentPoint.leaveAtomId ||\n            bond.end === superatomAttachmentPoint.leaveAtomId\n          );\n        },\n      );\n\n      if (bondsToLeavingGroupAtom.size > 1) {\n        return;\n      }\n\n      monomerDefinitionAttachmentPoints.push({\n        attachmentAtom: superatomAttachmentPoint.atomId,\n        leavingGroup: {\n          atoms:\n            superatomAttachmentPoint.leaveAtomId === 0 ||\n            superatomAttachmentPoint.leaveAtomId\n              ? [superatomAttachmentPoint.leaveAtomId]\n              : [],\n        },\n        type:\n          this.attachmentPointNumberToType[\n            superatomAttachmentPoint.attachmentPointNumber\n          ] || this.attachmentPointNumberToType.moreThanTwo,\n      });\n    });\n    return monomerDefinitionAttachmentPoints;\n  }\n\n  get superatomAttachmentPoints() {\n    const struct = this.monomerItem.struct;\n    const superatomWithoutLabel = struct.sgroups\n      .filter((_, sgroup) => sgroup.isSuperatomWithoutLabel)\n      ?.get(0);\n\n    if (!superatomWithoutLabel) {\n      return [];\n    }\n\n    return superatomWithoutLabel.getAttachmentPoints();\n  }\n\n  public getAttachmentPointDictFromAtoms(): Partial<\n    Record<AttachmentPointName, PolymerBond | null>\n  > {\n    const attachmentPointNameToBond = {};\n\n    this.superatomAttachmentPoints.forEach((superatomAttachmentPoint) => {\n      if (!isNumber(superatomAttachmentPoint.attachmentPointNumber)) {\n        return;\n      }\n\n      const label = getAttachmentPointLabel(\n        superatomAttachmentPoint.attachmentPointNumber,\n      );\n      const leavingGroupAtomId = superatomAttachmentPoint.leaveAtomId;\n      const bondsToLeavingGroupAtom = this.monomerItem.struct.bonds.filter(\n        (_, bond) => {\n          return (\n            bond.begin === leavingGroupAtomId || bond.end === leavingGroupAtomId\n          );\n        },\n      );\n\n      if (bondsToLeavingGroupAtom.size > 1) {\n        return;\n      }\n\n      attachmentPointNameToBond[label] = null;\n    });\n\n    return attachmentPointNameToBond;\n  }\n\n  public get startBondAttachmentPoint() {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    if (this.attachmentPointsToBonds.R2 === null) {\n      return 'R2';\n    }\n\n    if (this.attachmentPointsToBonds.R1 === null) {\n      return 'R1';\n    }\n\n    return this.firstFreeAttachmentPoint;\n  }\n\n  abstract get SubChainConstructor():\n    | typeof RnaSubChain\n    | typeof ChemSubChain\n    | typeof PhosphateSubChain\n    | typeof PeptideSubChain;\n\n  public isMonomerTypeDifferentForChaining(\n    monomerToChain: SubChainNode | BaseMonomer,\n  ) {\n    return this.SubChainConstructor !== monomerToChain.SubChainConstructor;\n  }\n\n  public get isModification() {\n    return this.monomerItem.props.MonomerNaturalAnalogCode !== this.label;\n  }\n\n  public get sideConnections() {\n    const sideConnections: PolymerBond[] = [];\n    this.forEachBond((bond) => {\n      if (bond.isSideChainConnection) {\n        sideConnections.push(bond);\n      }\n    });\n    return sideConnections;\n  }\n}\n","import { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PolymerBond } from '../PolymerBond';\n\nexport class BaseSubChain {\n  public nodes: Array<SubChainNode> = [];\n  public bonds: Array<PolymerBond> = [];\n\n  constructor() {}\n\n  public get lastNode() {\n    return this.nodes[this.nodes.length - 1];\n  }\n\n  public get firstNode() {\n    return this.nodes[0];\n  }\n\n  public add(node: SubChainNode) {\n    this.nodes.push(node);\n  }\n\n  public get length() {\n    return this.nodes.length;\n  }\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class PeptideSubChain extends BaseSubChain {}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class ChemSubChain extends BaseSubChain {}\n","import { BaseMonomer } from './BaseMonomer';\nimport { AttachmentPointName } from 'domain/types';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\n\nexport class Peptide extends BaseMonomer {\n  public getValidSourcePoint(secondMonomer?: BaseMonomer) {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n    if (secondMonomer?.potentialSecondAttachmentPointForBond) {\n      if (\n        secondMonomer?.potentialSecondAttachmentPointForBond ===\n          AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      }\n      if (\n        secondMonomer?.potentialSecondAttachmentPointForBond ===\n          AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      }\n      return;\n    }\n    if (\n      (!secondMonomer ||\n        secondMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1)) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n    if (\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      secondMonomer?.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n    if (firstMonomer?.chosenFirstAttachmentPointForBond) {\n      if (\n        firstMonomer?.chosenFirstAttachmentPointForBond ===\n          AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      }\n      if (\n        firstMonomer?.chosenFirstAttachmentPointForBond ===\n          AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      }\n      return;\n    }\n    if (\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      firstMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R1;\n    }\n    if (\n      firstMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return PeptideSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\n\nexport class Chem extends BaseMonomer {\n  public getValidSourcePoint(monomer?: BaseMonomer) {\n    return Peptide.prototype.getValidSourcePoint.call(this, monomer);\n  }\n\n  public getValidTargetPoint(monomer: BaseMonomer) {\n    return Peptide.prototype.getValidTargetPoint.call(this, monomer);\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import {\n  BaseMonomer,\n  Peptide,\n  Phosphate,\n  RNABase,\n  Sugar,\n  UnsplitNucleotide,\n} from 'domain/entities';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\n\nexport function getMonomerUniqueKey(monomer: MonomerItemType) {\n  return `${monomer.props.MonomerName}___${monomer.props.Name}`;\n}\n\nexport function checkIsR2R1Connection(\n  monomer: BaseMonomer,\n  nextMonomer: BaseMonomer,\n) {\n  return (\n    nextMonomer.attachmentPointsToBonds.R1?.getAnotherMonomer(nextMonomer) ===\n    monomer\n  );\n}\n\nexport function isR2R1ConnectionFromRnaBase(polymerBond: PolymerBond) {\n  const firstMonomerAttachmentPoint =\n    polymerBond.firstMonomer.getAttachmentPointByBond(polymerBond);\n  const secondMonomerAttachmentPoint =\n    polymerBond.secondMonomer?.getAttachmentPointByBond(polymerBond);\n\n  return (\n    (polymerBond.firstMonomer instanceof RNABase &&\n      firstMonomerAttachmentPoint === AttachmentPointName.R2 &&\n      secondMonomerAttachmentPoint === AttachmentPointName.R1) ||\n    (polymerBond.secondMonomer instanceof RNABase &&\n      secondMonomerAttachmentPoint === AttachmentPointName.R2 &&\n      firstMonomerAttachmentPoint === AttachmentPointName.R1)\n  );\n}\n\nexport function isMonomerConnectedToR2RnaBase(monomer?: BaseMonomer) {\n  if (!monomer) {\n    return false;\n  }\n\n  const R1PolymerBond = monomer.attachmentPointsToBonds.R1;\n  const R1ConnectedMonomer = R1PolymerBond?.getAnotherMonomer(monomer);\n\n  return (\n    R1ConnectedMonomer instanceof RNABase &&\n    getSugarFromRnaBase(R1ConnectedMonomer) &&\n    R1ConnectedMonomer.attachmentPointsToBonds.R2?.getAnotherMonomer(\n      R1ConnectedMonomer,\n    ) === monomer\n  );\n}\n\nexport function getNextMonomerInChain(\n  monomer?: BaseMonomer,\n  firstMonomer?: BaseMonomer | null,\n) {\n  if (!monomer) return undefined;\n\n  const r2PolymerBond = monomer.attachmentPointsToBonds.R2;\n  const nextMonomer = r2PolymerBond?.getAnotherMonomer(monomer);\n\n  if (\n    !nextMonomer ||\n    (nextMonomer === firstMonomer && r2PolymerBond) ||\n    isMonomerConnectedToR2RnaBase(nextMonomer)\n  )\n    return undefined;\n\n  return r2PolymerBond &&\n    nextMonomer?.getAttachmentPointByBond(r2PolymerBond) ===\n      AttachmentPointName.R1\n    ? nextMonomer\n    : undefined;\n}\n\nexport function getRnaBaseFromSugar(monomer?: BaseMonomer) {\n  if (!monomer || !(monomer instanceof Sugar)) return undefined;\n  const r3PolymerBond = monomer.attachmentPointsToBonds.R3;\n  const r3ConnectedMonomer = r3PolymerBond?.getAnotherMonomer(monomer);\n\n  if (!r3ConnectedMonomer) {\n    return false;\n  }\n\n  const r1PolymerBondOfConnectedMonomer =\n    r3ConnectedMonomer?.attachmentPointsToBonds.R1;\n  const r1ConnectedMonomer =\n    r1PolymerBondOfConnectedMonomer?.getAnotherMonomer(r3ConnectedMonomer);\n\n  return r3ConnectedMonomer instanceof RNABase && r1ConnectedMonomer === monomer\n    ? r3ConnectedMonomer\n    : undefined;\n}\n\nexport function getSugarFromRnaBase(monomer?: BaseMonomer) {\n  if (!monomer || !(monomer instanceof RNABase)) return undefined;\n  const r1PolymerBond = monomer.attachmentPointsToBonds.R1;\n  const r1ConnectedMonomer = r1PolymerBond?.getAnotherMonomer(monomer);\n\n  if (!r1ConnectedMonomer) {\n    return undefined;\n  }\n\n  const r3PolymerBondOfConnectedMonomer =\n    r1ConnectedMonomer?.attachmentPointsToBonds.R3;\n  const r3ConnectedMonomer =\n    r3PolymerBondOfConnectedMonomer?.getAnotherMonomer(r1ConnectedMonomer);\n\n  return r1ConnectedMonomer instanceof Sugar && r3ConnectedMonomer === monomer\n    ? r1ConnectedMonomer\n    : undefined;\n}\n\nexport function getPhosphateFromSugar(monomer?: BaseMonomer) {\n  if (!monomer) return undefined;\n  const nextMonomerInChain = getNextMonomerInChain(monomer);\n\n  return nextMonomerInChain instanceof Phosphate\n    ? nextMonomerInChain\n    : undefined;\n}\n\nexport function isMonomerBeginningOfChain(\n  monomer: BaseMonomer,\n  MonomerTypes: Array<\n    typeof Peptide | typeof Phosphate | typeof Sugar | typeof UnsplitNucleotide\n  >,\n) {\n  const r1PolymerBond = monomer.attachmentPointsToBonds.R1;\n  const previousMonomer = r1PolymerBond?.getAnotherMonomer(monomer);\n  const isPreviousMonomerPartOfChain =\n    previousMonomer &&\n    !MonomerTypes.some((MonomerType) => previousMonomer instanceof MonomerType);\n  const previousConnectionNotR2 =\n    r1PolymerBond &&\n    previousMonomer?.getAttachmentPointByBond(r1PolymerBond) !== 'R2';\n\n  // For single monomers we check that monomer has bonds, but for UnsplitNucleotide we don't\n  // to be consistent with rna triplets (we show enumeration for single triplet)\n  return (\n    ((monomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) ||\n      !monomer.hasAttachmentPoint(AttachmentPointName.R1)) &&\n      (monomer.hasBonds || monomer instanceof UnsplitNucleotide)) ||\n    previousConnectionNotR2 ||\n    isPreviousMonomerPartOfChain\n  );\n}\n\nexport function isValidNucleotide(\n  sugar: Sugar,\n  firstMonomerInCyclicChain?: BaseMonomer,\n): boolean {\n  if (!getRnaBaseFromSugar(sugar)) {\n    return false;\n  }\n\n  const phosphate = getPhosphateFromSugar(sugar);\n  if (!phosphate || phosphate === firstMonomerInCyclicChain) {\n    return false;\n  }\n\n  const nextMonomerAfterPhosphate = getNextMonomerInChain(phosphate);\n  return !!nextMonomerAfterPhosphate;\n}\n\nexport function isValidNucleoside(\n  sugar: Sugar,\n  firstMonomerInCyclicChain?: BaseMonomer,\n): boolean {\n  if (!getRnaBaseFromSugar(sugar)) {\n    return false;\n  }\n\n  const phosphate = getPhosphateFromSugar(sugar);\n  if (!phosphate || phosphate === firstMonomerInCyclicChain) {\n    return true;\n  }\n\n  const nextMonomerAfterPhosphate = getNextMonomerInChain(phosphate);\n  return !nextMonomerAfterPhosphate;\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { AttachmentPointName } from 'domain/types';\nimport { getSugarFromRnaBase } from 'domain/helpers/monomers';\n\nexport class RNABase extends BaseMonomer {\n  public getValidSourcePoint() {\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public getValidTargetPoint() {\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    return this.firstFreeAttachmentPoint;\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public override get sideConnections() {\n    const sideConnections: PolymerBond[] = [];\n    this.forEachBond((polymerBond, attachmentPointName) => {\n      if (\n        attachmentPointName !== AttachmentPointName.R1 ||\n        !getSugarFromRnaBase(this)\n      ) {\n        sideConnections.push(polymerBond);\n      }\n    });\n\n    return sideConnections;\n  }\n}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class PhosphateSubChain extends BaseSubChain {}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class RnaSubChain extends BaseSubChain {}\n","import { BaseMonomer } from './BaseMonomer';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { Vec2 } from './vec2';\nimport { Sugar } from './Sugar';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\n\nexport class Phosphate extends BaseMonomer {\n  constructor(monomerItem: MonomerItemType, _position?: Vec2) {\n    super(monomerItem, _position);\n  }\n\n  public getValidSourcePoint(secondMonomer: BaseMonomer) {\n    return this.getValidPoint(\n      secondMonomer,\n      secondMonomer.potentialSecondAttachmentPointForBond,\n    );\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    // same implementation for both source and target attachment points\n    return this.getValidPoint(\n      firstMonomer,\n      firstMonomer.chosenFirstAttachmentPointForBond,\n    );\n  }\n\n  private getValidPoint(\n    otherMonomer: BaseMonomer,\n    potentialPointOnOther: string | null,\n  ) {\n    // If we chose specific start AP on this monomer, return it\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n\n    // If we want to choose specific end AP on this monomer, return it\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n\n    // If this is the only available AP on this monomer, return it\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n\n    // If other monomer is not a Sugar, we want to open modal\n    if (!(otherMonomer instanceof Sugar)) {\n      return;\n    }\n    // If we chose a specific AP on other monomer, we want to determine the correct AP on this one\n    if (potentialPointOnOther) {\n      if (\n        potentialPointOnOther === AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      } else if (\n        potentialPointOnOther !== AttachmentPointName.R2 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      } else {\n        return;\n      }\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    if (\n      !otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    return undefined;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PhosphateSubChain, RnaSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n\n  public get SubChainConstructor() {\n    return PhosphateSubChain;\n  }\n}\n","import { BaseMonomer } from './BaseMonomer';\nimport { RNABase } from './RNABase';\nimport { Phosphate } from './Phosphate';\nimport { AttachmentPointName } from 'domain/types';\nimport { RnaSubChain } from 'domain/entities/monomer-chains/RnaSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PhosphateSubChain } from 'domain/entities/monomer-chains/PhosphateSubChain';\n\nexport class Sugar extends BaseMonomer {\n  public getValidSourcePoint(secondMonomer: BaseMonomer) {\n    return this.getValidPoint(\n      secondMonomer,\n      secondMonomer.potentialSecondAttachmentPointForBond,\n    );\n  }\n\n  public getValidTargetPoint(firstMonomer: BaseMonomer) {\n    // same implementation for both source and target attachment points\n    return this.getValidPoint(\n      firstMonomer,\n      firstMonomer.chosenFirstAttachmentPointForBond,\n    );\n  }\n\n  private getValidPoint(\n    otherMonomer: BaseMonomer,\n    potentialPointOnOther: string | null,\n  ) {\n    // If we chose specific start AP on this monomer, return it\n    if (this.chosenFirstAttachmentPointForBond) {\n      return this.chosenFirstAttachmentPointForBond;\n    }\n    // If we want to choose specific end AP on this monomer, return it\n    if (this.potentialSecondAttachmentPointForBond) {\n      return this.potentialSecondAttachmentPointForBond;\n    }\n    // If this is the only available AP on this monomer, return it\n    if (this.unUsedAttachmentPointsNamesList.length === 1) {\n      return this.unUsedAttachmentPointsNamesList[0];\n    }\n\n    // If other monomer is neither a Phosphate nor RNABase, open modal\n    if (\n      !(otherMonomer instanceof Phosphate) &&\n      !(otherMonomer instanceof RNABase)\n    ) {\n      return;\n    }\n\n    // If other monomer is RNABase, attach it to R3 or open modal\n    if (otherMonomer instanceof RNABase) {\n      if (this.isAttachmentPointExistAndFree(AttachmentPointName.R3)) {\n        return AttachmentPointName.R3;\n      } else return;\n    }\n\n    // If we chose a specific AP on some Phosphate, we want to determine the correct AP on this Sugar\n    if (potentialPointOnOther) {\n      if (\n        potentialPointOnOther === AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n      ) {\n        return AttachmentPointName.R2;\n      } else if (\n        potentialPointOnOther !== AttachmentPointName.R1 &&\n        this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n      ) {\n        return AttachmentPointName.R1;\n      } else {\n        return;\n      }\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R2)\n    ) {\n      return AttachmentPointName.R2;\n    }\n\n    if (\n      otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R2) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    if (\n      !otherMonomer.isAttachmentPointExistAndFree(AttachmentPointName.R1) &&\n      this.isAttachmentPointExistAndFree(AttachmentPointName.R1)\n    ) {\n      return AttachmentPointName.R1;\n    }\n\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return RnaSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PhosphateSubChain, RnaSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n\n  public get isPartOfRNA(): boolean {\n    return (\n      this.attachmentPointsToBonds.R3?.getAnotherMonomer(this) instanceof\n      RNABase\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport assert from 'assert';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Chem } from 'domain/entities/Chem';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Coordinates } from '../shared/coordinates';\nimport { AttachmentPointName } from 'domain/types';\nimport { AttachmentPoint } from 'domain/AttachmentPoint';\nimport { Command } from 'domain/entities/Command';\nimport { UnresolvedMonomer } from 'domain/entities';\n\nclass PolymerBond implements BaseTool {\n  private bondRenderer?: PolymerBondRenderer;\n  private isBondConnectionModalOpen = false;\n  history: EditorHistory;\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(this.editor);\n  }\n\n  public mouseDownAttachmentPoint(event) {\n    const selectedRenderer = event.target.__data__;\n    if (\n      selectedRenderer instanceof AttachmentPoint &&\n      !selectedRenderer.monomer.isAttachmentPointUsed(event.attachmentPointName)\n    ) {\n      selectedRenderer.monomer.setChosenFirstAttachmentPoint(\n        event.attachmentPointName,\n      );\n    }\n  }\n\n  private removeBond() {\n    if (this.bondRenderer) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n          this.bondRenderer.polymerBond,\n        );\n      this.bondRenderer = undefined;\n\n      return modelChanges;\n    } else {\n      return new Command();\n    }\n  }\n\n  public mousedown(event) {\n    const selectedRenderer = event.target.__data__;\n    if (\n      selectedRenderer instanceof BaseMonomerRenderer ||\n      selectedRenderer instanceof AttachmentPoint\n    ) {\n      const startAttachmentPoint =\n        selectedRenderer.monomer.startBondAttachmentPoint;\n\n      if (!startAttachmentPoint) {\n        this.editor.events.error.dispatch(\n          \"Selected monomer doesn't have any free attachment points\",\n        );\n        return;\n      }\n      const { polymerBond, command: modelChanges } =\n        this.editor.drawingEntitiesManager.startPolymerBondCreation(\n          selectedRenderer.monomer,\n          selectedRenderer.monomer.position,\n          Coordinates.canvasToModel(this.editor.lastCursorPositionOfCanvas),\n        );\n\n      this.editor.renderersContainer.update(modelChanges);\n      this.bondRenderer = polymerBond.renderer;\n    }\n  }\n\n  public mousemove() {\n    if (this.bondRenderer) {\n      const modelChanges = this.editor.drawingEntitiesManager.movePolymerBond(\n        this.bondRenderer.polymerBond,\n        Coordinates.canvasToModel(this.editor.lastCursorPositionOfCanvas),\n      );\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseLeavePolymerBond(event) {\n    const renderer: PolymerBondRenderer = event.target.__data__;\n    if (this.bondRenderer || !renderer.polymerBond) return;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.hidePolymerBondInformation(\n        renderer.polymerBond,\n      );\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverPolymerBond(event) {\n    if (this.bondRenderer) return;\n\n    const renderer: PolymerBondRenderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.showPolymerBondInformation(\n        renderer.polymerBond,\n      );\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverMonomer(event) {\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n    let modelChanges;\n\n    if (this.bondRenderer) {\n      // Don't need to do anything if we hover over the first monomer of the bond\n      if (this.bondRenderer?.polymerBond.firstMonomer === renderer.monomer) {\n        return;\n      }\n      const shouldCalculateBonds = !this.shouldInvokeModal(\n        this.bondRenderer?.polymerBond.firstMonomer,\n        renderer.monomer,\n        false,\n      );\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToFinishBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n          shouldCalculateBonds,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToStartBondCreation(\n          renderer.monomer,\n        );\n    }\n\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseOverAttachmentPoint(event) {\n    const renderer: AttachmentPoint = event.target.__data__;\n    let modelChanges;\n\n    if (renderer.monomer.isAttachmentPointUsed(event.attachmentPointName)) {\n      return;\n    }\n\n    if (this.bondRenderer) {\n      // Don't need to do anything if we hover over the first monomer of the bond\n      if (this.bondRenderer?.polymerBond.firstMonomer === renderer.monomer) {\n        return;\n      }\n      const shouldCalculateBonds = !this.shouldInvokeModal(\n        this.bondRenderer?.polymerBond.firstMonomer,\n        renderer.monomer,\n        false,\n      );\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToFinishAttachmenPointBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n          event.attachmentPointName,\n          shouldCalculateBonds,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.intendToStartAttachmenPointBondCreation(\n          renderer.monomer,\n          event.attachmentPointName,\n        );\n    }\n\n    this.editor.renderersContainer.markForRecalculateBegin();\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseLeaveMonomer(event) {\n    const eventToElementData = event.toElement?.__data__;\n    const eventFromElementData = event.fromElement?.__data__;\n    if (\n      eventToElementData instanceof AttachmentPoint &&\n      eventToElementData.monomer === eventFromElementData.monomer\n    ) {\n      eventToElementData.monomer.removePotentialBonds();\n\n      return;\n    }\n\n    const renderer: BaseMonomerRenderer = event.target.__data__;\n\n    if (\n      renderer !== this.bondRenderer?.polymerBond?.firstMonomer?.renderer &&\n      !this.isBondConnectionModalOpen\n    ) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelIntentionToFinishBondCreation(\n          renderer.monomer,\n          this.bondRenderer?.polymerBond,\n        );\n\n      this.editor.renderersContainer.markForRecalculateBegin();\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseLeaveAttachmentPoint(event) {\n    if (this.isBondConnectionModalOpen) {\n      return;\n    }\n    const attachmentPointRenderer: AttachmentPoint = event.target.__data__;\n    if (\n      attachmentPointRenderer.monomer.renderer !==\n      this.bondRenderer?.polymerBond?.firstMonomer?.renderer\n    ) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.cancelIntentionToFinishBondCreation(\n          attachmentPointRenderer.monomer,\n          this.bondRenderer?.polymerBond,\n        );\n      this.editor.renderersContainer.markForRecalculateBegin();\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  public mouseUpAttachmentPoint(event) {\n    const renderer = event.target.__data__ as AttachmentPoint;\n    const isFirstMonomerHovered =\n      renderer.monomer.renderer ===\n      this.bondRenderer?.polymerBond?.firstMonomer?.renderer;\n\n    if (this.bondRenderer && !isFirstMonomerHovered) {\n      const firstMonomer = this.bondRenderer?.polymerBond?.firstMonomer;\n      const secondMonomer = renderer.monomer;\n\n      if (secondMonomer.isAttachmentPointUsed(event.attachmentPointName)) {\n        this.mouseup();\n        return;\n      }\n\n      for (const attachmentPoint in secondMonomer.attachmentPointsToBonds) {\n        const bond = secondMonomer.attachmentPointsToBonds[attachmentPoint];\n        if (!bond) {\n          continue;\n        }\n        const alreadyHasBond =\n          (bond.firstMonomer === firstMonomer &&\n            bond.secondMonomer === secondMonomer) ||\n          (bond.firstMonomer === secondMonomer &&\n            bond.secondMonomer === firstMonomer);\n        if (alreadyHasBond) {\n          this.editor.events.error.dispatch(\n            \"There can't be more than 1 bond between the first and the second monomer\",\n          );\n          return;\n        }\n      }\n      secondMonomer.setChosenSecondAttachmentPoint(event.attachmentPointName);\n      const showModal = this.shouldInvokeModal(firstMonomer, secondMonomer);\n      if (showModal) {\n        this.isBondConnectionModalOpen = true;\n\n        this.editor.events.openMonomerConnectionModal.dispatch({\n          firstMonomer,\n          secondMonomer,\n        });\n        return;\n      }\n      const modelChanges = this.finishBondCreation(renderer.monomer);\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n      this.editor.renderersContainer.deletePolymerBond(\n        this.bondRenderer.polymerBond,\n        false,\n        false,\n      );\n      this.bondRenderer = undefined;\n      event.stopPropagation();\n    }\n  }\n\n  private finishBondCreation(secondMonomer: BaseMonomer) {\n    assert(this.bondRenderer);\n    if (!secondMonomer.hasFreeAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        \"Monomers don't have any connection point available\",\n      );\n      return this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n      );\n    }\n    const firstMonomerAttachmentPoint =\n      this.bondRenderer.polymerBond.firstMonomer.getPotentialAttachmentPointByBond(\n        this.bondRenderer.polymerBond,\n      );\n    const secondMonomerAttachmentPoint =\n      secondMonomer.getPotentialAttachmentPointByBond(\n        this.bondRenderer.polymerBond,\n      );\n    assert(firstMonomerAttachmentPoint);\n    assert(secondMonomerAttachmentPoint);\n    if (firstMonomerAttachmentPoint === secondMonomerAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        'You have connected monomers with attachment points of the same group',\n      );\n    }\n    return this.editor.drawingEntitiesManager.finishPolymerBondCreation(\n      this.bondRenderer.polymerBond,\n      secondMonomer,\n      firstMonomerAttachmentPoint,\n      secondMonomerAttachmentPoint,\n    );\n  }\n\n  public mouseup() {\n    if (this.isBondConnectionModalOpen) {\n      return;\n    }\n\n    const modelChanges = this.removeBond();\n\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  public mouseUpMonomer(event) {\n    const renderer = event.target.__data__;\n    const isFirstMonomerHovered =\n      renderer === this.bondRenderer?.polymerBond?.firstMonomer?.renderer;\n\n    if (this.bondRenderer && !isFirstMonomerHovered) {\n      const firstMonomer = this.bondRenderer?.polymerBond?.firstMonomer;\n      const secondMonomer = renderer.monomer;\n\n      for (const attachmentPoint in secondMonomer.attachmentPointsToBonds) {\n        const bond = secondMonomer.attachmentPointsToBonds[attachmentPoint];\n        if (!bond) {\n          continue;\n        }\n        const alreadyHasBond =\n          (bond.firstMonomer === firstMonomer &&\n            bond.secondMonomer === secondMonomer) ||\n          (bond.firstMonomer === secondMonomer &&\n            bond.secondMonomer === firstMonomer);\n        if (alreadyHasBond) {\n          this.editor.events.error.dispatch(\n            \"There can't be more than 1 bond between the first and the second monomer\",\n          );\n          return;\n        }\n      }\n      const showModal = this.shouldInvokeModal(firstMonomer, secondMonomer);\n      if (showModal) {\n        this.isBondConnectionModalOpen = true;\n\n        this.editor.events.openMonomerConnectionModal.dispatch({\n          firstMonomer,\n          secondMonomer,\n        });\n        return;\n      }\n\n      // This logic so far is only for no-modal connections. Maybe then we can chain it after modal invoke\n      const modelChanges = this.finishBondCreation(renderer.monomer);\n      this.editor.renderersContainer.update(modelChanges);\n      this.editor.renderersContainer.deletePolymerBond(\n        this.bondRenderer.polymerBond,\n        false,\n        false,\n      );\n      this.bondRenderer = undefined;\n      this.history.update(modelChanges);\n      event.stopPropagation();\n    }\n  }\n\n  public handleBondCreation = (payload: {\n    firstMonomer: BaseMonomer;\n    secondMonomer: BaseMonomer;\n    firstSelectedAttachmentPoint: AttachmentPointName;\n    secondSelectedAttachmentPoint: AttachmentPointName;\n  }): void => {\n    assert(this.bondRenderer);\n\n    const {\n      secondMonomer,\n      firstSelectedAttachmentPoint,\n      secondSelectedAttachmentPoint,\n    } = payload;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.finishPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n        secondMonomer,\n        firstSelectedAttachmentPoint,\n        secondSelectedAttachmentPoint,\n      );\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n    if (firstSelectedAttachmentPoint === secondSelectedAttachmentPoint) {\n      this.editor.events.error.dispatch(\n        'You have connected monomers with attachment points of the same group',\n      );\n    }\n    this.isBondConnectionModalOpen = false;\n    this.editor.renderersContainer.deletePolymerBond(\n      this.bondRenderer.polymerBond,\n      false,\n      false,\n    );\n    this.bondRenderer = undefined;\n  };\n\n  public handleBondCreationCancellation = (\n    secondMonomer: BaseMonomer,\n  ): void => {\n    if (!this.bondRenderer) {\n      return;\n    }\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelPolymerBondCreation(\n        this.bondRenderer.polymerBond,\n        secondMonomer,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n    this.isBondConnectionModalOpen = false;\n    this.bondRenderer = undefined;\n  };\n\n  public destroy() {\n    const modelChanges = this.removeBond();\n    modelChanges.merge(\n      this.editor.drawingEntitiesManager.removeHoverForAllMonomers(),\n    );\n\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  private shouldInvokeModal(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    checkForPotentialBonds = true,\n  ) {\n    // No Modal: no free attachment point on second monomer\n    if (!secondMonomer.hasFreeAttachmentPoint) {\n      return false;\n    }\n\n    // No Modal: Both monomers have APs selected\n    if (\n      firstMonomer.chosenFirstAttachmentPointForBond !== null &&\n      secondMonomer.chosenSecondAttachmentPointForBond !== null\n    ) {\n      return false;\n    }\n\n    // Modal: either of the monomers doesn't have any potential APs\n    if (\n      checkForPotentialBonds &&\n      (!firstMonomer.hasPotentialBonds() || !secondMonomer.hasPotentialBonds())\n    ) {\n      return true;\n    }\n\n    // No Modal: Both monomers have only 1 attachment point\n    if (\n      firstMonomer.unUsedAttachmentPointsNamesList.length === 1 &&\n      secondMonomer.unUsedAttachmentPointsNamesList.length === 1\n    ) {\n      return false;\n    }\n\n    // Modal: Any or both monomers are Chems\n    if (firstMonomer instanceof Chem || secondMonomer instanceof Chem) {\n      return true;\n    }\n\n    // Modal: Any or both monomers are unresolved\n    if (\n      firstMonomer instanceof UnresolvedMonomer ||\n      secondMonomer instanceof UnresolvedMonomer\n    ) {\n      return true;\n    }\n\n    // Modal: One monomer is Peptide and another is RNA monomer\n    const rnaMonomerClasses = [Sugar, RNABase, Phosphate];\n    const firstMonomerIsRNA = rnaMonomerClasses.find(\n      (RNAClass) => firstMonomer instanceof RNAClass,\n    );\n    const secondMonomerIsRNA = rnaMonomerClasses.find(\n      (RNAClass) => secondMonomer instanceof RNAClass,\n    );\n    if (\n      (firstMonomerIsRNA && secondMonomer instanceof Peptide) ||\n      (secondMonomerIsRNA && firstMonomer instanceof Peptide)\n    ) {\n      return true;\n    }\n\n    // Modal: special case for Peptide chain\n    if (secondMonomer instanceof Peptide && firstMonomer instanceof Peptide) {\n      // one of monomers has more than 2 AP\n      const hasPlentyAttachmentPoints =\n        firstMonomer.listOfAttachmentPoints.length > 2 ||\n        secondMonomer.listOfAttachmentPoints.length > 2;\n\n      // at least one of monomers has more than 1 free AP\n      const hasPlentyFreeAttachmentPoints =\n        firstMonomer.unUsedAttachmentPointsNamesList.length > 1 ||\n        secondMonomer.unUsedAttachmentPointsNamesList.length > 1;\n\n      // there is no possibility to connect R1-R2\n      const BothR1AttachmentPointUsed =\n        firstMonomer.isAttachmentPointUsed(AttachmentPointName.R1) &&\n        secondMonomer.isAttachmentPointUsed(AttachmentPointName.R1);\n\n      const BothR2AttachmentPointUsed =\n        firstMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n        secondMonomer.isAttachmentPointUsed(AttachmentPointName.R2);\n\n      const R1AndR2AttachmentPointUsed =\n        (firstMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n          firstMonomer.isAttachmentPointUsed(AttachmentPointName.R1)) ||\n        (secondMonomer.isAttachmentPointUsed(AttachmentPointName.R2) &&\n          secondMonomer.isAttachmentPointUsed(AttachmentPointName.R1));\n\n      if (\n        hasPlentyAttachmentPoints &&\n        hasPlentyFreeAttachmentPoints &&\n        (BothR1AttachmentPointUsed ||\n          BothR2AttachmentPointUsed ||\n          R1AndR2AttachmentPointUsed)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport { PolymerBond };\n","import { Selection } from 'd3';\nimport { Chem } from 'domain/entities/Chem';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst CHEM_SELECTED_ELEMENT_ID = '#chem-selection';\nconst CHEM_SYMBOL_ELEMENT_ID = '#chem';\n\nexport class ChemRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: Chem, scale?: number) {\n    super(\n      monomer,\n      CHEM_SELECTED_ELEMENT_ID,\n      CHEM_SELECTED_ELEMENT_ID,\n      CHEM_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', CHEM_SYMBOL_ELEMENT_ID)\n      .attr('stroke', theme.monomer.color.CHEM.regular);\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Selection } from 'd3';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst PEPTIDE_SELECTED_ELEMENT_ID = '#peptide-selection';\nconst PEPTIDE_HOVERED_ELEMENT_ID = '#peptide-hover';\nconst PEPTIDE_SYMBOL_ELEMENT_ID = '#peptide';\n\nexport class PeptideRenderer extends BaseMonomerRenderer {\n  public CHAIN_BEGINNING = 'N';\n\n  constructor(public monomer: Peptide, scale?: number) {\n    super(\n      monomer,\n      PEPTIDE_SELECTED_ELEMENT_ID,\n      PEPTIDE_HOVERED_ELEMENT_ID,\n      PEPTIDE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', PEPTIDE_SYMBOL_ELEMENT_ID)\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendEnumeration();\n    this.appendChainBeginning();\n  }\n\n  protected get enumerationElementPosition() {\n    return { x: 10, y: -1 };\n  }\n\n  protected get beginningElementPosition() {\n    return { x: -6, y: 10 };\n  }\n}\n","import { Selection } from 'd3';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst PHOSPHATE_SELECTED_ELEMENT_ID = '#phosphate-selection';\nconst PHOSPHATE_SYMBOL_ELEMENT_ID = '#phosphate';\n\nexport class PhosphateRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: Phosphate, scale?: number) {\n    super(\n      monomer,\n      PHOSPHATE_SELECTED_ELEMENT_ID,\n      PHOSPHATE_SELECTED_ELEMENT_ID,\n      PHOSPHATE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', PHOSPHATE_SYMBOL_ELEMENT_ID)\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Selection } from 'd3';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst SUGAR_SELECTED_ELEMENT_ID = '#sugar-selection';\nconst SUGAR_SYMBOL_ELEMENT_ID = '#sugar';\n\nexport class SugarRenderer extends BaseMonomerRenderer {\n  public CHAIN_BEGINNING = '’5';\n\n  constructor(public monomer: Sugar, scale?: number) {\n    super(\n      monomer,\n      SUGAR_SELECTED_ELEMENT_ID,\n      SUGAR_SELECTED_ELEMENT_ID,\n      SUGAR_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', SUGAR_SYMBOL_ELEMENT_ID)\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendChainBeginning();\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return { x: -5, y: 7 };\n  }\n}\n","import { Selection } from 'd3';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\n\nconst RNABASE_SELECTED_ELEMENT_ID = '#rna-base-selection';\nconst RNABASE_SYMBOL_ELEMENT_ID = '#rna-base';\n\nexport class RNABaseRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: RNABase, scale?: number) {\n    super(\n      monomer,\n      RNABASE_SELECTED_ELEMENT_ID,\n      RNABASE_SELECTED_ELEMENT_ID,\n      RNABASE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', RNABASE_SYMBOL_ELEMENT_ID)\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendEnumeration();\n  }\n\n  protected get enumerationElementPosition() {\n    return { x: 11, y: 5 };\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class PolymerBondAddOperation implements Operation {\n  public polymerBond;\n  public priority = 1;\n  constructor(\n    private addPolymerBondChangeModel: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n    private deletePolymerBondChangeModel: (polymerBond) => void,\n  ) {\n    this.polymerBond = this.addPolymerBondChangeModel();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.polymerBond = this.addPolymerBondChangeModel(this.polymerBond);\n    renderersManager.addPolymerBond(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.deletePolymerBondChangeModel(this.polymerBond);\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n}\n\nexport class PolymerBondDeleteOperation implements Operation {\n  public priority = -1;\n  constructor(\n    public polymerBond: PolymerBond,\n    private deletePolymerBondChangeModel: () => void,\n    private finishPolymerBondCreationModelChange: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n  ) {\n    this.deletePolymerBondChangeModel();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.deletePolymerBondChangeModel();\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange(\n      this.polymerBond,\n    );\n    renderersManager.addPolymerBond(this.polymerBond);\n  }\n}\n\nexport class PolymerBondMoveOperation implements Operation {\n  constructor(public polymerBond: PolymerBond) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.movePolymerBond(this.polymerBond);\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondShowInfoOperation implements Operation {\n  constructor(public polymerBond: PolymerBond) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.showPolymerBondInformation(this.polymerBond);\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondCancelCreationOperation implements Operation {\n  constructor(\n    public polymerBond: PolymerBond,\n    private secondMonomer?: BaseMonomer,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.cancelPolymerBondCreation(\n      this.polymerBond,\n      this.secondMonomer,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class PolymerBondFinishCreationOperation implements Operation {\n  public polymerBond;\n  public priority = 1;\n  constructor(\n    private finishPolymerBondCreationModelChange: (\n      polymerBond?: PolymerBond,\n    ) => PolymerBond,\n    private deletePolymerBondCreationModelChange: (polymerBond) => void,\n  ) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.polymerBond = this.finishPolymerBondCreationModelChange(\n      this.polymerBond,\n    );\n    renderersManager.finishPolymerBondCreation(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.deletePolymerBondCreationModelChange(this.polymerBond);\n    renderersManager.deletePolymerBond(this.polymerBond);\n  }\n}\n\nexport class SelectLayoutModeOperation implements Operation {\n  private onExecute;\n  private onInvert;\n\n  constructor(\n    public _onExecute: () => void,\n    public _onInvert: () => void,\n    public mode,\n    public prevMode,\n  ) {\n    this.onExecute = _onExecute;\n    this.onInvert = _onInvert;\n  }\n\n  public execute(): void {\n    this.onExecute();\n  }\n\n  public invert(): void {\n    this.onInvert();\n  }\n}\n\nexport class ReconnectPolymerBondOperation implements Operation {\n  public polymerBond;\n  constructor(\n    private reconnectPolymerBondModelChange: () => PolymerBond,\n    private revertReconnectPolymerBondModelChange: () => PolymerBond,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    this.polymerBond = this.reconnectPolymerBondModelChange();\n    renderersManager.redrawDrawingEntity(this.polymerBond);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.polymerBond = this.revertReconnectPolymerBondModelChange();\n    renderersManager.redrawDrawingEntity(this.polymerBond);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services';\n\nexport class SupportedFormatProperties {\n  name: string;\n  mime: ChemicalMimeType;\n  extensions: string[];\n  supportsCoords?: boolean;\n  options?: any;\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any,\n  ) {\n    this.name = name;\n    this.mime = mime;\n    this.extensions = extensions;\n    this.supportsCoords = supportsCoords || false;\n    this.options = options || {};\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services';\nimport { SupportedFormat } from './structFormatter.types';\nimport { SupportedFormatProperties } from './supportedFormatProperties';\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties;\n};\n\nconst formatProperties: FormatPropertiesMap = {\n  molAuto: new SupportedFormatProperties(\n    // TODO: is it a valid name?\n    'MDL Molfile Auto Format detect',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': 'auto' },\n  ),\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles'],\n    true,\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles'],\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts'],\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi',\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi'],\n  ),\n  inChIKey: new SupportedFormatProperties(\n    'InChIKey',\n    ChemicalMimeType.InChIKey,\n    ['.inchikey'],\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true,\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket',\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true,\n  ),\n  cdx: new SupportedFormatProperties(\n    'Base64 CDX',\n    ChemicalMimeType.CDX,\n    ['.b64cdx'],\n    true,\n  ),\n  binaryCdx: new SupportedFormatProperties(\n    'CDX',\n    ChemicalMimeType.CDX,\n    ['.cdx'],\n    true,\n  ),\n  sdf: new SupportedFormatProperties(\n    'SDF V2000',\n    ChemicalMimeType.SDF,\n    ['.sdf'],\n    true,\n  ),\n  sdfV3000: new SupportedFormatProperties(\n    'SDF V3000',\n    ChemicalMimeType.SDF,\n    ['.sdf'],\n    true,\n    { 'molfile-saving-mode': '3000' },\n  ),\n  fasta: new SupportedFormatProperties(\n    'FASTA',\n    ChemicalMimeType.FASTA,\n    ['.fasta'],\n    true,\n  ),\n  idt: new SupportedFormatProperties(\n    'IDT',\n    ChemicalMimeType.IDT,\n    ['.idt'],\n    false,\n  ),\n  helm: new SupportedFormatProperties(\n    'HELM',\n    ChemicalMimeType.HELM,\n    ['.helm'],\n    true,\n  ),\n  sequence: new SupportedFormatProperties(\n    'SEQUENCE',\n    ChemicalMimeType.SEQUENCE,\n    ['.seq'],\n    false,\n    {},\n  ),\n  unknown: new SupportedFormatProperties(\n    'Unknown',\n    ChemicalMimeType.UNKNOWN,\n    ['.'],\n    true,\n  ),\n};\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' },\n};\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format];\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format];\n}\n\nfunction getFormatMimeTypeByFileName(fileName: string) {\n  const fileExtension = '.' + fileName.split('.').pop();\n  const format = Object.values(formatProperties).find((properties) => {\n    return properties.extensions.includes(fileExtension);\n  });\n  return format?.mime;\n}\n\nexport {\n  formatProperties,\n  getPropertiesByFormat,\n  getPropertiesByImgFormat,\n  getFormatMimeTypeByFileName,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { StructServiceOptions } from 'domain/services';\nimport { EditorSelection } from 'application/editor';\n\nexport interface StructFormatter {\n  getStructureFromStructAsync: (\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n    selection?: EditorSelection,\n  ) => Promise<string>;\n  getStructureFromStringAsync: (stringifiedStruct: string) => Promise<Struct>;\n  parseMacromoleculeString?: (stringifiedStruct: string) => void;\n}\n\nexport enum SupportedFormat {\n  mol = 'mol',\n  molV3000 = 'molV3000',\n  molAuto = 'molAuto',\n  rxn = 'rxn',\n  rxnV3000 = 'rxnV3000',\n  smiles = 'smiles',\n  smilesExt = 'smilesExt',\n  smarts = 'smarts',\n  inChI = 'inChI',\n  inChIAuxInfo = 'inChIAuxInfo',\n  inChIKey = 'inChIKey',\n  cml = 'cml',\n  ket = 'ket',\n  cdxml = 'cdxml',\n  cdx = 'cdx',\n  binaryCdx = 'binaryCdx',\n  sdf = 'sdf',\n  sdfV3000 = 'sdfV3000',\n  fasta = 'fasta',\n  sequence = 'sequence',\n  idt = 'idt',\n  helm = 'helm',\n  unknown = 'unknown',\n}\n\nexport type FormatterFactoryOptions = Partial<\n  MolSerializerOptions & StructServiceOptions\n>;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { StructFormatter } from './structFormatter.types';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { EditorSelection } from 'application/editor';\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer;\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer;\n  }\n\n  async getStructureFromStructAsync(\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n    selection?: EditorSelection,\n  ): Promise<string> {\n    const ket = this.#ketSerializer.serialize(\n      struct,\n      drawingEntitiesManager,\n      selection,\n    );\n    return ket;\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content);\n  }\n\n  parseMacromoleculeString(content: string): void {\n    this.#ketSerializer.deserializeMicromolecules(content);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer, SmiSerializer } from 'domain/serializers';\nimport { StructFormatter, SupportedFormat } from './structFormatter.types';\nimport { StructService, StructServiceOptions } from 'domain/services';\n\nimport { ServerFormatter } from './serverFormatter';\nimport { Struct } from 'domain/entities';\n\nexport class SmilesFormatter implements StructFormatter {\n  #smiSerializer: SmiSerializer;\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n  #format: SupportedFormat;\n  #options?: StructServiceOptions;\n\n  constructor(\n    smiSerializer: SmiSerializer,\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions,\n  ) {\n    this.#smiSerializer = smiSerializer;\n    this.#ketSerializer = ketSerializer;\n    this.#structService = structService;\n    this.#format = format;\n    this.#options = options;\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#smiSerializer.serialize(struct);\n    return stringifiedMolfile;\n  }\n\n  getStructureFromStringAsync(stringifiedStruct: string): Promise<Struct> {\n    const serverFormatter = new ServerFormatter(\n      this.#structService,\n      this.#ketSerializer,\n      this.#format,\n      this.#options,\n    );\n\n    return serverFormatter.getStructureFromStringAsync(stringifiedStruct);\n  }\n\n  static isContainsCoordinates(smiles: string) {\n    return /\\([\\d.,;-]+\\)/.test(smiles);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions,\n} from 'domain/services';\nimport { StructFormatter, SupportedFormat } from './structFormatter.types';\n\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { getPropertiesByFormat } from './formatProperties';\nimport { KetcherLogger } from 'utilities';\nimport { SmilesFormatter } from './smilesFormatter';\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions,\n) => Promise<ConvertResult>;\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions,\n) => Promise<LayoutResult>;\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n  #format: SupportedFormat;\n  #options?: StructServiceOptions;\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions,\n  ) {\n    this.#structService = structService;\n    this.#ketSerializer = ketSerializer;\n    this.#format = format;\n    this.#options = options;\n  }\n\n  async getStructureFromStructAsync(\n    struct: Struct,\n    drawingEntitiesManager?: DrawingEntitiesManager,\n  ): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format);\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(\n        struct,\n        drawingEntitiesManager,\n      );\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime,\n        },\n        { ...this.#options, ...formatProperties.options },\n      );\n\n      return convertResult.struct;\n    } catch (e: any) {\n      let message;\n      if (e.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`;\n      } else {\n        message = `Convert error!\\n${e.message || e}`;\n      }\n      KetcherLogger.error('serverFormatter.ts::getStructureFromStructAsync', e);\n      throw new Error(message);\n    }\n  }\n\n  getCallingMethod(\n    stringifiedStruct: string,\n    format: SupportedFormat,\n  ): {\n    method: LayoutPromise | ConvertPromise;\n    struct: string;\n  } {\n    if (this.#format === SupportedFormat.smiles) {\n      return {\n        method: SmilesFormatter.isContainsCoordinates(stringifiedStruct)\n          ? this.#structService.convert\n          : this.#structService.layout,\n        struct: stringifiedStruct,\n      };\n    }\n    const withCoords = getPropertiesByFormat(format).supportsCoords;\n    if (withCoords) {\n      return {\n        method: this.#structService.convert,\n        struct: stringifiedStruct,\n      };\n    }\n    return {\n      method: this.#structService.layout,\n      struct: stringifiedStruct.trim(),\n    };\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string,\n  ): Promise<Struct> {\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat(SupportedFormat.ket).mime,\n    };\n\n    const { method, struct } = this.getCallingMethod(\n      stringifiedStruct,\n      this.#format,\n    );\n    data.struct = struct;\n\n    try {\n      const result = await method(data, this.#options);\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct);\n      if (method === this.#structService.layout) {\n        parsedStruct.rescale();\n      }\n      return parsedStruct;\n    } catch (e: any) {\n      if (e.message !== 'Server is not compatible') {\n        KetcherLogger.error(\n          'serverFormatter.ts::getStructureFromStringAsync',\n          e,\n        );\n        throw Error(`Convert error!\\n${e.message || e}`);\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${\n              getPropertiesByFormat(SupportedFormat.smilesExt).name\n            } and opening of ${\n              getPropertiesByFormat(SupportedFormat.smiles).name\n            }`\n          : getPropertiesByFormat(this.#format).name;\n\n      throw Error(`${formatError} is not supported in standalone mode.`);\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { StructFormatter } from './structFormatter.types';\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer;\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer;\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct);\n    return stringifiedMolfile;\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string,\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct);\n    return struct;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat,\n} from './structFormatter.types';\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions,\n} from 'domain/serializers';\nimport { StructService, StructServiceOptions } from 'domain/services';\nimport { KetFormatter } from './ketFormatter';\nimport { ServerFormatter } from './serverFormatter';\nimport { MolfileV2000Formatter } from './molfileV2000Formatter';\n\nexport class FormatterFactory {\n  #structService: StructService;\n\n  constructor(structService: StructService) {\n    this.#structService = structService;\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions,\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}];\n    }\n\n    const {\n      reactionRelayout,\n      badHeaderRecover,\n      ignoreChiralFlag,\n      ...structServiceOptions\n    } = options;\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {};\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout;\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover;\n    }\n\n    if (typeof ignoreChiralFlag === 'boolean') {\n      molfileParseOptions.ignoreChiralFlag = ignoreChiralFlag;\n      structServiceOptions['ignore-no-chiral-flag'] = ignoreChiralFlag;\n    }\n\n    return [molfileParseOptions, structServiceOptions];\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions,\n    queryPropertiesAreUsed?: boolean,\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options);\n\n    let formatter: StructFormatter;\n    switch (format) {\n      case SupportedFormat.ket:\n        formatter = new KetFormatter(new KetSerializer());\n        break;\n\n      case SupportedFormat.mol:\n        if (queryPropertiesAreUsed) {\n          formatter = new ServerFormatter(\n            this.#structService,\n            new KetSerializer(),\n            format,\n            structServiceOptions,\n          );\n        } else {\n          formatter = new MolfileV2000Formatter(\n            new MolSerializer(molSerializerOptions),\n          );\n        }\n        break;\n\n      case SupportedFormat.cml:\n      case SupportedFormat.inChIAuxInfo:\n      case SupportedFormat.inChI:\n      case SupportedFormat.inChIKey:\n      case SupportedFormat.molV3000:\n      case SupportedFormat.smiles:\n      case SupportedFormat.rxnV3000:\n      case SupportedFormat.smilesExt:\n      case SupportedFormat.smarts:\n      case SupportedFormat.cdxml:\n      case SupportedFormat.cdx:\n      case SupportedFormat.binaryCdx:\n      case SupportedFormat.unknown:\n      case SupportedFormat.rxn:\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions,\n        );\n    }\n\n    return formatter;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetcherLogger } from 'utilities';\nimport { SupportedFormat } from './structFormatter.types';\n\nexport function identifyStructFormat(\n  stringifiedStruct: string,\n  isMacromolecules = false,\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim();\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return SupportedFormat.ket;\n    }\n  } catch (e) {\n    KetcherLogger.error('identifyStructFormat.ts::identifyStructFromat', e);\n  } // eslint-disable-line\n\n  const isRXN = sanitizedString.includes('$RXN');\n  const isSDF = sanitizedString.includes('\\n$$$$');\n  const isV2000 = sanitizedString.includes('V2000');\n  const isV3000 = sanitizedString.includes('V3000');\n\n  if (isRXN) {\n    return SupportedFormat.rxn;\n  }\n\n  if (isSDF) {\n    if (isV2000) {\n      return SupportedFormat.sdf;\n    } else {\n      return SupportedFormat.sdfV3000;\n    }\n  }\n\n  if (isV2000) {\n    return SupportedFormat.mol;\n  }\n\n  if (isV3000) {\n    return SupportedFormat.molV3000;\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m);\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length;\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return SupportedFormat.mol;\n    }\n  }\n\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return SupportedFormat.cml;\n  }\n\n  const clearStr = sanitizedString\n    .replace(/\\s/g, '')\n    .replace(/(\\\\r)|(\\\\n)/g, '');\n  const isBase64String =\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n  const cdxHeader = 'VjCD0100';\n  if (\n    clearStr.length % 4 === 0 &&\n    isBase64String.test(clearStr) &&\n    window.atob(clearStr).startsWith(cdxHeader)\n  ) {\n    return SupportedFormat.cdx;\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return SupportedFormat.inChI;\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1 && !isMacromolecules) {\n    // TODO: smiles regexp\n    return SupportedFormat.smiles;\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return SupportedFormat.cdxml;\n  }\n\n  if (sanitizedString[0] === '>') {\n    return SupportedFormat.fasta;\n  }\n\n  if (/^[a-zA-Z\\s\\n]*$/.test(sanitizedString)) {\n    return SupportedFormat.sequence;\n  }\n\n  return SupportedFormat.unknown;\n}\n","export const macromoleculesFilesInputFormats = {\n  ket: 'chemical/x-indigo-ket',\n  mol: 'chemical/x-mdl-molfile',\n  seq: {\n    rna: 'chemical/x-rna-sequence',\n    dna: 'chemical/x-dna-sequence',\n    peptide: 'chemical/x-peptide-sequence',\n  },\n  fasta: {\n    rna: 'chemical/x-rna-fasta',\n    dna: 'chemical/x-dna-fasta',\n    peptide: 'chemical/x-peptide-fasta',\n  },\n  idt: 'chemical/x-idt',\n  helm: 'chemical/x-helm',\n};\n","import { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { BaseMonomer } from './BaseMonomer';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { AttachmentPointName } from 'domain/types';\nimport { BackBoneBondSequenceRenderer } from 'application/render/renderers/sequence/BackBoneBondSequenceRenderer';\nimport { PolymerBondSequenceRenderer } from 'application/render/renderers/sequence/PolymerBondSequenceRenderer';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { isMonomerConnectedToR2RnaBase } from 'domain/helpers/monomers';\n\nexport class PolymerBond extends DrawingEntity {\n  public secondMonomer?: BaseMonomer;\n  public renderer?:\n    | PolymerBondRenderer\n    | BackBoneBondSequenceRenderer\n    | PolymerBondSequenceRenderer = undefined;\n\n  public endPosition: Vec2 = new Vec2();\n\n  constructor(public firstMonomer: BaseMonomer, secondMonomer?: BaseMonomer) {\n    super();\n    this.firstMonomer = firstMonomer;\n    this.secondMonomer = secondMonomer;\n  }\n\n  public setFirstMonomer(monomer: BaseMonomer) {\n    this.firstMonomer = monomer;\n  }\n\n  public setSecondMonomer(monomer: BaseMonomer) {\n    this.secondMonomer = monomer;\n  }\n\n  public setRenderer(\n    renderer:\n      | PolymerBondRenderer\n      | BackBoneBondSequenceRenderer\n      | PolymerBondSequenceRenderer,\n  ) {\n    super.setBaseRenderer(renderer as BaseRenderer);\n    this.renderer = renderer;\n  }\n\n  public get finished() {\n    return Boolean(this.firstMonomer && this.secondMonomer);\n  }\n\n  public get center() {\n    return Vec2.centre(this.startPosition, this.endPosition);\n  }\n\n  public moveToLinkedMonomers() {\n    const firstMonomerCenter = this.firstMonomer.position;\n    const secondMonomerCenter = this.secondMonomer?.position;\n    this.moveBondStartAbsolute(firstMonomerCenter.x, firstMonomerCenter.y);\n    if (secondMonomerCenter) {\n      this.moveBondEndAbsolute(secondMonomerCenter.x, secondMonomerCenter.y);\n    }\n  }\n\n  public moveBondStartAbsolute(x, y) {\n    this.moveAbsolute(new Vec2(x, y));\n  }\n\n  public moveBondEndAbsolute(x, y) {\n    this.endPosition = new Vec2(x, y);\n  }\n\n  public get startPosition() {\n    return this.position;\n  }\n\n  public getAnotherMonomer(monomer: BaseMonomer): BaseMonomer | undefined {\n    return this.firstMonomer === monomer\n      ? this.secondMonomer\n      : this.firstMonomer;\n  }\n\n  public static get backBoneChainAttachmentPoints() {\n    return [AttachmentPointName.R1, AttachmentPointName.R2];\n  }\n\n  public get isBackBoneChainConnection() {\n    return !this.isSideChainConnection;\n  }\n\n  public get firstMonomerAttachmentPoint() {\n    return this.firstMonomer.getAttachmentPointByBond(this);\n  }\n\n  public get secondMonomerAttachmentPoint() {\n    return this.secondMonomer?.getAttachmentPointByBond(this);\n  }\n\n  public get isSideChainConnection() {\n    const firstMonomerAttachmentPoint = this.firstMonomerAttachmentPoint;\n    const secondMonomerAttachmentPoint = this.secondMonomerAttachmentPoint;\n\n    if (!firstMonomerAttachmentPoint || !secondMonomerAttachmentPoint) {\n      return false;\n    }\n\n    return (\n      (!(\n        PolymerBond.backBoneChainAttachmentPoints.includes(\n          firstMonomerAttachmentPoint,\n        ) &&\n        PolymerBond.backBoneChainAttachmentPoints.includes(\n          secondMonomerAttachmentPoint,\n        )\n      ) ||\n        (isMonomerConnectedToR2RnaBase(this.firstMonomer) &&\n          this.secondMonomer instanceof RNABase) ||\n        (isMonomerConnectedToR2RnaBase(this.secondMonomer) &&\n          this.firstMonomer instanceof RNABase) ||\n        firstMonomerAttachmentPoint === secondMonomerAttachmentPoint) &&\n      !(\n        (firstMonomerAttachmentPoint === AttachmentPointName.R1 &&\n          this.firstMonomer instanceof RNABase &&\n          secondMonomerAttachmentPoint === AttachmentPointName.R3 &&\n          this.secondMonomer instanceof Sugar) ||\n        (firstMonomerAttachmentPoint === AttachmentPointName.R3 &&\n          this.firstMonomer instanceof Sugar &&\n          secondMonomerAttachmentPoint === AttachmentPointName.R1 &&\n          this.secondMonomer instanceof RNABase)\n      )\n    );\n  }\n}\n","import { Struct } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat,\n} from './formatters';\nimport { Ketcher } from './ketcher';\nimport { ChemicalMimeType, StructService } from 'domain/services';\nimport { CoreEditor, EditorHistory } from './editor/internal';\nimport { KetSerializer } from 'domain/serializers';\nimport assert from 'assert';\nimport { EditorSelection } from './editor/editor.types';\n\nclass KetcherProvider {\n  private ketcherInstance: Ketcher | undefined;\n\n  setKetcherInstance(ketcherInstance: Ketcher) {\n    this.ketcherInstance = ketcherInstance;\n  }\n\n  getKetcher() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.ketcherInstance!;\n  }\n}\n\nconst ketcherProvider = new KetcherProvider();\n\nexport { ketcherProvider };\n\nexport function getStructure(\n  structureFormat = SupportedFormat.rxn,\n  formatterFactory: FormatterFactory,\n  struct: Struct,\n  drawingEntitiesManager?: DrawingEntitiesManager,\n  selection?: EditorSelection,\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat);\n  return formatter.getStructureFromStructAsync(\n    struct,\n    drawingEntitiesManager,\n    selection,\n  );\n}\n\nexport async function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher,\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance,\n  );\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.setImplicitHydrogen();\n  struct.markFragments();\n\n  return struct;\n}\n\nexport function parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher,\n) {\n  const format = identifyStructFormat(structStr);\n  const factory = new FormatterFactory(structService);\n  const options = ketcherInstance.editor.options();\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load'],\n    'ignore-no-chiral-flag': options.ignoreChiralFlag,\n  });\n  return service.getStructureFromStringAsync(structStr);\n}\n\nexport function deleteAllEntitiesOnCanvas() {\n  const editor = CoreEditor.provideEditorInstance();\n  const modelChanges = editor.drawingEntitiesManager.deleteAllEntities();\n  editor.renderersContainer.update(modelChanges);\n}\n\nexport async function parseAndAddMacromoleculesOnCanvas(\n  struct: string,\n  structService: StructService,\n) {\n  const editor = CoreEditor.provideEditorInstance();\n  const ketSerializer = new KetSerializer();\n  const format = identifyStructFormat(struct);\n  let ketStruct = struct;\n  if (format !== SupportedFormat.ket) {\n    ketStruct = (\n      await structService.convert({\n        struct,\n        output_format: ChemicalMimeType.KET,\n      })\n    ).struct;\n  }\n\n  const deserialisedKet = ketSerializer.deserializeToDrawingEntities(ketStruct);\n  assert(deserialisedKet);\n  const { command: modelChanges } =\n    deserialisedKet.drawingEntitiesManager.mergeInto(\n      editor.drawingEntitiesManager,\n    );\n\n  new EditorHistory(editor).update(modelChanges);\n  editor.renderersContainer.update(modelChanges);\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { AttachmentPointName } from 'domain/types';\n\nexport class MonomerAddOperation implements Operation {\n  public monomer: BaseMonomer;\n  public priority = 1;\n  constructor(\n    public addMonomerChangeModel: (monomer?: BaseMonomer) => BaseMonomer,\n    public deleteMonomerChangeModel: (monomer: BaseMonomer) => void,\n    private callback?: () => void,\n  ) {\n    this.monomer = this.addMonomerChangeModel();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.monomer = this.addMonomerChangeModel(this.monomer);\n    renderersManager.addMonomer(this.monomer, this.callback);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    if (this.monomer) {\n      this.deleteMonomerChangeModel(this.monomer);\n      renderersManager.deleteMonomer(this.monomer);\n    }\n  }\n}\n\nexport class MonomerMoveOperation implements Operation {\n  public monomer: BaseMonomer;\n  constructor(\n    private monomerMoveModelChange: () => BaseMonomer,\n    private invertMonomerMoveModelChange: () => BaseMonomer,\n  ) {\n    this.monomer = this.monomerMoveModelChange();\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.monomer = this.monomerMoveModelChange();\n    renderersManager.moveMonomer(this.monomer);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.monomer = this.invertMonomerMoveModelChange();\n    renderersManager.moveMonomer(this.monomer);\n  }\n}\n\nexport class MonomerHoverOperation implements Operation {\n  constructor(\n    private peptide: BaseMonomer,\n    private needRedrawAttachmentPoints: boolean,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverMonomer(\n      this.peptide,\n      this.needRedrawAttachmentPoints,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class AttachmentPointHoverOperation implements Operation {\n  constructor(\n    private peptide: BaseMonomer,\n    private attachmentPointName: AttachmentPointName,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverAttachmentPoint(\n      this.peptide,\n      this.attachmentPointName,\n    );\n  }\n\n  public invert() {}\n}\n\nexport class MonomerDeleteOperation implements Operation {\n  monomer: BaseMonomer;\n  public priority = -1;\n  constructor(\n    monomer: BaseMonomer,\n    public addMonomerChangeModel: (monomer: BaseMonomer) => BaseMonomer,\n    public deleteMonomerChangeModel: (monomer: BaseMonomer) => void,\n    private callback?: () => void,\n  ) {\n    this.monomer = monomer;\n  }\n\n  public execute(renderersManager: RenderersManager) {\n    this.deleteMonomerChangeModel(this.monomer);\n    renderersManager.deleteMonomer(this.monomer);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.monomer = this.addMonomerChangeModel(this.monomer);\n    renderersManager.addMonomer(this.monomer, this.callback);\n  }\n}\n\nexport class MonomerItemModifyOperation implements Operation {\n  monomer: BaseMonomer;\n  constructor(\n    monomer: BaseMonomer,\n    public updateMonomerItem: () => BaseMonomer,\n    public revertMonomerItem: () => BaseMonomer,\n  ) {\n    this.monomer = monomer;\n  }\n\n  public execute() {\n    this.monomer = this.updateMonomerItem();\n  }\n\n  public invert() {\n    this.monomer = this.revertMonomerItem();\n  }\n}\n","import { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\n\nexport class DrawingEntityHoverOperation implements Operation {\n  constructor(private drawingEntity: DrawingEntity) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.hoverDrawingEntity(this.drawingEntity);\n  }\n\n  public invert() {}\n}\n\nexport class DrawingEntitySelectOperation implements Operation {\n  constructor(private drawingEntity: DrawingEntity) {}\n\n  public execute(renderersManager: RenderersManager) {\n    renderersManager.selectDrawingEntity(this.drawingEntity);\n  }\n\n  public invert() {}\n}\nexport class DrawingEntityMoveOperation implements Operation {\n  private wasInverted = false;\n  constructor(\n    private moveDrawingEntityChangeModel: () => void,\n    private invertMoveDrawingEntityChangeModel: () => void,\n    private redoDrawingEntityChangeModel: () => void,\n    private drawingEntity: DrawingEntity,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    this.wasInverted\n      ? this.redoDrawingEntityChangeModel()\n      : this.moveDrawingEntityChangeModel();\n    if (this.drawingEntity instanceof PolymerBond) {\n      renderersManager.redrawDrawingEntity(this.drawingEntity);\n    } else {\n      renderersManager.moveDrawingEntity(this.drawingEntity);\n    }\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.invertMoveDrawingEntityChangeModel();\n\n    // Redraw Polymer bonds instead of moving needed here because\n    // they have two drawing modes: straight and curved.\n    // During switching snake/flex layout modes and undo/redo\n    // we need to redraw them to apply the correct drawing mode.\n    if (this.drawingEntity instanceof PolymerBond) {\n      renderersManager.redrawDrawingEntity(this.drawingEntity);\n    } else {\n      renderersManager.moveDrawingEntity(this.drawingEntity);\n    }\n\n    this.wasInverted = true;\n  }\n}\nexport class DrawingEntityRedrawOperation implements Operation {\n  constructor(\n    private drawingEntityRedrawModelChange: () => DrawingEntity,\n    private invertDrawingEntityRedrawModelChange: () => DrawingEntity,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    const drawingEntity = this.drawingEntityRedrawModelChange();\n    renderersManager.redrawDrawingEntity(drawingEntity, true);\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    const drawingEntity = this.invertDrawingEntityRedrawModelChange();\n    renderersManager.redrawDrawingEntity(drawingEntity, true);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Tool, IRnaPreset } from 'application/editor/tools/Tool';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { Vec2 } from 'domain/entities';\n\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseMonomerRenderer } from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport { monomerFactory } from '../operations/monomer/monomerFactory';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Coordinates } from '../shared/coordinates';\n\nexport const RNA_MONOMER_DISTANCE = 22.5;\nclass RnaPresetTool implements Tool {\n  rnaBase: MonomerItemType | undefined;\n  sugar: MonomerItemType | undefined;\n  phosphate: MonomerItemType | undefined;\n\n  private rnaBasePreview: RNABase | undefined;\n  private phosphatePreview: Phosphate | undefined;\n  private sugarPreview: Sugar | undefined;\n  private rnaBasePreviewRenderer: BaseMonomerRenderer | undefined;\n  private phosphatePreviewRenderer: BaseMonomerRenderer | undefined;\n  private sugarPreviewRenderer: BaseMonomerRenderer | undefined;\n  readonly MONOMER_PREVIEW_SCALE_FACTOR = 0.5;\n  readonly MONOMER_PREVIEW_OFFSET_X = 30;\n  readonly MONOMER_PREVIEW_OFFSET_Y = 30;\n  readonly RNA_BASE_PREVIEW_OFFSET_X = 1;\n  readonly RNA_BASE_PREVIEW_OFFSET_Y = 20;\n  readonly PHOSPHATE_PREVIEW_OFFSET_X = 18;\n  history: EditorHistory;\n\n  constructor(private editor: CoreEditor, preset: IRnaPreset) {\n    this.editor = editor;\n    if (preset?.base) {\n      this.rnaBase = preset?.base;\n    }\n    if (preset?.phosphate) {\n      this.phosphate = preset?.phosphate;\n    }\n    if (preset?.sugar) {\n      this.sugar = preset?.sugar;\n    }\n    this.history = new EditorHistory(this.editor);\n  }\n\n  mousedown() {\n    if (!this.sugar || !this.sugarPreviewRenderer) {\n      this.editor.events.error.dispatch('No sugar in RNA preset found');\n      return;\n    }\n\n    const { command: modelChanges } =\n      this.editor.drawingEntitiesManager.addRnaPreset({\n        sugar: this.sugar,\n        sugarPosition: Coordinates.canvasToModel(\n          new Vec2(\n            this.editor.lastCursorPositionOfCanvas.x,\n            this.editor.lastCursorPositionOfCanvas.y,\n          ),\n        ),\n        phosphate: this.phosphate,\n        phosphatePosition: this.phosphatePreviewRenderer\n          ? Coordinates.canvasToModel(\n              new Vec2(\n                this.editor.lastCursorPositionOfCanvas.x +\n                  this.sugarPreviewRenderer?.width +\n                  RNA_MONOMER_DISTANCE,\n                this.editor.lastCursorPositionOfCanvas.y,\n              ),\n            )\n          : undefined,\n        rnaBase: this.rnaBase,\n        rnaBasePosition: this.rnaBasePreviewRenderer\n          ? Coordinates.canvasToModel(\n              new Vec2(\n                this.editor.lastCursorPositionOfCanvas.x,\n                this.editor.lastCursorPositionOfCanvas.y +\n                  this.sugarPreviewRenderer.height +\n                  RNA_MONOMER_DISTANCE,\n              ),\n            )\n          : undefined,\n      });\n\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mousemove() {\n    this.sugarPreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x + this.MONOMER_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.rnaBasePreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x +\n            this.MONOMER_PREVIEW_OFFSET_X +\n            this.RNA_BASE_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y +\n            this.MONOMER_PREVIEW_OFFSET_Y +\n            this.RNA_BASE_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.phosphatePreview?.moveAbsolute(\n      Coordinates.canvasToModel(\n        new Vec2(\n          this.editor.lastCursorPosition.x +\n            this.MONOMER_PREVIEW_OFFSET_X +\n            this.PHOSPHATE_PREVIEW_OFFSET_X,\n          this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n        ),\n      ),\n    );\n\n    this.rnaBasePreviewRenderer?.move();\n    this.phosphatePreviewRenderer?.move();\n    this.sugarPreviewRenderer?.move();\n  }\n\n  public mouseLeaveClientArea() {\n    this.sugarPreviewRenderer?.remove();\n    this.sugarPreviewRenderer = undefined;\n    this.sugarPreview = undefined;\n    this.phosphatePreviewRenderer?.remove();\n    this.phosphatePreviewRenderer = undefined;\n    this.phosphatePreview = undefined;\n    this.rnaBasePreviewRenderer?.remove();\n    this.rnaBasePreviewRenderer = undefined;\n    this.rnaBasePreview = undefined;\n  }\n\n  public mouseover() {\n    if (!this.sugar) {\n      this.editor.events.error.dispatch('No sugar in RNA preset found');\n      return;\n    }\n\n    if (this.sugarPreview) {\n      return;\n    }\n\n    const [Sugar, SugarRenderer] = monomerFactory(this.sugar);\n    this.sugarPreview = new Sugar(this.sugar) as Sugar;\n\n    this.sugarPreviewRenderer = new SugarRenderer(\n      this.sugarPreview,\n      this.MONOMER_PREVIEW_SCALE_FACTOR,\n    );\n\n    this.sugarPreviewRenderer?.show(this.editor.theme);\n\n    if (this.rnaBase) {\n      const [RNABase, RNABaseRenderer] = monomerFactory(this.rnaBase);\n      this.rnaBasePreview = new RNABase(this.rnaBase) as RNABase;\n      this.rnaBasePreviewRenderer = new RNABaseRenderer(\n        this.rnaBasePreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n      );\n\n      this.rnaBasePreviewRenderer?.show(this.editor.theme);\n    }\n\n    if (this.phosphate) {\n      const [Phosphate, PhosphateRenderer] = monomerFactory(this.phosphate);\n\n      this.phosphatePreview = new Phosphate(this.phosphate) as Phosphate;\n\n      this.phosphatePreviewRenderer = new PhosphateRenderer(\n        this.phosphatePreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n      );\n\n      this.phosphatePreviewRenderer?.show(this.editor.theme);\n    }\n  }\n\n  hidePreview() {\n    this.rnaBasePreviewRenderer?.remove();\n    this.phosphatePreviewRenderer?.remove();\n    this.sugarPreviewRenderer?.remove();\n  }\n\n  destroy(): void {\n    this.hidePreview();\n  }\n}\n\nexport { RnaPresetTool };\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class EmptySubChain extends BaseSubChain {}\n","import { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport {\n  BaseMonomer,\n  Peptide,\n  Phosphate,\n  SubChainNode,\n  Sugar,\n  UnresolvedMonomer,\n  UnsplitNucleotide,\n  Nucleoside,\n  Nucleotide,\n  MonomerSequenceNode,\n  EmptySequenceNode,\n  LinkerSequenceNode,\n} from 'domain/entities';\nimport {\n  getNextMonomerInChain,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\n\nexport class Chain {\n  public subChains: BaseSubChain[] = [];\n\n  public firstMonomer?: BaseMonomer;\n\n  public isCyclic = false;\n\n  constructor(firstMonomer?: BaseMonomer, isCyclic?: boolean) {\n    if (firstMonomer) {\n      this.firstMonomer = firstMonomer;\n\n      this.fillSubChains(firstMonomer);\n    }\n\n    if (isCyclic) {\n      this.isCyclic = isCyclic;\n    }\n  }\n\n  private createSubChainIfNeed(monomer) {\n    const needCreateNewSubchain =\n      !this.lastNode?.monomer ||\n      monomer.isMonomerTypeDifferentForChaining(this.lastNode.monomer);\n\n    if (needCreateNewSubchain) {\n      this.subChains.push(new monomer.SubChainConstructor());\n    }\n  }\n\n  public add(monomer: BaseMonomer) {\n    this.createSubChainIfNeed(monomer);\n\n    if (\n      monomer instanceof Peptide ||\n      monomer instanceof UnsplitNucleotide ||\n      monomer instanceof UnresolvedMonomer\n    ) {\n      this.lastSubChain.add(new MonomerSequenceNode(monomer));\n      return;\n    }\n\n    if (monomer instanceof Sugar) {\n      if (isValidNucleoside(monomer, this.firstMonomer)) {\n        this.lastSubChain.add(Nucleoside.fromSugar(monomer, false));\n        return;\n      }\n      if (isValidNucleotide(monomer, this.firstMonomer)) {\n        this.lastSubChain.add(Nucleotide.fromSugar(monomer, false));\n        return;\n      }\n    }\n\n    const nextMonomer = getNextMonomerInChain(monomer);\n    const isNextMonomerNucleosideOrNucleotideOrPeptide = () => {\n      const isNucleosideOrNucleotide =\n        nextMonomer instanceof Sugar &&\n        (isValidNucleotide(nextMonomer) || isValidNucleoside(nextMonomer));\n      return isNucleosideOrNucleotide || nextMonomer instanceof Peptide;\n    };\n    if (\n      monomer instanceof Phosphate &&\n      (!this.lastNode || this.lastNode instanceof Nucleoside) &&\n      (!nextMonomer || isNextMonomerNucleosideOrNucleotideOrPeptide())\n    ) {\n      this.lastSubChain.add(new MonomerSequenceNode(monomer));\n      return;\n    }\n    this.lastSubChain.add(new LinkerSequenceNode(monomer));\n  }\n\n  public addNode(node: SubChainNode) {\n    this.createSubChainIfNeed(node.monomer);\n\n    this.lastSubChain.add(node);\n\n    return this;\n  }\n\n  private fillSubChains(monomer?: BaseMonomer) {\n    if (!monomer) return;\n\n    this.add(monomer);\n\n    this.fillSubChains(\n      getNextMonomerInChain(\n        this.lastNode?.lastMonomerInNode,\n        this.firstMonomer,\n      ),\n    );\n  }\n\n  public get lastSubChain() {\n    return this.subChains[this.subChains.length - 1];\n  }\n\n  public get nodes() {\n    const nodes: SubChainNode[] = [];\n    this.subChains.forEach((subChain) => {\n      nodes.push(...subChain.nodes);\n    });\n\n    return nodes;\n  }\n\n  public get lastNode():\n    | EmptySequenceNode\n    | MonomerSequenceNode\n    | Nucleoside\n    | Nucleotide\n    | undefined {\n    return this.lastSubChain?.lastNode;\n  }\n\n  public get lastNonEmptyNode() {\n    if (this.lastNode instanceof EmptySequenceNode) {\n      const nodes = this.nodes;\n\n      return nodes[nodes.length - 2];\n    } else {\n      return this.lastNode;\n    }\n  }\n\n  public get firstSubChain() {\n    return this.subChains[0];\n  }\n\n  public get firstNode() {\n    return this.firstSubChain?.firstNode;\n  }\n\n  public get length() {\n    let length = 0;\n    this.subChains.forEach((subChain) => {\n      length += subChain.length;\n    });\n\n    return length;\n  }\n\n  public get isEmpty() {\n    return (\n      this.subChains.length === 1 &&\n      this.subChains[0].nodes.length === 1 &&\n      this.subChains[0].nodes[0] instanceof EmptySequenceNode\n    );\n  }\n\n  public forEachNode(\n    callback: ({\n      node,\n      subChain,\n    }: {\n      node: SubChainNode;\n      subChain: BaseSubChain;\n    }) => void,\n  ) {\n    this.subChains.forEach((subChain) => {\n      subChain.nodes.forEach((node) => {\n        callback({ node, subChain });\n      });\n    });\n  }\n\n  public static createChainWithEmptyNode() {\n    const emptyChain = new Chain();\n    const emptySequenceNode = new EmptySequenceNode();\n    const emptySubChain = new EmptySubChain();\n\n    emptySubChain.add(emptySequenceNode);\n    emptyChain.subChains.push(emptySubChain);\n\n    return { emptyChain, emptySubChain, emptySequenceNode };\n  }\n\n  public get isNewSequenceChain() {\n    return this.length === 1 && this.firstNode instanceof EmptySequenceNode;\n  }\n}\n","import { Chain } from 'domain/entities/monomer-chains/Chain';\nimport {\n  BaseMonomer,\n  Chem,\n  IsChainCycled,\n  Peptide,\n  Phosphate,\n  RNABase,\n  SubChainNode,\n  Sugar,\n  UnresolvedMonomer,\n  UnsplitNucleotide,\n} from 'domain/entities';\nimport {\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  isMonomerConnectedToR2RnaBase,\n} from 'domain/helpers/monomers';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class ChainsCollection {\n  public chains: Chain[] = [];\n\n  private get monomerToChain() {\n    const monomerToChain = new Map<BaseMonomer, Chain>();\n\n    this.chains.forEach((chain) => {\n      chain.forEachNode(({ node }) => {\n        node.monomers.forEach((monomer) => {\n          monomerToChain.set(monomer, chain);\n        });\n      });\n    });\n\n    return monomerToChain;\n  }\n\n  public get monomerToNode() {\n    const monomerToNode = new Map<BaseMonomer, SubChainNode>();\n\n    this.forEachNode(({ node }) => {\n      node.monomers.forEach((monomer) => {\n        monomerToNode.set(monomer, node);\n      });\n    });\n\n    return monomerToNode;\n  }\n\n  public rearrange() {\n    this.chains.sort((chain1, chain2) => {\n      // The factor is used to reduce the influence of the X coordinate on the sorting\n      // to make the sorting more oriented to Y coordinate\n      const X_COORDINATE_REDUCTION_FACTOR = 0.01;\n      if (\n        chain2.firstNode?.monomer.position.x * X_COORDINATE_REDUCTION_FACTOR +\n          chain2.firstNode?.monomer.position.y >\n        chain1.firstNode?.monomer.position.x * X_COORDINATE_REDUCTION_FACTOR +\n          chain1.firstNode?.monomer.position.y\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    const reorderedChains = new Set<Chain>();\n    const monomerToChain = this.monomerToChain;\n    this.chains.forEach((chain) => {\n      reorderedChains.add(chain);\n\n      chain.forEachNode(({ node }) => {\n        node.monomers.forEach((monomer) => {\n          const sideConnections = monomer.sideConnections;\n          if (sideConnections.length) {\n            sideConnections.forEach((sideConnection) => {\n              const anotherMonomer = sideConnection.getAnotherMonomer(monomer);\n              const anotherChain =\n                anotherMonomer && monomerToChain.get(anotherMonomer);\n              if (anotherChain && !reorderedChains.has(anotherChain)) {\n                reorderedChains.add(anotherChain);\n              }\n            });\n          }\n        });\n      });\n    });\n    this.chains = [...reorderedChains.values()];\n  }\n\n  public add(chain: Chain) {\n    this.chains.push(chain);\n\n    return this;\n  }\n\n  public static fromMonomers(monomers: BaseMonomer[]) {\n    const chainsCollection = new ChainsCollection();\n    const [firstMonomersInRegularChains, firstMonomersInCycledChains] =\n      this.getFirstMonomersInChains(monomers);\n\n    firstMonomersInRegularChains.forEach((monomer) => {\n      chainsCollection.add(new Chain(monomer));\n    });\n\n    firstMonomersInCycledChains.forEach((monomer) => {\n      chainsCollection.add(new Chain(monomer, !!IsChainCycled.CYCLED));\n    });\n\n    return chainsCollection;\n  }\n\n  public static getFirstMonomersInChains(\n    monomers: BaseMonomer[],\n    MonomerTypes: Array<\n      | typeof Peptide\n      | typeof Chem\n      | typeof Phosphate\n      | typeof Sugar\n      | typeof RNABase\n      | typeof UnresolvedMonomer\n      | typeof UnsplitNucleotide\n    > = [\n      Peptide,\n      Chem,\n      Phosphate,\n      Sugar,\n      RNABase,\n      UnresolvedMonomer,\n      UnsplitNucleotide,\n    ],\n  ) {\n    const monomersList = monomers.filter((monomer) =>\n      MonomerTypes.some((MonomerType) => monomer instanceof MonomerType),\n    );\n\n    const firstMonomersInChains: BaseMonomer[][] = [];\n\n    const firstMonomersInRegularChains =\n      this.getFirstMonomersInRegularChains(monomersList);\n\n    const firstMonomersInCycledChains =\n      this.getFirstMonomersInCycledChains(monomersList);\n\n    firstMonomersInChains.push(\n      firstMonomersInRegularChains,\n      firstMonomersInCycledChains,\n    );\n\n    return firstMonomersInChains;\n  }\n\n  public get firstNode() {\n    return this.chains[0]?.subChains[0]?.nodes[0];\n  }\n\n  private static getFirstMonomersInRegularChains(\n    monomersList: BaseMonomer[],\n  ): BaseMonomer[] {\n    const firstMonomersInRegularChains = monomersList.filter((monomer) => {\n      const R1PolymerBond = monomer.attachmentPointsToBonds.R1;\n      const isFirstMonomerWithR2R1connection =\n        !R1PolymerBond || R1PolymerBond.isSideChainConnection;\n\n      const R1ConnectedMonomer = R1PolymerBond?.getAnotherMonomer(monomer);\n      const isRnaBaseConnectedToSugar =\n        monomer instanceof RNABase &&\n        R1ConnectedMonomer instanceof Sugar &&\n        getRnaBaseFromSugar(R1ConnectedMonomer) === monomer;\n\n      return (\n        (isFirstMonomerWithR2R1connection ||\n          isMonomerConnectedToR2RnaBase(monomer)) &&\n        !isRnaBaseConnectedToSugar\n      );\n    });\n\n    return firstMonomersInRegularChains;\n  }\n\n  private static getFirstMonomersInCycledChains(\n    monomersList: BaseMonomer[],\n  ): BaseMonomer[] {\n    const handledMonomers = new Set<BaseMonomer>();\n    const cyclicChains: BaseMonomer[][] = [];\n\n    monomersList.forEach((monomer) => {\n      if (handledMonomers.has(monomer)) {\n        return;\n      }\n\n      const monomersInSameChain = new Set<BaseMonomer>();\n      monomersInSameChain.add(monomer);\n      handledMonomers.add(monomer);\n      let nextMonomerInChain = getNextMonomerInChain(monomer);\n\n      while (nextMonomerInChain && !handledMonomers.has(nextMonomerInChain)) {\n        monomersInSameChain.add(nextMonomerInChain);\n        handledMonomers.add(nextMonomerInChain);\n        nextMonomerInChain = getNextMonomerInChain(nextMonomerInChain);\n      }\n\n      if (monomer === nextMonomerInChain) {\n        cyclicChains.push(Array.from(monomersInSameChain));\n      }\n    });\n\n    const firstMonomersOfCycledChainsSet = cyclicChains.map((cyclicChain) =>\n      this.getMonomerWithLowerCoordsFromMonomerList(cyclicChain),\n    );\n\n    return firstMonomersOfCycledChainsSet;\n  }\n\n  private static getMonomerWithLowerCoordsFromMonomerList(\n    monomerList: BaseMonomer[],\n  ): BaseMonomer {\n    const monomerListShallowCopy = monomerList.slice();\n\n    monomerListShallowCopy.sort((monomer1, monomer2) => {\n      if (\n        monomer2.position.x + monomer2.position.y >\n        monomer1.position.x + monomer1.position.y\n      ) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    const monomerWithLowerCoords = monomerListShallowCopy[0];\n\n    return monomerWithLowerCoords;\n  }\n\n  public get lastNode() {\n    return this.chains[0].lastSubChain.lastNode;\n  }\n\n  public get length() {\n    return this.chains.reduce((length, chain) => length + chain.length, 0);\n  }\n\n  public forEachNode(\n    forEachCallback: (params: {\n      chainIndex: number;\n      subChainIndex: number;\n      nodeIndex: number;\n      nodeIndexOverall: number;\n      node: SubChainNode;\n      subChain: BaseSubChain;\n      chain: Chain;\n    }) => void,\n  ) {\n    let nodeIndexOverall = 0;\n\n    this.chains.forEach((chain, chainIndex) => {\n      chain.subChains.forEach((subChain, subChainIndex) => {\n        subChain.nodes.forEach((node, nodeIndex) => {\n          forEachCallback({\n            chainIndex,\n            subChainIndex,\n            nodeIndex,\n            nodeIndexOverall,\n            node,\n            subChain,\n            chain,\n          });\n          nodeIndexOverall++;\n        });\n      });\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport { Vec2 } from 'domain/entities';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet Raphael: any;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet raphaelModule: any;\n\nif (typeof window !== 'undefined') {\n  raphaelModule = require('raphael');\n  // Some environments (vite, webpack etc) might resolve this import differently\n  // this is a workaround to make it work in all environments\n  Raphael =\n    typeof raphaelModule === 'function' ? raphaelModule : raphaelModule.default;\n\n  // TODO: refactor ugly prototype extensions to plain old functions\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: remove any for raphael\n  (Raphael.el as any).translateAbs = function (x: number, y: number): void {\n    this.delta = this.delta || new Vec2();\n    // TODO check that only numbers might be passed to this function\n    this.delta.x += x - 0;\n    this.delta.y += y - 0;\n    this.transform(\n      't' + this.delta.x.toString() + ',' + this.delta.y.toString(),\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- TODO: remove any for raphael\n  (Raphael.st as any).translateAbs = function (x: number, y: number): void {\n    this.forEach((el) => {\n      el.translateAbs(x, y);\n    });\n  };\n}\n\nexport default Raphael;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs } from 'domain/entities/box2Abs';\nimport { Vec2 } from 'domain/entities/vec2';\n\nclass Visel {\n  constructor(type) {\n    this.type = type;\n    this.paths = [];\n    /** @type {Box2Abs[]} */\n    this.boxes = [];\n    /** @type {Box2Abs | null} */\n    this.boundingBox = null;\n    this.oldBoundingBox = null;\n    this.exts = [];\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path);\n    if (bb) {\n      this.boxes.push(bb);\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb);\n    }\n    if (ext) this.exts.push(ext);\n  }\n\n  clear() {\n    this.paths = [];\n    this.boxes = [];\n    this.exts = [];\n    if (this.boundingBox !== null) {\n      this.oldBoundingBox = this.boundingBox.clone();\n    }\n    this.boundingBox = null;\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected');\n    }\n    if (args.length === 1) {\n      const vector = args[0];\n      this.translate(vector.x, vector.y);\n    } else {\n      const x = args[0];\n      const y = args[1];\n      const delta = new Vec2(x, y);\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y);\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta);\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta);\n      }\n    }\n  }\n\n  /**\n   * @param {number} degree\n   * @param {Vec2} center\n   */\n  rotate(degree, center) {\n    for (let i = 0; i < this.paths.length; ++i) {\n      this.paths[i].rotate(degree, center.x, center.y);\n    }\n\n    for (let j = 0; j < this.boxes.length; ++j) {\n      this.boxes[j] = this.boxes[j].transform((point) =>\n        point.rotateAroundOrigin(degree, center),\n      );\n    }\n    if (this.boundingBox !== null) {\n      this.boundingBox = this.boundingBox.transform((point) =>\n        point.rotateAroundOrigin(degree, center),\n      );\n    }\n  }\n}\n\nexport default Visel;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport Visel from './visel';\n\nclass ReObject {\n  public visel: Visel;\n  public hover = false;\n  public hovering: any = null;\n  public selected = false;\n  public selectionPlate: any = null;\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType);\n  }\n\n  changeSelectionStyle(options: any) {\n    const { hoverStyle } = options;\n    if (this.visel.type === 'simpleObject') {\n      this.hovering?.attr({\n        'fill-opacity': this.selected ? 1 : 0,\n      });\n    } else {\n      this.hovering?.attr({\n        fill: hoverStyle.fill,\n        'fill-opacity': this.selected ? 1 : 0,\n      });\n    }\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox;\n    if (vbox === null) return null;\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated());\n    }\n    return vbox.transform(Scale.canvasToModel, render.options);\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    const { options } = render;\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return;\n          noredraw = !this.hovering[0].removed;\n        } else {\n          noredraw = !this.hovering.removed;\n        }\n      }\n      if (noredraw) {\n        this.changeSelectionStyle(options);\n        this.hovering.show();\n      } else {\n        render.paper.setStart();\n        this.drawHover(render);\n        this.hovering = render.paper.setFinish();\n      }\n    } else if (this.hovering) {\n      this.changeSelectionStyle(options);\n      this.hovering.hide();\n    }\n\n    this.hover = hover;\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.');\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden');\n  }\n}\n\nexport default ReObject;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/*\n  This map is used to draw anything on 'layers'\n  You can treat these values as z-index: background has the lowest z-index, indices has the highest\n*/\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  images = 'images',\n  atom = 'atom',\n  bondSkeleton = 'bondSkeleton',\n  warnings = 'warnings',\n  data = 'data',\n  additionalInfo = 'additionalInfo',\n  indices = 'indices',\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off',\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off',\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelAxisAlignedBoundingBox, RaphaelPaper } from 'raphael';\nimport { Atom, Bond, Box2Abs, HalfBond, Vec2 } from 'domain/entities';\nimport assert from 'assert';\nimport { ReStruct, LayerMap } from './restruct';\nimport Visel from './restruct/visel';\nimport { RelativeBox, RenderOptions } from './render.types';\n\nfunction relBox(box: RaphaelAxisAlignedBoundingBox): RelativeBox {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height,\n  };\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n */\nfunction shiftRayBox(p: Vec2, d: Vec2, bb: Box2Abs) {\n  assert(!!p);\n  assert(!!d);\n  assert(!!bb);\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y),\n  ];\n\n  const r = b.map((v) => v.sub(p)); // b relative to p\n\n  d = d.normalized();\n\n  const rc = r.map((v) => Vec2.cross(v, d)); // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)); // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1;\n  let nid = -1;\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i;\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i;\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0;\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid;\n  const id1 = rd[pid] > rd[nid] ? pid : nid;\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  );\n}\nfunction calcCoordinates(aPoint: Vec2, bPoint: Vec2, lengthHyp: number) {\n  const obj: {\n    pos1: null | { x: number; y: number };\n    pos2: null | { x: number; y: number };\n  } = { pos1: null, pos2: null };\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y };\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2;\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y;\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c;\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x;\n    const D = b * b - 4 * a * e;\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 };\n      obj.pos2 = { x: 0, y: 0 };\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a);\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a);\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x;\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x;\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 };\n    obj.pos2 = { x: 0, y: 0 };\n    obj.pos1.y = c / oPos2.y;\n    obj.pos2.y = c / oPos2.y;\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2);\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2);\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x;\n    obj.pos1.y += aPoint.y;\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x;\n    obj.pos2.y += aPoint.y;\n  }\n  return obj;\n}\n\nfunction getCIPValuePath({\n  paper,\n  cipLabelPosition,\n  atomOrBond,\n  options,\n}: {\n  paper: RaphaelPaper;\n  cipLabelPosition: Vec2;\n  atomOrBond: Atom | Bond;\n  options: RenderOptions;\n}) {\n  const text = paper\n    .text(cipLabelPosition.x, cipLabelPosition.y, `(${atomOrBond.cip})`)\n    .attr({\n      font: options.font,\n      'font-size': options.fontsz,\n    });\n  const box = text.getBBox();\n  const path = paper.set();\n  const rect = paper\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    .rect(box.x - 1, box.y - 1, box.width + 2, box.height + 2, 3, 3)\n    .attr({ fill: '#fff', stroke: '#fff' });\n  path.push(rect.toFront(), text.toFront());\n\n  return {\n    path,\n    text,\n    rectangle: rect,\n  };\n}\n\nfunction drawCIPLabel({\n  atomOrBond,\n  position,\n  restruct,\n  visel,\n}: {\n  atomOrBond: Bond | Atom;\n  position: Vec2;\n  restruct: ReStruct;\n  visel: Visel;\n}) {\n  const { options, paper } = restruct.render;\n  const path = paper.set();\n\n  const cipLabelPosition = position.scaled(options.microModeScale);\n  const cipValuePath = getCIPValuePath({\n    paper,\n    cipLabelPosition,\n    atomOrBond,\n    options,\n  });\n  const box = relBox(cipValuePath.path.getBBox());\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  cipValuePath.path.translateAbs(0.5 * box.width, -0.5 * box.height);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  path.push(cipValuePath.path.toFront());\n\n  restruct.addReObjectPath(LayerMap.additionalInfo, visel, path, null, true);\n\n  return cipValuePath;\n}\n\nfunction updateHalfBondCoordinates(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  xShift: number,\n): [HalfBond, HalfBond] {\n  if (hb1.p.y !== hb2.p.y) return [hb1, hb2];\n  if (hb1.p.x < hb2.p.x && hb1.p.y === hb2.p.y) {\n    hb1.p.x = hb1.p.x + xShift;\n  } else if (hb1.p.x > hb2.p.x) {\n    hb1.p.x = hb1.p.x - xShift;\n  }\n\n  return [hb1, hb2];\n}\n\nfunction escapeHtml(str) {\n  return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nconst util = {\n  relBox,\n  shiftRayBox,\n  calcCoordinates,\n  drawCIPLabel,\n  updateHalfBondCoordinates,\n  escapeHtml,\n};\n\nexport default util;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RaphaelPaper, VMLElement as Element } from 'raphael';\nimport { HalfBond, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport Raphael from './raphael-ext';\nimport svgPath from 'svgpath';\nimport util from './util';\nimport { ArrowItem, RelativeBox, RenderOptions } from './render.types';\nimport { tfx } from 'utilities';\n\nfunction rectangle(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  return paper.rect(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    tfx(Math.min(points[0].x, points[1].x)),\n    tfx(Math.min(points[0].y, points[1].y)),\n    tfx(Math.abs(points[1].x - points[0].x)),\n    tfx(Math.abs(points[1].y - points[0].y)),\n  );\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  _paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  length: number,\n  angle: number,\n) {\n  const endX = start.x + length;\n  const [wOffset, hOffset] = [5, height || 8];\n\n  const path =\n    `M${tfx(start.x - wOffset)},${tfx(start.y)}` +\n    `L${tfx(start.x - wOffset)},${tfx(start.y - hOffset)}` +\n    `L${tfx(endX + wOffset)},${tfx(start.y - hOffset)}` +\n    `L${tfx(endX + wOffset)},${tfx(start.y + (!height ? hOffset : 0))}` +\n    `L${tfx(start.x - wOffset)},${tfx(start.y + (!height ? hOffset : 0))}Z`;\n\n  return svgPath(path).rotate(angle, start.x, start.y).toString();\n}\n\nfunction ellipse(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const rad = Vec2.diff(points[1], points[0]);\n  const rx = rad.x / 2;\n  const ry = rad.y / 2;\n  return paper.ellipse(\n    points[0].x + rx,\n    points[0].y + ry,\n    Math.abs(rx),\n    Math.abs(ry),\n  );\n}\n\nfunction polyline(paper: RaphaelPaper, points: Vec2[]) {\n  const path = ['M', points[0].x, points[0].y];\n  for (let i = 1; i < points.length; i++)\n    path.push('L', points[i].x, points[i].y);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(path);\n}\n\nfunction line(paper: RaphaelPaper, points: [Vec2, Vec2]) {\n  const path = ['M', points[0].x, points[0].y];\n  path.push('L', points[1].x, points[1].y);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(path);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: raphael typing issues\nfunction arrow(\n  paper: RaphaelPaper,\n  item: ArrowItem,\n  length: number,\n  angle: number,\n  options: RenderOptions,\n  isResizing: boolean,\n) {\n  const shouldApplySnappingStyle =\n    isResizing &&\n    ['0', '-0', '90', '-90', '180', '-180'].includes(angle.toFixed());\n\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options,\n        shouldApplySnappingStyle,\n      );\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const arrowHeadLength = direction * 10;\n  const arrowHeadWidth = direction * 5;\n  const arrowHeadAttr = direction * 4;\n\n  const endX = start.x + arrowLength;\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadWidth)},${tfx(start.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const triangleLength = direction * 10;\n  const triangleWidth = direction * 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - triangleWidth)},${tfx(start.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const width = direction * 5;\n  const length = direction * 7;\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX - width)},${tfx(start.y - length)}` +\n    `M${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX + width)}, ${tfx(start.y - length)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [start], height }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const direction = height >= 0 ? 1 : -1;\n  const width = direction * 5;\n  const length = direction * 7;\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      endX,\n    )},${tfx(start.y)}` +\n    `L${tfx(endX + width)}, ${tfx(start.y - length)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - length)},${tfx(start.y - width)}` +\n    `M${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - length)}, ${tfx(start.y + width)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}Z`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowFilledBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowHeadLength = 10;\n  const arrowHeadWidth = 5;\n  const arrowHeadAttr = 4;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadLength)},${tfx(start.y + arrowHeadWidth)}` +\n    `L${tfx(endX - arrowHeadLength + arrowHeadAttr)},${tfx(start.y)}` +\n    `L${tfx(endX - arrowHeadLength)},${tfx(start.y - arrowHeadWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}Z`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowDashedOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n  const dashInterval = 3.5;\n\n  const path: string[] = [];\n\n  const endX = start.x + arrowLength;\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(start.x + i * dashInterval)},${tfx(start.y)}`);\n    } else {\n      path.push(`M${tfx(start.x + i * dashInterval)},${tfx(start.y)}`);\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n      `M${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowFailed(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowHeadLength = 10;\n  const arrowHeadWidth = 5;\n  const arrowHeadAttr = 4;\n  const failSignWidth = 8;\n\n  const endX = start.x + arrowLength;\n\n  const arrowCenter = endX - (endX - start.x) / 2;\n\n  const path: string[] = [];\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y)}` +\n      `L${tfx(endX)},${tfx(start.y)}` +\n      `L${tfx(endX - arrowHeadLength)},${tfx(start.y + arrowHeadWidth)}` +\n      `L${tfx(endX - arrowHeadLength + arrowHeadAttr)},${tfx(start.y)}` +\n      `L${tfx(endX - arrowHeadLength)},${tfx(start.y - arrowHeadWidth)}` +\n      `L${tfx(endX)},${tfx(start.y)}Z`,\n  );\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(start.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(start.y - failSignWidth)}`,\n  );\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(start.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(start.y + failSignWidth)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const triangleLength = 10;\n  const triangleWidth = 5;\n\n  const endX = start.x + arrowLength;\n\n  const path =\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(endX - triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(endX)},${tfx(start.y)}` +\n    `M${tfx(start.x)},${tfx(start.y)}` +\n    `L${tfx(start.x + triangleLength)},${tfx(start.y - triangleWidth)}` +\n    `L${tfx(start.x + triangleLength)},${tfx(start.y + triangleWidth)}` +\n    `L${tfx(start.x)},${tfx(start.y)}`;\n\n  const transformedPath = svgPath(path)\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const arrowHeadAttr = 2;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // Arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Arrowhead\n  path.push(\n    `M${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + arrowOffset)}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + arrowOffset)}` +\n      `L${tfx(start.x + arrowLen)},${start.y + lineOffset}Z` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y)}` +\n      `L${tfx(start.x + arrowLen)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - length)},${tfx(start.y - width - lineOffset)}`,\n  );\n\n  // Second arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen)},${tfx(start.y + lineOffset + width)}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const arrowHeadAttr = 2;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        start.y + lineOffset\n      }Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const width = 5;\n  const length = 7;\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - length)},${tfx(start.y - width - lineOffset)}`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + lineOffset + width,\n      )}`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    ...(shouldApplySnappingStyle && {\n      stroke: options.arrowSnappingStyle.stroke,\n    }),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 10;\n  const arrowHeadAttr = 2;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen + arrowHeadAttr)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        start.y + lineOffset\n      }Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper: RaphaelPaper,\n  { pos: [start] }: ArrowItem,\n  arrowLength: number,\n  arrowAngle: number,\n  options: RenderOptions,\n  shouldApplySnappingStyle: boolean,\n) {\n  const arrowLen = 9;\n  const lineOffset = 3.5;\n  const arrowOffset = 7;\n  const unbalanceVal = 15;\n\n  const endX = start.x + arrowLength;\n\n  const path: string[] = [];\n\n  // First arrow\n  path.push(\n    `M${tfx(start.x)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX)},${tfx(start.y - lineOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - arrowOffset)}` +\n      `L${tfx(endX - arrowLen)},${tfx(start.y - lineOffset)}Z`,\n  );\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(endX - unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `M${tfx(start.x + unbalanceVal)},${tfx(start.y + lineOffset)}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${tfx(\n        start.y + arrowOffset,\n      )}` +\n      `L${tfx(start.x + arrowLen + unbalanceVal)},${start.y + lineOffset}Z`,\n  );\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, start.x, start.y)\n    .toString();\n\n  return paper.path(transformedPath).attr({\n    ...options.lineattr,\n    fill: '#000',\n    ...(shouldApplySnappingStyle && options.arrowSnappingStyle),\n  });\n}\n\nfunction plus(paper: RaphaelPaper, point: Vec2, options: RenderOptions) {\n  const s = options.microModeScale / 5;\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(point.x),\n      tfx(point.y),\n      tfx(point.x - s),\n      tfx(point.x + s),\n      tfx(point.y - s),\n      tfx(point.y + s),\n    )\n    .attr(options.lineattr);\n}\n\nfunction bondSingle(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleUp(\n  paper: RaphaelPaper,\n  a: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y),\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleStereoBold(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  a3: Vec2,\n  a4: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y),\n    )\n    .attr(options.lineattr)\n    .attr({\n      stroke: color,\n      fill: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  return bond;\n}\n\nfunction bondDoubleStereoBold(\n  paper: RaphaelPaper,\n  sgBondPath: Element,\n  b1: Vec2,\n  b2: Vec2,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color,\n      })\n      .attr(isSnapping ? options.bondSnappingStyle : {}),\n  ]);\n}\n\nfunction bondSingleDown(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p;\n  const n = halfBond1.norm;\n  const bsp = 0.7 * options.stereoBond;\n\n  let path = '';\n  let p;\n  let q;\n  let r;\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i);\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5));\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5));\n    path += makeStroke(p, q);\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleEither(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  d: Vec2,\n  nlines: number,\n  step: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  // eslint-disable-line max-params\n  const a = halfBond1.p;\n  const n = halfBond1.norm;\n  const bsp = 0.7 * options.stereoBond;\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y);\n  let r = a;\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5));\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y);\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondDouble(\n  paper: RaphaelPaper,\n  a1: Vec2,\n  a2: Vec2,\n  b1: Vec2,\n  b2: Vec2,\n  cisTrans: boolean,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y),\n    )\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondSingleOrDouble(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  nSect: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-statements, max-params\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  const n = halfBond1.norm;\n  const bsp = options.bondSpace / 2;\n\n  let path = '';\n  let pi;\n  let pp = a;\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect);\n    if (i & 1) {\n      path += makeStroke(pp, pi);\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp));\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp));\n    }\n    pp = pi;\n  }\n  return paper\n    .path(path)\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondTriple(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n  color = '#000',\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  const n = halfBond1.norm;\n  const a2 = a.addScaled(n, options.bondSpace);\n  const b2 = b.addScaled(n, options.bondSpace);\n  const a3 = a.addScaled(n, -options.bondSpace);\n  const b3 = b.addScaled(n, -options.bondSpace);\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color,\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondAromatic(\n  paper: RaphaelPaper,\n  paths: string[],\n  bondShift: number,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const l1 = paper\n    .path(paths[0])\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  const l2 = paper\n    .path(paths[1])\n    .attr(options.lineattr)\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n  if (bondShift !== undefined && bondShift !== null) {\n    (bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' });\n  }\n\n  return paper.set([l1, l2]);\n}\n\nfunction bondAny(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondHydrogen(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({\n      'stroke-dasharray': '.',\n      'stroke-linecap': 'square',\n    })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction bondDative(\n  paper: RaphaelPaper,\n  halfBond1: HalfBond,\n  halfBond2: HalfBond,\n  options: RenderOptions,\n  isSnapping: boolean,\n) {\n  const a = halfBond1.p;\n  const b = halfBond2.p;\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n    .attr(isSnapping ? options.bondSnappingStyle : {});\n}\n\nfunction reactingCenter(\n  paper: RaphaelPaper,\n  points: Vec2[],\n  options: RenderOptions,\n) {\n  let pathDesc = '';\n  for (let i = 0; i < points.length / 2; ++i) {\n    pathDesc += makeStroke(points[2 * i], points[2 * i + 1]);\n  }\n  return paper.path(pathDesc).attr(options.lineattr);\n}\n\nfunction bondMark(\n  paper: RaphaelPaper,\n  point: Vec2,\n  mark: string | null,\n  options: RenderOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  const path = paper.text(point.x, point.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000',\n  });\n  const rbb = util.relBox(path.getBBox());\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  recenterText(path, rbb);\n  return path;\n}\n\nfunction radicalCap(paper: RaphaelPaper, point1: Vec2, options: RenderOptions) {\n  const s = options.lineWidth * 0.9;\n  const dw = s;\n  const dh = 2 * s;\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(point1.x - dw),\n      tfx(point1.y + dh),\n      tfx(point1.x),\n      tfx(point1.y),\n      tfx(point1.x + dw),\n      tfx(point1.y + dh),\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter',\n    });\n}\n\nfunction radicalBullet(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  options: RenderOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  return paper.circle(tfx(point1.x), tfx(point1.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000',\n  });\n}\n\nfunction bracket(\n  paper: RaphaelPaper,\n  bracketAngleDirection: Vec2,\n  bracketDirection: Vec2,\n  bondCenter: Vec2,\n  bracketWidth: number,\n  bracketHeight: number,\n  options: RenderOptions,\n  isBracketContainAttachment = false,\n) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25;\n  bracketHeight = bracketHeight || 1.0;\n  const halfBracketHeight = 0.5;\n  let bracketPoint0, bracketPoint1;\n  if (isBracketContainAttachment) {\n    const longHalfBracketHeight = -0.8;\n    const shortHalfBracketHeight = 0.2;\n    bracketPoint0 = bondCenter.addScaled(\n      bracketDirection,\n      shortHalfBracketHeight * bracketHeight,\n    );\n    bracketPoint1 = bondCenter.addScaled(\n      bracketDirection,\n      longHalfBracketHeight * bracketHeight,\n    );\n  } else {\n    bracketPoint0 = bondCenter.addScaled(\n      bracketDirection,\n      -halfBracketHeight * bracketHeight,\n    );\n    bracketPoint1 = bondCenter.addScaled(\n      bracketDirection,\n      halfBracketHeight * bracketHeight,\n    );\n  }\n  const bracketArc0 = bracketPoint0.addScaled(\n    bracketAngleDirection,\n    -bracketWidth,\n  );\n  const bracketArc1 = bracketPoint1.addScaled(\n    bracketAngleDirection,\n    -bracketWidth,\n  );\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(bracketArc0.x),\n      tfx(bracketArc0.y),\n      tfx(bracketPoint0.x),\n      tfx(bracketPoint0.y),\n      tfx(bracketPoint1.x),\n      tfx(bracketPoint1.y),\n      tfx(bracketArc1.x),\n      tfx(bracketArc1.y),\n    )\n    .attr(options.sgroupBracketStyle);\n}\n\nfunction selectionRectangle(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions,\n) {\n  return paper\n    .rect(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      tfx(Math.min(point1.x, point2.x)),\n      tfx(Math.min(point1.y, point2.y)),\n      tfx(Math.abs(point2.x - point1.x)),\n      tfx(Math.abs(point2.y - point1.y)),\n    )\n    .attr(options.lassoStyle);\n}\n\nfunction selectionPolygon(\n  paper: RaphaelPaper,\n  r: Vec2[],\n  options: RenderOptions,\n) {\n  const v = r[r.length - 1];\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y);\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y);\n  }\n  return paper.path(pstr).attr(options.lassoStyle);\n}\n\nfunction selectionLine(\n  paper: RaphaelPaper,\n  point1: Vec2,\n  point2: Vec2,\n  options: RenderOptions,\n) {\n  return paper.path(makeStroke(point1, point2)).attr(options.lassoStyle);\n}\n\nfunction makeStroke(point1: Vec2, point2: Vec2) {\n  return (\n    'M' +\n    tfx(point1.x) +\n    ',' +\n    tfx(point1.y) +\n    'L' +\n    tfx(point2.x) +\n    ',' +\n    tfx(point2.y) +\n    '\t'\n  );\n}\n\nfunction dashedPath(point1: Vec2, point2: Vec2, dash: number[]) {\n  let t0 = 0;\n  const t1 = Vec2.dist(point1, point2);\n  const d = Vec2.diff(point2, point1).normalized();\n  let black = true;\n  let path = '';\n  let i = 0;\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length];\n    const t2 = t0 + Math.min(len, t1 - t0);\n    if (black) {\n      path +=\n        'M ' +\n        point1.addScaled(d, t0).coordStr() +\n        ' L ' +\n        point1.addScaled(d, t2).coordStr();\n    }\n    t0 += len;\n    black = !black;\n    i++;\n  }\n  return path;\n}\n\nfunction aromaticBondPaths(\n  a2: Vec2,\n  a3: Vec2,\n  b2: Vec2,\n  b3: Vec2,\n  mask: number,\n  dash: number[] | null,\n) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2);\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3);\n\n  return [l1, l2];\n}\n\nfunction recenterText(path: Element, relativeBox: RelativeBox) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = relativeBox.height * 0.16;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    path.translateAbs(0, gap);\n    relativeBox.y += gap;\n  }\n}\n\nfunction rgroupAttachmentPoint(\n  paper: RaphaelPaper,\n  shiftedAtomPositionVector: Vec2,\n  attachmentPointEnd: Vec2,\n  directionVector: Vec2,\n  options: RenderOptions,\n) {\n  const linePath = paper.path(\n    'M{0},{1}L{2},{3}',\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    tfx(shiftedAtomPositionVector.x),\n    tfx(shiftedAtomPositionVector.y),\n    tfx(attachmentPointEnd.x),\n    tfx(attachmentPointEnd.y),\n  );\n\n  const curvePath = paper.path(\n    getSvgCurveShapeAttachmentPoint(\n      attachmentPointEnd,\n      directionVector,\n      options.microModeScale,\n    ),\n  );\n\n  const resultShape = paper\n    .set([curvePath, linePath])\n    .attr(options.lineattr)\n    .attr({ 'stroke-width': options.lineWidth });\n\n  return resultShape;\n}\n\nfunction getSvgCurveShapeAttachmentPoint(\n  centerPosition: Vec2,\n  directionVector: Vec2,\n  basicSize: number,\n): string {\n  // declared here https://github.com/epam/ketcher/issues/2165\n  // this path has (0,0) in the position of attachment point atom\n  const attachmentPointSvgPathString = `M13 1.5l-1.5 3.7c-0.3 0.8-1.5 0.8-1.9 0l-1.7-4.4c-0.3-0.8-1.5-0.8-1.9 0l-1.7 4.4c-0.3 0.8-1.5 0.8-1.8 0l-1.8-4.4c-0.3-0.8-1.5-0.8-1.8 0l-1.7 4.4c-0.3 0.8-1.5 0.8-1.9 0l-1.7-4.4c-0.3-0.8-1.5-0.8-1.9 0l-1.6 4.2c-0.3 0.9-1.6 0.8-1.9 0l-1.2-3.5`;\n  const attachmentPointSvgPathSize = 39.8;\n\n  const shapeScale = basicSize / attachmentPointSvgPathSize;\n  const angleDegrees =\n    (Math.atan2(directionVector.y, directionVector.x) * 180) / Math.PI - 90;\n\n  return svgPath(attachmentPointSvgPathString)\n    .rotate(angleDegrees)\n    .scale(shapeScale)\n    .translate(centerPosition.x, centerPosition.y)\n    .toString();\n}\n\nfunction rgroupAttachmentPointLabel(\n  paper: RaphaelPaper,\n  labelPosition: Vec2,\n  labelText: string,\n  options: RenderOptions,\n  fill,\n) {\n  const labelPath = paper\n    .text(labelPosition.x, labelPosition.y, labelText)\n    .attr({\n      font: options.font,\n      'font-size': options.fontsz * 0.9,\n      fill,\n    });\n  return labelPath;\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  bondMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line,\n  rgroupAttachmentPoint,\n  rgroupAttachmentPointLabel,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  SGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { ElementColor, Elements } from 'domain/constants';\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType,\n} from './generalEnumTypes';\n\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\nimport { RenderOptions } from 'application/render/render.types';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { attachmentPointNames } from 'domain/types';\nimport { getAttachmentPointLabel } from 'domain/helpers/attachmentPointCalculations';\n\ninterface ElemAttr {\n  text: string;\n  path: any;\n  rbb: { x: number; y: number; width: number; height: number };\n}\n\nconst StereoLabelMinOpacity = 0.3;\nconst MAX_LABEL_LENGTH = 8;\n\nexport enum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'all',\n}\n\nexport enum ShowHydrogenLabelNames {\n  Off = 'Off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'On',\n}\n\nclass ReAtom extends ReObject {\n  a: Atom;\n  showLabel: boolean;\n  hydrogenOnTheLeft: boolean;\n  color: string;\n  component: number;\n  label?: ElemAttr;\n  cip?: {\n    // Raphael paths\n    path: any;\n    text: any;\n    rectangle: any;\n  };\n\n  constructor(atom: Atom) {\n    super('atom');\n    this.a = atom; // TODO rename a to item\n    this.showLabel = false;\n\n    this.hydrogenOnTheLeft = false;\n\n    this.color = '#000000';\n    this.component = -1;\n  }\n\n  static isSelectable(): true {\n    return true;\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render);\n    }\n    return new Box2Abs(this.a.pp, this.a.pp);\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.atom, this.visel, ret);\n    return ret;\n  }\n\n  getLabeledSelectionContour(render: Render) {\n    const { paper, ctab: restruct, options } = render;\n    const { fontsz, radiusScaleFactor } = options;\n    const padding = fontsz * radiusScaleFactor;\n    const radius = fontsz * radiusScaleFactor * 2;\n    const box = this.getVBoxObj(restruct.render)!;\n    const ps1 = Scale.modelToCanvas(box.p0, restruct.render.options);\n    const ps2 = Scale.modelToCanvas(box.p1, restruct.render.options);\n    const width = ps2.x - ps1.x;\n    const height = fontsz * 1.23;\n    return paper.rect(\n      ps1.x - padding,\n      ps1.y - padding,\n      width + padding * 2,\n      height + padding * 2,\n      radius,\n    );\n  }\n\n  getUnlabeledSelectionContour(render: Render) {\n    const { paper, options } = render;\n    const { atomSelectionPlateRadius } = options;\n    const ps = Scale.modelToCanvas(this.a.pp, options);\n    return paper.circle(ps.x, ps.y, atomSelectionPlateRadius);\n  }\n\n  getSelectionContour(render: Render) {\n    const hasLabel =\n      (this.a.pseudo && this.a.pseudo.length > 1 && !getQueryAttrsText(this)) ||\n      (this.showLabel && this.a.implicitH !== 0);\n    return hasLabel\n      ? this.getLabeledSelectionContour(render)\n      : this.getUnlabeledSelectionContour(render);\n  }\n\n  makeHoverPlate(render: Render) {\n    const atom = this.a;\n    const { options } = render;\n    const sgroups = render.ctab.sgroups;\n    const functionalGroups = render.ctab.molecule.functionalGroups;\n    const struct = render.ctab.molecule;\n    const atomId = struct.atoms.keyOf(atom) as number;\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true,\n      ) ||\n      Atom.isHiddenLeavingGroupAtom(struct, atomId)\n    ) {\n      return null;\n    }\n\n    return this.getSelectionContour(render).attr(options.hoverStyle);\n  }\n\n  makeSelectionPlate(restruct: ReStruct) {\n    const atom = this.a;\n    const { render } = restruct;\n    const { options } = render;\n    const sgroups = render.ctab.sgroups;\n    const functionalGroups = render.ctab.molecule.functionalGroups;\n    const struct = render.ctab.molecule;\n    const atomId = struct.atoms.keyOf(atom) as number;\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true,\n      ) ||\n      Atom.isHiddenLeavingGroupAtom(struct, atomId)\n    ) {\n      return null;\n    }\n\n    return this.getSelectionContour(render).attr(options.selectionStyle);\n  }\n\n  /**\n   * if atom is rendered as Abbreviation: O, NH, ...\n   * In this case we need to shift the bond render start position to free space for Atom,\n   * same for the Attachment point\n   */\n  getShiftedSegmentPosition(\n    renderOptions: RenderOptions,\n    direction: Vec2,\n    _atomPosition?: Vec2,\n  ): Vec2 {\n    const atomPosition = Scale.modelToCanvas(\n      _atomPosition || this.a.pp,\n      renderOptions,\n    );\n    let atomSymbolShift = 0;\n    const exts = this.visel.exts;\n    for (let k = 0; k < exts.length; ++k) {\n      const box = exts[k].translate(atomPosition);\n\n      atomSymbolShift = Math.max(\n        atomSymbolShift,\n        util.shiftRayBox(atomPosition, direction, box),\n      );\n    }\n    if (atomSymbolShift > 0) {\n      return atomPosition.addScaled(\n        direction,\n        atomSymbolShift + 3 * renderOptions.lineWidth,\n      );\n    } else {\n      return atomPosition;\n    }\n  }\n\n  hasAttachmentPoint(): boolean {\n    return Boolean(this.a.attachmentPoints);\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n    const atom = struct.atoms.get(aid)!;\n    const sgroups = struct.sgroups;\n    const functionalGroups = struct.functionalGroups;\n    const render = restruct.render;\n    const ps = Scale.modelToCanvas(this.a.pp, render.options);\n    const sgroup = restruct.molecule.getGroupFromAtomId(aid);\n\n    if (Atom.isHiddenLeavingGroupAtom(struct, aid)) {\n      return;\n    }\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false,\n      )\n    ) {\n      const isPositionAtom =\n        sgroup?.getContractedPosition(restruct.molecule).atomId === aid;\n      if (isPositionAtom) {\n        const position = Scale.modelToCanvas(\n          sgroup instanceof MonomerMicromolecule\n            ? (sgroup.pp as Vec2)\n            : this.a.pp,\n          render.options,\n        );\n        const path = render.paper\n          .text(position.x, position.y, sgroup.data.name)\n          .attr({\n            'font-weight': '700',\n            'font-size': 14,\n          });\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          path,\n          position,\n          true,\n        );\n      }\n      return;\n    }\n\n    this.hydrogenOnTheLeft = shouldHydrogenBeOnLeft(restruct.molecule, this);\n    this.showLabel = isLabelVisible(restruct, render.options, this);\n    this.color = 'black'; // reset color\n\n    let delta;\n    let rightMargin;\n    let leftMargin;\n    let implh;\n    let isHydrogen;\n    let label;\n    let index: any = null;\n\n    if (this.showLabel) {\n      const data = buildLabel(this, render.paper, ps, options, aid, sgroup);\n      delta = 0.5 * options.lineWidth;\n      label = data.label;\n      rightMargin = data.rightMargin;\n      leftMargin = data.leftMargin;\n      implh = Math.floor(this.a.implicitH);\n      isHydrogen = label.text === 'H';\n\n      if (label.background) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          label.background,\n          ps,\n          true,\n        );\n      }\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true);\n    }\n    if (options.showAtomIds) {\n      index = {};\n      index.text = aid.toString();\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6);\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6);\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070',\n      });\n      index.rbb = util.relBox(index.path.getBBox());\n      draw.recenterText(index.path, index.rbb);\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps);\n    }\n\n    if (this.showLabel) {\n      let hydroIndex: any = null;\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin);\n        rightMargin += hydroIndex.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true,\n        );\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render);\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true,\n        );\n      }\n      if (this.a.isotope !== null) {\n        const isotope = showIsotope(this, render, leftMargin);\n        leftMargin -= isotope.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true,\n        );\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(this, options.showHydrogenLabels)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin,\n        });\n        const hydrogen = data.hydrogen;\n        hydroIndex = data.hydroIndex;\n        rightMargin = data.rightMargin;\n        leftMargin = data.leftMargin;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true,\n        );\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true,\n          );\n        }\n      }\n      if (this.a.charge === 0) {\n        this.a.charge = null;\n      }\n      if (this.a.charge && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin);\n        rightMargin += charge.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true,\n        );\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin);\n        rightMargin += valence.rbb.width + delta;\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true,\n        );\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin);\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true,\n        );\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height,\n        );\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    // draw hover after label is calculated\n    this.setHover(this.hover, render);\n\n    const stereoLabel = this.a.stereoLabel; // Enhanced Stereo\n    const aamText = getAamText(this);\n    const customQueryText = checkIsSmartPropertiesExist(this.a)\n      ? getOnlyQueryAttributesCustomQuery(this.a)\n      : getQueryAttrsText(this);\n    let shortenCustomQueryText = customQueryText;\n    let customQueryTooltipText: string | undefined;\n\n    if (shortenCustomQueryText.length > MAX_LABEL_LENGTH) {\n      customQueryTooltipText = shortenCustomQueryText;\n      shortenCustomQueryText = `${shortenCustomQueryText.substring(\n        0,\n        MAX_LABEL_LENGTH,\n      )}...`;\n    }\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment);\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId);\n\n    const displayStereoLabel = shouldDisplayStereoLabel(\n      stereoLabel,\n      options.stereoLabelStyle,\n      options.ignoreChiralFlag,\n      fragment?.enhancedStereoFlag,\n    );\n\n    let text = '';\n\n    if (displayStereoLabel) {\n      text = `${stereoLabel}\\n`;\n    }\n\n    if (shortenCustomQueryText.length > 0) {\n      text += `${shortenCustomQueryText}\\n`;\n    }\n\n    if (aamText.length > 0) {\n      text += `.${aamText}.`;\n    }\n\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label);\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill:\n          options.atomColoring && elem ? ElementColor[this.a.label] : '#000',\n      });\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        aamPath.node.childNodes[0].setAttribute('fill', color);\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity);\n      }\n      const aamBox = util.relBox(aamPath.getBBox());\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      draw.recenterText(aamPath, aamBox);\n      const visel = this.visel;\n      let t = 3;\n      let dir = this.bisectLargestSector(restruct.molecule);\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)));\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox));\n      dir = dir.scaled(8 + t);\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y);\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true);\n\n      if (customQueryTooltipText) {\n        addTooltip(aamPath.node, customQueryTooltipText);\n      }\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights;\n    let isHighlighted = false;\n    let highlightColor = '';\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid);\n      isHighlighted = isHighlighted || hasCurrentHighlight;\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color;\n      }\n    });\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' };\n\n      const ps = Scale.modelToCanvas(this.a.pp, restruct.render.options);\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style);\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path);\n    }\n\n    if (atom.cip && options.stereoLabelStyle !== StereLabelStyleType.Off) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: atom,\n        position: atom.pp,\n        restruct: render.ctab,\n        visel: this.visel,\n      });\n    }\n  }\n\n  getLargestSectorFromNeighbors(struct: Struct): {\n    neighborAngle: number;\n    largestAngle: number;\n  } {\n    let angles: Array<number> = [];\n    this.a.neighbors.forEach((halfBondId) => {\n      const halfBond = struct.halfBonds.get(halfBondId);\n      halfBond && angles.push(halfBond.ang);\n    });\n    angles = angles.sort((a, b) => a - b);\n    const largeAngles: Array<number> = [];\n    for (let i = 0; i < angles.length - 1; ++i) {\n      largeAngles.push(angles[(i + 1) % angles.length] - angles[i]);\n    }\n    largeAngles.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI);\n    let largestAngle = 0;\n    let neighborAngle = -Math.PI / 2;\n    for (let i = 0; i < angles.length; ++i) {\n      if (largeAngles[i] > largestAngle) {\n        largestAngle = largeAngles[i];\n        neighborAngle = angles[i];\n      }\n    }\n\n    return { neighborAngle, largestAngle };\n  }\n\n  bisectLargestSector(struct: Struct): Vec2 {\n    const { largestAngle, neighborAngle } =\n      this.getLargestSectorFromNeighbors(struct);\n    const bisectAngle = neighborAngle + largestAngle / 2;\n    return newVectorFromAngle(bisectAngle);\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000';\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel);\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters;\n    case StereoLabel.Or:\n      return options.colorOfOrCenters;\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters;\n    default:\n      return '#000';\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '');\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1;\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity);\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  ignoreChiralFlag,\n  flag: StereoFlag | undefined,\n): boolean {\n  if (!stereoLabel) {\n    return false;\n  }\n\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0];\n\n  if (ignoreChiralFlag && stereoLabelType === StereoLabel.Abs) {\n    return false;\n  }\n  if (ignoreChiralFlag && stereoLabelType !== StereoLabel.Abs) {\n    return true;\n  }\n\n  switch (labelStyle) {\n    case StereLabelStyleType.Off:\n      return false;\n    case StereLabelStyleType.On:\n      return true;\n    case StereLabelStyleType.Classic:\n      return !!(\n        flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or\n      );\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      );\n    default:\n      return true;\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom: ReAtom) {\n  const isAttachmentPointAtom = Boolean(atom.a.attachmentPoints);\n  const isCarbon = atom.a.label.toLowerCase() === 'c';\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero;\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal);\n\n  if (isAttachmentPointAtom && isCarbon) {\n    return false;\n  }\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    options.showHydrogenLabels === ShowHydrogenLabels.On ||\n    atom.a.alias ||\n    atom.a.isotope !== null ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== null ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c';\n\n  if (shouldBeVisible) return true;\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0];\n    const nei2 = atom.a.neighbors[1];\n    const hb1 = restruct.molecule.halfBonds.get(nei1);\n    const hb2 = restruct.molecule.halfBonds.get(nei2);\n    const bond1 = restruct.bonds.get(hb1.bid);\n    const bond2 = restruct.bonds.get(hb2.bid);\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE;\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction displayHydrogen(atom: ReAtom, hydrogenLabels: ShowHydrogenLabels) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label?.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label?.text.toLowerCase() !== 'c'))\n  );\n}\n\nfunction shouldHydrogenBeOnLeft(struct, atom) {\n  if (atom.a.neighbors.length === 0) {\n    if (atom.a.label === 'D' || atom.a.label === 'T') {\n      return false;\n    } else {\n      const element = Elements.get(atom.a.label);\n      return !element || Boolean(element.leftH);\n    }\n  }\n\n  if (atom.a.neighbors.length === 1) {\n    const neighbor = atom.a.neighbors[0];\n    const neighborDirection = struct.halfBonds.get(neighbor).dir;\n\n    return neighborDirection.x > 0;\n  }\n\n  return false;\n}\n\nfunction getOnlyQueryAttributesCustomQuery(atom: Atom) {\n  const queryText =\n    atom.queryProperties.customQuery ||\n    getAtomCustomQuery(\n      {\n        ...atom,\n        ...atom.queryProperties,\n      },\n      true,\n    );\n  return queryText;\n}\n\nfunction addTooltip(node, text: string) {\n  const tooltip = text.split(/(?<=[;,])/).join(' ');\n  node.childNodes[0].setAttribute('data-tooltip', util.escapeHtml(tooltip));\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any,\n  atomId: number,\n  sgroup?: SGroup,\n): {\n  rightMargin: number;\n  leftMargin: number;\n  label: ElemAttr;\n} {\n  const {\n    atomColoring,\n    font,\n    fontsz,\n    currentlySelectedMonomerAttachmentPoint,\n    connectedMonomerAttachmentPoints,\n    labelInMonomerConnectionsModal,\n    labelInPreview,\n  } = options;\n  // eslint-disable-line max-statements\n  const label: any = {\n    text: getLabelText(atom.a, atomId, sgroup),\n  };\n  let tooltip: string | null = null;\n  if (!label.text) {\n    label.text = 'R#';\n  }\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text);\n    if (atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000';\n    }\n  }\n\n  const shouldStyleLabel = labelInMonomerConnectionsModal || labelInPreview;\n  const isMonomerAttachmentPoint = attachmentPointNames.includes(label.text);\n  const isMonomerAttachmentPointSelected =\n    currentlySelectedMonomerAttachmentPoint === label.text;\n  const isMonomerAttachmentPointUsed =\n    connectedMonomerAttachmentPoints?.includes(label.text);\n\n  if (isMonomerAttachmentPoint && shouldStyleLabel) {\n    atom.color = isMonomerAttachmentPointSelected\n      ? '#FFF'\n      : isMonomerAttachmentPointUsed\n      ? '#B4B9D6'\n      : '#585858';\n  }\n\n  if (label.text?.length > MAX_LABEL_LENGTH) {\n    tooltip = label.text;\n    label.text = `${label.text?.substring(0, 8)}...`;\n  }\n\n  const { previewOpacity } = options;\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font,\n    'font-size': fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : '',\n    'fill-opacity': atom.a.isPreview ? previewOpacity : 1,\n  });\n\n  if (isMonomerAttachmentPoint && shouldStyleLabel) {\n    const fill = isMonomerAttachmentPointSelected\n      ? '#167782'\n      : isMonomerAttachmentPointUsed\n      ? '#E1E5EA'\n      : '#FFF';\n    const backgroundSize = fontsz * 2;\n\n    label.background = paper\n      .rect(\n        ps.x - backgroundSize / 2,\n        ps.y - backgroundSize / 2,\n        backgroundSize,\n        backgroundSize,\n        10,\n      )\n      .attr({ fill })\n      .attr({\n        stroke: labelInPreview\n          ? 'none'\n          : isMonomerAttachmentPointUsed\n          ? '#B4B9D6'\n          : '#7C7C7F',\n      });\n  }\n  if (tooltip) {\n    addTooltip(label.path.node, tooltip);\n  }\n\n  label.rbb = util.relBox(label.path.getBBox());\n  draw.recenterText(label.path, label.rbb);\n  let rightMargin =\n    (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom); //\n  let leftMargin =\n    (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom);\n\n  if (atom.a.atomList !== null) {\n    const xShift =\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n      2;\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      xShift,\n\n      0,\n    );\n    rightMargin += xShift;\n    leftMargin += xShift;\n  }\n\n  atom.label = label;\n  return { label, rightMargin, leftMargin };\n}\n\nfunction getLabelText(atom, atomId: number, sgroup?: SGroup) {\n  if (sgroup?.isSuperatomWithoutLabel) {\n    const attachmentPoint = sgroup\n      .getAttachmentPoints()\n      .find((attachmentPoint) => {\n        return attachmentPoint.leaveAtomId === atomId;\n      });\n\n    if (attachmentPoint && attachmentPoint.attachmentPointNumber) {\n      return getAttachmentPointLabel(attachmentPoint.attachmentPointNumber);\n    }\n  }\n\n  if (atom.atomList !== null) return atom.atomList.label();\n\n  if (atom.pseudo) return atom.pseudo;\n\n  if (atom.alias) return atom.alias;\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = '';\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString();\n      }\n    }\n\n    return text;\n  }\n\n  return atom.label;\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const hydroIndex: any = {};\n  hydroIndex.text = (implh + 1).toString();\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox());\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex;\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const paper: any = render.paper;\n  const radical: any = {};\n  let hshift;\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set();\n      hshift = 1.6 * options.lineWidth;\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options),\n      );\n      radical.path.attr('fill', atom.color);\n      break;\n    case 2:\n      radical.path = paper.set();\n      radical.path.push(draw.radicalBullet(paper, ps, options));\n      radical.path.attr('fill', atom.color);\n      break;\n    case 3:\n      radical.path = paper.set();\n      hshift = 1.6 * options.lineWidth;\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options),\n      );\n      radical.path.attr('stroke', atom.color);\n      break;\n    default:\n      break;\n  }\n  radical.rbb = util.relBox(radical.path.getBBox());\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height);\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2;\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift);\n  return radical;\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number,\n): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const isotope: any = {};\n  isotope.text = atom.a.isotope === null ? '' : atom.a.isotope.toString();\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  isotope.rbb = util.relBox(isotope.path.getBBox());\n  draw.recenterText(isotope.path, isotope.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return isotope;\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number,\n): ElemAttr {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const charge: any = {};\n  charge.text = '';\n  if (atom.a.charge !== null) {\n    const absCharge = Math.abs(atom.a.charge);\n    if (absCharge !== 1) charge.text = absCharge.toString();\n    if (atom.a.charge < 0) charge.text += '\\u2013';\n    else charge.text += '+';\n  } else {\n    charge.text = '';\n  }\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  charge.rbb = util.relBox(charge.path.getBBox());\n  draw.recenterText(charge.path, charge.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return charge;\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number,\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV',\n  };\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const valence: any = {};\n  valence.text = mapValence[atom.a.explicitValence];\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString());\n  }\n  valence.text = '(' + valence.text + ')';\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color,\n  });\n  valence.rbb = util.relBox(valence.path.getBBox());\n  draw.recenterText(valence.path, valence.rbb);\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height,\n  );\n  /* eslint-enable no-mixed-operators */\n  return valence;\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any;\n    hydroIndex: number;\n    rightMargin: number;\n    leftMargin: number;\n  },\n): {\n  hydrogen: ElemAttr;\n  hydroIndex: ElemAttr;\n  rightMargin: number;\n  leftMargin: number;\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex;\n  const hydrogenLeft = atom.hydrogenOnTheLeft;\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const options = render.options;\n  const delta = 0.5 * options.lineWidth;\n  const hydrogen = data.hydrogen;\n  hydrogen.text = 'H';\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n  });\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox());\n  draw.recenterText(hydrogen.path, hydrogen.rbb);\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0,\n    );\n    data.rightMargin += hydrogen.rbb.width + delta;\n  }\n  if (implh > 1) {\n    hydroIndex = {};\n    hydroIndex.text = implh.toString();\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color,\n    });\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox());\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb);\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height,\n      );\n      data.rightMargin += hydroIndex.rbb.width + delta;\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height,\n      );\n      data.leftMargin -= hydroIndex.rbb.width + delta;\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0,\n    );\n    data.leftMargin -= hydrogen.rbb.width + delta;\n  }\n  return Object.assign(data, { hydrogen, hydroIndex });\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin,\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.modelToCanvas(atom.a.pp, render.options);\n  const delta = 0.5 * render.options.lineWidth;\n  const warning: any = {};\n  const y = ps.y + atom.label.rbb.height / 2 + delta;\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y),\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' });\n  warning.rbb = util.relBox(warning.path.getBBox());\n  return warning;\n}\n\nfunction getAamText(atom) {\n  let aamText = '';\n  if (atom.a.aam > 0) aamText += atom.a.aam;\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ',';\n    if (atom.a.invRet === 1) aamText += 'Inv';\n    else if (atom.a.invRet === 2) aamText += 'Ret';\n    else throw new Error('Invalid value for the invert/retain flag');\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ',';\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext';\n    else throw new Error('Invalid value for the exact change flag');\n  }\n  return aamText;\n}\n\nfunction getRingBondCountAttrText(value: number) {\n  let attrText: string;\n  if (value > 0) {\n    attrText = 'rb' + value.toString();\n  } else if (value === -1) {\n    attrText = 'rb0';\n  } else if (value === -2) {\n    attrText = 'rb*';\n  } else {\n    throw new Error('Ring bond count invalid');\n  }\n  return attrText;\n}\n\nfunction getRingConnectivity(value: number) {\n  if (value > 0) {\n    return 'x' + value.toString();\n  } else if (value === -1 || value === -2) {\n    return 'x0';\n  } else {\n    return '';\n  }\n}\n\nfunction getDegree(value: number) {\n  if (value > 0) {\n    return 'D' + value.toString();\n  } else if (value === -1 || value === -2) {\n    return 'D0';\n  } else {\n    return '';\n  }\n}\n\nfunction getSubstitutionCountAttrText(value: number) {\n  let attrText: string;\n  if (value > 0) {\n    attrText = 's' + value.toString();\n  } else if (value === -1) {\n    attrText = 's0';\n  } else if (value === -2) {\n    attrText = 's*';\n  } else {\n    throw new Error('Substitution count invalid');\n  }\n  return attrText;\n}\n\nexport function getAtomType(atom: Atom) {\n  return atom.atomList\n    ? 'list'\n    : atom.pseudo === atom.label\n    ? 'pseudo'\n    : 'single';\n}\n\nexport function checkIsSmartPropertiesExist(atom) {\n  const smartsSpecificProperties = [\n    'ringMembership',\n    'ringSize',\n    'connectivity',\n    'chirality',\n    'aromaticity',\n    'customQuery',\n  ];\n  return smartsSpecificProperties.some((name) => atom.queryProperties?.[name]);\n}\n\nexport function getAtomCustomQuery(atom, includeOnlyQueryAttributes?: boolean) {\n  let queryAttrsText = '';\n  const nonQueryAttributes = ['charge', 'explicitValence', 'isotope'];\n\n  const addSemicolon = () => {\n    if (queryAttrsText.length > 0) queryAttrsText += ';';\n  };\n  const patterns: {\n    [key: string]: (value: string, atom) => string;\n  } = {\n    isotope: (value) => value,\n    aromaticity: (value) => (value === 'aromatic' ? 'a' : 'A'),\n    charge: (value) => {\n      if (value === '') return value;\n      const regExpResult = /^([+-]?)([0-9]{1,3}|1000)([+-]?)$/.exec(value);\n      const charge = regExpResult\n        ? parseInt(\n            regExpResult[1] + regExpResult[3] + regExpResult[2],\n          ).toString()\n        : value;\n      return charge[0] !== '-' ? `+${charge}` : charge;\n    },\n    unsaturatedAtom: (value) => (Number(value) === 1 ? 'u' : ''),\n    explicitValence: (value) => (Number(value) !== -1 ? `v${value}` : ''),\n    ringBondCount: (value) => getRingConnectivity(Number(value)),\n    substitutionCount: (value) => getDegree(Number(value)),\n    hCount: (value) =>\n      Number(value) > 0 ? 'H' + (Number(value) - 1).toString() : '',\n    implicitHCount: (value) => `h${value}`,\n    ringMembership: (value) => `R${value}`,\n    ringSize: (value) => `r${value}`,\n    connectivity: (value) => `X${value}`,\n    chirality: (value) => (value === 'clockwise' ? '@@' : '@'),\n  };\n\n  for (const propertyName in patterns) {\n    if (\n      includeOnlyQueryAttributes &&\n      nonQueryAttributes.includes(propertyName)\n    ) {\n      continue;\n    }\n\n    const value = atom[propertyName];\n    if (propertyName in atom && value !== null) {\n      const attrText = patterns[propertyName](value, atom);\n      if (attrText) {\n        addSemicolon();\n      }\n      queryAttrsText += attrText;\n    }\n  }\n\n  return queryAttrsText;\n}\n\nfunction getQueryAttrsText(atom): string {\n  let queryAttrsText = '';\n\n  const addSemicolon = () => {\n    if (queryAttrsText.length > 0) queryAttrsText += ';';\n  };\n\n  const { ringBondCount, substitutionCount, unsaturatedAtom, hCount } = atom.a;\n\n  if (ringBondCount !== 0) {\n    queryAttrsText += getRingBondCountAttrText(ringBondCount);\n  }\n  if (substitutionCount !== 0) {\n    addSemicolon();\n    queryAttrsText += getSubstitutionCountAttrText(substitutionCount);\n  }\n  if (unsaturatedAtom > 0) {\n    addSemicolon();\n    if (unsaturatedAtom === 1) queryAttrsText += 'u';\n    else throw new Error('Unsaturated atom invalid value');\n  }\n  if (hCount > 0) {\n    addSemicolon();\n    queryAttrsText += 'H' + (hCount - 1).toString();\n  }\n  return queryAttrsText;\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y);\n  rbb.x += x;\n  rbb.y += y;\n}\n\nfunction newVectorFromAngle(angle: number): Vec2 {\n  return new Vec2(Math.cos(angle), Math.sin(angle));\n}\n\nexport default ReAtom;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  SGroup,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType,\n} from './generalEnumTypes';\nimport { getColorFromStereoLabel } from './reatom';\n\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\nclass ReBond extends ReObject {\n  b: Bond;\n  doubleBondShift: number;\n  path: any;\n  neihbid1 = -1;\n  neihbid2 = -1;\n  boldStereo?: boolean;\n  rbb?: { x: number; y: number; width: number; height: number };\n  cip?: {\n    // Raphael paths\n    path: any;\n    text: any;\n    rectangle: any;\n  };\n\n  constructor(bond: Bond) {\n    super('bond');\n    this.b = bond; // TODO rename b to item\n    this.doubleBondShift = 0;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  private static getAtomPositionForBond(\n    struct: Struct,\n    atomId: number,\n    sgroup?: SGroup,\n  ) {\n    return sgroup instanceof MonomerMicromolecule\n      ? (sgroup.getAttachmentAtomId() as number)\n      : sgroup?.isContracted()\n      ? sgroup?.getContractedPosition(struct).atomId\n      : atomId;\n  }\n\n  static bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n    const render = restruct.render;\n    const sgroup1 = restruct.molecule.getGroupFromAtomId(bond.b.begin);\n    const sgroup2 = restruct.molecule.getGroupFromAtomId(bond.b.end);\n    const beginAtom = restruct.atoms.get(\n      ReBond.getAtomPositionForBond(restruct.molecule, bond.b.begin, sgroup1),\n    );\n    const endAtom = restruct.atoms.get(\n      ReBond.getAtomPositionForBond(restruct.molecule, bond.b.end, sgroup2),\n    );\n\n    if (\n      !beginAtom ||\n      !endAtom ||\n      bond.b.hb1 === undefined ||\n      bond.b.hb2 === undefined\n    ) {\n      return;\n    }\n    const p1 =\n      sgroup1 instanceof MonomerMicromolecule\n        ? (sgroup1.pp as Vec2)\n        : beginAtom.a.pp;\n\n    const p2 =\n      sgroup2 instanceof MonomerMicromolecule\n        ? (sgroup2.pp as Vec2)\n        : endAtom.a.pp;\n    const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2);\n\n    if (!hb1?.dir || !hb2?.dir) return;\n\n    hb1.p = beginAtom.getShiftedSegmentPosition(options, hb1.dir, p1);\n    hb2.p = endAtom.getShiftedSegmentPosition(options, hb2.dir, p2);\n    bond.b.center = Vec2.lc2(p1, 0.5, p2, 0.5);\n    bond.b.len = Vec2.dist(\n      Scale.modelToCanvas(p1, render.options),\n      Scale.modelToCanvas(p2, render.options),\n    );\n    bond.b.sb = options.lineWidth * 5;\n    /* eslint-disable no-mixed-operators */\n    bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2);\n    /* eslint-enable no-mixed-operators */\n    bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI;\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  getSelectionPoints(render: Render) {\n    // please refer to: ketcher-core/docs/data/hover_selection_1.png\n    const bond: Bond = this.b;\n    const { ctab: restruct, options } = render;\n    const { bondThickness, doubleBondWidth, stereoBondWidth } = options;\n    const regularSelectionThikness = doubleBondWidth + bondThickness;\n\n    // get half-bond positions, this is where the actual bond\n    // image on the screen is drawn, it may be different e.g. if the\n    // bond is connected to an atom with a label as opposed\n    // to when it is connected to a Carbon atom w/o a label\n    // please refer to: ketcher-core/docs/data/hover_selection_2.png\n    const halfBondStart = restruct.molecule.halfBonds.get(bond.hb1!)!.p;\n    const halfBondEnd = restruct.molecule.halfBonds.get(bond.hb2!)!.p;\n\n    const isStereoBond =\n      bond.stereo !== Bond.PATTERN.STEREO.NONE &&\n      bond.stereo !== Bond.PATTERN.STEREO.CIS_TRANS;\n\n    const addPadding = isStereoBond ? 0 : -2;\n\n    // find the points on the line where we will be drawing the curves\n    const contourStart = Vec2.getLinePoint(\n      halfBondEnd,\n      halfBondStart,\n      addPadding,\n    );\n    const contourEnd = Vec2.getLinePoint(\n      halfBondStart,\n      halfBondEnd,\n      addPadding,\n    );\n\n    const stereoBondStartHeightCoef = 0.5;\n    const bondPadding = 0.5;\n    const addStart = isStereoBond\n      ? stereoBondWidth * stereoBondStartHeightCoef\n      : regularSelectionThikness + bondPadding;\n    const stereoBondEndHeightCoef = 1;\n    const addEnd = isStereoBond\n      ? stereoBondWidth +\n        (regularSelectionThikness * stereoBondEndHeightCoef) / stereoBondWidth\n      : regularSelectionThikness + bondPadding;\n\n    const contourPaddedStart = Vec2.getLinePoint(\n      contourStart,\n      contourEnd,\n      addEnd,\n    );\n    const contourPaddedEnd = Vec2.getLinePoint(\n      contourEnd,\n      contourStart,\n      addStart,\n    );\n\n    // we need four points for each bezier curve\n    // and two for each line that together form the selection contour\n    // the padded values are for the curve points and the rest of\n    // the values are for drawing the lines\n    // please refer to: ketcher-core/docs/data/hover_selection_3.png\n    const startPoint = contourStart.add(new Vec2(addEnd, 0));\n    const endPoint = contourEnd.add(new Vec2(addStart, 0));\n    const padStartPoint = contourPaddedStart.add(new Vec2(addEnd, 0));\n    const padEndPoint = contourPaddedEnd.add(new Vec2(addStart, 0));\n\n    const { angle } = bond;\n\n    // rotate the points +/-90 degrees to find the\n    // perpendicular points that will be used for actual drawing\n    // of selection contour on canvas\n    const startTop = startPoint.rotateAroundOrigin(\n      angle + 90,\n      new Vec2(contourStart.x, contourStart.y),\n    );\n    const startBottom = startPoint.rotateAroundOrigin(\n      angle - 90,\n      new Vec2(contourStart.x, contourStart.y),\n    );\n    const startPadTop = padStartPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedStart,\n    );\n    const startPadBottom = padStartPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedStart,\n    );\n    const endTop = endPoint.rotateAroundOrigin(angle + 90, contourEnd);\n    const endBottom = endPoint.rotateAroundOrigin(angle - 90, contourEnd);\n    const endPadTop = padEndPoint.rotateAroundOrigin(\n      angle + 90,\n      contourPaddedEnd,\n    );\n    const endPadBottom = padEndPoint.rotateAroundOrigin(\n      angle - 90,\n      contourPaddedEnd,\n    );\n\n    return [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom,\n    ];\n  }\n\n  getSelectionContour(render: Render) {\n    const { paper } = render;\n    const [\n      startPadTop,\n      startTop,\n      endTop,\n      endPadTop,\n      endPadBottom,\n      endBottom,\n      startPadBottom,\n      startBottom,\n    ] = this.getSelectionPoints(render);\n\n    // for a visual representation of the points\n    // please refer to: ketcher-core/docs/data/hover_selection_exp.png\n    const pathString = `\n      M ${startTop.x} ${startTop.y}\n      L ${endTop.x} ${endTop.y}\n      C ${endPadTop.x} ${endPadTop.y}, ${endPadBottom.x} ${endPadBottom.y}, ${endBottom.x} ${endBottom.y}\n      L ${startBottom.x} ${startBottom.y}\n      C ${startPadBottom.x} ${startPadBottom.y}, ${startPadTop.x} ${startPadTop.y}, ${startTop.x} ${startTop.y}\n    `;\n\n    return paper.path(pathString);\n  }\n\n  makeHoverPlate(render: Render) {\n    const restruct = render.ctab;\n    const options = render.options;\n    ReBond.bondRecalc(this, restruct, options);\n    const bond = this.b;\n    const sgroups = restruct.sgroups;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      ) ||\n      Bond.isBondToHiddenLeavingGroup(restruct.molecule, bond)\n    ) {\n      return null;\n    }\n\n    const rect = this.getSelectionContour(render);\n\n    return rect.attr({ ...options.hoverStyle });\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _: any, options: any) {\n    ReBond.bondRecalc(this, restruct, options);\n    const bond = this.b;\n    const sgroups = restruct.render.ctab.sgroups;\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups;\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      ) ||\n      Bond.isBondToHiddenLeavingGroup(restruct.molecule, bond)\n    ) {\n      return null;\n    }\n\n    const rect = this.getSelectionContour(restruct.render);\n\n    return rect.attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render;\n    const struct = restruct.molecule;\n    const bond = restruct.molecule.bonds.get(bid)!;\n    const sgroups = restruct.molecule.sgroups;\n    const functionalGroups = restruct.molecule.functionalGroups;\n\n    if (Bond.isBondToHiddenLeavingGroup(struct, bond)) {\n      return;\n    }\n\n    if (\n      bond &&\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n      )\n    ) {\n      return;\n    }\n\n    const paper = render.paper;\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null;\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null;\n\n    checkStereoBold(bid, this, restruct);\n    ReBond.bondRecalc(this, restruct, options);\n    setDoubleBondShift(this, struct);\n    if (!hb1 || !hb2) return;\n    const isSnapping = restruct.isSnappingBond(bid);\n    this.path = getBondPath(restruct, this, hb1, hb2, isSnapping);\n    this.rbb = util.relBox(this.path.getBBox());\n    // add layer for bond's skeleton:\n    restruct.addReObjectPath(\n      LayerMap.bondSkeleton,\n      this.visel,\n      this.path,\n      null,\n      true,\n    );\n    const reactingCenter: any = {};\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2);\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox());\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true,\n      );\n    }\n    const topology: any = {};\n    topology.path = getBondMark(render, this, hb1, hb2);\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox());\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true,\n      );\n    }\n    this.setHover(this.hover, render);\n\n    let ipath = null;\n    const bondIdxOff = options.subFontSize * 0.6;\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm,\n      );\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights;\n    let isHighlighted = false;\n    let highlightColor = '';\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid);\n      isHighlighted = isHighlighted || hasCurrentHighlight;\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color;\n      }\n    });\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round',\n      };\n\n      const c = Scale.modelToCanvas(this.b.center, restruct.render.options);\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      highlightPath.attr(style);\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true,\n      );\n    }\n\n    if (bond.cip && options.stereoLabelStyle !== StereLabelStyleType.Off) {\n      this.cip = util.drawCIPLabel({\n        atomOrBond: bond,\n        position: bond.center,\n        restruct: render.ctab,\n        visel: this.visel,\n      });\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y };\n  const end = { x: hb2.p.x, y: hb2.p.y };\n\n  const paper = restruct.render.paper;\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`;\n\n  const path = paper.path(pathString);\n\n  return path;\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct,\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid);\n\n    if (!hb || hb.bid === bid0) return false;\n\n    const neibond = restruct.bonds.get(hb.bid);\n\n    if (!neibond) return false;\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP;\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      );\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    );\n  });\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct,\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    if (!atom) return -1;\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct);\n    return pos < 0 ? -1 : atom.neighbors[pos];\n  });\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0];\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1];\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct);\n    return pos < 0 ? -1 : atom.neighbors[pos];\n  });\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0;\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  isSnapping: boolean,\n) {\n  let path: any = null;\n  const render = restruct.render;\n  const struct = restruct.molecule;\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel;\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel;\n  let newHalfBonds: [HalfBond, HalfBond];\n  const xShiftMinus1 = -1;\n  const xShiftPlus1 = 1;\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct);\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(\n              render,\n              hb1,\n              hb2,\n              bond,\n              struct,\n              isSnapping,\n            );\n          } else\n            path = getBondSingleUpPath(\n              render,\n              hb1,\n              hb2,\n              bond,\n              struct,\n              isSnapping,\n            );\n          break;\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            struct,\n            isSnapping,\n          );\n          break;\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            struct,\n            isSnapping,\n          );\n          break;\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            isSnapping,\n            getStereoBondColor(render.options, bond, struct),\n          );\n          break;\n      }\n      break;\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct);\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB,\n          isSnapping,\n        );\n      } else\n        path = getBondDoublePath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          shiftA,\n          shiftB,\n          isSnapping,\n        );\n      break;\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(\n        render.paper,\n        hb1,\n        hb2,\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic);\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options, isSnapping)\n        : getBondAromaticPath(\n            render,\n            hb1,\n            hb2,\n            bond,\n            shiftA,\n            shiftB,\n            isSnapping,\n          );\n      break;\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftPlus1);\n      path = getSingleOrDoublePath(\n        render,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(\n        render,\n        hb1,\n        hb2,\n        bond,\n        shiftA,\n        shiftB,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftMinus1);\n      path = getBondAromaticPath(\n        render,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        bond,\n        shiftA,\n        shiftB,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.ANY:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftMinus1);\n      path = draw.bondAny(\n        render.paper,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      newHalfBonds = util.updateHalfBondCoordinates(hb1, hb2, xShiftPlus1);\n      path = draw.bondHydrogen(\n        render.paper,\n        newHalfBonds[0],\n        newHalfBonds[1],\n        render.options,\n        isSnapping,\n      );\n      break;\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(\n        render.paper,\n        hb1,\n        hb2,\n        render.options,\n        isSnapping,\n      );\n      break;\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported');\n  }\n  if (path) {\n    const { previewOpacity } = render.options;\n    path.attr({ opacity: bond.b.isPreview ? previewOpacity : 1 });\n  }\n  return path;\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const options = render.options;\n  const bsp = 0.7 * options.stereoBond;\n  let b2 = b.addScaled(n, bsp);\n  let b3 = b.addScaled(n, -bsp);\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct,\n    );\n    b2 = coords[0];\n    b3 = coords[1];\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct,\n): string {\n  const defaultColor = '#000';\n\n  if (bond.b.stereo === 0) return defaultColor;\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel;\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel;\n\n  let stereoLabel = '';\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel;\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel;\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor;\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel);\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const options = render.options;\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct,\n  );\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct,\n  );\n  const a1 = coords1[0];\n  const a2 = coords1[1];\n  const a3 = coords2[0];\n  const a4 = coords2[1];\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const shift = bond.doubleBondShift;\n  const bsp = 1.5 * render.options.stereoBond;\n  let b1 = a.addScaled(n, bsp * shift);\n  let b2 = b.addScaled(n, bsp * shift);\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(\n    render,\n    hb1,\n    hb2,\n    bond,\n    struct,\n    isSnapping,\n  );\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    isSnapping,\n    getStereoBondColor(render.options, bond, struct),\n  );\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0;\n  return sin / (1 - cos);\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct,\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid);\n  const cos = Vec2.dot(hb.dir, neihb!.dir);\n  const sin = Vec2.cross(hb.dir, neihb!.dir);\n  const cosHalf = Math.sqrt(0.5 * (1 - cos));\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos)),\n  );\n\n  const denomAdd = 0.3;\n  const scale = 0.7;\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd));\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd),\n  );\n  return sin > 0 ? [a1, a2] : [a2, a1];\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n  let d = b.sub(a);\n  const len = d.length() + 0.2;\n  d = d.normalized();\n  const interval = 1.2 * options.lineWidth;\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0,\n    ) + 2;\n  const step = len / (nlines - 1);\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n  let d = b.sub(a);\n  const len = d.length();\n  d = d.normalized();\n  const interval = 0.6 * options.lineWidth;\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0,\n    ) + 2;\n  const step = len / (nlines - 0.5);\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    isSnapping,\n    getStereoBondColor(options, bond, struct),\n  );\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS;\n\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const shift = cisTrans ? 0 : bond.doubleBondShift;\n\n  const options = render.options;\n  const bsp = options.bondSpace / 2;\n  const s1 = bsp + shift * bsp;\n  const s2 = -bsp + shift * bsp;\n\n  let a1 = a.addScaled(n, s1);\n  let b1 = b.addScaled(n, s1);\n  let a2 = a.addScaled(n, s2);\n  let b2 = b.addScaled(n, s2);\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n\n  return draw.bondDouble(\n    render.paper,\n    a1,\n    a2,\n    b1,\n    b2,\n    cisTrans,\n    options,\n    isSnapping,\n  );\n}\n\nfunction getSingleOrDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  isSnapping: boolean,\n) {\n  const a = hb1.p;\n  const b = hb2.p;\n  const options = render.options;\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed());\n  if (!(nSect & 1)) nSect += 1;\n  return draw.bondSingleOrDouble(\n    render.paper,\n    hb1,\n    hb2,\n    nSect,\n    options,\n    isSnapping,\n  );\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean,\n  isSnapping: boolean,\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125];\n  let mask = 0;\n  let dash: number[] | null = null;\n  const options = render.options;\n  const bondShift = bond.doubleBondShift;\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mask = bondShift > 0 ? 1 : 2;\n    dash = dashdotPattern.map((v) => v * options.microModeScale);\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mask = 3;\n    dash = dashdotPattern.map((v) => v * options.microModeScale);\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mask,\n    dash,\n  );\n  return draw.bondAromatic(render.paper, paths, bondShift, options, isSnapping);\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number,\n  dash: number[] | null,\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p;\n  const b = hb2.p;\n  const n = hb1.norm;\n  const bsp = bondSpace / 2;\n  const s1 = bsp + shift * bsp;\n  const s2 = -bsp + shift * bsp;\n  let a2 = a.addScaled(n, s1);\n  let b2 = b.addScaled(n, s1);\n  let a3 = a.addScaled(n, s2);\n  let b3 = b.addScaled(n, s2);\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin),\n      );\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin),\n      );\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin),\n      );\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin),\n      );\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash);\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p;\n  const b = hb2.p;\n  const c = b.add(a).scaled(0.5);\n  const d = b.sub(a).normalized();\n  const n = d.rotateSC(1, 0);\n\n  const p: Array<Vec2> = [];\n\n  const lw = render.options.lineWidth;\n  const bs = render.options.bondSpace / 2;\n  const alongIntRc = lw; // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw; // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs; // half size along for CENTER\n  const acrossInt = 1.5 * bs; // half interval across for CENTER\n  const acrossSz = 3.0 * bs; // half size across for all\n  const tiltTan = 0.2; // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc),\n      );\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc),\n      );\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt));\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt));\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt));\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt));\n      break;\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz));\n      p.push(c.addScaled(n, -acrossSz));\n      break;\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\n      p.push(c.addScaled(n, acrossSz));\n      p.push(c.addScaled(n, -acrossSz));\n      break;\n    default:\n      return null;\n  }\n  return draw.reactingCenter(render.paper, p, render.options);\n}\n\nfunction getBondMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond,\n) {\n  // eslint-disable-line max-statements\n  const options = render.options;\n  let mark: string | null = null;\n  let tooltip: string | null = null;\n  if (bond.b.customQuery) {\n    mark = bond.b.customQuery;\n    if (bond.b.customQuery.length > 8) {\n      tooltip = bond.b.customQuery;\n      mark = `${bond.b.customQuery.substring(0, 8)}...`;\n    }\n  } else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) {\n    mark = 'rng';\n  } else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) {\n    mark = 'chn';\n  } else {\n    return null;\n  }\n\n  const a = hb1.p;\n  const b = hb2.p;\n  const c = b.add(a).scaled(0.5);\n  const d = b.sub(a).normalized();\n  let n = d.rotateSC(1, 0);\n  let fixed = options.lineWidth;\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift);\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2;\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace);\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace;\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)));\n  const path = draw.bondMark(render.paper, p, mark, options);\n  tooltip &&\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    path.node.childNodes[0].setAttribute(\n      'data-tooltip',\n      util.escapeHtml(tooltip),\n    );\n\n  return path;\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2,\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff);\n  const ipath = paper.text(pb.x, pb.y, bid.toString());\n  const irbb = util.relBox(ipath.getBBox());\n  draw.recenterText(ipath, irbb);\n  return ipath;\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1;\n  const hb2 = bond.b.hb2;\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\n    return;\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop;\n  const loop2 = struct.halfBonds.get(hb2)!.loop;\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds;\n    const d2 = struct.loops.get(loop2)!.dblBonds;\n    const n1 = struct.loops.get(loop1)!.hbs.length;\n    const n2 = struct.loops.get(loop2)!.hbs.length;\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2);\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1;\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1;\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\n  }\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number,\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1;\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1;\n  if (n2 * d1 > n1 * d2) return -1;\n  if (n2 * d1 < n1 * d2) return 1;\n  if (n2 > n1) return -1;\n  return 1;\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0;\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1);\n  const hb2 = struct.halfBonds.get(bond.b.hb2);\n  if (!hb1 || !hb2) return 0;\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0);\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0);\n  if (nLeft > nRight) return -1;\n  if (nLeft < nRight) return 1;\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1)\n    return 1;\n  return 0;\n}\n\nexport default ReBond;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any;\n\n  constructor() {\n    super('enhancedFlag');\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox());\n    const sz = box.p1.sub(box.p0);\n    const p0 = box.p0.sub(render.options.offset);\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y);\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null;\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null;\n    return this.hoverPath(restruct.render).attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render;\n    const fragment = restruct.molecule.frags.get(fragmentId);\n\n    if (!fragment?.enhancedStereoFlag) {\n      return;\n    }\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!;\n\n    const paper = render.paper;\n    const ps = Scale.modelToCanvas(position, options);\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel,\n    };\n\n    if (options.showStereoFlags && !options.ignoreChiralFlag) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : '',\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000',\n        });\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true,\n    );\n  }\n}\n\nexport default ReEnhancedFlag;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities';\n\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag');\n    this.item = frag;\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid,\n    );\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b;\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment;\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment;\n\n      return firstFrag === fid && secondFrag === fid;\n    });\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret;\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return;\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox;\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp);\n        const ext = new Vec2(0.05 * 3, 0.05 * 3);\n        bba = bba.extend(ext, ext);\n      } else {\n        if (!render) render = global._ui_editor.render; // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.canvasToModel, render.options);\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba;\n    });\n\n    return ret;\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render);\n\n    if (bb) {\n      const p0 = Scale.modelToCanvas(\n        new Vec2(bb.p0.x, bb.p0.y),\n        render.options,\n      );\n      const p1 = Scale.modelToCanvas(\n        new Vec2(bb.p1.x, bb.p1.y),\n        render.options,\n      );\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs);\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(_render) {\n    // eslint-disable-line no-unused-vars\n    return null; // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(_render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this);\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render');\n      return;\n    }\n\n    fid = parseInt(fid, 10);\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render);\n    });\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render);\n      }\n    });\n  }\n}\nexport default ReFrag;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Render } from '../raphaelRender';\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3);\nconst PADDING_VECTOR = new Vec2(0.2, 0.4);\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup');\n    this.labelBox = null;\n    this.item = rgroup;\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  getAtoms(render) {\n    let ret = [];\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid),\n      );\n    });\n    return ret;\n  }\n\n  getBonds(render) {\n    let ret = [];\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid),\n      );\n    });\n    return ret;\n  }\n\n  /**\n   * @param {Render} render\n   */\n  calcBBox(render) {\n    /** @type {Box2Abs | null} */\n    let rGroupBoundingBox = null;\n    this.item.frags.forEach((fid) => {\n      const fragBox = render.ctab.frags\n        .get(fid)\n        .calcBBox(render.ctab, fid, render);\n      if (fragBox) {\n        rGroupBoundingBox = rGroupBoundingBox\n          ? Box2Abs.union(rGroupBoundingBox, fragBox)\n          : fragBox;\n      }\n    });\n\n    const rGroupAttachmentPointsVBox =\n      render.ctab.getRGroupAttachmentPointsVBoxByAtomIds(this.getAtoms(render));\n    if (rGroupBoundingBox && rGroupAttachmentPointsVBox) {\n      rGroupBoundingBox = Box2Abs.union(\n        rGroupBoundingBox,\n        rGroupAttachmentPointsVBox,\n      );\n    }\n\n    rGroupBoundingBox = rGroupBoundingBox\n      ? rGroupBoundingBox.extend(BORDER_EXT, BORDER_EXT)\n      : rGroupBoundingBox;\n\n    return rGroupBoundingBox;\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    let bb = this.calcBBox(render);\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools',\n      );\n      return {};\n    } else {\n      // add a little space between the attachment points and brackets\n      bb = bb.extend(PADDING_VECTOR, PADDING_VECTOR);\n    }\n\n    const ret = { data: [] };\n    const p0 = Scale.modelToCanvas(bb.p0, options);\n    const p1 = Scale.modelToCanvas(bb.p1, options);\n    const brackets = render.paper.set();\n\n    rGroupdrawBrackets(brackets, render, bb); // eslint-disable-line new-cap\n\n    ret.data.push(brackets);\n    const key = render.ctab.rgroups.keyOf(this);\n    const labelSet = render.paper.set();\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black',\n      });\n\n    const labelBox = util.relBox(label.getBBox());\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0);\n\n    labelSet.push(label);\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black',\n    };\n\n    const logic = [rLogicToString(key, this.item)];\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2;\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle);\n      const logicBox = util.relBox(logicPath.getBBox());\n      shift += logicBox.height / 2;\n      logicPath.translateAbs(\n        -logicBox.width / 2 - 6 * options.lineWidth,\n        shift,\n      );\n      shift += logicBox.height / 2 + options.lineWidth / 2;\n      ret.data.push(logicPath);\n      labelSet.push(logicPath);\n    }\n\n    ret.data.push(label);\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.canvasToModel,\n      render.options,\n    );\n    return ret;\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null;\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT); // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null;\n\n    const p0 = Scale.modelToCanvas(bb.p0, render.options);\n    const p1 = Scale.modelToCanvas(bb.p1, render.options);\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs);\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this);\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render',\n      );\n      return null;\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */,\n    ); // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render);\n    });\n\n    return ret;\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options);\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true,\n        );\n      }\n    });\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.modelToCanvas(d || new Vec2(1, 0), render.options);\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3);\n  const bracketHeight = bb.p1.y - bb.p0.y;\n  const cy = 0.5 * (bb.p1.y + bb.p0.y);\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.modelToCanvas(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options,\n  );\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.modelToCanvas(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options,\n  );\n\n  return set.push(leftBracket, rightBracket);\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : '';\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=');\n\n  let range = null;\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range;\n  } else range = '>0';\n\n  const restH = rLogic.resth ? ' (RestH)' : '';\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : '';\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`;\n}\n\nexport default ReRGroup;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport Raphael from '../raphael-ext';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\n\ntype Arrow = {\n  pos: Array<Vec2>;\n  mode: RxnArrowMode;\n  height?: number;\n};\n\ntype ArrowParams = {\n  length: number;\n  angle: number;\n};\ninterface MinDistanceWithReferencePoint {\n  minDist: number;\n  refPoint: Vec2 | null;\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow;\n  isResizing = false;\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow');\n    this.item = arrow;\n  }\n\n  static isSelectable(): boolean {\n    return true;\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y);\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p);\n    const item = this.item;\n    const pos = item.pos;\n\n    let dist: number = point.calculateDistanceToLine([pos[0], pos[1]]);\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints();\n      dist = Math.min(\n        dist,\n        point.calculateDistanceToLine([startPoint, middlePoint]),\n        point.calculateDistanceToLine([middlePoint, endPoint]),\n      );\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null;\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist);\n    return { minDist: dist, refPoint };\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = [];\n    const refPoints = this.getReferencePoints();\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\n    });\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null,\n    );\n\n    return minDist;\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection');\n\n    return render.paper.path(path);\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = [];\n    const item = this.item;\n    const [a, b] = item.pos;\n    const height = item.height;\n    refPoints.push(new Vec2(a.x, a.y));\n    refPoints.push(new Vec2(b.x, b.y));\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b);\n      refPoints.push(middlePoint);\n    }\n    return refPoints;\n  }\n\n  makeAdditionalInfo(restruct: ReStruct) {\n    const scaleFactor = restruct.render.options.microModeScale;\n    const refPoints = this.getReferencePoints();\n    const selectionSet = restruct.render.paper.set();\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.modelToCanvas(rp, restruct.render.options);\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' }),\n      );\n    });\n\n    return selectionSet;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render;\n    const options = restruct.render.options;\n    const selectionSet = restruct.render.paper.set();\n\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle),\n    );\n    return selectionSet;\n  }\n\n  generatePath(render: Render, options, type) {\n    let path;\n    const item = this.item;\n    const height =\n      RxnArrow.isElliptical(item) && item.height\n        ? item.height * options.microModeScale\n        : 0;\n    const pos = item.pos.map((p) => {\n      return Scale.modelToCanvas(p, options) || new Vec2();\n    });\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y,\n    );\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n        );\n        break;\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options,\n          this.isResizing,\n        );\n        break;\n    }\n\n    return path;\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1);\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180;\n\n    return { length, angle };\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow');\n\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\n\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x);\n    const minY = Math.min(a.y, b.y);\n    const x = minX + Math.abs(a.x - b.x) / 2;\n    const y = minY + Math.abs(a.y - b.y) / 2;\n    return new Vec2(x, y);\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y);\n  const lengthHyp = Math.hypot(length / 2, height);\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1;\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2;\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y);\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y);\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y);\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y);\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y);\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y);\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y);\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y);\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y);\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y);\n      }\n    }\n  }\n  return new Vec2(a.x, a.y);\n}\n\nexport default ReRxnArrow;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities';\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus');\n    this.item = plus;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render) {\n    const p = Scale.modelToCanvas(this.item.pp, render.options);\n    const s = render.options.microModeScale;\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8);\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle);\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render;\n    const centre = Scale.modelToCanvas(this.item.pp, options);\n    const path = draw.plus(render.paper, centre, options);\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\n\nexport default ReRxnPlus;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData');\n    this.sgroup = sgroup;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea;\n    const p0 = Scale.modelToCanvas(box.p0, render.options);\n    const sz = Scale.modelToCanvas(box.p1, render.options).sub(p0);\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y);\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle);\n  }\n}\n\nexport default ReDataSGroupData;\n","import { Vec2 } from 'domain/entities';\n\nexport default class BracketParams {\n  center: Vec2;\n  bracketAngleDirection: Vec2;\n  bracketDirection: Vec2;\n  width: number;\n  height: number;\n  constructor(\n    center: Vec2,\n    bracketAngleDirection: Vec2,\n    width: number,\n    height: number,\n    bracketDirection?: Vec2,\n  ) {\n    this.center = center;\n    this.bracketAngleDirection = bracketAngleDirection;\n    this.bracketDirection =\n      bracketDirection || bracketAngleDirection.rotateSC(1, 0);\n    this.width = width;\n    this.height = height;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  SGroup,\n  Vec2,\n  Struct,\n} from 'domain/entities';\nimport { SgContexts } from 'application/editor/shared/constants';\nimport ReDataSGroupData from './redatasgroupdata';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\nimport BracketParams from '../bracket-params';\nimport { RaphaelPaper } from 'raphael';\nimport { RenderOptions } from '../render.types';\ninterface SGroupdrawBracketsOptions {\n  set: any;\n  render: Render;\n  sgroup: SGroup;\n  crossBonds: { [key: number]: Array<number> };\n  atomSet: Pile;\n  bracketBox: Box2Abs;\n  direction: Vec2;\n  lowerIndexText?: string | null;\n  upperIndexText?: string | null;\n  indexAttribute?: object;\n}\n\nclass ReSGroup extends ReObject {\n  public item: SGroup | undefined;\n  public render!: Render;\n\n  constructor(sgroup: SGroup) {\n    super('sgroup');\n    /** @type {SGroup} */\n    this.item = sgroup;\n  }\n\n  static isSelectable(): boolean {\n    return false;\n  }\n\n  /**\n   * @param remol {ReStruct}\n   * @param sgroup {SGroup}\n   * @returns {*}\n   */\n  draw(remol: ReStruct, sgroup: SGroup): any {\n    this.render = remol.render;\n    let set = this.render.paper.set();\n    const atomSet = new Pile(sgroup.atoms);\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet);\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds, remol, this.render);\n    const bracketBox = sgroup.bracketBox;\n    const direction = sgroup.bracketDirection;\n    sgroup.areas = [bracketBox];\n    if (sgroup.isExpanded()) {\n      const SGroupdrawBracketsOptions: SGroupdrawBracketsOptions = {\n        set,\n        render: this.render,\n        sgroup,\n        crossBonds,\n        atomSet,\n        bracketBox,\n        direction,\n      };\n      switch (sgroup.type) {\n        case 'MUL': {\n          SGroupdrawBracketsOptions.lowerIndexText = sgroup.data.mul;\n          break;\n        }\n        case 'queryComponent': {\n          break;\n        }\n        case 'SRU': {\n          const connectivity: string = sgroup.data.connectivity || 'eu';\n          const subscript = sgroup.data.subscript || 'n';\n          SGroupdrawBracketsOptions.lowerIndexText = subscript;\n          SGroupdrawBracketsOptions.upperIndexText = connectivity.toUpperCase();\n          break;\n        }\n        case 'SUP': {\n          SGroupdrawBracketsOptions.lowerIndexText = sgroup.data.name;\n          SGroupdrawBracketsOptions.upperIndexText = null;\n          SGroupdrawBracketsOptions.indexAttribute = { 'font-style': 'italic' };\n          break;\n        }\n        case 'GEN': {\n          break;\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup);\n          break;\n        }\n        default:\n          break;\n      }\n\n      // DAT S-Groups do not have brackets\n      const sgroupTypesWithBrackets = [\n        'MUL',\n        'SRU',\n        'SUP',\n        'GEN',\n        'queryComponent',\n      ];\n      if (\n        sgroupTypesWithBrackets.includes(sgroup.type) &&\n        !sgroup.isSuperatomWithoutLabel\n      ) {\n        SGroupdrawBrackets(SGroupdrawBracketsOptions);\n      }\n    }\n    return set;\n  }\n\n  getTextHighlightDimensions(\n    padding = 0,\n    render: Render,\n  ): { startX: number; startY: number; width: number; height: number } {\n    let startX = 0;\n    let startY = 0;\n    let width = 0;\n    let height = 0;\n    const sGroup = this.item;\n    if (sGroup) {\n      const { atomId, position } = sGroup.getContractedPosition(\n        render.ctab.molecule,\n      );\n      if (sGroup?.isContracted() && position) {\n        const reSGroupAtom = render.ctab.atoms.get(atomId);\n        const sGroupTextBoundingBox =\n          reSGroupAtom?.visel.boundingBox || reSGroupAtom?.visel.oldBoundingBox;\n        if (sGroupTextBoundingBox) {\n          const { x, y } = Scale.modelToCanvas(position, render.options);\n          const { p0, p1 } = sGroupTextBoundingBox;\n          width = p1.x - p0.x + padding * 2;\n          height = p1.y - p0.y + padding * 2;\n          startX = x - width / 2;\n          startY = y - height / 2;\n        }\n      }\n    }\n\n    return { startX, startY, width, height };\n  }\n\n  getContractedSelectionContour(render: Render): any {\n    const { paper, options } = render;\n    const { fontsz, radiusScaleFactor } = options;\n    const radius = fontsz * radiusScaleFactor * 2;\n    const { startX, startY, width, height } = this.getTextHighlightDimensions(\n      fontsz / 2,\n      render,\n    );\n    return paper.rect(startX, startY, width, height, radius);\n  }\n\n  makeSelectionPlate(\n    restruct: ReStruct,\n    _paper: RaphaelPaper,\n    options: any,\n  ): any | void {\n    const sgroup = this.item;\n    const functionalGroups = restruct.molecule.functionalGroups;\n    const render = restruct.render;\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup?.id, functionalGroups)\n    ) {\n      return this.getContractedSelectionContour(render).attr(\n        options.selectionStyle,\n      );\n    }\n  }\n\n  drawHover(render: Render): void {\n    // eslint-disable-line max-statements\n    const options = render.options;\n    const paper = render.paper;\n    const sGroupItem = this.item;\n    if (sGroupItem) {\n      const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, render);\n      const functionalGroups = render.ctab.molecule.functionalGroups;\n      const set = paper.set();\n      if (\n        FunctionalGroup.isContractedFunctionalGroup(\n          sGroupItem.id,\n          functionalGroups,\n        )\n      ) {\n        sGroupItem.hovering = this.getContractedSelectionContour(render).attr(\n          options.hoverStyle,\n        );\n      } else if (!this.selected) {\n        sGroupItem.hovering = paper\n          .path(\n            'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(a0.x),\n            tfx(a0.y),\n            tfx(a1.x),\n            tfx(a1.y),\n            tfx(b1.x),\n            tfx(b1.y),\n            tfx(b0.x),\n            tfx(b0.y),\n          )\n          .attr(options.hoverStyle);\n      }\n      set.push(sGroupItem.hovering);\n\n      SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        set.push(render?.ctab?.atoms?.get(aid)?.makeHoverPlate(render));\n      }, this);\n      SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        set.push(render?.ctab?.bonds?.get(bid)?.makeHoverPlate(render));\n      }, this);\n      render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set);\n    }\n  }\n\n  show(restruct: ReStruct): void {\n    const render = restruct.render;\n    const sgroup = this.item;\n    if (sgroup && sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab;\n      const path = this.draw(remol, sgroup);\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true);\n      this.setHover(this.hover, render); // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets({\n  set,\n  render,\n  sgroup,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  direction,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute,\n}: SGroupdrawBracketsOptions): void {\n  const attachmentPoints = [...atomSet].reduce((arr, atomId) => {\n    const rgroupAttachmentPointIds =\n      render.ctab.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n    return [...arr, ...rgroupAttachmentPointIds];\n  }, []);\n  const crossBondsPerAtom = Object.values(crossBonds);\n  const crossBondsValues = crossBondsPerAtom.flat();\n  const brackets = getBracketParameters(\n    atomSet,\n    crossBondsPerAtom,\n    crossBondsValues,\n    attachmentPoints,\n    bracketBox,\n    direction,\n    render,\n    sgroup.id,\n  );\n  let rightBracketIndex = -1;\n  const isBracketContainAttachment =\n    crossBondsValues.length === 2 &&\n    crossBondsPerAtom.length === 1 &&\n    !!attachmentPoints.length;\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i];\n    const path = draw.bracket(\n      render.paper,\n      Scale.modelToCanvas(bracket.bracketAngleDirection, render.options),\n      Scale.modelToCanvas(bracket.bracketDirection, render.options),\n      Scale.modelToCanvas(bracket.center, render.options),\n      bracket.width,\n      bracket.height,\n      render.options,\n      isBracketContainAttachment,\n    );\n    set.push(path);\n    if (\n      rightBracketIndex < 0 ||\n      brackets[rightBracketIndex].bracketAngleDirection.x <\n        bracket.bracketAngleDirection.x ||\n      (brackets[rightBracketIndex].bracketAngleDirection.x ===\n        bracket.bracketAngleDirection.x &&\n        brackets[rightBracketIndex].bracketAngleDirection.y >\n          bracket.bracketAngleDirection.y)\n    ) {\n      rightBracketIndex = i;\n    }\n  }\n  const bracketR = brackets[rightBracketIndex];\n  function renderIndex(text: string, isLowerText = false): void {\n    let path: Vec2;\n    let lowerPath: Vec2;\n    const bracketPoint1 = new Vec2(\n      set[rightBracketIndex].getPath()[1][1],\n      set[rightBracketIndex].getPath()[1][2],\n      0,\n    );\n    const bracketPoint2 = new Vec2(\n      set[rightBracketIndex].getPath()[2][1],\n      set[rightBracketIndex].getPath()[2][2],\n      0,\n    );\n    if (bracketPoint2.y === bracketPoint1.y) {\n      lowerPath =\n        bracketPoint2.x > bracketPoint1.x ? bracketPoint1 : bracketPoint2;\n    } else {\n      lowerPath =\n        bracketPoint2.y > bracketPoint1.y ? bracketPoint2 : bracketPoint1;\n    }\n    if (isLowerText) {\n      path = lowerPath;\n    } else {\n      path =\n        lowerPath.x === bracketPoint1.x && lowerPath.y === bracketPoint1.y\n          ? bracketPoint2\n          : bracketPoint1;\n    }\n\n    const indexPos = new Vec2(path.x, path.y);\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub,\n    });\n    if (indexAttribute) indexPath.attr(indexAttribute);\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()));\n    const t =\n      Math.max(\n        util.shiftRayBox(\n          indexPos,\n          bracketR.bracketAngleDirection.negated(),\n          indexBox,\n        ),\n        3,\n      ) + 2;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    indexPath.translateAbs(\n      t * bracketR.bracketAngleDirection.x,\n      t * bracketR.bracketAngleDirection.y,\n    );\n    set.push(indexPath);\n  }\n  if (lowerIndexText) {\n    renderIndex(lowerIndexText, true);\n  }\n  if (upperIndexText) renderIndex(upperIndexText);\n}\n\nfunction showValue(\n  paper: RaphaelPaper,\n  pos: Vec2 | undefined,\n  sgroup: SGroup,\n  options: RenderOptions,\n): any {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  const text = paper.text(pos?.x, pos?.y, sgroup.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n  });\n  const box = text.getBBox();\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: raphael typing issues\n    3,\n  );\n  rect = sgroup.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' });\n  const set = paper.set();\n  set.push(rect, text.toFront());\n  return set;\n}\n\nfunction drawGroupDat(restruct: ReStruct, sgroup: SGroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule);\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : [];\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule);\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup);\n}\n\nfunction drawAbsoluteDat(restruct: ReStruct, sgroup: SGroup): any {\n  const render = restruct.render;\n  const options = render.options;\n  const paper = render.paper;\n  const set = paper.set();\n\n  const ps = sgroup?.pp?.scaled(options.microModeScale);\n  const name = showValue(paper, ps, sgroup, options);\n\n  if (sgroup.data.context !== SgContexts.Bond) {\n    const box = util.relBox(name.getBBox());\n    name.translateAbs(0.5 * box.width, -0.5 * box.height);\n  }\n\n  set.push(name);\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()));\n  sgroup.dataArea = sbox.transform(Scale.canvasToModel, render.options);\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup));\n  }\n\n  return set;\n}\n\nfunction drawAttachedDat(restruct: ReStruct, sgroup: SGroup): any {\n  const render = restruct.render;\n  const options = render.options;\n  const paper = render.paper;\n  const set = paper.set();\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid);\n    if (atom) {\n      const p = Scale.modelToCanvas(atom.a.pp, options);\n      const bb = atom.visel.boundingBox;\n      if (bb !== null) p.x = Math.max(p.x, bb.p1.x);\n      p.x += options.lineWidth; // shift a bit to the right\n      const nameI = showValue(paper, p, sgroup, options);\n      const boxI = util.relBox(nameI.getBBox());\n      nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height);\n      set.push(nameI);\n      let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()));\n      sboxI = sboxI.transform(Scale.canvasToModel, render.options);\n      sgroup.areas.push(sboxI);\n    }\n  });\n\n  return set;\n}\n\nfunction getBracketParameters(\n  atomSet: Pile,\n  crossBondsPerAtom: Array<Array<number>>,\n  crossBondsValues: Array<number>,\n  attachmentPoints: number[],\n  bracketBox: Box2Abs,\n  direction: Vec2,\n  render: Render,\n  id: number,\n) {\n  const mol = render.ctab.molecule;\n  const brackets: BracketParams[] = [];\n  const bracketDirection = direction.rotateSC(1, 0);\n\n  if (crossBondsValues.length < 2) {\n    getBracketParamersWithCrossBondsLessThan2(\n      direction,\n      bracketDirection,\n      bracketBox,\n      brackets,\n    );\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    getBracketParamersWithCrossBondsEquals2(\n      mol,\n      crossBondsValues,\n      id,\n      render,\n      attachmentPoints,\n      brackets,\n    );\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 1) {\n    getBracketParamersWithCrossBondsMoreThan2OnOneAtom(\n      crossBondsValues as [number, number],\n      mol,\n      attachmentPoints,\n      render,\n      brackets,\n    );\n  } else {\n    for (let i = 0; i < crossBondsValues.length; ++i) {\n      const bond = mol.bonds.get(Number(crossBondsValues[i]));\n      const center = bond?.getCenter(mol);\n      const direction = atomSet.has(bond?.begin)\n        ? bond?.getDir(mol)\n        : bond?.getDir(mol).negated();\n      if (center && direction) {\n        brackets.push(\n          new BracketParams(center, direction, 0.2, bracketBox.sz().y),\n        );\n      }\n    }\n  }\n  return brackets;\n}\n\nfunction getBracketParamersWithCrossBondsMoreThan2OnOneAtom(\n  crossBondsValues: [number, number],\n  mol: Struct,\n  attachmentPoints: number[],\n  render: Render,\n  brackets: BracketParams[],\n) {\n  let notTemplateShapeFirstAtom = false;\n  const bondDirections: Vec2[] = crossBondsValues.map((value) => {\n    const bond = mol.bonds.get(Number(value));\n    return bond?.getDir(mol) || new Vec2();\n  });\n  // if bonds direction is clockwise, then negated\n  const needNegated =\n    Vec2.crossProduct(bondDirections[0], bondDirections[1]) > 0;\n  notTemplateShapeFirstAtom =\n    Math.abs(Number(crossBondsValues[0]) - Number(crossBondsValues[1])) === 1;\n  if (notTemplateShapeFirstAtom && !needNegated) {\n    crossBondsValues.reverse();\n  }\n\n  for (let i = 0; i < crossBondsValues.length; ++i) {\n    const bond = mol.bonds.get(Number(crossBondsValues[i]));\n    let bondDirection = bond?.getDir(mol) || new Vec2();\n    let bracketDirection: Vec2;\n    let bracketAngleDirection: Vec2;\n    let attachmentDirection: Vec2;\n    if (attachmentPoints.length !== 2) {\n      if (needNegated && notTemplateShapeFirstAtom) {\n        bondDirection = bondDirection.negated();\n      }\n      bondDirection = i === 0 ? bondDirection : bondDirection.negated();\n      bracketDirection =\n        i === 0\n          ? bondDirection.rotateSC(1, 0).negated()\n          : bondDirection.rotateSC(1, 0);\n      bracketAngleDirection = bondDirection;\n    } else {\n      attachmentPoints = attachmentPoints.sort(\n        (point1, point2) => point1 - point2,\n      );\n      // if there are 2 attachment points then make brackets parallel to attachments\n      attachmentDirection =\n        render.ctab.rgroupAttachmentPoints.get(attachmentPoints[i])\n          ?.lineDirectionVector || new Vec2();\n      bracketDirection = attachmentDirection.negated();\n      bracketAngleDirection =\n        i === 0\n          ? bracketDirection.rotateSC(1, 0)\n          : bracketDirection.rotateSC(1, 0).negated();\n    }\n    brackets.push(\n      new BracketParams(\n        bond?.getCenter(mol) || new Vec2(),\n        bracketAngleDirection,\n        0.2,\n        attachmentPoints.length ? 1.8 : 1.0,\n        bracketDirection,\n      ),\n    );\n  }\n  return { crossBondsValues, attachmentPoints };\n}\n\nfunction getBracketParamersWithCrossBondsEquals2(\n  mol: Struct,\n  crossBondsValues: number[],\n  id: number,\n  render: Render,\n  attachmentPoints: number[],\n  brackets: BracketParams[],\n) {\n  const bond1 = mol.bonds.get(Number(crossBondsValues[0]));\n  const bond2 = mol.bonds.get(Number(crossBondsValues[1]));\n  if (bond1 && bond2) {\n    const leftCenter = bond1.getCenter(mol);\n    const rightCenter = bond2.getCenter(mol);\n    let leftShift = -1;\n    let rightShift = -1;\n    let bracketShift = -1;\n    let bracketShiftNegated = -1;\n    const centerConnection = Vec2.centre(leftCenter, rightCenter);\n    const rightDirection = Vec2.diff(rightCenter, leftCenter).normalized();\n    const leftDirection = rightDirection.negated();\n    const bracketDirection = rightDirection.rotateSC(1, 0);\n    const bracketDirectionNegated = bracketDirection.negated();\n\n    mol?.sGroupForest?.children?.get(id)?.forEach((sgid) => {\n      let boundingBox = render?.ctab?.sgroups?.get(sgid)?.visel.boundingBox;\n      boundingBox =\n        boundingBox\n          ?.translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.canvasToModel, render.options) || new Box2Abs();\n      leftShift = Math.max(\n        leftShift,\n        util.shiftRayBox(leftCenter, leftDirection, boundingBox),\n      );\n      rightShift = Math.max(\n        rightShift,\n        util.shiftRayBox(rightCenter, rightDirection, boundingBox),\n      );\n      bracketShift = Math.max(\n        bracketShift,\n        util.shiftRayBox(centerConnection, bracketDirection, boundingBox),\n      );\n      bracketShiftNegated = Math.max(\n        bracketShiftNegated,\n        util.shiftRayBox(\n          centerConnection,\n          bracketDirectionNegated,\n          boundingBox,\n        ),\n      );\n    });\n    leftShift = Math.max(leftShift + 0.2, 0);\n    rightShift = Math.max(rightShift + 0.2, 0);\n    bracketShift = Math.max(\n      Math.max(bracketShift, bracketShiftNegated) + 0.1,\n      0,\n    );\n    const bracketWidth = 0.25;\n    let bracketHeight = 1.5 + bracketShift;\n    if (attachmentPoints.length) {\n      bracketHeight = 2 + 2 * Math.sin(Math.PI / 6) + bracketShift;\n    }\n    brackets.push(\n      new BracketParams(\n        leftCenter.addScaled(leftDirection, leftShift),\n        leftDirection,\n        bracketWidth,\n        bracketHeight,\n      ),\n      new BracketParams(\n        rightCenter.addScaled(rightDirection, rightShift),\n        rightDirection,\n        bracketWidth,\n        bracketHeight,\n      ),\n    );\n  }\n}\n\nfunction getBracketParamersWithCrossBondsLessThan2(\n  direction: Vec2,\n  bracketDirection: Vec2,\n  bracketBox: Box2Abs,\n  brackets: BracketParams[],\n) {\n  direction = direction || new Vec2(1, 0);\n  bracketDirection = bracketDirection || direction.rotateSC(1, 0);\n  const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3);\n  const leftCenter = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    0.5 * (bracketBox.p0.y + bracketBox.p1.y),\n  );\n  const rightCenter = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    0.5 * (bracketBox.p0.y + bracketBox.p1.y),\n  );\n  const bracketHeight = bracketBox.sz().y;\n\n  brackets.push(\n    new BracketParams(\n      leftCenter,\n      direction.negated(),\n      bracketWidth,\n      bracketHeight,\n    ),\n    new BracketParams(rightCenter, direction, bracketWidth, bracketHeight),\n  );\n}\n\n/**\n * @param sgroup {SGroup}\n * @param render {Render}\n * @returns {{a1: Vec2, size: number | number, startY: number, startX: number, b0: Vec2, a0: Vec2, b1: Vec2}}\n */\nfunction getHighlighPathInfo(\n  sgroup: SGroup,\n  render: Render,\n): {\n  a0: Vec2;\n  a1: Vec2;\n  b0: Vec2;\n  b1: Vec2;\n  startX: number;\n  startY: number;\n  size: number;\n} {\n  const options = render.options;\n  let bracketBox = sgroup.bracketBox.transform(Scale.modelToCanvas, options);\n  const lineWidth = options.lineWidth;\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6);\n  bracketBox = bracketBox.extend(vext, vext);\n  const direction = sgroup.bracketDirection;\n  const bracketDirection = direction.rotateSC(1, 0);\n  const a0 = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    bracketBox.p0.y,\n  );\n  const a1 = Vec2.lc2(\n    direction,\n    bracketBox.p0.x,\n    bracketDirection,\n    bracketBox.p1.y,\n  );\n  const b0 = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    bracketBox.p0.y,\n  );\n  const b1 = Vec2.lc2(\n    direction,\n    bracketBox.p1.x,\n    bracketDirection,\n    bracketBox.p1.y,\n  );\n  const size = options.contractedFunctionalGroupSize;\n  let startX = (b0.x + a0.x) / 2 - size / 2;\n  let startY = (a1.y + a0.y) / 2 - size / 2;\n  const { position: contractedPosition } = sgroup.getContractedPosition(\n    render.ctab.molecule,\n  );\n  if (contractedPosition) {\n    const shift = new Vec2(size / 2, size / 2, 0);\n    const hoverPp = Vec2.diff(contractedPosition.scaled(40), shift);\n    startX = hoverPp.x;\n    startY = hoverPp.y;\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size,\n  };\n}\n\nexport default ReSGroup;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\nimport draw from '../draw';\nimport util from '../util';\nimport { tfx } from 'utilities';\n\ninterface MinDistanceWithReferencePoint {\n  minDist: number;\n  refPoint: Vec2 | null;\n}\ninterface StyledPath {\n  path: any;\n  stylesApplied: boolean;\n}\nclass ReSimpleObject extends ReObject {\n  private item: any;\n  private selectionSet: any;\n  private selectionPointsSet: any;\n\n  constructor(simpleObject: any) {\n    super('simpleObject');\n    this.item = simpleObject;\n  }\n\n  static isSelectable(): boolean {\n    return true;\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y);\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p);\n    const item = this.item;\n    const mode = item.mode;\n    const pos = item.pos;\n    let dist: number;\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0]);\n        const rx = rad.x / 2;\n        const ry = rad.y / 2;\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry));\n        const pointToCenter = Vec2.diff(point, center);\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry),\n          );\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = point.calculateDistanceToLine([pos[0], pos[1]]);\n        }\n        break;\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x);\n        const topY = Math.min(pos[0].y, pos[1].y);\n        const bottomX = Math.max(pos[0].x, pos[1].x);\n        const bottomY = Math.max(pos[0].y, pos[1].y);\n\n        const distances: Array<number> = [];\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y);\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY);\n          } else {\n            distances.push(point.y - topY, bottomY - point.y);\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point));\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point));\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point));\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point));\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x);\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX);\n          } else {\n            distances.push(point.x - topX, bottomX - point.x);\n          }\n        }\n        dist = Math.min(...distances);\n        break;\n      }\n      case SimpleObjectMode.line: {\n        dist = point.calculateDistanceToLine([pos[0], pos[1]]);\n        break;\n      }\n\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null;\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist);\n    return { minDist: dist, refPoint };\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = [];\n    const refPoints = this.getReferencePoints();\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\n    });\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null,\n    );\n\n    return minDist;\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = [];\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y),\n        );\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x);\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y);\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h),\n        );\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y),\n          );\n        }\n        break;\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)));\n        break;\n      }\n\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n    return refPoints;\n  }\n\n  getHoverPathStyle(\n    path: any,\n    render: Render,\n    isOuterShapeOfHoverPath: boolean,\n  ) {\n    if (isOuterShapeOfHoverPath) {\n      return path.attr(render.options.hoverStyle);\n    } else {\n      return path.attr({ ...render.options.hoverStyle, fill: '#fff' });\n    }\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = [];\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.modelToCanvas(p, render.options);\n    });\n    const scaleFactor = render.options.microModeScale;\n\n    const paths: Array<StyledPath> = [];\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0]);\n        const rx = rad.x / 2;\n        const ry = rad.y / 2;\n        const outerEllipse = render.paper.ellipse(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          tfx(point[0].x + rx),\n          tfx(point[0].y + ry),\n          tfx(Math.abs(rx) + scaleFactor / 8),\n          tfx(Math.abs(ry) + scaleFactor / 8),\n        );\n        paths.push({\n          path: this.getHoverPathStyle(outerEllipse, render, true),\n          stylesApplied: true,\n        });\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          const innerEllipse = render.paper.ellipse(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) - scaleFactor / 8),\n            tfx(Math.abs(ry) - scaleFactor / 8),\n          );\n          paths.push({\n            path: this.getHoverPathStyle(innerEllipse, render, false),\n            stylesApplied: true,\n          });\n        }\n        break;\n      }\n\n      case SimpleObjectMode.rectangle: {\n        const outerRect = render.paper.rect(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n          tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n          tfx(\n            Math.max(point[0].x, point[1].x) -\n              Math.min(point[0].x, point[1].x) +\n              scaleFactor / 4,\n          ),\n          tfx(\n            Math.max(point[0].y, point[1].y) -\n              Math.min(point[0].y, point[1].y) +\n              scaleFactor / 4,\n          ),\n        );\n        paths.push({\n          path: this.getHoverPathStyle(outerRect, render, true),\n          stylesApplied: true,\n        });\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          const innerRect = render.paper.rect(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: raphael typing issues\n            tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) -\n                scaleFactor / 4,\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) -\n                scaleFactor / 4,\n            ),\n          );\n          paths.push({\n            path: this.getHoverPathStyle(innerRect, render, false),\n            stylesApplied: true,\n          });\n        }\n\n        break;\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = [];\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x),\n        );\n\n        const p0 = { x: 0, y: 0 };\n        const p1 = { x: 0, y: 0 };\n\n        const k = point[0].x > point[1].x ? -1 : 1;\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle));\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle));\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle));\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle));\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle),\n        );\n        paths.push({\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore: raphael typing issues\n          path: this.getHoverPathStyle(render.paper.path(poly), render, true),\n          stylesApplied: true,\n        });\n        break;\n      }\n      default: {\n        throw new Error('Unsupported shape type');\n      }\n    }\n\n    return paths;\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle);\n      }\n      return enhPath.path;\n    });\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths);\n    return paths;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.modelToCanvas(p, restruct.render.options) || new Vec2();\n    });\n\n    const refPoints = this.getReferencePoints();\n    const scaleFactor = restruct.render.options.microModeScale;\n    this.selectionSet = restruct.render.paper.set();\n    this.selectionPointsSet = restruct.render.paper.set();\n    this.selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.selectionStyleSimpleObject,\n      ),\n    );\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.modelToCanvas(rp, restruct.render.options);\n      this.selectionPointsSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' }),\n      );\n    });\n    restruct.addReObjectPath(\n      LayerMap.selectionPlate,\n      this.visel,\n      this.selectionPointsSet,\n    );\n    return this.selectionSet;\n  }\n\n  togglePoints(displayFlag: boolean) {\n    displayFlag\n      ? this.selectionPointsSet?.show()\n      : this.selectionPointsSet?.hide();\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render;\n    const pos = this.item.pos.map((p) => {\n      return Scale.modelToCanvas(p, options) || new Vec2();\n    });\n\n    const path = generatePath(this.item.mode, render.paper, pos);\n\n    const offset = options.offset;\n    if (offset != null) path.translateAbs(offset.x, offset.y);\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\n  }\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: [Vec2, Vec2]): any {\n  let path: any;\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos);\n      break;\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos);\n      break;\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos);\n      break;\n    }\n    default: {\n      throw new Error('Unsupported shape type');\n    }\n  }\n\n  return path;\n}\n\nexport default ReSimpleObject;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop');\n    this.loop = loop;\n    this.centre = new Vec2();\n    this.radius = new Vec2();\n  }\n\n  static isSelectable() {\n    return false;\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render;\n    const paper = render.paper;\n    const molecule = restruct.molecule;\n    const loop = this.loop;\n    this.centre = new Vec2();\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid);\n      const bond = restruct.bonds.get(hb.bid);\n      const apos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.begin).a.pp,\n        options,\n      );\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false;\n      this.centre.add_(apos); // eslint-disable-line no-underscore-dangle\n    });\n    loop.convex = true;\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k]);\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir),\n      );\n      if (angle > 0) loop.convex = false;\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length);\n    this.radius = -1;\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid);\n      const apos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.begin).a.pp,\n        options,\n      );\n      const bpos = Scale.modelToCanvas(\n        restruct.atoms.get(hb.end).a.pp,\n        options,\n      );\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized();\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n);\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist);\n    });\n    this.radius *= 0.7;\n    if (!loop.aromatic) return;\n    let path = null;\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n      });\n    } else {\n      let pathStr = '';\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k]);\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length]);\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir),\n        );\n        const halfAngle = (Math.PI - angle) / 2;\n        const dir = hbb.dir.rotate(halfAngle);\n        const pi = Scale.modelToCanvas(\n          restruct.atoms.get(hbb.begin).a.pp,\n          options,\n        );\n        let sin = Math.sin(halfAngle);\n        const minSin = 0.1;\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin);\n        const offset = options.bondSpace / sin;\n        const qi = pi.addScaled(dir, -offset);\n        pathStr += k === 0 ? 'M' : 'L';\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y);\n      }\n      pathStr += 'Z';\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- ',\n      });\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true);\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds;\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid,\n    );\n  }\n}\n\nexport default ReLoop;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange,\n} from 'draft-js';\nimport { Box2Abs, Text, TextCommand, Vec2 } from 'domain/entities';\nimport { flatten, isEqual } from 'lodash/fp';\n\nimport { LayerMap } from './generalEnumTypes';\nimport ReObject from './reobject';\nimport ReStruct from './restruct';\nimport { Scale } from 'domain/helpers';\nimport { RaphaelBaseElement } from 'raphael';\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize;\n}\n\nconst SCALE = 40; // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text;\n  paths: Array<Array<RaphaelBaseElement>> = [];\n\n  constructor(text: Text) {\n    super('text');\n    this.item = text;\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return [];\n\n    const { p0, p1 } = this.getRelBox(this.paths);\n\n    const p = this.item.position;\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE;\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE;\n\n    const refPoints: Array<Vec2> = [];\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y),\n    );\n\n    return refPoints;\n  }\n\n  getVBoxObj(): Box2Abs {\n    const [leftTopPoint, _, rightBottomPoint] = this.getReferencePoints();\n    return new Box2Abs(leftTopPoint, rightBottomPoint);\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths);\n    const topLeft = p0.sub(render.options.offset);\n    const { x: width, y: height } = p1.sub(p0);\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5);\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0];\n    const leftEdge = firstElOfFirstRow.getBBox().x;\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0];\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y),\n    );\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0],\n    );\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1];\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width;\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1];\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height),\n    );\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge),\n    };\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width;\n      return rowWidth;\n    }, 0);\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null;\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\n    return ret;\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null;\n    return this.hoverPath(restruct.render).attr(options.selectionStyle);\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render;\n    const paper = render.paper;\n    const paperScale = Scale.modelToCanvas(this.item.position!, options);\n\n    let shiftY = 0;\n    this.paths = [];\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null;\n    if (!rawContentState) {\n      return;\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options);\n      let shiftX = 0;\n      const row: Array<RaphaelBaseElement> = [];\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0');\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0',\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles,\n          });\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: raphael typing issues\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0));\n        row.push(path);\n        shiftX += path.getBBox().width;\n      });\n\n      this.paths.push(row);\n\n      const { p0, p1 } = this.getRelBox([row]);\n      shiftY += Math.abs(Vec2.diff(p0, p1).y);\n    });\n\n    this.item.setPos(this.getReferencePoints());\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true,\n    );\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any,\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = [];\n\n    let start = 0;\n    let styles: Record<string, any> = this.getStyles(block, start, options);\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options);\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles]);\n        styles = nextStyles;\n        start = i;\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles]);\n\n    return ranges;\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any,\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length,\n    );\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0];\n        }\n        return acc;\n      },\n      null,\n    );\n\n    // Sort to apply font size styles first and then override it by subscript/superscript styles\n    ranges.sort((_, nextRange) => {\n      return nextRange.style.includes(TextCommand.FontSize) ? 1 : -1;\n    });\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz;\n        const fontszsub = (customFontSize || options.fontszsub) * 0.5;\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold';\n            break;\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic';\n            break;\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px';\n            styles.shiftY = fontsz / 4;\n\n            break;\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px';\n            styles.shiftY = -fontsz / 3;\n            break;\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px';\n            break;\n\n          default:\n        }\n\n        return styles;\n      },\n      {},\n    );\n  }\n}\n\nexport default ReText;\n","import { RaphaelPaper } from 'raphael';\nimport {\n  AttachmentPoints,\n  Bond,\n  RGroupAttachmentPoint,\n  RGroupAttachmentPointType,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { Scale } from 'domain/helpers';\nimport { ReAtom, ReObject, ReStruct } from '.';\nimport draw from '../draw';\nimport { Render } from '../raphaelRender';\nimport { RenderOptions } from '../render.types';\nimport { LayerMap } from './generalEnumTypes';\nimport Visel from './visel';\n\nclass ReRGroupAttachmentPoint extends ReObject {\n  item: RGroupAttachmentPoint;\n  reAtom: ReAtom;\n  lineDirectionVector: Vec2 = new Vec2();\n\n  static LINE_OUTLINE_WIDTH = 0.36;\n  static OUTLINE_PADDING = 0.15;\n  static CURVE_OUTLINE_WIDTH = 1.0;\n  static CURVE_OUTLINE_HEIGHT = 0.42;\n\n  constructor(item: RGroupAttachmentPoint, reAtom: ReAtom) {\n    super('rgroupAttachmentPoint');\n    this.item = item;\n    this.reAtom = reAtom;\n  }\n\n  get normalizedLineDirectionVector() {\n    return this.lineDirectionVector.normalized();\n  }\n\n  get normalizedCurveDirectionVector() {\n    return this.lineDirectionVector.rotate(Math.PI / 2).normalized();\n  }\n\n  get startPoint() {\n    return this.reAtom.a.pp;\n  }\n\n  get middlePoint() {\n    return this.outlineEndPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_HEIGHT,\n    );\n  }\n\n  get endPoint() {\n    return this.startPoint.add(this.lineDirectionVector);\n  }\n\n  get outlineEndPoint() {\n    const length =\n      this.lineDirectionVector.length() +\n      ReRGroupAttachmentPoint.OUTLINE_PADDING;\n    return this.startPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      length,\n    );\n  }\n\n  static isSelectable() {\n    return true;\n  }\n\n  getOutlinePoints() {\n    const topLeftPadPoint = this.outlineEndPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const topLeftPoint = topLeftPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const topRightPadPoint = this.outlineEndPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const topRightPoint = topRightPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleMostLeftPadPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const middleMostLeftPoint = middleMostLeftPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleMostRightPadPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.CURVE_OUTLINE_WIDTH / 2,\n    );\n    const middleMostRightPoint = middleMostRightPadPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const middleLeftPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const middleRightPoint = this.middlePoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomLeftPadPoint = this.startPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      -ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomLeftPoint = bottomLeftPadPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n    const bottomRightPadPoint = this.startPoint.addScaled(\n      this.normalizedCurveDirectionVector,\n      ReRGroupAttachmentPoint.LINE_OUTLINE_WIDTH / 2,\n    );\n    const bottomRightPoint = bottomRightPadPoint.addScaled(\n      this.normalizedLineDirectionVector,\n      ReRGroupAttachmentPoint.OUTLINE_PADDING,\n    );\n\n    return [\n      topLeftPadPoint,\n      topLeftPoint,\n      topRightPoint,\n      topRightPadPoint,\n      middleMostRightPadPoint,\n      middleMostRightPoint,\n      middleRightPoint,\n      bottomRightPoint,\n      bottomRightPadPoint,\n      bottomLeftPadPoint,\n      bottomLeftPoint,\n      middleLeftPoint,\n      middleMostLeftPoint,\n      middleMostLeftPadPoint,\n    ] as const;\n  }\n\n  getDistanceTo(destination: Vec2) {\n    return Vec2.dist(destination, this.middlePoint);\n  }\n\n  show(restruct: ReStruct) {\n    const directionVector = this.getAttachmentPointDirectionVector(\n      restruct.molecule,\n    );\n\n    if (!directionVector) {\n      return;\n    }\n    this.lineDirectionVector = directionVector;\n\n    showAttachmentPointShape(\n      this.reAtom,\n      restruct.render,\n      directionVector,\n      restruct.addReObjectPath.bind(restruct),\n      this.visel,\n    );\n\n    const showLabel = isAttachmentPointLabelRequired(restruct);\n    if (showLabel) {\n      // in case of isTrisectionRequired (trisection case) we should show labels '1' and '2' for those separated vectors\n      const labelText = this.item.type === 'primary' ? '1' : '2';\n      showAttachmentPointLabel(\n        this.reAtom,\n        restruct.render,\n        directionVector,\n        restruct.addReObjectPath.bind(restruct),\n        labelText,\n        this.visel,\n      );\n    }\n  }\n\n  private getHoverPlatePath(options: RenderOptions) {\n    const outlinePoints = this.getOutlinePoints();\n    const scaledOutlinePoints = outlinePoints.map((point) =>\n      Scale.modelToCanvas(point, options),\n    );\n    const [\n      topLeftPadPoint,\n      topLeftPoint,\n      topRightPoint,\n      topRightPadPoint,\n      middleMostRightPadPoint,\n      middleMostRightPoint,\n      middleRightPoint,\n      bottomRightPoint,\n      bottomRightPadPoint,\n      bottomLeftPadPoint,\n      bottomLeftPoint,\n      middleLeftPoint,\n      middleMostLeftPoint,\n      middleMostLeftPadPoint,\n    ] = scaledOutlinePoints;\n\n    // Docs: ketcher-core/docs/data/hover_selection_rgroup_attachment_point.png\n    const pathString = `\n      M ${topLeftPoint.x} ${topLeftPoint.y}\n      L ${topRightPoint.x} ${topRightPoint.y}\n      C ${topRightPadPoint.x} ${topRightPadPoint.y}, ${middleMostRightPadPoint.x} ${middleMostRightPadPoint.y}, ${middleMostRightPoint.x} ${middleMostRightPoint.y}\n      L ${middleRightPoint.x} ${middleRightPoint.y}\n      L ${bottomRightPoint.x} ${bottomRightPoint.y}\n      C ${bottomRightPadPoint.x} ${bottomRightPadPoint.y}, ${bottomLeftPadPoint.x} ${bottomLeftPadPoint.y}, ${bottomLeftPoint.x} ${bottomLeftPoint.y}\n      L ${middleLeftPoint.x} ${middleLeftPoint.y}\n      L ${middleMostLeftPoint.x} ${middleMostLeftPoint.y}\n      C ${middleMostLeftPadPoint.x} ${middleMostLeftPadPoint.y}, ${topLeftPadPoint.x} ${topLeftPadPoint.y}, ${topLeftPoint.x} ${topLeftPoint.y}\n    `;\n    return pathString;\n  }\n\n  makeHoverPlate(render: Render) {\n    const hoverPlatePath = this.getHoverPlatePath(render.options);\n    return render.paper.path(hoverPlatePath).attr(render.options.hoverStyle);\n  }\n\n  makeSelectionPlate(\n    _restruct: ReStruct,\n    paper: RaphaelPaper,\n    options: RenderOptions,\n  ) {\n    const hoverPlatePath = this.getHoverPlatePath(options);\n    return paper.path(hoverPlatePath).attr(options.selectionStyle);\n  }\n\n  drawHover(render: Render) {\n    const hoverPlate = this.makeHoverPlate(render);\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, hoverPlate);\n    return hoverPlate;\n  }\n\n  private getAttachmentPointDirectionVector(struct: Struct) {\n    if (!this.reAtom.hasAttachmentPoint()) {\n      return;\n    }\n    if (this.isTrisectionAttachmentPoint()) {\n      return trisectionLargestSector(this.reAtom, struct, this.item.type);\n    } else {\n      const hasOnlyOneBond = this.reAtom.a.neighbors.length === 1;\n      const directionVector = hasOnlyOneBond\n        ? getAttachmentDirectionForOnlyOneBond(this.reAtom, struct)\n        : this.reAtom.bisectLargestSector(struct);\n      return directionVector;\n    }\n  }\n\n  private isTrisectionAttachmentPoint(): boolean {\n    // in this case we should split the attachment point vector to two vectors\n    return this.reAtom.a.attachmentPoints === AttachmentPoints.BothSides;\n  }\n}\n\nfunction showAttachmentPointShape(\n  atom: ReAtom,\n  { options, paper }: Render,\n  directionVector: Vec2,\n  addReObjectPath: InstanceType<typeof ReStruct>['addReObjectPath'],\n  visel: Visel,\n): void {\n  const atomPositionVector = Scale.modelToCanvas(atom.a.pp, options);\n  const shiftedAtomPositionVector = atom.getShiftedSegmentPosition(\n    options,\n    directionVector,\n  );\n  const attachmentPointEnd = atomPositionVector.addScaled(\n    directionVector,\n    options.microModeScale * 0.85,\n  );\n\n  const resultShape = draw.rgroupAttachmentPoint(\n    paper,\n    shiftedAtomPositionVector,\n    attachmentPointEnd,\n    directionVector,\n    options,\n  );\n\n  addReObjectPath(\n    LayerMap.indices,\n    visel,\n    resultShape,\n    atomPositionVector,\n    true,\n  );\n}\n\nfunction trisectionLargestSector(\n  atom: ReAtom,\n  struct: Struct,\n  attachmentPointType: RGroupAttachmentPointType,\n) {\n  const { largestAngle, neighborAngle } =\n    atom.getLargestSectorFromNeighbors(struct);\n  const firstTrisectorAngle = neighborAngle + largestAngle / 3;\n  const secondTrisectorAngle = neighborAngle + (largestAngle * 2) / 3;\n\n  return attachmentPointType === 'primary'\n    ? newVectorFromAngle(firstTrisectorAngle)\n    : newVectorFromAngle(secondTrisectorAngle);\n}\n\nfunction newVectorFromAngle(angle: number): Vec2 {\n  return new Vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction isAttachmentPointLabelRequired(restruct: ReStruct) {\n  return restruct.molecule.atoms.some(\n    ({ attachmentPoints }) =>\n      attachmentPoints === AttachmentPoints.SecondSideOnly ||\n      attachmentPoints === AttachmentPoints.BothSides,\n  );\n}\n\nfunction getAttachmentDirectionForOnlyOneBond(\n  atom: ReAtom,\n  struct: Struct,\n): Vec2 {\n  const DEGREE_120_FOR_ONE_BOND = (2 * Math.PI) / 3;\n  const DEGREE_180_FOR_TRIPLE_BOND = Math.PI;\n  const onlyNeighbor = atom.a.neighbors[0];\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  const neighbour = struct.halfBonds.get(onlyNeighbor)!;\n  const angle = neighbour.ang;\n  const isTripleBond =\n    struct.bonds.get(neighbour.bid)?.type === Bond.PATTERN.TYPE.TRIPLE;\n  const finalAngle =\n    angle +\n    (isTripleBond ? DEGREE_180_FOR_TRIPLE_BOND : DEGREE_120_FOR_ONE_BOND);\n  return newVectorFromAngle(finalAngle);\n}\n\nfunction showAttachmentPointLabel(\n  atom: ReAtom,\n  { options, paper }: Render,\n  directionVector: Vec2,\n  addReObjectPath: InstanceType<typeof ReStruct>['addReObjectPath'],\n  labelText: string,\n  visel: Visel,\n): void {\n  const atomPositionVector = Scale.modelToCanvas(atom.a.pp, options);\n  const labelPosition = getLabelPositionForAttachmentPoint(\n    atomPositionVector,\n    directionVector,\n    options.microModeScale,\n  );\n  const labelPath = draw.rgroupAttachmentPointLabel(\n    paper,\n    labelPosition,\n    labelText,\n    options,\n    atom.color,\n  );\n  addReObjectPath(LayerMap.indices, visel, labelPath, atomPositionVector, true);\n}\n\nfunction getLabelPositionForAttachmentPoint(\n  atomPositionVector: Vec2,\n  directionVector: Vec2,\n  shapeHeight: number,\n): Vec2 {\n  const normal = directionVector.rotateSC(1, 0);\n  return atomPositionVector\n    .addScaled(normal, 0.17 * shapeHeight)\n    .addScaled(directionVector, shapeHeight * 0.7);\n}\n\nexport { ReRGroupAttachmentPoint };\n","import { LayerMap, ReObject, ReStruct } from 'application/render/restruct';\nimport {\n  Image,\n  ImageReferenceName,\n  ImageReferencePositionInfo,\n} from 'domain/entities/image';\nimport { RenderOptions } from 'application/render/render.types';\nimport { Scale } from 'domain/helpers';\nimport { RaphaelPaper, RaphaelSet } from 'raphael';\nimport { Box2Abs, Vec2 } from 'domain/entities';\nimport draw from 'application/render/draw';\nimport { IMAGE_KEY } from 'domain/constants';\nimport { Render } from 'application/render';\n\ntype GetReferencePositions = ReturnType<Image['getReferencePositions']>;\nconst REFERENCE_POINT_LINE_WIDTH_MULTIPLIER = 0.4;\n\ninterface ClosestReferencePosition {\n  distance: number;\n  ref: ImageReferencePositionInfo | null;\n}\n\nexport class ReImage extends ReObject {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: raphael typing issues\n  private selectionPointsSet: RaphaelSet;\n\n  static isSelectable(): boolean {\n    return true;\n  }\n\n  constructor(public image: Image) {\n    super(IMAGE_KEY);\n  }\n\n  private getScaledPointWithOffset(\n    originalPoint: Vec2,\n    renderOptions: RenderOptions,\n  ): Vec2 {\n    const scaledPoint: Vec2 = Scale.modelToCanvas(originalPoint, renderOptions);\n    return scaledPoint.add(renderOptions.offset);\n  }\n\n  private getScale(renderOptions: RenderOptions) {\n    return renderOptions.microModeScale / 8;\n  }\n\n  private getDimensions(renderOptions: RenderOptions): Vec2 {\n    return Vec2.diff(\n      this.getScaledPointWithOffset(\n        this.image.getBottomRightPosition(),\n        renderOptions,\n      ),\n      this.getScaledPointWithOffset(\n        this.image.getTopLeftPosition(),\n        renderOptions,\n      ),\n    );\n  }\n\n  private getSelectionReferencePositions(\n    renderOptions: RenderOptions,\n  ): GetReferencePositions {\n    // We need just one additional pixel for selection dots to not overlap with image\n    const scale = this.getScale(renderOptions) + 1;\n    const [\n      topLeftPosition,\n      topRightPosition,\n      bottomRightPosition,\n      bottomLeftPosition,\n    ] = this.image\n      .getCornerPositions()\n      .map((position) => Scale.modelToCanvas(position, renderOptions));\n    const selectionTopLeftPosition = topLeftPosition.sub(\n      new Vec2(scale, scale),\n    );\n    const selectionTopRightPosition = topRightPosition.add(\n      new Vec2(scale, -1 * scale),\n    );\n    const selectionBottomRightPosition = bottomRightPosition.add(\n      new Vec2(scale, scale),\n    );\n    const selectionBottomLeftPosition = bottomLeftPosition.add(\n      new Vec2(-1 * scale, scale),\n    );\n\n    return {\n      topLeftPosition: selectionTopLeftPosition,\n      topMiddlePosition: Vec2.centre(\n        selectionTopLeftPosition,\n        selectionTopRightPosition,\n      ),\n      topRightPosition: selectionTopRightPosition,\n      rightMiddlePosition: Vec2.centre(\n        selectionTopRightPosition,\n        selectionBottomRightPosition,\n      ),\n      bottomRightPosition: selectionBottomRightPosition,\n      bottomMiddlePosition: Vec2.centre(\n        selectionBottomLeftPosition,\n        selectionBottomRightPosition,\n      ),\n      bottomLeftPosition: selectionBottomLeftPosition,\n      leftMiddlePosition: Vec2.centre(\n        selectionTopLeftPosition,\n        selectionBottomLeftPosition,\n      ),\n    };\n  }\n\n  private drawSelectionLine(\n    paper: RaphaelPaper,\n    renderOptions: RenderOptions,\n  ): RaphaelSet {\n    const selectionSet = paper.set();\n    const scale = this.getScale(renderOptions);\n    const {\n      topLeftPosition,\n      topRightPosition,\n      bottomRightPosition,\n      bottomLeftPosition,\n    } = this.getSelectionReferencePositions(renderOptions);\n    const polygon = [\n      topLeftPosition,\n      topRightPosition,\n      bottomRightPosition,\n      bottomLeftPosition,\n    ];\n    const styleOptions = renderOptions.selectionStyleSimpleObject;\n    const strokeWidth =\n      Number(styleOptions['stroke-width']) +\n      scale * REFERENCE_POINT_LINE_WIDTH_MULTIPLIER;\n\n    selectionSet.push(\n      draw.selectionPolygon(paper, polygon, renderOptions).attr({\n        ...renderOptions.selectionStyleSimpleObject,\n        'stroke-linecap': 'square',\n        'stroke-width': strokeWidth,\n      }),\n    );\n    return selectionSet;\n  }\n\n  private drawSelectionPoints(\n    reStruct: ReStruct,\n    paper: RaphaelPaper,\n    renderOptions: RenderOptions,\n  ) {\n    this.selectionPointsSet = paper.set();\n    const scale = this.getScale(renderOptions);\n    const strokeWidth = scale * REFERENCE_POINT_LINE_WIDTH_MULTIPLIER;\n    const selectionReferencePositions = Object.entries(\n      this.getSelectionReferencePositions(renderOptions),\n    );\n    selectionReferencePositions.forEach(([key, { x, y }]) => {\n      const element = paper.circle(x, y, scale).attr({\n        fill: 'none',\n        'stroke-width': strokeWidth,\n      });\n      if (element.node && element.node.setAttribute) {\n        element.node.setAttribute('data-testid', `imageResize-${key}`);\n      }\n\n      this.selectionPointsSet.push(element);\n    });\n    reStruct.addReObjectPath(\n      LayerMap.selectionPlate,\n      this.visel,\n      this.selectionPointsSet,\n    );\n  }\n\n  show(restruct: ReStruct, renderOptions: RenderOptions) {\n    const scaledTopLeftWithOffset = this.getScaledPointWithOffset(\n      this.image.getTopLeftPosition(),\n      renderOptions,\n    );\n    const dimensions = this.getDimensions(renderOptions);\n\n    restruct.addReObjectPath(\n      LayerMap.images,\n      this.visel,\n      restruct.render.paper.image(\n        this.image.bitmap,\n        scaledTopLeftWithOffset.x,\n        scaledTopLeftWithOffset.y,\n        dimensions.x,\n        dimensions.y,\n      ),\n    );\n  }\n\n  drawHover(render: Render) {\n    const offset =\n      this.getScale(render.options) *\n      (1 + REFERENCE_POINT_LINE_WIDTH_MULTIPLIER);\n    const { topLeftPosition, bottomRightPosition } =\n      this.getSelectionReferencePositions(render.options);\n    const outerBorderOffset = new Vec2(offset, offset);\n    const topLeftCorner = topLeftPosition.sub(outerBorderOffset);\n    const dimensions = bottomRightPosition\n      .sub(topLeftPosition)\n      .add(outerBorderOffset.scaled(2));\n    const paths = render.paper\n      .rect(topLeftCorner.x, topLeftCorner.y, dimensions.x, dimensions.y)\n      .attr({ ...render.options.hoverStyle, fill: '#fff' });\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths);\n\n    return paths;\n  }\n\n  makeSelectionPlate(\n    reStruct: ReStruct,\n    paper: RaphaelPaper,\n    options: RenderOptions,\n  ) {\n    this.drawSelectionPoints(reStruct, paper, options);\n    return this.drawSelectionLine(paper, options);\n  }\n\n  getVBoxObj(): Box2Abs | null {\n    return new Box2Abs(\n      this.image.getTopLeftPosition(),\n      this.image.getBottomRightPosition(),\n    );\n  }\n\n  togglePoints(displayFlag: boolean) {\n    displayFlag\n      ? this.selectionPointsSet?.show()\n      : this.selectionPointsSet?.hide();\n  }\n\n  calculateDistanceToPoint(point: Vec2, renderOptions: RenderOptions): number {\n    if (this.isPointInsidePolygon(point, renderOptions)) {\n      return 0;\n    }\n    const {\n      topLeftPosition,\n      topRightPosition,\n      bottomRightPosition,\n      bottomLeftPosition,\n    } = this.getSelectionReferencePositions(renderOptions);\n\n    return Math.min(\n      point.calculateDistanceToLine([topLeftPosition, topRightPosition]),\n      point.calculateDistanceToLine([topRightPosition, bottomRightPosition]),\n      point.calculateDistanceToLine([bottomRightPosition, bottomLeftPosition]),\n      point.calculateDistanceToLine([bottomLeftPosition, topLeftPosition]),\n    );\n  }\n\n  calculateClosestReferencePosition(\n    point: Vec2,\n    renderOptions: RenderOptions,\n  ): ClosestReferencePosition {\n    const entries = Object.entries(\n      this.getSelectionReferencePositions(renderOptions),\n    ) as Array<[ImageReferenceName, Vec2]>;\n    return entries.reduce(\n      (acc, [key, position]) => {\n        const offset = Vec2.diff(position, point);\n        const distance = offset.length();\n        if (distance < acc.distance) {\n          return {\n            distance,\n            ref: {\n              name: key,\n              offset: Scale.canvasToModel(offset, renderOptions),\n            },\n          };\n        } else {\n          return acc;\n        }\n      },\n      {\n        ref: null,\n        distance: Number.POSITIVE_INFINITY,\n      } as ClosestReferencePosition,\n    );\n  }\n\n  isPointInsidePolygon(point: Vec2, renderOptions: RenderOptions): boolean {\n    const referencePositions =\n      this.getSelectionReferencePositions(renderOptions);\n\n    return point.isInsidePolygon([\n      referencePositions.topLeftPosition,\n      referencePositions.topRightPosition,\n      referencePositions.bottomRightPosition,\n      referencePositions.bottomLeftPosition,\n    ]);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  RGroupAttachmentPoint,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport assert from 'assert';\nimport { LayerMap } from './generalEnumTypes';\nimport ReAtom from './reatom';\nimport ReBond from './rebond';\nimport ReDataSGroupData from './redatasgroupdata';\nimport ReEnhancedFlag from './reenhancedFlag';\nimport ReFrag from './refrag';\nimport ReLoop from './reloop';\nimport ReRGroup from './rergroup';\nimport ReRxnArrow from './rerxnarrow';\nimport ReRxnPlus from './rerxnplus';\nimport ReSGroup from './resgroup';\nimport ReSimpleObject from './resimpleObject';\nimport ReText from './retext';\nimport { Render } from '../raphaelRender';\nimport Visel from './visel';\nimport util from '../util';\nimport { ReRGroupAttachmentPoint } from './rergroupAttachmentPoint';\nimport { ReImage } from 'application/render/restruct/reImage';\nimport { IMAGE_KEY } from 'domain/constants';\n\nclass ReStruct {\n  public static readonly maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    rgroupAttachmentPoints: ReRGroupAttachmentPoint,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText,\n    [IMAGE_KEY]: ReImage,\n  } as const;\n\n  public render: Render;\n  public molecule: Struct;\n  public atoms: Map<number, ReAtom> = new Map();\n  public bonds: Map<number, ReBond> = new Map();\n  public reloops: Map<number, ReLoop> = new Map();\n  public rxnPluses: Map<number, ReRxnPlus> = new Map();\n  public rxnArrows: Map<number, ReRxnArrow> = new Map();\n  public frags: Pool = new Pool();\n  public rgroups: Pool = new Pool();\n  public rgroupAttachmentPoints: Pool<ReRGroupAttachmentPoint> = new Pool();\n\n  public sgroups: Map<number, ReSGroup> = new Map();\n  public sgroupData: Map<number, ReDataSGroupData> = new Map();\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map();\n  public simpleObjects: Map<number, ReSimpleObject> = new Map();\n  public images: Map<number, ReImage> = new Map();\n  public texts: Map<number, ReText> = new Map();\n  private initialized = false;\n  private layers: Array<any> = [];\n  public connectedComponents: Pool = new Pool();\n  private ccFragmentType: Pool = new Pool();\n  private structChanged = false;\n\n  // TWIMC, Those maps are accessed via dynamic names, using static maps field + 'Changed' string\n  private atomsChanged: Map<number, 1> = new Map();\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map();\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map();\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map();\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map();\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map();\n  private textsChanged: Map<number, ReText> = new Map();\n  private imagesChanged: Map<number, ReImage> = new Map();\n  private snappingBonds: number[] = [];\n\n  constructor(\n    molecule,\n    render: Render | { skipRaphaelInitialization: boolean; theme },\n  ) {\n    // eslint-disable-line max-statements\n    this.render = render as Render;\n    this.molecule = molecule || new Struct();\n    this.initLayers();\n    this.clearMarks();\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom));\n    });\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond));\n    });\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop));\n    });\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item));\n    });\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item));\n    });\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item));\n    });\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item));\n    });\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item));\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag());\n    });\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item));\n    });\n\n    molecule.rgroupAttachmentPoints.forEach(\n      (item: RGroupAttachmentPoint, id: number) => {\n        const reAtom = this.atoms.get(item.atomId);\n        assert(reAtom != null);\n        this.rgroupAttachmentPoints.set(\n          id,\n          new ReRGroupAttachmentPoint(item, reAtom),\n        );\n      },\n    );\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item));\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item));\n      }\n    });\n    molecule.images.forEach((item, id) => {\n      this.images.set(id, new ReImage(item));\n    });\n  }\n\n  get visibleRGroupAttachmentPoints() {\n    const sgroups = this.molecule.sgroups;\n    const functionalGroups = this.molecule.functionalGroups;\n    return this.rgroupAttachmentPoints.filter((_id, reItem) => {\n      const atomId = reItem.item.atomId;\n      const atom = this.molecule.atoms.get(atomId);\n      assert(atom != null);\n      return !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false,\n      );\n    });\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid);\n    if (!atom || atom.component < 0) return;\n    const cc = this.connectedComponents.get(atom.component);\n\n    cc.delete(aid);\n    if (cc.size < 1) this.connectedComponents.delete(atom.component);\n\n    atom.component = -1;\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear();\n    this.atoms.forEach((atom) => {\n      atom.component = -1;\n    });\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile,\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid];\n    const ids = new Pile();\n\n    while (list.length > 0) {\n      const aid = list.pop()!;\n      ids.add(aid);\n      const atom = this.atoms.get(aid);\n      if (!atom) continue;\n      if (atom.component >= 0) adjacentComponents.add(atom.component);\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor);\n        if (!halfBond) return;\n        const neiId = halfBond.end;\n        if (!ids.has(neiId)) list.push(neiId);\n      });\n    }\n\n    return ids;\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet);\n    const adjacentComponents = new Pile();\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents,\n    );\n\n    adjacentComponents.delete(compId);\n\n    let type = -1;\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid);\n      if (!atom) return;\n      atom.component = compId;\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType;\n    });\n\n    this.ccFragmentType.set(compId, type);\n    return compId;\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid);\n      if (atom) atom.component = -1;\n    });\n\n    return this.connectedComponents.delete(ccid);\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return;\n\n      const adjacentComponents = new Pile();\n      const idSet = this.getConnectedComponent(aid, adjacentComponents);\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid);\n      });\n\n      this.addConnectedComponent(idSet);\n    });\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0',\n        })\n        .toFront();\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false,\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return;\n    const paths = Array.isArray(path) ? path : [path];\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset;\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null;\n      const ext = pos && bb ? bb.translate(pos.negated()) : null;\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y);\n        bb = bb ? bb.translate(offset) : null;\n      }\n      visel.add(path, bb, ext);\n      path.insertBefore(this.layers[LayerMap[group]]);\n    });\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map();\n    });\n\n    this.structChanged = false;\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true;\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark);\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark);\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed'];\n\n    const value = mapChanged.has(id)\n      ? Math.max(mark, mapChanged.get(id))\n      : mark;\n\n    mapChanged.set(id, value);\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel);\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove();\n    });\n    visel.clear();\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func);\n    });\n  }\n\n  /**\n   * Why?\n   * we can't use just getVBoxObj and the center for atoms\n   * because this will lead incorrect center position for the move atom around it\n   * because of atom's vBox contain text label with is not constant after flip/rotate\n   * and this lead to unstable flip tool work\n   */\n  // eslint-disable-next-line no-use-before-define\n  getSelectionBoxCenter(selection: SelectionMap): Vec2 | undefined {\n    let boundingBox: Box2Abs | null = null;\n\n    for (const atomId of selection.atoms ?? []) {\n      const atomPositionPoint = this.atoms.get(atomId)!.a.pp;\n      const atomBox = new Box2Abs(atomPositionPoint, atomPositionPoint);\n      boundingBox =\n        boundingBox == null ? atomBox : Box2Abs.union(boundingBox, atomBox);\n    }\n    const selectionExceptAtoms = { ...selection };\n    delete selectionExceptAtoms.atoms;\n\n    const selectionExceptAtomsBoundingBox =\n      this.getBoundingBoxForSelection(selectionExceptAtoms);\n    if (selectionExceptAtomsBoundingBox) {\n      boundingBox = boundingBox\n        ? Box2Abs.union(boundingBox, selectionExceptAtomsBoundingBox)\n        : selectionExceptAtomsBoundingBox;\n    }\n\n    return boundingBox?.centre();\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  getVBoxObj(selection?: SelectionMap): Box2Abs {\n    if (isSelectionEmpty(selection)) {\n      selection = this.getAllElementsAsSelectionMap();\n    }\n\n    let boundingBox = this.getBoundingBoxForSelection(selection);\n\n    boundingBox = boundingBox || new Box2Abs(0, 0, 0, 0);\n    return boundingBox;\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  private getAllElementsAsSelectionMap(): SelectionMap {\n    // eslint-disable-next-line no-use-before-define\n    const selection: SelectionMap = {};\n    Object.keys(ReStruct.maps).forEach((map) => {\n      selection[map] = Array.from(this[map].keys());\n    });\n    return selection;\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  private getBoundingBoxForSelection(selection: SelectionMap): Box2Abs | null {\n    let boundingBox: Box2Abs | null = null;\n    Object.keys(ReStruct.maps).forEach((elementKey) => {\n      selection[elementKey]?.forEach((elementId) => {\n        const box = this[elementKey].get(elementId).getVBoxObj(this.render);\n        if (box) {\n          boundingBox = boundingBox\n            ? Box2Abs.union(boundingBox, box)\n            : box.clone();\n        }\n      });\n    });\n    return boundingBox;\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d));\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s));\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel));\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized;\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed'];\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1));\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id);\n        });\n      }\n    });\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid),\n    );\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render),\n    );\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel);\n      this.frags.delete(fid);\n      this.molecule.frags.delete(fid);\n    });\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed'];\n\n      mapChanged.forEach((_value, id) => {\n        if (this[map].get(id).visel) {\n          this.clearVisel(this[map].get(id).visel);\n        }\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0;\n      });\n    });\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel);\n      sgroup.hovering = null;\n      sgroup.selectionPlate = null;\n    });\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel);\n    });\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel);\n    });\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents();\n      this.molecule.initHalfBonds();\n      this.molecule.initNeighbors();\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys());\n    this.molecule.updateHalfBonds(atomsChangedArray);\n    this.molecule.sortNeighbors(atomsChangedArray);\n\n    this.assignConnectedComponents();\n    this.initialized = true;\n\n    this.verifyLoops();\n    const updLoops = force || this.structChanged;\n    if (updLoops) this.updateLoops();\n    this.showAtoms();\n    this.showBonds();\n    this.showRgroupAttachmentPoints();\n    if (updLoops) this.showLoops();\n    this.showReactionSymbols();\n    this.showSGroups();\n\n    this.showFragments();\n    this.showRGroups();\n    this.showEnhancedFlags();\n    this.showSimpleObjects();\n    this.showTexts();\n    this.showImages();\n    this.clearMarks();\n\n    return true;\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel);\n    });\n    const ret = this.molecule.findLoops();\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1);\n    });\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)));\n    });\n  }\n\n  showLoops(): void {\n    const options = this.render.options;\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options);\n    });\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options;\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id);\n      if (simpleObject) simpleObject.show(this, options);\n    });\n  }\n\n  showTexts() {\n    const options = this.render.options;\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id);\n      if (text) text.show(this, id, options);\n    });\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options;\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id);\n      if (arrow) arrow.show(this, id, options);\n    });\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id);\n      if (plus) plus.show(this, id, options);\n    });\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id);\n        if (!resgroup) return;\n        resgroup.show(this);\n      });\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id);\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true);\n      }\n      // TODO fragment selection & highlighting\n    });\n  }\n\n  showRGroups(): void {\n    const options = this.render.options;\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options);\n    });\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId);\n    if (!reloop) {\n      return;\n    }\n    this.clearVisel(reloop.visel);\n\n    const bondlist: Array<number> = [];\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid);\n      if (!hb) return;\n      hb.loop = -1;\n      this.markBond(hb.bid, 1);\n      this.markAtom(hb.begin, 1);\n      bondlist.push(hb.bid);\n    });\n\n    this.reloops.delete(loopId);\n    this.molecule.loops.delete(loopId);\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid);\n    });\n  }\n\n  getRGroupAttachmentPointsVBoxByAtomIds(atomsIds: number[]): Box2Abs | null {\n    let allAtomAttachmentPointsVBox: Box2Abs | null = null;\n\n    atomsIds.forEach((atomId) => {\n      const attachmentPointIds =\n        this.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n\n      const oneAtomAttachmentPointsVBox = attachmentPointIds.reduce(\n        (previousVBox, attachmentPointId) => {\n          const attachmentPoint =\n            this.rgroupAttachmentPoints.get(attachmentPointId);\n          assert(attachmentPoint != null);\n          const currentVBox = attachmentPoint.getVBoxObj(this.render);\n          return previousVBox && currentVBox\n            ? Box2Abs.union(previousVBox, currentVBox)\n            : currentVBox;\n        },\n        null as Box2Abs | null,\n      );\n\n      if (allAtomAttachmentPointsVBox && oneAtomAttachmentPointsVBox) {\n        allAtomAttachmentPointsVBox = Box2Abs.union(\n          allAtomAttachmentPointsVBox,\n          oneAtomAttachmentPointsVBox,\n        );\n      } else {\n        allAtomAttachmentPointsVBox =\n          allAtomAttachmentPointsVBox ?? oneAtomAttachmentPointsVBox;\n      }\n    });\n\n    return allAtomAttachmentPointsVBox;\n  }\n\n  private showRgroupAttachmentPoints() {\n    // why update all rgroupAttachmentPoints instead of changed ones?\n    // 1. The label of an R-Group attachment point may be affected by other R-Group attachment points\n    // 2. The visibility of an an R-Group attachment point may be affected by contracting/expanding an S-Group\n    this.rgroupAttachmentPoints.forEach((_value, id) => {\n      const rgroupAttachmentPoint = this.rgroupAttachmentPoints.get(id);\n      if (rgroupAttachmentPoint?.visel) {\n        this.clearVisel(rgroupAttachmentPoint.visel);\n      }\n\n      const attachedAtomId = rgroupAttachmentPoint?.item.atomId;\n      const sgroup = this.molecule.getGroupFromAtomId(attachedAtomId);\n      const isInsideContractedSGroup = Boolean(sgroup?.isContracted());\n      if (isInsideContractedSGroup) {\n        return;\n      }\n\n      rgroupAttachmentPoint?.show(this);\n    });\n  }\n\n  private showAtoms(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options;\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid);\n      if (atom) atom.show(this, aid, options);\n    });\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options;\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid);\n      if (flag) flag.show(this, chid, options);\n    });\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options;\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid);\n      if (bond) {\n        bond.show(this, bid, options);\n      }\n    });\n  }\n\n  showImages() {\n    const options = this.render.options;\n    this.imagesChanged.forEach((_, id) => {\n      const image = this.images.get(id);\n      if (image) {\n        image.show(this, options);\n      }\n    });\n  }\n\n  setSelection(selection?) {\n    const atoms: { selected: boolean; sgroup: number }[] = [];\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values(); // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup;\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId;\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup,\n            });\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item?.item?.id,\n              this.molecule.functionalGroups,\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item?.item?.id,\n            );\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected;\n          }\n\n          let selected = selection?.[map]\n            ? selection[map].indexOf(id) > -1\n            : item.selected;\n\n          if (selection === null) {\n            selected = false;\n          }\n\n          this.showItemSelection(item, selected);\n          item.selectionPlate?.toBack();\n        });\n      }\n    });\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item);\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected;\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected;\n    if (selected) {\n      if (!exists) {\n        const render = this.render;\n        const options = render.options;\n        const paper = render.paper;\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options);\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate,\n        );\n\n        if (typeof item.makeAdditionalInfo === 'function') {\n          item.additionalInfo = item.makeAdditionalInfo(this);\n          this.addReObjectPath(\n            LayerMap.additionalInfo,\n            item.visel,\n            item.additionalInfo,\n          );\n        }\n      }\n      if (item.selectionPlate) {\n        item.selectionPlate.show();\n        item.additionalInfo?.show();\n        item.cip?.rectangle.attr({\n          fill: '#7f7',\n          stroke: '#7f7',\n        });\n        if (item.togglePoints) item.togglePoints(true);\n      }\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide();\n      if (item.togglePoints) item.togglePoints(false);\n      item.additionalInfo?.hide();\n      item.cip?.rectangle.attr({\n        fill: '#fff',\n        stroke: '#fff',\n      });\n    }\n  }\n\n  addSnappingBonds(bondId: number) {\n    this.snappingBonds.push(bondId);\n  }\n\n  clearSnappingBonds() {\n    this.snappingBonds = [];\n  }\n\n  isSnappingBond(bondId: number) {\n    return this.snappingBonds.includes(bondId);\n  }\n}\n\n// eslint-disable-next-line no-use-before-define\nfunction isSelectionEmpty(selection?: SelectionMap): selection is undefined {\n  if (!selection) return true;\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0,\n  );\n\n  return !anySelection;\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor);\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor);\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor);\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0);\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s);\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  );\n}\n\ntype SelectionMap = Partial<\n  Record<keyof typeof ReStruct.maps, number[] | undefined>\n>;\n\nexport default ReStruct;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities';\nimport { inRange } from 'lodash';\nimport { BondAtoms } from 'application/editor/shared/utils.types';\n\nlet FRAC = Math.PI / 12; // '15º'\n\nfunction setFracAngle(angle: number): void {\n  FRAC = (Math.PI / 180) * angle;\n}\n\nfunction calcAngle(pos0: Vec2, pos1: Vec2): number {\n  const v = Vec2.diff(pos1, pos0);\n  return Math.atan2(v.y, v.x);\n}\n\nfunction fracAngle(angle, angle2): number {\n  if (angle2) angle = calcAngle(angle, angle2);\n  return Math.round(angle / FRAC) * FRAC;\n}\n\nfunction calcNewAtomPos(pos0: Vec2, pos1: Vec2, ctrlKey: boolean): Vec2 {\n  const vector = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1),\n  );\n  vector.add_(pos0); // eslint-disable-line no-underscore-dangle\n  return vector;\n}\n\nfunction degrees(angle: number): number {\n  let degree = Math.round((angle / Math.PI) * 180);\n  if (degree > 180) degree -= 360;\n  else if (degree <= -180) degree += 360;\n  return degree;\n}\n\nconst BONDS_MERGE_ANGLE = 10; // 'º'\nconst BONDS_MERGE_SCALE = 0.2;\n\nfunction mergeBondsParams(\n  struct1: Struct,\n  bond1: BondAtoms,\n  struct2: Struct,\n  bond2: BondAtoms,\n) {\n  // TODO find a solution to remove not-null assertion from result atoms below\n  // https://github.com/epam/ketcher/issues/2652\n  const begin1 = struct1.atoms.get(bond1.begin)!;\n  const begin2 = struct2.atoms.get(bond2.begin)!;\n  const end1 = struct1.atoms.get(bond1.end)!;\n  const end2 = struct2.atoms.get(bond2.end)!;\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp);\n  const mergeAngle = Math.abs(degrees(angle) % 180);\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp);\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE);\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 };\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  degrees,\n  setFracAngle,\n  mergeBondsParams,\n  calcNewAtomPos,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities';\nimport utils from '../editor/shared/utils';\nimport { ShowHydrogenLabels } from './restruct/reatom';\nimport { RenderOptions } from './render.types';\n\nfunction defaultOptions(options: RenderOptions): RenderOptions {\n  const scaleFactorMicro = options.microModeScale || 100;\n  const scaleFactorMacro = options.macroModeScale || 200;\n\n  if (options.rotationStep) {\n    utils.setFracAngle(options.rotationStep);\n  }\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactorMicro / 6));\n  const subFontSize = Math.ceil(0.5 * labelFontSize);\n\n  const defaultOptions: Partial<RenderOptions> = {\n    'dearomatize-on-load': false,\n    ignoreChiralFlag: false,\n    disableQueryElements: null,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: ShowHydrogenLabels.TerminalAndHetero,\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    microModeScale: scaleFactorMicro,\n    macroModeScale: scaleFactorMacro,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactorMicro / 20,\n    bondSpace: options.doubleBondWidth || scaleFactorMicro / 7,\n    stereoBond: options.stereoBondWidth || scaleFactorMicro / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    radiusScaleFactor: 0.38,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': options.bondThickness || scaleFactorMicro / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round',\n    },\n    arrowSnappingStyle: {\n      fill: '#365CFF',\n      stroke: '#365CFF',\n    },\n    bondSnappingStyle: {\n      fill: '#365CFF',\n      stroke: '#365CFF',\n      'stroke-width': options.bondThickness * 1.5,\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#57FF8F',\n      stroke: '#57FF8F',\n    },\n    hoverStyle: {\n      stroke: '#0097A8',\n      fill: '#CCFFDD',\n      'stroke-width': (0.6 * scaleFactorMicro) / 20,\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactorMicro) / 20,\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px',\n    },\n    selectionStyleSimpleObject: {\n      stroke: '#57FF8F',\n      'stroke-width': scaleFactorMicro / 4,\n      'stroke-linecap': 'round',\n    },\n    movingStyle: {\n      cursor: 'all-scroll',\n    },\n    atomSelectionPlateRadius: labelFontSize,\n    contractedFunctionalGroupSize: 50,\n\n    previewOpacity: 0.5,\n  };\n\n  return Object.assign({}, defaultOptions, options);\n}\n\nexport default defaultOptions;\n","import { Vec2 } from 'domain/entities';\nimport { Render } from './raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nconst canvasToView = (point: Vec2, render: Render) => {\n  const offset = new Vec2(render.viewBox.minX, render.viewBox.minY);\n  return point\n    .sub(offset)\n    .scaled(render.options.zoom)\n    .scaled(render.options.externalZoomScale ?? 1.0);\n};\n\nconst modelToView = (vector: Vec2, render: Render) => {\n  const pointInCanvas = Scale.modelToCanvas(vector, render.options);\n  return canvasToView(pointInCanvas, render);\n};\n\nconst viewToCanvas = (point: Vec2, render: Render) => {\n  const offset = new Vec2(render.viewBox.minX, render.viewBox.minY);\n  return point\n    .scaled(1 / render.options.zoom)\n    .scaled(1 / (render.options.externalZoomScale ?? 1.0))\n    .add(offset);\n};\n\nconst pageToView = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  renderClientArea: HTMLElement,\n) => {\n  const { top: offsetTop, left: offsetLeft } =\n    renderClientArea.getBoundingClientRect();\n  return new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop);\n};\n\nconst pageToCanvas = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  render: Render,\n) => {\n  const pointInViewBox = pageToView(event, render.clientArea);\n  return viewToCanvas(pointInViewBox, render);\n};\n\nconst pageToModel = (\n  event: MouseEvent | { clientX: number; clientY: number },\n  render: Render,\n) => {\n  const pointInCanvas = pageToCanvas(event, render);\n  return Scale.canvasToModel(pointInCanvas, render.options);\n};\n\n/**\n * @see ./__docs__/Coordinate-Origins.png\n * `model` - The original coordinates of entities.\n * `canvas` - The scaled `model`. The real coordinates Raphael uses to draw entities.\n * `page` - The part of the document you're viewing which is currently visible in the window.\n * `view` - The part of the canvas you're viewing which is currently visible in the window.\n * */\nexport const CoordinateTransformation = {\n  modelToView,\n  canvasToView,\n  viewToCanvas,\n  pageToCanvas,\n  pageToModel,\n};\n","import { Box2Abs, Vec2 } from 'domain/entities';\nimport { Render } from '../raphaelRender';\nimport { Scale } from 'domain/helpers';\n\nexport class ScrollOffset {\n  #render: Render;\n  up = 0;\n  down = 0;\n  left = 0;\n  right = 0;\n\n  constructor(render: Render) {\n    this.#render = render;\n  }\n\n  getAbsViewBox(): Box2Abs {\n    const viewBox = this.#render.viewBox;\n    const viewBoxMinXY = new Vec2(viewBox.minX, viewBox.minY);\n    const viewBoxMaxXY = new Vec2(\n      viewBox.minX + viewBox.width,\n      viewBox.minY + viewBox.height,\n    );\n    return new Box2Abs(viewBoxMinXY, viewBoxMaxXY);\n  }\n\n  getAbsBoundingBox(): Box2Abs {\n    const protoBoundingBox = this.#render.ctab.getVBoxObj();\n    const boundingBoxMinXY = Scale.modelToCanvas(\n      protoBoundingBox.p0,\n      this.#render.options,\n    );\n    const boundingBoxMaxXY = Scale.modelToCanvas(\n      protoBoundingBox.p1,\n      this.#render.options,\n    );\n    return new Box2Abs(boundingBoxMinXY, boundingBoxMaxXY);\n  }\n\n  #calculateOffset() {\n    const absBoundingBox = this.getAbsBoundingBox();\n    if (absBoundingBox.hasZeroArea()) {\n      this.up = 0;\n      this.down = 0;\n      this.left = 0;\n      this.right = 0;\n    } else {\n      const absViewBox = this.getAbsViewBox();\n      this.up = absViewBox.p0.y - absBoundingBox.p0.y;\n      this.down = absBoundingBox.p1.y - absViewBox.p1.y;\n      this.left = absViewBox.p0.x - absBoundingBox.p0.x;\n      this.right = absBoundingBox.p1.x - absViewBox.p1.x;\n    }\n  }\n\n  update() {\n    this.#calculateOffset();\n  }\n\n  hasVerticalOffset() {\n    return this.up > 0 || this.down > 0;\n  }\n\n  hasHorizontalOffset() {\n    return this.left > 0 || this.right > 0;\n  }\n}\n","import { Render } from '../raphaelRender';\nimport { ViewBox } from '../render.types';\nimport { RaphaelElement, RaphaelRectAttr } from './types';\n\nexport abstract class Scrollbar {\n  protected bar: RaphaelElement | null = null;\n  protected render: Render;\n  protected viewBoxBeforeDrag: ViewBox | null = null;\n\n  protected MIN_LENGTH = 40;\n  protected RADIUS = 2;\n  protected MARGIN = 5;\n  protected WIDTH = 4;\n  protected DIST_TO_EDGE = 5;\n  protected COLOR = '#b2bbc3';\n\n  protected constructor(render: Render) {\n    this.render = render;\n  }\n\n  update() {\n    this.bar = this.hasOffset() ? this.redraw() : this.hide();\n  }\n\n  protected redraw() {\n    return this.bar ? this.updateAttr() : this.draw();\n  }\n\n  protected updateAttr() {\n    const attr = this.getDynamicAttr();\n    return this.bar?.attr(attr);\n  }\n\n  protected hide() {\n    this.bar?.undrag();\n    this.bar?.remove();\n    return null;\n  }\n\n  protected draw() {\n    const { x, y, width, height, r } = this.getDynamicAttr();\n    const bar = this.render.paper.rect(x, y, width, height, r).attr({\n      stroke: this.COLOR,\n      fill: this.COLOR,\n    });\n\n    /** @see https://dmitrybaranovskiy.github.io/raphael/reference.html#Element.drag */\n    bar.drag(\n      this.onDragMove,\n      this.onDragStart,\n      this.onDragEnd,\n      this,\n      this,\n      this,\n    );\n\n    return bar;\n  }\n\n  protected onDragStart(_x: number, _y: number, event: MouseEvent) {\n    this.viewBoxBeforeDrag = { ...this.render.viewBox };\n    event.stopPropagation();\n  }\n\n  protected onDragEnd(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  abstract hasOffset(): boolean;\n  abstract getDynamicAttr(): RaphaelRectAttr;\n  abstract onDragMove(\n    dx: number,\n    dy: number,\n    x: number,\n    y: number,\n    event: MouseEvent,\n  ): void;\n}\n","import type { RenderOptions } from '../render.types';\n\nconst SCALE_FACTOR = 0.5;\n\n/**\n * To make scrollbar provide better UX, this function can help to achieve\n * moving scrollbar `x` offsets leads to moving viewBox `2 * x` offsets\n * */\nexport const getUserFriendlyScrollOffset = (offset: number) => {\n  return offset * SCALE_FACTOR;\n};\n\nexport const getUserFriendlyViewBoxDelta = (delta: number) => {\n  return delta / SCALE_FACTOR;\n};\n\nexport const getZoomedValue = (value: number, renderOptions: RenderOptions) => {\n  return value / renderOptions.zoom;\n};\n","import { clamp } from 'lodash';\nimport { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { Scrollbar } from './scrollbar';\nimport { RaphaelRectAttr } from './types';\nimport {\n  getUserFriendlyScrollOffset,\n  getUserFriendlyViewBoxDelta,\n  getZoomedValue,\n} from './utils';\n\nexport class VerticalScrollbar extends Scrollbar {\n  #scrollOffset: ScrollOffset;\n\n  constructor(render: Render, scrollOffset: ScrollOffset) {\n    super(render);\n    this.#scrollOffset = scrollOffset;\n  }\n\n  hasOffset(): boolean {\n    return this.#scrollOffset.hasVerticalOffset();\n  }\n\n  getDynamicAttr(): RaphaelRectAttr {\n    const minX =\n      this.render.viewBox.minX +\n      this.render.viewBox.width -\n      getZoomedValue(this.DIST_TO_EDGE, this.render.options);\n    const minY =\n      this.render.viewBox.minY +\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.up),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.height -\n          getZoomedValue(this.MIN_LENGTH + this.MARGIN, this.render.options),\n      );\n    const maxY =\n      this.render.viewBox.minY +\n      this.render.viewBox.height -\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.down),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.height,\n      );\n    const length = Math.max(\n      maxY - minY,\n      getZoomedValue(this.MIN_LENGTH, this.render.options),\n    );\n\n    return {\n      x: minX,\n      y: minY,\n      width: getZoomedValue(this.WIDTH, this.render.options),\n      height: length,\n      r: getZoomedValue(this.RADIUS, this.render.options),\n    };\n  }\n\n  onDragMove(\n    _dx: number,\n    dy: number,\n    _x: number,\n    _y: number,\n    _event: MouseEvent,\n  ): void {\n    if (!this.viewBoxBeforeDrag) {\n      return;\n    }\n\n    this.render.setViewBox({\n      ...this.viewBoxBeforeDrag,\n      minY: this.viewBoxBeforeDrag.minY + getUserFriendlyViewBoxDelta(dy),\n    });\n  }\n}\n","import { clamp } from 'lodash';\nimport { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { Scrollbar } from './scrollbar';\nimport { RaphaelRectAttr } from './types';\nimport {\n  getUserFriendlyScrollOffset,\n  getUserFriendlyViewBoxDelta,\n  getZoomedValue,\n} from './utils';\n\nexport class HorizontalScrollbar extends Scrollbar {\n  #scrollOffset: ScrollOffset;\n\n  constructor(render: Render, scrollOffset: ScrollOffset) {\n    super(render);\n    this.#scrollOffset = scrollOffset;\n  }\n\n  hasOffset(): boolean {\n    return this.#scrollOffset.hasHorizontalOffset();\n  }\n\n  getDynamicAttr(): RaphaelRectAttr {\n    const minX =\n      this.render.viewBox.minX +\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.left),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.width -\n          getZoomedValue(this.MIN_LENGTH + this.MARGIN, this.render.options),\n      );\n    const minY =\n      this.render.viewBox.minY +\n      this.render.viewBox.height -\n      getZoomedValue(this.DIST_TO_EDGE, this.render.options);\n    const maxX =\n      this.render.viewBox.minX +\n      this.render.viewBox.width -\n      clamp(\n        getUserFriendlyScrollOffset(this.#scrollOffset.right),\n        getZoomedValue(this.MARGIN, this.render.options),\n        this.render.viewBox.width,\n      );\n    const length = Math.max(\n      maxX - minX,\n      getZoomedValue(this.MIN_LENGTH, this.render.options),\n    );\n\n    return {\n      x: minX,\n      y: minY,\n      width: length,\n      height: getZoomedValue(this.WIDTH, this.render.options),\n      r: getZoomedValue(this.RADIUS, this.render.options),\n    };\n  }\n\n  onDragMove(\n    dx: number,\n    _dy: number,\n    _x: number,\n    _y: number,\n    _event: MouseEvent,\n  ): void {\n    if (!this.viewBoxBeforeDrag) {\n      return;\n    }\n\n    this.render.setViewBox({\n      ...this.viewBoxBeforeDrag,\n      minX: this.viewBoxBeforeDrag.minX + getUserFriendlyViewBoxDelta(dx),\n    });\n  }\n}\n","import { Render } from '../raphaelRender';\nimport { ScrollOffset } from './scroll-offset';\nimport { VerticalScrollbar } from './scrollbar-vertical';\nimport { HorizontalScrollbar } from './scrollbar-horizontal';\n\nexport class ScrollbarContainer {\n  #scrollOffset: ScrollOffset;\n  #verticalBar: VerticalScrollbar | null = null;\n  #horizontalBar: HorizontalScrollbar | null = null;\n\n  constructor(render: Render) {\n    this.#scrollOffset = new ScrollOffset(render);\n    this.#verticalBar = new VerticalScrollbar(render, this.#scrollOffset);\n    this.#horizontalBar = new HorizontalScrollbar(render, this.#scrollOffset);\n  }\n\n  update() {\n    this.#scrollOffset.update();\n    this.#verticalBar?.update();\n    this.#horizontalBar?.update();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities';\nimport { RaphaelPaper } from 'raphael';\n\nimport Raphael from './raphael-ext';\nimport { ReStruct } from './restruct';\nimport { Scale } from 'domain/helpers';\nimport defaultOptions from './options';\nimport draw from './draw';\nimport { RenderOptions, ViewBox } from './render.types';\nimport { KetcherLogger } from 'utilities';\nimport { CoordinateTransformation } from './coordinateTransformation';\nimport { ScrollbarContainer } from './scrollbar';\nimport { notifyRenderComplete } from './notifyRenderComplete';\n\nexport class Render {\n  public skipRaphaelInitialization = false;\n  public readonly clientArea: HTMLElement;\n  public readonly paper: RaphaelPaper;\n  // TODO https://github.com/epam/ketcher/issues/2631\n  public sz: Vec2;\n  // TODO https://github.com/epam/ketcher/issues/2630\n  public ctab: ReStruct;\n  public options: RenderOptions;\n  public viewBox!: ViewBox;\n  private readonly userOpts: RenderOptions;\n  private oldCb: Box2Abs | null = null;\n  private scrollbar: ScrollbarContainer;\n  private resizeObserver: ResizeObserver | null = null;\n\n  constructor(\n    clientArea: HTMLElement,\n    options: RenderOptions,\n    reuseRestructIfExist?: boolean,\n  ) {\n    this.userOpts = options;\n    this.clientArea = clientArea;\n    this.paper = new Raphael(\n      clientArea,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      options.width || '100%',\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: raphael typing issues\n      options.height || '100%',\n    );\n    this.sz = this.getCanvasSizeVector();\n    this.options = defaultOptions(this.userOpts);\n    if (reuseRestructIfExist && global.ketcher?.editor?.render?.ctab) {\n      this.ctab = global.ketcher?.editor?.render?.ctab;\n      this.ctab.render = this;\n      this.ctab.initLayers();\n      this.ctab.update(true);\n    } else {\n      this.ctab = new ReStruct(new Struct(), this);\n    }\n    this.scrollbar = new ScrollbarContainer(this);\n    this.setViewBox({\n      minX: 0,\n      minY: 0,\n      width: this.sz.x,\n      height: this.sz.y,\n    });\n  }\n\n  observeCanvasResize = () => {\n    this.resizeObserver = new ResizeObserver(() => {\n      this.sz = new Vec2(\n        this.clientArea.clientWidth,\n        this.clientArea.clientHeight,\n      );\n      this.resizeViewBox();\n    });\n\n    this.resizeObserver.observe(this.paper.canvas);\n  };\n\n  unobserveCanvasResize = () => {\n    this.resizeObserver?.unobserve(this.paper.canvas);\n  };\n\n  updateOptions(opts: string) {\n    try {\n      const passedOptions = JSON.parse(opts);\n      if (passedOptions && typeof passedOptions === 'object') {\n        this.options = { ...this.options, ...passedOptions };\n        return this.options;\n      }\n    } catch (e) {\n      KetcherLogger.error('raphaelRenderer.ts::updateOptions', e);\n      console.log('Not a valid settings object');\n    }\n    return false;\n  }\n\n  selectionPolygon(polygon: Vec2[]) {\n    return draw.selectionPolygon(this.paper, polygon, this.options);\n  }\n\n  selectionLine(point0: Vec2, point1: Vec2) {\n    return draw.selectionLine(this.paper, point0, point1, this.options);\n  }\n\n  selectionRectangle(point0: Vec2, point1: Vec2) {\n    return draw.selectionRectangle(this.paper, point0, point1, this.options);\n  }\n\n  /** @deprecated recommend using `CoordinateTransformation.pageToModel` instead */\n  page2obj(event: MouseEvent | { clientX: number; clientY: number }) {\n    return CoordinateTransformation.pageToModel(event, this);\n  }\n\n  setZoom(zoom: number, event?: WheelEvent) {\n    const zoomedWidth = this.sz.x / zoom;\n    const zoomedHeight = this.sz.y / zoom;\n    const [viewBoxX, viewBoxY] = event\n      ? this.zoomOnMouse(event, zoomedWidth, zoomedHeight)\n      : this.zoomOnCanvasCenter(zoomedWidth, zoomedHeight);\n    this.setViewBox({\n      minX: viewBoxX,\n      minY: viewBoxY,\n      width: zoomedWidth,\n      height: zoomedHeight,\n    });\n\n    this.options.zoom = zoom;\n  }\n\n  private getCanvasSizeVector() {\n    return new Vec2(this.clientArea.clientWidth, this.clientArea.clientHeight);\n  }\n\n  resizeViewBox() {\n    this.sz = this.getCanvasSizeVector();\n    const newWidth = this.sz.x / this.options.zoom;\n    const newHeight = this.sz.y / this.options.zoom;\n    this.setViewBox((prev) => ({\n      ...prev,\n      width: newWidth,\n      height: newHeight,\n    }));\n  }\n\n  private zoomOnCanvasCenter(zoomedWidth: number, zoomedHeight: number) {\n    const fixedPoint = new Vec2(\n      this.viewBox.minX + this.viewBox.width / 2,\n      this.viewBox.minY + this.viewBox.height / 2,\n    );\n    const viewBoxX = fixedPoint.x - zoomedWidth / 2;\n    const viewBoxY = fixedPoint.y - zoomedHeight / 2;\n    return [viewBoxX, viewBoxY];\n  }\n\n  private zoomOnMouse(\n    event: WheelEvent,\n    zoomedWidth: number,\n    zoomedHeight: number,\n  ) {\n    const fixedPoint = CoordinateTransformation.pageToCanvas(event, this);\n    const widthRatio = (fixedPoint.x - this.viewBox.minX) / this.viewBox.width;\n    const heightRatio =\n      (fixedPoint.y - this.viewBox.minY) / this.viewBox.height;\n    const viewBoxX = fixedPoint.x - zoomedWidth * widthRatio;\n    const viewBoxY = fixedPoint.y - zoomedHeight * heightRatio;\n    return [viewBoxX, viewBoxY];\n  }\n\n  /**\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/viewBox\n   */\n  setViewBox(func: (viewBox: ViewBox) => ViewBox): void;\n  setViewBox(viewBox: ViewBox): void;\n  setViewBox(arg: ViewBox | ((viewBox: ViewBox) => ViewBox)): void {\n    const newViewBox = typeof arg === 'function' ? arg(this.viewBox) : arg;\n    this.viewBox = newViewBox;\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      `${newViewBox.minX} ${newViewBox.minY} ${newViewBox.width} ${newViewBox.height}`,\n    );\n    this.scrollbar.update();\n  }\n\n  setMolecule(struct: Struct, forceUpdateWithTimeout = false) {\n    this.paper.clear();\n    this.ctab = new ReStruct(struct, this);\n    this.options.offset = new Vec2();\n    // need to use force update with timeout to have ability select bonds in case of usage:\n    // addFragment, setMolecule or \"Paste from clipboard\" with \"Open as New Project\" button\n    if (forceUpdateWithTimeout) {\n      setTimeout(() => {\n        this.update(true);\n      }, 0);\n    } else {\n      this.update(false);\n    }\n  }\n\n  update(force = false, viewSz: Vec2 | null = null) {\n    // eslint-disable-line max-statements\n    viewSz =\n      viewSz ||\n      new Vec2(\n        this.clientArea.clientWidth || 100,\n        this.clientArea.clientHeight || 100,\n      );\n\n    const changes = this.ctab.update(force);\n    this.ctab.setSelection(); // [MK] redraw the selection bits where necessary\n    if (changes) {\n      const bb = this.ctab\n        .getVBoxObj()\n        .transform(Scale.modelToCanvas, this.options)\n        .translate(this.options.offset || new Vec2());\n\n      if (this.options.downScale) {\n        this.ctab.molecule.rescale();\n      }\n\n      const isAutoScale = this.options.autoScale || this.options.downScale;\n      if (!isAutoScale) {\n        if (!this.oldCb) this.oldCb = new Box2Abs();\n        this.scrollbar.update();\n        this.options.offset = this.options.offset || new Vec2();\n      } else {\n        const sz1 = bb.sz();\n        const marg = this.options.autoScaleMargin;\n        const mv = new Vec2(marg, marg);\n        const csz = viewSz;\n        if (marg && (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1)) {\n          throw new Error('View box too small for the given margin');\n        }\n        let rescale =\n          this.options.rescaleAmount ||\n          Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg));\n\n        const isForceDownscale = this.options.downScale && rescale < 1;\n        const isBondsLengthFit = this.options.maxBondLength / rescale > 1;\n        if (isBondsLengthFit || isForceDownscale) {\n          rescale = 1;\n        }\n        const sz2 = sz1.add(mv.scaled(2 * rescale));\n        this.paper.setViewBox(\n          bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n          bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n          csz.x * rescale,\n          csz.y * rescale,\n        );\n      }\n\n      notifyRenderComplete();\n    }\n  }\n}\n","import { Struct } from 'domain/entities';\nimport { isEqual } from 'lodash';\nimport { Render } from './raphaelRender';\nimport ReAtom from './restruct/reatom';\n\n/**\n * Is used to improve search and opening tab performance in Template Dialog\n * Rendering a lot of structures causes great delay\n */\nconst renderCache = new Map();\nlet previousOptions: any;\nconst MIN_ATTACHMENT_POINT_SIZE = 8;\nconst attachmentPointRegExp = /^R[1-8]$/;\n\nexport class RenderStruct {\n  /**\n   * for S-Groups we want to show expanded structure\n   * without brackets\n   */\n  static prepareStruct(struct: Struct) {\n    if (struct.sgroups.size > 0) {\n      const newStruct = struct.clone();\n      convertAllSGroupAttachmentPointsToRGroupAttachmentPoints(newStruct);\n      if (!newStruct.sgroups.get(0)?.isSuperatomWithoutLabel) {\n        newStruct.sgroups.delete(0);\n      }\n      return newStruct;\n    }\n    return struct;\n  }\n\n  static removeSmallAttachmentPointLabelsInModal(\n    render: Render,\n    options: any = {},\n  ) {\n    if (!options.labelInMonomerConnectionsModal) {\n      return;\n    }\n\n    render.ctab.atoms.forEach((atom: ReAtom) => {\n      if (!atom.label) {\n        return;\n      }\n      const isAttachmentPointAtom = attachmentPointRegExp.test(atom.label.text);\n\n      if (!isAttachmentPointAtom) {\n        return;\n      }\n\n      const isSmall =\n        atom.label.path.node.getBoundingClientRect().width <\n        MIN_ATTACHMENT_POINT_SIZE;\n\n      if (isSmall) {\n        atom.label.path.node.remove();\n      }\n    });\n  }\n\n  static render(\n    el: HTMLElement | null,\n    struct: Struct | null,\n    options: any = {},\n  ) {\n    if (el && struct) {\n      const { cachePrefix = '', needCache = true } = options;\n      const cacheKey = `${cachePrefix}${struct.name}`;\n\n      if (!isEqual(previousOptions, options)) {\n        renderCache.clear();\n        previousOptions = options;\n      }\n\n      if (renderCache.has(cacheKey) && needCache) {\n        el.innerHTML = renderCache.get(cacheKey);\n        return;\n      }\n\n      const preparedStruct = this.prepareStruct(struct);\n      preparedStruct.initHalfBonds();\n      preparedStruct.initNeighbors();\n      preparedStruct.setImplicitHydrogen();\n      preparedStruct.markFragments();\n\n      const rnd = new Render(el, {\n        autoScale: true,\n        ...options,\n      });\n\n      preparedStruct.rescale();\n      rnd.setMolecule(preparedStruct);\n      this.removeSmallAttachmentPointLabelsInModal(rnd, options);\n\n      if (needCache) {\n        renderCache.set(cacheKey, rnd.clientArea.innerHTML);\n      }\n    }\n  }\n}\n\n/**\n * Why?\n * We need somehow display sgroup attachment points (tooltips, preview, templates),\n * But due to current rendering approach for sgroups (ungrouping sgroups)\n * - we have to use RGroup attachment points on atoms for this purposes\n */\nfunction convertAllSGroupAttachmentPointsToRGroupAttachmentPoints(\n  struct: Struct,\n) {\n  struct.sgroups.forEach((sgroup) => {\n    if (sgroup.isSuperatomWithoutLabel) {\n      return;\n    }\n\n    sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const attachmentPointAtom = struct.atoms.get(attachmentPoint.atomId)!;\n      attachmentPointAtom.setRGAttachmentPointForDisplayPurpose();\n      const rgroupAttachmentPoint =\n        attachmentPoint.convertToRGroupAttachmentPointForDisplayPurpose(\n          attachmentPoint.atomId,\n        );\n      struct.rgroupAttachmentPoints.add(rgroupAttachmentPoint);\n    });\n  });\n}\n","import {\n  Chem,\n  Peptide,\n  Phosphate,\n  Vec2,\n  Nucleotide,\n  Nucleoside,\n  EmptySequenceNode,\n  LinkerSequenceNode,\n  UnresolvedMonomer,\n  UnsplitNucleotide,\n} from 'domain/entities';\nimport {\n  PeptideSequenceItemRenderer,\n  ChemSequenceItemRenderer,\n  PhosphateSequenceItemRenderer,\n  NucleotideSequenceItemRenderer,\n  EmptySequenceItemRenderer,\n  BaseMonomerRenderer,\n  BaseSequenceItemRenderer,\n  NucleosideSequenceItemRenderer,\n  UnresolvedMonomerSequenceItemRenderer,\n  UnsplitNucleotideSequenceItemRenderer,\n} from 'application/render';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\n\nexport class SequenceNodeRendererFactory {\n  static fromNode(\n    node: SubChainNode,\n    firstMonomerInChainPosition: Vec2,\n    monomerIndexInChain: number,\n    isLastMonomerInChain: boolean,\n    subChain: BaseSubChain,\n    isEditingSymbol: boolean,\n    renderer?: BaseMonomerRenderer | BaseSequenceItemRenderer,\n  ) {\n    let RendererClass;\n\n    switch (node.constructor) {\n      case Nucleotide:\n        RendererClass = NucleotideSequenceItemRenderer;\n        break;\n      case Nucleoside:\n        RendererClass = NucleosideSequenceItemRenderer;\n        break;\n      case EmptySequenceNode:\n        RendererClass = EmptySequenceItemRenderer;\n        break;\n      case LinkerSequenceNode:\n        RendererClass = ChemSequenceItemRenderer;\n        break;\n      default:\n        switch (node.monomer.constructor) {\n          case Phosphate:\n            RendererClass = PhosphateSequenceItemRenderer;\n            break;\n          case Peptide:\n            RendererClass = PeptideSequenceItemRenderer;\n            break;\n          case Chem:\n            RendererClass = ChemSequenceItemRenderer;\n            break;\n          case UnresolvedMonomer:\n            RendererClass = UnresolvedMonomerSequenceItemRenderer;\n            break;\n          case UnsplitNucleotide:\n            RendererClass = UnsplitNucleotideSequenceItemRenderer;\n            break;\n          default:\n            RendererClass = ChemSequenceItemRenderer;\n            break;\n        }\n    }\n\n    return new RendererClass(\n      node,\n      firstMonomerInChainPosition,\n      monomerIndexInChain,\n      isLastMonomerInChain,\n      subChain,\n      isEditingSymbol,\n      renderer?.monomerSize,\n      renderer?.scaledMonomerPosition,\n    );\n  }\n}\n","import { BaseMonomer } from './BaseMonomer';\nimport { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { Struct } from 'domain/entities/struct';\n\nfunction getEmptyMonomerItem() {\n  return {\n    label: '',\n    struct: new Struct(),\n    props: {\n      MonomerNaturalAnalogCode: '',\n      MonomerName: '',\n      Name: '',\n    },\n  };\n}\n\nexport class EmptyMonomer extends BaseMonomer {\n  constructor() {\n    super(getEmptyMonomerItem(), undefined, { generateId: false });\n  }\n\n  public getValidSourcePoint() {\n    return undefined;\n  }\n\n  public getValidTargetPoint() {\n    return undefined;\n  }\n\n  public get SubChainConstructor() {\n    return EmptySubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining() {\n    return true;\n  }\n}\n","import { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { EmptyMonomer } from 'domain/entities/EmptyMonomer';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class EmptySequenceNode {\n  public renderer?: BaseSequenceItemRenderer = undefined;\n  public monomer = new EmptyMonomer();\n  constructor() {}\n\n  public get SubChainConstructor() {\n    return EmptySubChain;\n  }\n\n  public get firstMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get lastMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get hovered() {\n    return false;\n  }\n\n  public get selected() {\n    return false;\n  }\n\n  public get monomerItem() {\n    return { props: { MonomerNaturalAnalogCode: null } };\n  }\n\n  public get monomers(): BaseMonomer[] {\n    return [];\n  }\n\n  public setRenderer(renderer) {\n    this.renderer = renderer;\n    this.monomer.setRenderer(renderer);\n  }\n\n  public get modified() {\n    return false;\n  }\n}\n","import { D3SvgElementSelection } from 'application/render/types';\nimport { Vec2 } from 'domain/entities';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { CoreEditor } from 'application/editor/internal';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport assert from 'assert';\nimport { SequenceRenderer } from 'application/render';\n\nconst CHAIN_START_ARROW_SYMBOL_ID = 'sequence-start-arrow';\n\nexport abstract class BaseSequenceItemRenderer extends BaseSequenceRenderer {\n  private editorEvents: typeof editorEvents;\n  public textElement?: D3SvgElementSelection<SVGTextElement, void>;\n  public counterElement?: D3SvgElementSelection<SVGTextElement, void>;\n  private selectionRectangle?: D3SvgElementSelection<SVGRectElement, void>;\n  public spacerElement?: D3SvgElementSelection<SVGGElement, void>;\n  public backgroundElement?: D3SvgElementSelection<SVGRectElement, void>;\n  public caretElement?: D3SvgElementSelection<SVGLineElement, void>;\n\n  constructor(\n    public node: SubChainNode,\n    private firstNodeInChainPosition: Vec2,\n    private monomerIndexInChain: number,\n    private isLastMonomerInChain: boolean,\n    private subChain: BaseSubChain,\n    private _isEditingSymbol: boolean,\n    public monomerSize: { width: number; height: number },\n    public scaledMonomerPosition: Vec2,\n  ) {\n    super(node.monomer);\n    this.editorEvents = editorEvents;\n  }\n\n  abstract get symbolToDisplay(): string;\n\n  public get isEditingSymbol() {\n    return this._isEditingSymbol;\n  }\n\n  public set isEditingSymbol(isEditingSymbol: boolean) {\n    this._isEditingSymbol = isEditingSymbol;\n  }\n\n  private get isSingleEmptyNode() {\n    return (\n      SequenceRenderer.chainsCollection.length === 1 &&\n      this.node instanceof EmptySequenceNode\n    );\n  }\n\n  protected abstract drawModification(): void;\n\n  protected appendHover(): D3SvgElementSelection<SVGUseElement, void> | void {\n    return undefined;\n  }\n\n  protected appendHoverAreaElement(): void {}\n  moveSelection(): void {}\n\n  public get currentSubChain() {\n    return this.subChain;\n  }\n\n  public get scaledMonomerPositionForSequence() {\n    const indexInRow = this.monomerIndexInChain % this.symbolsInRow;\n    const rowIndex = Math.floor(this.monomerIndexInChain / this.symbolsInRow);\n\n    return new Vec2(\n      this.firstNodeInChainPosition.x +\n        indexInRow * 20 +\n        Math.floor(indexInRow / this.nthSeparationInRow) * 10,\n      this.firstNodeInChainPosition.y + 47 * rowIndex,\n    );\n  }\n\n  public get center() {\n    return this.scaledMonomerPositionForSequence.add(new Vec2(4.5, 0, 0));\n  }\n\n  protected get isSequenceEditModeTurnedOn() {\n    return CoreEditor.provideEditorInstance().isSequenceEditMode;\n  }\n\n  protected get isSequenceEditInRnaBuilderModeTurnedOn() {\n    return CoreEditor.provideEditorInstance().isSequenceEditInRNABuilderMode;\n  }\n\n  private appendRootElement() {\n    const rootElement = this.canvas\n      .append('g')\n      .data([this])\n      .attr('transition', 'transform 0.2s')\n      .attr(\n        'transform',\n        `translate(${this.scaledMonomerPositionForSequence.x}, ${this.scaledMonomerPositionForSequence.y})`,\n      ) as never as D3SvgElementSelection<SVGGElement, void>;\n\n    if (this.isSequenceEditModeTurnedOn || this.isSingleEmptyNode) {\n      rootElement.attr('pointer-events', 'all').attr('cursor', 'text');\n    }\n\n    return rootElement;\n  }\n\n  private appendBackgroundElement() {\n    const backgroundElement = this.rootElement\n      ?.append('rect')\n      .attr('width', 16)\n      .attr('height', 20)\n      .attr('y', -16)\n      .attr('x', -2)\n      .attr('rx', 2)\n      .attr(\n        'cursor',\n        this.isSequenceEditModeTurnedOn || this.isSingleEmptyNode\n          ? 'text'\n          : 'default',\n      );\n\n    backgroundElement?.attr('fill', 'transparent');\n\n    return backgroundElement;\n  }\n\n  private appendSpacerElement() {\n    const spacerGroupElement = this.rootElement\n      ?.append('g')\n      .attr('transform', 'translate(14, -16)');\n\n    spacerGroupElement\n      ?.append('rect')\n      .attr('width', 4)\n      .attr('height', 20)\n      .attr(\n        'cursor',\n        this.isSequenceEditInRnaBuilderModeTurnedOn ? 'default' : 'text',\n      )\n      .attr('fill', 'transparent');\n\n    return spacerGroupElement;\n  }\n\n  private get nthSeparationInRow() {\n    return 10;\n  }\n\n  private get symbolsInRow() {\n    return 30;\n  }\n\n  private appendCounterElement(\n    rootElement: D3SvgElementSelection<SVGGElement, void>,\n  ) {\n    return rootElement\n      .append('text')\n      .attr('x', '-2')\n      .attr('y', '-24')\n      .text(this.monomerIndexInChain + 1)\n      .attr('font-family', 'Courier New')\n      .attr('font-size', '12px')\n      .attr('font-weight', '700')\n      .attr('style', 'user-select: none')\n      .attr('fill', '#7C7C7F');\n  }\n\n  private get needDisplayCounter() {\n    return (\n      ((this.monomerIndexInChain + 1) % this.nthSeparationInRow === 0 ||\n        this.isLastMonomerInChain) &&\n      !(this.node instanceof EmptySequenceNode)\n    );\n  }\n\n  private get isBeginningOfChain() {\n    return this.monomerIndexInChain === 0;\n  }\n\n  public showCaret() {\n    this.caretElement = this.spacerElement\n      ?.append('line')\n      .attr('x1', -17)\n      .attr('y1', -1)\n      .attr('x2', -17)\n      .attr('y2', 21)\n      .attr('stroke', '#333')\n      .attr('class', 'blinking');\n  }\n\n  public removeCaret() {\n    this.caretElement?.remove();\n    this.caretElement = undefined;\n  }\n\n  protected redrawBackgroundElementColor() {\n    this.backgroundElement?.attr(\n      'fill',\n      this.isSequenceEditModeTurnedOn || this.isSingleEmptyNode\n        ? '#FF7A001A'\n        : 'transparent',\n    );\n  }\n\n  private appendChainStartArrow() {\n    this.rootElement\n      ?.append('use')\n      .attr('x', -17)\n      .attr('y', -27)\n      .attr('href', `#${CHAIN_START_ARROW_SYMBOL_ID}`);\n  }\n\n  private drawGreyOverlay() {\n    this.rootElement?.attr('opacity', '0.2');\n  }\n\n  show(): void {\n    this.rootElement = this.appendRootElement();\n    if (\n      (this.isBeginningOfChain && this.isSequenceEditModeTurnedOn) ||\n      this.isSingleEmptyNode\n    ) {\n      this.appendChainStartArrow();\n    }\n    this.spacerElement = this.appendSpacerElement();\n    this.backgroundElement = this.appendBackgroundElement();\n\n    if (\n      (this.isSequenceEditModeTurnedOn && this.isEditingSymbol) ||\n      this.isSingleEmptyNode\n    ) {\n      this.showCaret();\n    }\n\n    this.textElement = this.rootElement\n      .append('text')\n      .text(this.symbolToDisplay)\n      .attr('font-family', 'Courier New')\n      .attr('font-size', '20px')\n      .attr('font-weight', '700')\n      .attr(\n        'fill',\n        this.isSequenceEditInRnaBuilderModeTurnedOn ? '24545A' : '#333333',\n      )\n      .attr('style', 'user-select: none;')\n      .attr(\n        'cursor',\n        this.isSequenceEditModeTurnedOn || this.isSingleEmptyNode\n          ? 'text'\n          : 'default',\n      );\n\n    this.appendEvents();\n    if (this.needDisplayCounter) {\n      this.counterElement = this.appendCounterElement(this.rootElement);\n    }\n\n    this.drawSelection();\n\n    if (\n      this.isSequenceEditInRnaBuilderModeTurnedOn &&\n      !this.node.monomer.selected\n    ) {\n      this.drawGreyOverlay();\n    }\n  }\n\n  drawSelection(): void {\n    if (!this.rootElement) {\n      return;\n    }\n    if (this.node.monomer.selected && !this.isSingleEmptyNode) {\n      this.appendSelection();\n      this.raiseElement();\n    } else {\n      this.removeSelection();\n    }\n\n    if (this.node.modified) {\n      this.drawModification();\n    }\n  }\n\n  public appendSelection() {\n    this.selectionRectangle =\n      this.selectionRectangle ||\n      this.rootElement?.insert('rect', ':first-child');\n\n    if (this.isSequenceEditInRnaBuilderModeTurnedOn) {\n      this.selectionRectangle\n        ?.attr('fill', '#99D6DC')\n        .attr('x', -3)\n        .attr('y', -21)\n        .attr('width', 18)\n        .attr('height', 30)\n        .attr('rx', 3)\n        .attr('class', 'dynamic-element');\n    } else {\n      this.selectionRectangle\n        ?.attr('fill', '#57FF8F')\n        .attr('x', -4)\n        .attr('y', -16)\n        .attr('width', 20)\n        .attr('height', 20)\n        .attr('class', 'dynamic-element');\n    }\n    this.backgroundElement?.attr('fill', 'none');\n  }\n\n  public removeSelection() {\n    this.selectionRectangle?.remove();\n    this.selectionRectangle = undefined;\n  }\n\n  private raiseElement() {\n    this.selectionRectangle?.lower();\n  }\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n    this.removeSelection();\n  }\n\n  public setEnumeration() {}\n  public redrawEnumeration() {}\n  public redrawAttachmentPoints() {}\n  public redrawAttachmentPointsCoordinates() {}\n  public get enumeration() {\n    return null;\n  }\n\n  public hoverAttachmenPoint() {}\n  public updateAttachmentPoints() {}\n\n  private drawBackgroundElementHover() {\n    if (this.isSequenceEditModeTurnedOn || this.isSingleEmptyNode) {\n      return;\n    }\n\n    this.backgroundElement?.attr(\n      'fill',\n      this.node.monomer.selected ? 'none' : '#E1E8E9',\n    );\n\n    if (this.node.modified) {\n      this.drawModification();\n    }\n  }\n\n  private removeBackgroundElementHover() {\n    this.backgroundElement?.attr('fill', 'none');\n\n    if (this.node.modified) {\n      this.drawModification();\n    }\n  }\n\n  private appendEvents() {\n    assert(this.textElement);\n\n    this.textElement.on('mouseover', (event) => {\n      this.drawBackgroundElementHover();\n      this.editorEvents.mouseOverSequenceItem.dispatch(event);\n    });\n    this.textElement.on('mousemove', (event) => {\n      this.editorEvents.mouseOnMoveSequenceItem.dispatch(event);\n    });\n    this.textElement.on('mouseleave', (event) => {\n      this.removeBackgroundElementHover();\n      this.editorEvents.mouseLeaveSequenceItem.dispatch(event);\n    });\n    this.spacerElement?.on('mousedown', (event) => {\n      this.editorEvents.mousedownBetweenSequenceItems.dispatch(event);\n    });\n    this.backgroundElement?.on('click', (event) => {\n      this.editorEvents.clickOnSequenceItem.dispatch(event);\n    });\n    this.backgroundElement?.on('mousedown', (event) => {\n      this.editorEvents.mouseDownOnSequenceItem.dispatch(event);\n    });\n    this.backgroundElement?.on('dblclick', (event) => {\n      this.editorEvents.doubleClickOnSequenceItem.dispatch(event);\n    });\n    this.textElement.on('dblclick', (event) => {\n      this.editorEvents.doubleClickOnSequenceItem.dispatch(event);\n    });\n    this.backgroundElement?.on('mouseover', () => {\n      this.drawBackgroundElementHover();\n    });\n    this.backgroundElement?.on('mouseleave', () => {\n      this.removeBackgroundElementHover();\n    });\n  }\n}\n","import { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { SubChainNode, Vec2 } from 'domain/entities';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PolymerBondSequenceRenderer extends BaseSequenceRenderer {\n  private selectionElement:\n    | D3SvgElementSelection<SVGPathElement, void>\n    | undefined;\n\n  constructor(\n    public polymerBond: PolymerBond,\n    private firstNode?: SubChainNode,\n    private secondNode?: SubChainNode,\n  ) {\n    super(polymerBond);\n  }\n\n  private get firstMonomer() {\n    return this.firstNode?.monomer || this.polymerBond.firstMonomer;\n  }\n\n  private get secondMonomer() {\n    return this.secondNode?.monomer || this.polymerBond.secondMonomer;\n  }\n\n  private get areMonomersOnSameRow() {\n    assert(this.firstMonomer.renderer instanceof BaseSequenceItemRenderer);\n    assert(this.secondMonomer?.renderer instanceof BaseSequenceItemRenderer);\n\n    return (\n      this.firstMonomer.renderer?.scaledMonomerPositionForSequence.y ===\n      this.secondMonomer?.renderer?.scaledMonomerPositionForSequence.y\n    );\n  }\n\n  public get scaledPosition() {\n    assert(this.firstMonomer.renderer instanceof BaseSequenceItemRenderer);\n    assert(this.secondMonomer?.renderer instanceof BaseSequenceItemRenderer);\n    const firstMonomerY =\n      this.firstMonomer.renderer.scaledMonomerPositionForSequence.y;\n    const firstMonomerX =\n      this.firstMonomer.renderer.scaledMonomerPositionForSequence.x;\n    const secondMonomerY =\n      this.secondMonomer.renderer.scaledMonomerPositionForSequence.y;\n    const secondMonomerX =\n      this.secondMonomer.renderer.scaledMonomerPositionForSequence.x;\n\n    return {\n      startPosition: new Vec2(firstMonomerX, firstMonomerY),\n      endPosition: new Vec2(secondMonomerX, secondMonomerY),\n    };\n  }\n\n  public get center() {\n    return Vec2.centre(\n      new Vec2(\n        this.scaledPosition.startPosition.x + 6,\n        this.mainLineY.mainLineY1,\n      ),\n      new Vec2(\n        this.scaledPosition.startPosition.x + 6,\n        this.mainLineY.mainLineY2,\n      ),\n    );\n  }\n\n  private get mainLineY() {\n    const mainLineY1 =\n      this.scaledPosition.startPosition.y -\n      (this.scaledPosition.startPosition.y > this.scaledPosition.endPosition.y\n        ? 15\n        : -3) +\n      (this.areMonomersOnSameRow ? -25 : 0);\n\n    const mainLineY2 =\n      this.scaledPosition.endPosition.y -\n      (this.scaledPosition.endPosition.y > this.scaledPosition.startPosition.y\n        ? 15\n        : -3) +\n      (this.areMonomersOnSameRow ? -25 : 0);\n    return { mainLineY1, mainLineY2 };\n  }\n\n  public show() {\n    this.rootElement = this.canvas\n      .insert('g', `:first-child`)\n      .data([this]) as never as D3SvgElementSelection<SVGGElement, void>;\n\n    this.rootElement\n      ?.append('path')\n      .attr('stroke', 'black')\n      .attr('fill', 'none')\n      .attr('d', this.getBondPath());\n  }\n\n  public drawSelection() {\n    assert(this.rootElement);\n    if (this.polymerBond.selected) {\n      this.selectionElement?.remove();\n      this.selectionElement = this.rootElement\n        ?.insert('path', ':first-child')\n        .attr('stroke', '#57FF8F')\n        .attr('stroke-width', '6')\n        .attr('fill', 'none');\n\n      this.selectionElement.attr('d', this.getBondPath());\n    } else {\n      this.selectionElement?.remove();\n    }\n  }\n\n  private getBondPath() {\n    let path = '';\n    if (this.areMonomersOnSameRow) {\n      path = `M ${this.scaledPosition.startPosition.x + 6},\n      ${this.mainLineY.mainLineY1 + 5} \n      L ${this.scaledPosition.startPosition.x + 6}, ${\n        this.mainLineY.mainLineY1\n      } \n      L ${this.scaledPosition.endPosition.x + 6}, ${this.mainLineY.mainLineY2}\n      L ${this.scaledPosition.endPosition.x + 6}, ${\n        this.mainLineY.mainLineY2 + 5\n      }`;\n    } else {\n      path = `M ${this.scaledPosition.startPosition.x + 6}, ${\n        this.mainLineY.mainLineY1\n      } L ${this.scaledPosition.endPosition.x + 6}, ${\n        this.mainLineY.mainLineY2\n      }`;\n    }\n    return path;\n  }\n\n  public moveStart() {}\n\n  public moveEnd() {}\n\n  public get isSnake() {\n    return false;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return false;\n  }\n}\n","export enum RNA_DNA_NON_MODIFIED_PART {\n  SUGAR_RNA = 'R',\n  SUGAR_DNA = 'dR',\n  PHOSPHATE = 'P',\n}\n\nexport const rnaDnaNaturalAnalogues = ['A', 'T', 'G', 'C', 'U'];\nexport const peptideNaturalAnalogues = [\n  'A',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'K',\n  'L',\n  'M',\n  'N',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'V',\n  'W',\n  'Y',\n];\n\nexport const NO_NATURAL_ANALOGUE = 'X';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render';\n\nimport { OperationType } from './OperationType';\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>;\ntype OperationType = ValueOf<typeof OperationType>;\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined;\n  type: OperationType;\n  priority: number;\n  data: any;\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type;\n    this.priority = priority;\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented');\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct);\n    if (!this._inverted) {\n      this._inverted = this.invert();\n      this._inverted._inverted = this;\n    }\n    return this._inverted;\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented');\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false;\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId);\n    if (!atom) {\n      return;\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0);\n\n    const halfBonds = restruct.molecule.halfBonds;\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return;\n      }\n\n      const halfBond = halfBonds.get(halfBondId);\n      if (!halfBond) {\n        return;\n      }\n\n      restruct.markBond(halfBond.bid, 1);\n      restruct.markAtom(halfBond.end, 0);\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid);\n      }\n    });\n\n    const fragment = atom.a.fragment;\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle;\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0);\n      }\n    });\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId);\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return;\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2);\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop);\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop);\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId);\n\n    const bond = restruct.bonds.get(bondId);\n    if (!bond) {\n      return;\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0);\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0);\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    mapName: keyof typeof ReStruct.maps,\n    id: number,\n    level?: any,\n  ) {\n    if (mapName === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level);\n      return;\n    }\n\n    if (mapName === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id);\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id);\n      }\n      return;\n    }\n\n    restruct.markItem(mapName, id, level);\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number,\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1);\n  }\n}\n\nexport { BaseOperation };\nexport default BaseOperation;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATTACHMENT_POINT_ADD: 'Add attachment point to s-group',\n  S_GROUP_ATTACHMENT_POINT_REMOVE: 'Remove attachment point from s-group',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  R_GROUP_ATTACHMENT_POINT_ADD: 'Add R-group attachment point',\n  R_GROUP_ATTACHMENT_POINT_REMOVE: 'Remove R-group attachment point',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_ROTATE: 'Rotate rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_SET_PROPERTIES: 'Set fragment properties',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight',\n  POLYMER_BOND_ADD: 'Add polymer bond',\n  POLYMER_BOND_DELETE: 'Remove polymer bond',\n  POLYMER_BOND_MOVE: 'Move polymer bond',\n  POLYMER_BOND_FINISH_CREATION: 'Finish polymer bond creation',\n  POLYMER_BOND_CANCEL_CREATION: 'Cancel polymer bond creation',\n  PEPTIDE_ADD: 'Add peptide',\n  PEPTIDE_REMOVE: 'Remove peptide',\n  PEPTIDE_MOVE: 'Move peptide',\n  PEPTIDE_HOVER: 'Hover peptide',\n  DRAWING_ENTITY_SELECT: 'Select drawing entity',\n  DRAWING_ENTITY_HOVER: 'Hover drawing entity',\n  SHOW_POLYMER_BOND_INFORMATION: 'Show polymer bond information',\n  IMAGE_UPSERT: 'Upsert image',\n  IMAGE_DELETE: 'Delete image',\n  IMAGE_MOVE: 'Move image',\n  IMAGE_RESIZE: 'Resize image',\n});\n\nexport enum OperationPriority {\n  ATOM_ATTR = 1,\n  BOND_ADD = 1,\n  R_GROUP_ATTACHMENT_POINT_REMOVE = 1,\n  ATOM_MOVE = 2,\n  BOND_ATTR = 2,\n  BOND_MOVE = 2,\n  BOND_DELETE = 3,\n  S_GROUP_ATOM_ADD = 3,\n  S_GROUP_ATTACHMENT_POINT_ADD = 3,\n  R_GROUP_ATTACHMENT_POINT_ADD = 3,\n  S_GROUP_ATTR = 4,\n  ATOM_DELETE = 5,\n  FRAGMENT_STEREO_FLAG = 6,\n  CALC_IMPLICIT_H = 10,\n  FRAGMENT_DELETE_STEREO_ATOM = 90,\n  S_GROUP_DELETE = 95,\n  S_GROUP_ADD_TO_HIERACHY = 100,\n  FRAGMENT_ADD_STEREO_ATOM = 100,\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  aid?: any;\n  attribute?: any;\n  value?: any;\n};\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, OperationPriority.ATOM_ATTR);\n    this.data = { aid: atomId, attribute, value };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data;\n\n      const atom = restruct.molecule.atoms.get(aid)!;\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute],\n        };\n      }\n\n      atom[attribute] = value;\n      BaseOperation.invalidateAtom(restruct, aid);\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any;\n    d: any;\n    noinvalidate: any;\n  };\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, OperationPriority.ATOM_MOVE);\n    this.data = { aid: atomId, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { aid, d } = this.data;\n    const atom = struct.atoms.get(aid);\n    if (!atom) return;\n    atom!.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid);\n    if (reatom) {\n      const scaled = Scale.modelToCanvas(d, restruct.render.options);\n      reatom.visel.translate(scaled);\n    }\n\n    this.data.d = d.negated();\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1);\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n\n  isDummy() {\n    const { d } = this.data;\n    return d.x === 0 && d.y === 0;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { Atom, Pile, Vec2 } from 'domain/entities';\nimport { ReAtom, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any;\n  atom: any;\n  pos: any;\n};\n\nclass AtomAdd extends BaseOperation {\n  data: Data;\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD);\n    this.data = { atom, pos, aid: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data;\n\n    const struct = restruct.molecule;\n\n    const pp: { label: string } = { label: '' };\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p];\n      });\n    }\n\n    pp.label = pp.label || 'C';\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp));\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp));\n    }\n\n    const { aid } = this.data;\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!);\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]));\n    restruct.atoms.set(aid, atomData);\n    restruct.markAtom(aid, 1);\n\n    struct.atomSetPos(aid, new Vec2(pos));\n\n    const arrow = struct.rxnArrows.get(0);\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!;\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x,\n      );\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data;\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, OperationPriority.ATOM_DELETE);\n    this.data = { aid: atomId, atom: null, pos: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data;\n\n    const struct = restruct.molecule;\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid);\n      this.data.pos = this.data.atom.pp;\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid);\n    if (!restructedAtom) {\n      return;\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component);\n    set.delete(aid);\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component);\n    }\n\n    restruct.clearVisel(restructedAtom.visel);\n    restruct.atoms.delete(aid);\n    restruct.markItemRemoved();\n    struct.atoms.delete(aid);\n  }\n\n  invert() {\n    const inverted = new AtomAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { AtomAdd, AtomDelete };\nexport * from './AtomAttr';\nexport * from './AtomMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  bid: any;\n  attribute: any;\n  value: any;\n  needInvalidateBond?: boolean;\n};\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(\n    bondId?: any,\n    attribute?: any,\n    value?: any,\n    needInvalidateBond = true,\n  ) {\n    super(OperationType.BOND_ATTR, OperationPriority.BOND_ATTR);\n    this.data = { bid: bondId, attribute, value, needInvalidateBond };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data;\n      const bond = restruct.molecule.bonds.get(bid)!;\n\n      if (!this.data2) {\n        this.data2 = {\n          bid,\n          attribute,\n          value: bond[attribute],\n        };\n      }\n\n      bond[attribute] = value;\n\n      if (this.data.needInvalidateBond) {\n        BaseOperation.invalidateBond(restruct, bid);\n      }\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid);\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data;\n      const bond = restruct.molecule.bonds.get(bid)!;\n      return bond[attribute] === value;\n    }\n    return false;\n  }\n\n  invert() {\n    const inverted = new BondAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any;\n    d: any;\n  };\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, OperationPriority.BOND_MOVE);\n    this.data = { bid: bondId, d };\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data;\n    const bond = restruct.bonds.get(bid);\n    if (!bond) return;\n\n    const scaled = Scale.modelToCanvas(d, restruct.render.options);\n    bond.visel.translate(scaled);\n    this.data.d = d.negated();\n  }\n\n  invert() {\n    const inverted = new BondMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReBond, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { Bond } from 'domain/entities';\nimport { OperationPriority, OperationType } from '../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any;\n  begin: any;\n  end: any;\n  bid: any;\n  needInvalidateAtoms?: boolean;\n};\n\nclass BondAdd extends BaseOperation {\n  data: Data;\n\n  constructor(begin?: any, end?: any, bond?: any, needInvalidateAtoms = true) {\n    super(OperationType.BOND_ADD, OperationPriority.BOND_ADD);\n    this.data = { bond, begin, end, bid: null, needInvalidateAtoms };\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data;\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected');\n    }\n\n    if (this.data.needInvalidateAtoms) {\n      BaseOperation.invalidateAtom(restruct, begin, 1);\n      BaseOperation.invalidateAtom(restruct, end, 1);\n    }\n\n    const pp: {\n      type: number;\n      begin: number;\n      end: number;\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0,\n    };\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p];\n      });\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE;\n    pp.begin = begin;\n    pp.end = end;\n\n    const newBond = new Bond(pp);\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond);\n    } else {\n      this.data.bid = struct.bonds.add(newBond);\n    }\n\n    const { bid } = this.data;\n    const structBond = struct.bonds.get(bid)!;\n\n    struct.bondInitHalfBonds(bid);\n    struct.atomAddNeighbor(structBond.hb1);\n    struct.atomAddNeighbor(structBond.hb2);\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond));\n    restruct.markBond(bid, 1);\n  }\n\n  invert() {\n    const inverted = new BondDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data;\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, OperationPriority.BOND_DELETE);\n    this.data = {\n      bid: bondId,\n      bond: null,\n      begin: null,\n      end: null,\n      needInvalidateAtoms: true,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data;\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid);\n      this.data.begin = this.data.bond.begin;\n      this.data.end = this.data.bond.end;\n    }\n\n    BaseOperation.invalidateBond(restruct, bid);\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid);\n    if (!rebond) return;\n    [rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return;\n      const halfBond = restruct.molecule.halfBonds.get(hbid);\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop);\n      }\n    }, restruct);\n    restruct.clearVisel(rebond.visel);\n    restruct.bonds.delete(bid);\n    restruct.markItemRemoved();\n\n    const structBond = struct.bonds.get(bid)!;\n    [structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!);\n      if (!halfBond) {\n        return;\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!;\n      const pos = atom.neighbors.indexOf(hbid!);\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length;\n      const next = (pos + 1) % atom.neighbors.length;\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next]);\n      atom.neighbors.splice(pos, 1);\n    });\n    struct.halfBonds.delete(structBond.hb1!);\n    struct.halfBonds.delete(structBond.hb2!);\n\n    struct.bonds.delete(bid);\n  }\n\n  invert() {\n    const inverted = new BondAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { BondAdd, BondDelete };\nexport * from './BondAttr';\nexport * from './BondMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Struct } from 'domain/entities';\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct;\n  };\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD);\n    this.data = { struct };\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule;\n    restruct.clearVisels(); // TODO: What is it?\n    if (this.data.struct) {\n      restruct.render.setMolecule(this.data.struct, true);\n    }\n\n    this.data.struct = oldStruct;\n  }\n\n  invert() {\n    const inverted = new CanvasLoad();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Vec2 } from 'domain/entities';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any;\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS);\n    this.history = {};\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse();\n\n    const structBox: any = struct.getCoordBoundingBoxObj();\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0),\n    );\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp);\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5));\n      sgroup.pp = alignPoint;\n      struct.sgroups.set(sgroup.id, sgroup);\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1);\n    });\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history);\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any;\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION);\n    this.history = history;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroups: any[] = Array.from(struct.sgroups.values());\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id];\n      struct.sgroups.set(sgroup.id, sgroup);\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1);\n    });\n  }\n\n  invert() {\n    return new AlignDescriptors();\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any;\n    p: any;\n  };\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE);\n    this.data = { frid: fragmentId, p };\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data;\n    const { p } = this.data;\n    const fragment = restruct.molecule.frags.get(frid);\n    if (!fragment) return;\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!;\n\n    const newPosition = Vec2.sum(currentPosition, p);\n    fragment.stereoFlagPosition = newPosition;\n\n    this.data.p = p.negated();\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1);\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any;\n  rgid_old: any;\n  ifThenHistory: any;\n  skipRgids: any[];\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN);\n    this.rgid_new = rgNew;\n    this.rgid_old = rgOld;\n    this.ifThenHistory = new Map();\n    this.skipRgids = skipRgids || [];\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new;\n        this.ifThenHistory.set(rgid, this.rgid_old);\n        struct.rgroups.set(rgid, rg);\n      }\n    });\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory);\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any;\n  rgid_old: any;\n  ifThenHistory: any;\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN);\n    this.rgid_new = rgNew;\n    this.rgid_old = rgOld;\n    this.ifThenHistory = history || new Map();\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!;\n      rgValue.ifthen = rg;\n      struct.rgroups.set(rgid, rgValue);\n    });\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new);\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render';\n\nimport { BaseOperation } from './base';\nimport { Fragment, StructProperty } from 'domain/entities';\nimport { OperationType } from './OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any;\n  properties?: Array<StructProperty>;\n\n  constructor(fragmentId?: any, properties?: Array<StructProperty>) {\n    super(OperationType.FRAGMENT_ADD);\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId;\n    if (properties) {\n      this.properties = properties;\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const frag = new Fragment([], null, this.properties);\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag);\n    } else {\n      struct.frags.set(this.frid, frag);\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)); // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag());\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid);\n  }\n}\n\nclass FragmentSetProperties extends BaseOperation {\n  frid: any;\n  properties?: Array<StructProperty>;\n\n  constructor(fragmentId: any, properties?: Array<StructProperty>) {\n    super(OperationType.FRAGMENT_SET_PROPERTIES);\n    this.frid = fragmentId;\n    this.properties = properties;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const frag = struct.frags.get(this.frid);\n\n    if (frag) {\n      if (this.properties) {\n        frag.properties = this.properties;\n      } else {\n        delete frag?.properties;\n      }\n    }\n  }\n\n  invert() {\n    return new FragmentSetProperties(this.frid, undefined);\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any;\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100);\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    if (!struct.frags.get(this.frid)) {\n      return;\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1);\n    restruct.frags.delete(this.frid);\n    struct.frags.delete(this.frid); // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid);\n    if (!enhancedFalg) return;\n    restruct.clearVisel(enhancedFalg.visel);\n    restruct.enhancedFlags.delete(this.frid);\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid);\n  }\n}\n\nexport { FragmentAdd, FragmentDelete, FragmentSetProperties };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any;\n  aid: any;\n};\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data;\n\n  constructor(fragmentId: any, atomId: any) {\n    super(\n      OperationType.FRAGMENT_ADD_STEREO_ATOM,\n      OperationPriority.FRAGMENT_ADD_STEREO_ATOM,\n    );\n    this.data = { frid: fragmentId, aid: atomId };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data;\n\n    const frag = restruct.molecule.frags.get(frid);\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true);\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid);\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid);\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data;\n\n  constructor(fragmentId: any, atomId: any) {\n    super(\n      OperationType.FRAGMENT_DELETE_STEREO_ATOM,\n      OperationPriority.FRAGMENT_DELETE_STEREO_ATOM,\n    );\n    this.data = { frid: fragmentId, aid: atomId };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data;\n\n    const frag = restruct.molecule.frags.get(frid);\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false);\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid);\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data;\n    return new FragmentAddStereoAtom(frid, aid);\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number;\n\n  constructor(fragmentId: number) {\n    super(\n      OperationType.FRAGMENT_STEREO_FLAG,\n      OperationPriority.FRAGMENT_STEREO_FLAG,\n    );\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    const fragment = struct.frags.get(this.frid)!;\n    fragment.updateStereoFlag(struct);\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid);\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid);\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationPriority, OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>;\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, OperationPriority.CALC_IMPLICIT_H);\n    this.atomIds = aids;\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds;\n\n    restruct.molecule.setImplicitHydrogen(aIds);\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\nimport { ReStruct } from '../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n  };\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE);\n    this.data = { id, d };\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data;\n    const reloop = restruct.reloops.get(id);\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.modelToCanvas(d, restruct.render.options);\n      reloop.visel.translate(scaled);\n    }\n    this.data.d = d.negated();\n  }\n\n  invert() {\n    const inverted = new LoopMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","import { BaseOperation } from 'application/editor/operations/base';\nimport { Vec2 } from 'domain/entities';\nimport { OperationType } from 'application/editor';\nimport { ReStruct } from 'application/render';\nimport { Scale } from 'domain/helpers';\n\nexport class ImageMove extends BaseOperation {\n  constructor(private id: number, private offset: Vec2) {\n    super(OperationType.IMAGE_MOVE);\n  }\n\n  execute(reStruct: ReStruct) {\n    const renderItem = reStruct.images.get(this.id);\n    const item = reStruct.molecule.images.get(this.id);\n\n    if (!item || !renderItem) {\n      return;\n    }\n    const scaledOffset = Scale.modelToCanvas(\n      this.offset,\n      reStruct.render.options,\n    );\n\n    renderItem.visel.translate(scaledOffset);\n    item.addPositionOffset(this.offset);\n  }\n\n  invert(): BaseOperation {\n    return new ImageMove(this.id, this.offset.negated());\n  }\n}\n","import { BaseOperation } from 'application/editor/operations/base';\nimport { ImageReferenceName, Vec2 } from 'domain/entities';\nimport { ReStruct } from 'application/render';\nimport { OperationType } from 'application/editor';\n\nconst moveLeftPositions: Array<ImageReferenceName> = [\n  'topLeftPosition',\n  'leftMiddlePosition',\n  'bottomLeftPosition',\n];\n\nconst moveRightPositions: Array<ImageReferenceName> = [\n  'topRightPosition',\n  'rightMiddlePosition',\n  'bottomRightPosition',\n];\n\nconst moveTopPositions: Array<ImageReferenceName> = [\n  'topLeftPosition',\n  'topMiddlePosition',\n  'topRightPosition',\n];\n\nconst moveBottomPositions: Array<ImageReferenceName> = [\n  'bottomLeftPosition',\n  'bottomMiddlePosition',\n  'bottomRightPosition',\n];\n\nexport class ImageResize extends BaseOperation {\n  private previousPosition: Vec2 | null = null;\n  constructor(\n    private id: number,\n    private position: Vec2,\n    private referencePositionName: ImageReferenceName,\n  ) {\n    super(OperationType.IMAGE_RESIZE);\n  }\n\n  execute(reStruct: ReStruct) {\n    const item = reStruct.molecule.images.get(this.id);\n    const renderItem = reStruct.images.get(this.id);\n\n    if (!item || !renderItem) {\n      return;\n    }\n    const referencePositions = item.getReferencePositions();\n    this.previousPosition = referencePositions[this.referencePositionName];\n    const diff = Vec2.diff(this.position, this.previousPosition);\n    const topLeftPosition = new Vec2(referencePositions.topLeftPosition);\n    const bottomRightPosition = new Vec2(\n      referencePositions.bottomRightPosition,\n    );\n\n    if (moveTopPositions.includes(this.referencePositionName)) {\n      topLeftPosition.add_(new Vec2(0, diff.y));\n    } else if (moveBottomPositions.includes(this.referencePositionName)) {\n      bottomRightPosition.add_(new Vec2(0, diff.y));\n    }\n    if (moveLeftPositions.includes(this.referencePositionName)) {\n      topLeftPosition.add_(new Vec2(diff.x, 0));\n    } else if (moveRightPositions.includes(this.referencePositionName)) {\n      bottomRightPosition.add_(new Vec2(diff.x, 0));\n    }\n\n    item.resize(topLeftPosition, bottomRightPosition);\n    reStruct.clearVisel(renderItem.visel);\n    renderItem.show(reStruct, reStruct.render.options);\n  }\n\n  invert(): BaseOperation {\n    return new ImageResize(\n      this.id,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.previousPosition!,\n      this.referencePositionName,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { BaseOperation } from 'application/editor/operations/base';\nimport { OperationType } from 'application/editor';\nimport { Image } from 'domain/entities/image';\nimport { ReStruct } from 'application/render';\nimport { ReImage } from 'application/render/restruct/reImage';\nimport { IMAGE_KEY } from 'domain/constants';\n\nexport class ImageUpsert extends BaseOperation {\n  constructor(private readonly image: Image, private id?: number) {\n    super(OperationType.IMAGE_UPSERT);\n  }\n\n  execute(reStruct: ReStruct) {\n    const struct = reStruct.molecule;\n\n    if (this.id === undefined) {\n      this.id = struct.images.newId();\n    }\n    const id = this.id;\n    const item = this.image.clone();\n    struct.images.set(id, item);\n    reStruct.images.set(id, new ReImage(item));\n\n    BaseOperation.invalidateItem(reStruct, IMAGE_KEY, id, 1);\n  }\n\n  invert(): BaseOperation {\n    return new ImageDelete(this.id!);\n  }\n}\n\nexport class ImageDelete extends BaseOperation {\n  private image?: Image;\n  constructor(private id: number) {\n    super(OperationType.IMAGE_DELETE);\n  }\n\n  execute(reStruct: ReStruct) {\n    const reImage = reStruct.images.get(this.id);\n\n    if (!reImage) {\n      return;\n    }\n\n    this.image = reImage.image.clone();\n    reStruct.clearVisel(reImage.visel);\n    reStruct.markItemRemoved();\n    reStruct.images.delete(this.id);\n    reStruct.molecule.images.delete(this.id);\n  }\n\n  invert(): BaseOperation {\n    return new ImageUpsert(this.image!, this.id);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ntype Data = {\n  rgid: any;\n  attribute: any;\n  value: any;\n};\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null;\n  data2: Data | null;\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR);\n    this.data = { rgid: rgroupId, attribute, value };\n    this.data2 = null;\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data;\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!;\n\n      if (!rgp) {\n        return;\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute],\n        };\n      }\n\n      rgp[attribute] = value;\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid);\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr();\n    inverted.data = this.data2;\n    inverted.data2 = this.data;\n    return inverted;\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data;\n      const rgroup = restruct.molecule.rgroups.get(rgid)!;\n      return rgroup[attribute] === value;\n    }\n    return false;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { RGroup } from 'domain/entities';\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any;\n  rg_new: any;\n  rgid_old: any;\n  rg_old: any;\n  frid: any;\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT);\n    this.rgid_new = rgroupId;\n    this.rg_new = rg;\n    this.rgid_old = null;\n    this.rg_old = null;\n    this.frid = fragmentId;\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule;\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid);\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null;\n\n    this.removeOld(struct, restruct);\n    this.setNew(struct, restruct);\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return;\n    }\n\n    this.rg_old.frags.delete(this.frid);\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel);\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old);\n      struct.rgroups.delete(this.rgid_old);\n      restruct.markItemRemoved();\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1);\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return;\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new);\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup();\n      struct.rgroups.set(this.rgid_new, rgNew);\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew));\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1);\n    }\n\n    rgNew.frags.add(this.frid);\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old);\n  }\n}\n","import { ReStruct, ReRGroupAttachmentPoint } from 'application/render';\nimport assert from 'assert';\nimport {\n  RGroupAttachmentPoint,\n  RGroupAttachmentPointType,\n} from 'domain/entities';\nimport { RGroupAttachmentPointRemove } from '.';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport BaseOperation from '../base';\n\ntype Data = {\n  atomId: number;\n  attachmentPointType: RGroupAttachmentPointType;\n  attachmentPointId?: number;\n};\n\nclass RGroupAttachmentPointAdd extends BaseOperation {\n  data: Data;\n\n  constructor(data: Data) {\n    super(\n      OperationType.R_GROUP_ATTACHMENT_POINT_ADD,\n      OperationPriority.R_GROUP_ATTACHMENT_POINT_ADD,\n    );\n    this.data = data;\n  }\n\n  execute(restruct: ReStruct) {\n    const { atomId, attachmentPointType } = this.data;\n    const newAttachmentPoint = new RGroupAttachmentPoint(\n      atomId,\n      attachmentPointType,\n    );\n\n    const struct = restruct.molecule;\n    const revertedId = this.data.attachmentPointId;\n    let attachmentPointId = 0;\n    if (revertedId === undefined) {\n      const newId = struct.rgroupAttachmentPoints.add(newAttachmentPoint);\n      attachmentPointId = newId;\n    } else {\n      struct.rgroupAttachmentPoints.set(revertedId, newAttachmentPoint);\n      attachmentPointId = revertedId;\n    }\n    this.data.attachmentPointId = attachmentPointId;\n\n    const reAtom = restruct.atoms.get(atomId);\n    assert(reAtom != null);\n    restruct.rgroupAttachmentPoints.set(\n      attachmentPointId,\n      new ReRGroupAttachmentPoint(newAttachmentPoint, reAtom),\n    );\n  }\n\n  invert() {\n    if (this.data.attachmentPointId === undefined) {\n      throw Error(`Inverted attachmentPointId doesn't exist`);\n    }\n    return new RGroupAttachmentPointRemove(this.data.attachmentPointId);\n  }\n}\n\nexport { RGroupAttachmentPointAdd };\n","import { ReStruct } from 'application/render';\nimport assert from 'assert';\nimport { RGroupAttachmentPointAdd } from '.';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport BaseOperation from '../base';\n\ntype Data = { atomId: number; attachmentPointType; attachmentPointId: number };\n\nconst INITIAL_DATA = {\n  atomId: 0,\n  attachmentPointType: 1,\n  attachmentPointId: 0,\n};\n\nclass RGroupAttachmentPointRemove extends BaseOperation {\n  data: Data;\n\n  constructor(attachmentPointId: number) {\n    super(\n      OperationType.R_GROUP_ATTACHMENT_POINT_REMOVE,\n      OperationPriority.R_GROUP_ATTACHMENT_POINT_REMOVE,\n    );\n    this.data = {\n      ...INITIAL_DATA,\n      attachmentPointId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { attachmentPointId } = this.data;\n    const struct = restruct.molecule;\n    const item = struct.rgroupAttachmentPoints.get(attachmentPointId);\n    const reItem = restruct.rgroupAttachmentPoints.get(attachmentPointId);\n    assert(item != null && reItem != null);\n\n    this.data.atomId = item.atomId;\n    this.data.attachmentPointType = item.type;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(reItem.visel);\n    restruct.rgroupAttachmentPoints.delete(attachmentPointId);\n\n    struct.rgroupAttachmentPoints.delete(attachmentPointId);\n  }\n\n  invert() {\n    return new RGroupAttachmentPointAdd(this.data);\n  }\n}\n\nexport { RGroupAttachmentPointRemove };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base';\nimport { OperationType } from '../OperationType';\nimport { Scale } from 'domain/helpers';\n\ninterface RxnArrowMoveData {\n  id: number;\n  d: any;\n  noinvalidate: boolean;\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData;\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const item = struct.rxnArrows.get(id);\n    item.pos.forEach((p) => p.add_(d));\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1);\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n    move.data = this.data;\n    return move;\n  }\n}\n","import utils from 'application/editor/shared/utils';\nimport { ReStruct } from 'application/render';\nimport { Vec2 } from 'domain/entities';\nimport { OperationType } from '../OperationType';\nimport Base from '../base';\n\ninterface RxnArrowRotateData {\n  id: number;\n  angle: number;\n  center: Vec2;\n  noinvalidate?: boolean;\n}\n\nexport class RxnArrowRotate extends Base {\n  data: RxnArrowRotateData;\n\n  constructor(id: number, angle: number, center: Vec2, noinvalidate?: boolean) {\n    super(OperationType.RXN_ARROW_ROTATE);\n    this.data = { id, angle, center, noinvalidate };\n  }\n\n  execute(reStruct: ReStruct) {\n    const degree = utils.degrees(this.data.angle);\n\n    const arrowId = this.data.id;\n    const arrow = reStruct.molecule.rxnArrows.get(arrowId);\n    if (arrow) {\n      // Note: Struct and ReStruct are in two different systems,\n      //       must manually update struct's position\n      arrow.pos = arrow.pos.map((p) =>\n        p.rotateAroundOrigin(degree, this.data.center),\n      );\n    }\n\n    const options = reStruct.render.options;\n    const drawingCenter = this.data.center\n      .scaled(options.microModeScale)\n      .add(options.offset);\n\n    reStruct.rxnArrows.get(arrowId)?.visel.rotate(degree, drawingCenter);\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(reStruct, 'rxnArrows', arrowId, 1);\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowRotate(\n      this.data.id,\n      -this.data.angle,\n      this.data.center,\n      this.data.noinvalidate,\n    );\n    return move;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from 'application/render';\nimport assert from 'assert';\nimport { RxnArrow, Vec2 } from 'domain/entities';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\nimport { OperationType } from '../OperationType';\nimport Base from '../base';\n\nexport const ARROW_MAX_SNAPPING_ANGLE = Math.PI / 12; // 15°\n\ninterface RxnArrowResizeData {\n  id: number;\n  d: Vec2;\n  current: Vec2;\n  anchor: Vec2 | null;\n  noinvalidate: boolean;\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData;\n  isSnappingEnabled: boolean;\n\n  constructor(\n    id: number,\n    d: Vec2,\n    current: Vec2,\n    anchor: Vec2 | null,\n    noinvalidate: boolean,\n    isSnappingEnabled: boolean,\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE);\n    this.data = { id, d, current, anchor, noinvalidate };\n    this.isSnappingEnabled = isSnappingEnabled;\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    let d = this.data.d;\n    const current = this.data.current;\n    const item = struct.rxnArrows.get(id);\n    const reItem = restruct.rxnArrows.get(id);\n    assert(item != null && reItem != null);\n    const anchor = this.data.anchor;\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0();\n      const previousPos1 = item.pos[1].get_xy0();\n      let middlePoint;\n\n      if (RxnArrow.isElliptical(item)) {\n        [, , middlePoint] = reItem.getReferencePoints();\n      }\n\n      if (\n        /**\n         *          (anchor)\n         *   (pos[1])   ^\n         *              |  ↘ (d)\n         *   (pos[0])   o —— > (current)\n         *\n         * more details: ./RxnArrowResize.doc.png\n         */\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        if (this.isSnappingEnabled) {\n          const currentArrowVector = current.sub(item.pos[0]);\n          const snappedArrowVector = getSnappedArrowVector(currentArrowVector);\n          const snappedCurrent = item.pos[0].add(snappedArrowVector);\n          current.x = snappedCurrent.x;\n          current.y = snappedCurrent.y;\n        }\n        item.pos[1].x = anchor.x = current.x;\n        current.x = previousPos1.x;\n        item.pos[1].y = anchor.y = current.y;\n        current.y = previousPos1.y;\n      }\n\n      if (\n        /**\n         *          (anchor)\n         *   (pos[0])   o\n         *              |  ↘ (d)\n         *   (pos[1])   x —— o  (current)\n         *\n         * more details: ./RxnArrowResize.doc.png\n         */\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        if (this.isSnappingEnabled) {\n          const currentArrowVector = current.sub(item.pos[1]);\n          const snappedArrowVector = getSnappedArrowVector(currentArrowVector);\n          const snappedCurrent = item.pos[1].add(snappedArrowVector);\n          current.x = snappedCurrent.x;\n          current.y = snappedCurrent.y;\n        }\n        item.pos[0].x = anchor.x = current.x;\n        current.x = previousPos0.x;\n        item.pos[0].y = anchor.y = current.y;\n        current.y = previousPos0.y;\n      }\n\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y,\n        );\n        const angleInRadians = (angle * Math.PI) / 180;\n        const cosAngle = Math.cos(angleInRadians);\n        const sinAngle = Math.sin(angleInRadians);\n\n        const diffX = current.x - anchor.x;\n        const diffY = current.y - anchor.y;\n\n        const diff = diffY * cosAngle - diffX * sinAngle;\n        if (item.height !== undefined) {\n          item.height -= diff;\n        }\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints();\n\n        anchor.y = newMiddlePoint.y;\n        anchor.x = newMiddlePoint.x;\n      }\n    } else {\n      if (this.isSnappingEnabled) {\n        d = getSnappedArrowVector(d);\n      }\n      item.pos[1].add_(d);\n    }\n\n    reItem.visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1);\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.isSnappingEnabled,\n    );\n  }\n}\n\nexport function getSnappedArrowVector(arrow: Vec2) {\n  const AXIS = {\n    POSITIVE_X: 0,\n    POSITIVE_Y: Math.PI / 2,\n    NEGATIVE_X: [Math.PI, -Math.PI],\n    NEGATIVE_Y: -Math.PI / 2,\n  };\n  const oxAngle = arrow.oxAngle();\n  const arrowLength = arrow.length();\n  const isSnappingToPositiveXAxis =\n    Math.abs(oxAngle - AXIS.POSITIVE_X) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToPositiveXAxis) {\n    return new Vec2(arrowLength, 0);\n  }\n  const isSnappingToPositiveYAxis =\n    Math.abs(oxAngle - AXIS.POSITIVE_Y) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToPositiveYAxis) {\n    return new Vec2(0, arrowLength);\n  }\n  const isSnappingToNegativeXAxis =\n    Math.abs(oxAngle - AXIS.NEGATIVE_X[0]) <= ARROW_MAX_SNAPPING_ANGLE ||\n    Math.abs(oxAngle - AXIS.NEGATIVE_X[1]) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToNegativeXAxis) {\n    return new Vec2(-arrowLength, 0);\n  }\n  const isSnappingToNegativeYAxis =\n    Math.abs(oxAngle - AXIS.NEGATIVE_Y) <= ARROW_MAX_SNAPPING_ANGLE;\n  if (isSnappingToNegativeYAxis) {\n    return new Vec2(0, -arrowLength);\n  }\n  return arrow;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base';\nimport { OperationType } from '../../OperationType';\nimport { ReStruct } from '../../../../render';\nimport { Scale } from 'domain/helpers';\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n    noinvalidate: any;\n  };\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data;\n\n    const struct = restruct.molecule;\n    struct.rxnPluses.get(id)!.pp.add_(d); // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!;\n    const scaled = Scale.modelToCanvas(d, restruct.render.options);\n    rxn.visel.translate(scaled);\n\n    this.data.d = d.negated();\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1);\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReRxnPlus, ReStruct } from '../../../../render';\nimport { RxnPlus, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from '../../base';\nimport { OperationType } from '../../OperationType';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any;\n  pos: any;\n};\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data;\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD);\n    this.data = { plid: null, pos };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n\n    const newRxn = new RxnPlus();\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn);\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn);\n    }\n\n    const { pos, plid } = this.data;\n\n    const structRxn = struct.rxnPluses.get(plid);\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn));\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos));\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1);\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data;\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE);\n    this.data = { plid, pos: null };\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data;\n\n    const struct = restruct.molecule;\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp;\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved();\n    const rxn = restruct.rxnPluses.get(plid);\n    if (!rxn) return;\n    restruct.clearVisel(rxn.visel);\n    restruct.rxnPluses.delete(plid);\n\n    struct.rxnPluses.delete(plid);\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete };\nexport * from './RxnPlusMove';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities';\n\nimport Base from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReRxnArrow } from '../../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number;\n  pos: Array<Vec2>;\n  mode: RxnArrowMode;\n};\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData;\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number,\n  ) {\n    super(OperationType.RXN_ARROW_ADD);\n    this.data = { pos, mode, id };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = new RxnArrow({ mode: this.data.mode });\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item);\n      this.data.id = index;\n    } else {\n      struct.rxnArrows.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item));\n\n    const positions = [...this.data.pos];\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p)),\n    );\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1);\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!);\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number;\n  pos?: Array<Vec2>;\n  mode?: RxnArrowMode;\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData;\n  performed: boolean;\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE);\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle };\n    this.performed = false;\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = struct.rxnArrows.get(this.data.id) as any;\n    this.data.pos = item.pos;\n    this.data.mode = item.mode;\n    this.performed = true;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel);\n    restruct.rxnArrows.delete(this.data.id);\n\n    struct.rxnArrows.delete(this.data.id);\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id);\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete };\nexport * from './RxnArrowMove';\nexport * from './RxnArrowRotate';\nexport * from './RxnArrowResize';\nexport * from './plus';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities';\n\nimport Base from './base';\nimport { OperationType } from './OperationType';\nimport { ReSimpleObject } from '../../render';\nimport { Scale } from 'domain/helpers';\nimport { tfx } from 'utilities';\n\ninterface SimpleObjectAddData {\n  id?: number;\n  pos: Array<Vec2>;\n  mode: SimpleObjectMode;\n  toCircle: boolean;\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData;\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number,\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD);\n    this.data = { pos, mode, toCircle, id };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = new SimpleObject({ mode: this.data.mode });\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item);\n      this.data.id = index;\n    } else {\n      struct.simpleObjects.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item));\n\n    const positions = [...this.data.pos];\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1]);\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p)),\n    );\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1);\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!);\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number;\n  pos?: Array<Vec2>;\n  mode?: SimpleObjectMode;\n  toCircle?: boolean;\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData;\n  performed: boolean;\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE);\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false };\n    this.performed = false;\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const item = struct.simpleObjects.get(this.data.id) as any;\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos;\n    this.data.mode = item.mode;\n    this.data.toCircle = item.toCircle;\n    this.performed = true;\n\n    restruct.markItemRemoved();\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel);\n    restruct.simpleObjects.delete(this.data.id);\n\n    struct.simpleObjects.delete(this.data.id);\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id,\n    );\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number;\n  d: any;\n  noinvalidate: boolean;\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData;\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const item = struct.simpleObjects.get(id);\n    item.pos.forEach((p) => p.add_(d));\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1);\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n    // todo Need further investigation on why this is needed?\n    move.data = this.data;\n    return move;\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number;\n  d: any;\n  current: Vec2;\n  anchor: Vec2;\n  noinvalidate: boolean;\n  toCircle: boolean;\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0();\n  const previousPos1 = item.pos[1].get_xy0();\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x;\n    current.x = previousPos1.x;\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y;\n    current.y = previousPos1.y;\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x;\n    current.x = previousPos0.x;\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y;\n    current.y = previousPos0.y;\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData;\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean,\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE);\n    this.data = { id, d, current, anchor, noinvalidate, toCircle };\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const d = this.data.d;\n    const current = this.data.current;\n    const item = struct.simpleObjects.get(id);\n    const anchor = this.data.anchor;\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current);\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0();\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current);\n        item.pos[1].x = circlePoint.x;\n        item.pos[1].y = circlePoint.y;\n        this.data.current = previousPos1;\n      } else {\n        const previousPos1 = item.pos[1].get_xy0();\n        item.pos[1].x = current.x;\n        item.pos[1].y = current.y;\n        this.data.current = previousPos1;\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0();\n      const previousPos1 = item.pos[1].get_xy0();\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x;\n        current.x = previousPos1.x;\n        item.pos[1].y = anchor.y = current.y;\n        current.y = previousPos1.y;\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x;\n        current.x = previousPos0.x;\n        item.pos[0].y = anchor.y = current.y;\n        current.y = previousPos0.y;\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current);\n    } else item.pos[1].add_(d);\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.modelToCanvas(d, restruct.render.options));\n    this.data.d = d.negated();\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1);\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle,\n    );\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0);\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y;\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0,\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { SGroup } from 'domain/entities';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  aid: any;\n};\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, OperationPriority.S_GROUP_ATOM_ADD);\n    this.data = { sgid: sgroupId, aid };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data;\n\n    const struct = restruct.molecule;\n    const atom = struct.atoms.get(aid)!;\n    const sgroup = struct.sgroups.get(sgid)!;\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      return;\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found');\n    }\n\n    struct.atomAddToSGroup(sgid, aid);\n    BaseOperation.invalidateAtom(restruct, aid);\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4);\n    this.data = { sgid: sgroupId, aid };\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data;\n\n    const struct = restruct.molecule;\n    const atom = struct.atoms.get(aid)!;\n    const sgroup = struct.sgroups.get(sgid)!;\n\n    if (!atom || !sgroup) {\n      return;\n    }\n\n    SGroup.removeAtom(sgroup, aid);\n    atom.sgs.delete(sgid);\n    BaseOperation.invalidateAtom(restruct, aid);\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any;\n    attr: any;\n    value: any;\n  };\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, OperationPriority.S_GROUP_ATTR);\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroupId = this.data.sgid!;\n    const sgroup = struct.sgroups.get(sgroupId)!;\n\n    if (!sgroup) {\n      return;\n    }\n\n    const sgroupData = restruct.sgroupData.get(sgroupId);\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel);\n      restruct.sgroupData.delete(sgroupId);\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value);\n  }\n\n  invert() {\n    const inverted = new SGroupAttr();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any;\n    d: any;\n  };\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE);\n    this.data = { id, d };\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data;\n    const { sgroups } = restruct.molecule;\n\n    sgroups.get(id)!.pp?.add_(d); // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated();\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1);\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  parent?: any;\n  children?: any;\n};\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(\n      OperationType.S_GROUP_ADD_TO_HIERACHY,\n      OperationPriority.S_GROUP_ADD_TO_HIERACHY,\n    );\n    this.data = { sgid: sgroupId, parent, children };\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data;\n\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(sgid)!;\n    const relations = struct.sGroupForest.insert(sgroup, parent, children);\n\n    this.data.parent = relations.parent;\n    this.data.children = relations.children;\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110);\n    this.data = { sgid: sgroupId };\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data;\n    const struct = restruct.molecule;\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid);\n    this.data.children = struct.sGroupForest.children.get(sgid);\n    struct.sGroupForest.remove(sgid);\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy };\n","import { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { SGroupAttachmentPoint } from 'domain/entities';\nimport assert from 'assert';\n\ntype Data = {\n  sGroupId: number;\n  attachmentPoint: SGroupAttachmentPoint;\n};\n\nexport class SGroupAttachmentPointAdd extends BaseOperation {\n  data: Data;\n\n  constructor(sGroupId: number, attachmentPoint: SGroupAttachmentPoint) {\n    super(\n      OperationType.S_GROUP_ATTACHMENT_POINT_ADD,\n      OperationPriority.S_GROUP_ATTACHMENT_POINT_ADD,\n    );\n    this.data = { sGroupId, attachmentPoint };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(this.data.sGroupId);\n\n    assert(sgroup != null);\n\n    const attachmentPoint = this.data.attachmentPoint;\n    const apAtom = struct.atoms.get(attachmentPoint.atomId);\n\n    if (!apAtom) {\n      throw new Error(\n        `attachmentPoint for Atom with id \"${attachmentPoint.atomId}\" is not found`,\n      );\n    }\n\n    sgroup.addAttachmentPoint(attachmentPoint);\n  }\n\n  invert() {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new SGroupAttachmentPointRemove(\n      this.data.sGroupId,\n      this.data.attachmentPoint,\n    );\n  }\n}\n\nexport class SGroupAttachmentPointRemove extends BaseOperation {\n  data: Data;\n\n  constructor(sGroupId: number, attachmentPoint: SGroupAttachmentPoint) {\n    super(OperationType.S_GROUP_ATTACHMENT_POINT_REMOVE, 4);\n    this.data = { sGroupId, attachmentPoint };\n  }\n\n  execute(restruct: ReStruct) {\n    const { sGroupId, attachmentPoint } = this.data;\n    const struct = restruct.molecule;\n    const sgroup = struct.sgroups.get(sGroupId);\n    sgroup?.removeAttachmentPoint(attachmentPoint);\n  }\n\n  invert() {\n    return new SGroupAttachmentPointAdd(\n      this.data.sGroupId,\n      this.data.attachmentPoint,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities';\nimport { ReSGroup, ReStruct } from '../../../render';\n\nimport { BaseOperation } from '../base';\nimport { OperationPriority, OperationType } from '../OperationType';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any;\n  type?: any;\n  pp?: any;\n  expanded?: boolean;\n  name?: string;\n  oldSgroup?: SGroup;\n};\n\nclass SGroupCreate extends BaseOperation {\n  data: Data;\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string,\n    oldSgroup?: SGroup,\n  ) {\n    super(OperationType.S_GROUP_CREATE);\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name,\n      oldSgroup,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { sgid, pp, expanded, name, oldSgroup } = this.data;\n    const sgroup =\n      oldSgroup instanceof MonomerMicromolecule\n        ? new MonomerMicromolecule(SGroup.TYPES.SUP, oldSgroup.monomer)\n        : new SGroup(this.data.type);\n\n    sgroup.id = sgid;\n    struct.sgroups.set(sgid, sgroup);\n\n    if (pp) {\n      sgroup!.pp = new Vec2(pp);\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded;\n    }\n\n    if (name) {\n      sgroup.data.name = name;\n    }\n\n    const existingSGroup = struct.sgroups.get(sgid);\n\n    if (existingSGroup) {\n      restruct.sgroups.set(sgid, new ReSGroup(existingSGroup));\n      if (\n        FunctionalGroup.isFunctionalGroup(sgroup) ||\n        SGroup.isSuperAtom(sgroup)\n      ) {\n        restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup));\n      }\n    }\n    this.data.sgid = sgid;\n  }\n\n  invert() {\n    const inverted = new SGroupDelete();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data;\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, OperationPriority.S_GROUP_DELETE);\n    this.data = { sgid: sgroupId };\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule;\n    const { sgid } = this.data;\n    const sgroup = restruct.sgroups.get(sgid);\n    const sgroupData = restruct.sgroupData.get(sgid);\n    if (!sgroup) return;\n    this.data.type = sgroup?.item?.type;\n    this.data.pp = sgroup?.item?.pp;\n    this.data.oldSgroup = sgroup.item;\n\n    if (sgroup?.item?.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel);\n      restruct.sgroupData.delete(sgid);\n    }\n\n    restruct.clearVisel(sgroup.visel);\n    if (sgroup?.item?.atoms?.length !== 0) {\n      throw new Error('S-Group not empty!');\n    }\n\n    if (\n      FunctionalGroup.isFunctionalGroup(sgroup.item) ||\n      SGroup.isSuperAtom(sgroup.item)\n    ) {\n      let relatedFGroupId;\n      this.data.name = sgroup.item.data.name;\n      this.data.expanded = (sgroup.item as SGroup).isExpanded();\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid;\n        }\n      });\n      restruct.molecule.functionalGroups.delete(relatedFGroupId);\n    }\n\n    restruct.sgroups.delete(sgid);\n    struct.sgroups.delete(sgid);\n  }\n\n  invert() {\n    const inverted = new SGroupCreate();\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport { SGroupCreate, SGroupDelete };\nexport * from './sgroupAtom';\nexport * from './SGroupAttr';\nexport * from './SGroupDataMove';\nexport * from './sgroupHierarchy';\nexport * from './sgroupAttachmentPoints';\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { ReStruct, ReText } from '../../../render';\nimport { Text, Vec2 } from 'domain/entities';\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\n\ninterface TextCreateData {\n  id?: number;\n  content: string;\n  pos: Array<Vec2>;\n  position: Vec2;\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData;\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE);\n    this.data = { content, position, pos, id };\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data);\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item);\n      this.data.id = index;\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item);\n    }\n\n    const itemId = this.data.id!;\n\n    restruct.texts.set(itemId, new ReText(item));\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position));\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1);\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!);\n  }\n}\n\ninterface TextDeleteData {\n  id: number;\n  content?: string;\n  position?: Vec2;\n  pos?: Array<Vec2> | [];\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData;\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE);\n    this.data = { id };\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const item = struct.texts.get(this.data.id)!;\n    if (!item) return;\n\n    this.data.content = item.content!;\n    this.data.position = item.position;\n\n    restruct.markItemRemoved();\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel);\n    restruct.texts.delete(this.data.id);\n\n    struct.texts.delete(this.data.id);\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\n\ninterface TextUpdateData {\n  id: number;\n  content: string;\n  previousContent?: string;\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData;\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE);\n    this.data = { id, content };\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data;\n    const text = restruct.molecule.texts.get(id);\n\n    if (text) {\n      this.data.previousContent = text.content!;\n      text.content = content;\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1);\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!);\n\n    inverted.data.previousContent = this.data.content;\n    return inverted;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base';\nimport { OperationType } from '../OperationType';\nimport { ReStruct } from '../../../render';\nimport { Scale } from 'domain/helpers';\n\ninterface TextMoveData {\n  id: any;\n  d: any;\n  noinvalidate?: boolean;\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData;\n\n  constructor(id: any, d: any, noinvalidate?: boolean) {\n    super(OperationType.TEXT_MOVE);\n    this.data = { id, d, noinvalidate };\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule;\n    const id = this.data.id;\n    const difference = this.data.d;\n    const item = struct.texts.get(id);\n    const renderItem = restruct.texts.get(id);\n\n    if (!item || !renderItem) {\n      return;\n    }\n\n    item.position.add_(difference);\n    item.setPos(renderItem.getReferencePoints());\n\n    renderItem.visel.translate(\n      Scale.modelToCanvas(difference, restruct.render.options),\n    );\n\n    this.data.d = difference.negated();\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1);\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate,\n    );\n\n    move.data = this.data;\n\n    return move;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base';\nimport { ReStruct } from '../../render';\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[];\n\n  constructor(operations = []) {\n    this.operations = operations;\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation);\n    }\n\n    return operation;\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations);\n    return this;\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct): Action {\n    const action = new Action();\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority,\n    );\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct);\n      action.addOp(invertedOperation);\n    });\n\n    return action;\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true),\n      ) === undefined\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/**\n * @param restruct { ReStruct }\n * @param _events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  _events,\n  simpleFusing,\n) {\n  const action = simpleFusing(restruct, template, bid);\n  return Promise.resolve(action);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities';\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4;\nconst SELECTION_WITHIN_TEXT = 0;\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText,\n};\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct);\n    const topX = referencePoints[0].x;\n    const topY = referencePoints[0].y;\n    const bottomX = referencePoints[2].x;\n    const bottomY = referencePoints[2].y;\n\n    const distances = [];\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y);\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY);\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y);\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition));\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition));\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition));\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition));\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x);\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX);\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT);\n      }\n    }\n\n    const dist = Math.min(...distances);\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null;\n  let refPoint = null;\n  let ret = null;\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(\n      pos,\n      restruct.render.options.microModeScale,\n    );\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist;\n      refPoint = dist.refPoint;\n\n      ret = { id, dist: minDist, ref: refPoint };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null;\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT;\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null;\n\n  minDist = minDist || maxMinDist;\n  minDist = Math.min(minDist, maxMinDist);\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return;\n\n    const dist = Vec2.dist(pos, atom.a.pp);\n\n    if (dist < minDist) {\n      closestAtom = aid;\n      minDist = dist;\n    }\n  });\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null;\n  let closestBondCenter = null;\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT;\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null;\n\n  minDist = minDist || maxMinDist;\n  minDist = Math.min(minDist, maxMinDist);\n\n  let minCDist = minDist;\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return;\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp;\n    const p2 = restruct.atoms.get(bond.b.end).a.pp;\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5);\n    const cdist = Vec2.dist(pos, mid);\n\n    if (cdist < minCDist) {\n      minCDist = cdist;\n      closestBondCenter = bid;\n    }\n  });\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return;\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1);\n    const dir = hb.dir;\n    const norm = hb.norm;\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp;\n    const p2 = restruct.atoms.get(bond.b.end).a.pp;\n\n    const inStripe =\n      Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0;\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm));\n\n      if (dist < minDist) {\n        closestBond = bid;\n        minDist = dist;\n      }\n    }\n  });\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist,\n    };\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist;\n  let ret = null;\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id);\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return;\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id);\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return;\n\n    const dist = Math.abs(pos.y - p.y);\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected');\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea;\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x;\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x),\n      );\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist };\n        minDist = xDist;\n      }\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT,\n  );\n\n  const struct = restruct.molecule;\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist);\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist,\n    };\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale);\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin;\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT,\n  );\n\n  let ret = null;\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos);\n\n      if (!ret || dist < minDist) {\n        minDist = dist;\n        ret = { id: rgid, dist: minDist };\n      }\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null;\n  let refPoint = null;\n  let ret = null;\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(\n      pos,\n      restruct.render.options.microModeScale,\n    );\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist;\n      refPoint = dist.refPoint;\n\n      ret = { id, dist: minDist, ref: refPoint };\n    }\n  });\n  return ret;\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null;\n  let ret = null;\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp;\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y));\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist;\n      ret = { id, dist: minDist };\n    }\n  });\n\n  return ret;\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null;\n  let minDist = SELECTION_DISTANCE_COEFFICIENT;\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.isContracted()) {\n      const { position } = sg.getContractedPosition(restruct.molecule);\n      const d = sg.bracketDirection;\n      const n = d.rotateSC(1, 0);\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n));\n      const shift = new Vec2(0.625, 0.625);\n      const box = {\n        p0: Vec2.diff(position, shift),\n        p1: Vec2.sum(position, shift),\n      };\n\n      const inBox =\n        box.p0.y < pg.y &&\n        box.p1.y > pg.y &&\n        box.p0.x < pg.x &&\n        box.p1.x > pg.x;\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x),\n      );\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid;\n        minDist = xDist;\n      }\n    } else {\n      const d = sg.bracketDirection;\n      const n = d.rotateSC(1, 0);\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n));\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x;\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x),\n        );\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid;\n          minDist = xDist;\n        }\n      });\n    }\n  });\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist,\n    };\n  }\n\n  return null;\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps);\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null;\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale);\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item;\n      return {\n        map: mp,\n        id,\n        dist,\n        ...other,\n      };\n    }\n\n    return res;\n  }, null);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map(), // bid -> position\n  };\n\n  const struct = restruct.molecule;\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp);\n  });\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid);\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5,\n      ),\n    );\n  });\n\n  const result = {};\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId };\n      const item = findMaps[mp](\n        restruct,\n        pos[mp].get(srcId),\n        skip,\n        null,\n        scale,\n      );\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id);\n\n      return res;\n    }, new Map());\n  });\n\n  return result;\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomAttributes,\n  AtomQueryProperties,\n  Bond,\n  MonomerMicromolecule,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport closest from '../shared/closest';\nimport { difference } from 'lodash';\nimport { ReStruct } from 'application/render';\nimport { selectionKeys } from '../shared/constants';\nimport { EditorSelection } from '../editor.types';\nexport type AtomType = 'single' | 'list' | 'pseudo';\nexport type AtomAttributeName = keyof AtomAttributes;\nexport type AtomQueryPropertiesName = keyof AtomQueryProperties;\nexport type AtomAllAttributeName = AtomAttributeName | AtomQueryPropertiesName;\nexport type AtomAllAttributeValue =\n  | AtomAttributes[AtomAttributeName]\n  | AtomQueryProperties[AtomQueryPropertiesName];\n\nexport function atomGetAttr(\n  restruct: ReStruct,\n  aid: number,\n  name: AtomAttributeName,\n) {\n  const atom = restruct.molecule.atoms.get(aid);\n  if (!atom) return null;\n  return atom[name];\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length;\n}\n\nexport function atomGetSGroups(restruct, atomId: number): number[] {\n  return Array.from(restruct.atoms.get(atomId).a.sgs);\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp;\n}\n\nexport function findStereoAtoms(\n  struct: Struct,\n  atomIds: number[] | undefined,\n): number[] {\n  const isMonomer = struct.sgroups.find(\n    (_, sgroup) => sgroup instanceof MonomerMicromolecule,\n  );\n\n  if (isMonomer !== null || !atomIds) {\n    return [] as number[];\n  }\n\n  return atomIds.filter((atomId: number) => {\n    const atom = struct.atoms.get(atomId);\n    if (atom?.stereoLabel !== null) {\n      return true;\n    }\n    const connectedBonds = Atom.getConnectedBondIds(struct, atomId);\n    const connectedWithStereoBond = connectedBonds.some((bondId: number) => {\n      const bond = struct.bonds.get(bondId);\n      return bond?.begin === atomId && bond?.stereo;\n    });\n    return connectedWithStereoBond;\n  });\n}\n\nexport function structSelection(struct): EditorSelection {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys());\n    return res;\n  }, {});\n}\n\nexport function formatSelection(selection): any {\n  return selectionKeys.reduce((res, key) => {\n    res[key] = selection[key] || [];\n\n    return res;\n  }, {});\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = [];\n  const pos = atomGetPos(restruct, id);\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id);\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined,\n  );\n  const prevBond = restruct.molecule.bonds.get(prevBondId);\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1;\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid);\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return;\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) });\n  });\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x),\n  );\n\n  let i;\n  let maxI = 0;\n  let angle;\n  let maxAngle = 0;\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v,\n    );\n\n    if (angle < 0) angle += 2 * Math.PI;\n\n    if (angle > maxAngle) {\n      maxI = i;\n      maxAngle = angle;\n    }\n  }\n\n  let v = new Vec2(1, 0);\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3);\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0];\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = [];\n        const neiPos = atomGetPos(restruct, nei.aid);\n        const neiV = Vec2.diff(pos, neiPos);\n        const neiAngle = Math.atan2(neiV.y, neiV.x);\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid);\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return;\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos);\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle;\n\n          if (ang < 0) ang += 2 * Math.PI;\n\n          neiNeighbours.push(ang);\n        });\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2);\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1;\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE);\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle;\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI;\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180;\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x);\n    }\n\n    v = v.rotate(angle);\n  }\n\n  v.add_(pos); // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1);\n  a = a === null ? { label: 'C' } : a.id;\n\n  return { atom: a, pos: v };\n}\n\nexport function getRelSGroupsBySelection(\n  struct: Struct,\n  selectedAtoms: number[],\n) {\n  return struct.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0,\n  );\n}\n\nexport function isAttachmentBond(\n  { begin, end }: Bond,\n  selection: EditorSelection,\n) {\n  if (!selection.atoms) {\n    return false;\n  }\n  const isBondStartsInSelectionAndEndsOutside =\n    selection.atoms.includes(begin) && !selection.atoms.includes(end);\n  const isBondEndsInSelectionAndStartsOutside =\n    selection.atoms.includes(end) && !selection.atoms.includes(begin);\n  return (\n    isBondStartsInSelectionAndEndsOutside ||\n    isBondEndsInSelectionAndStartsOutside\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations';\n\nimport { Action } from './action';\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]));\n  });\n\n  return action.perform(restruct);\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action();\n  action.addOp(new RGroupFragment(rgidNew, frid));\n\n  return action.perform(restruct);\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = [],\n) {\n  const action = new Action();\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids));\n  }\n\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy,\n} from '../operations';\nimport { Pile, SGroup, SGroupAttachmentPoint } from 'domain/entities';\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils';\n\nimport { Action } from './action';\nimport { SgContexts } from '..';\nimport { uniq } from 'lodash/fp';\nimport { fromAtomsAttrs } from './atom';\nimport {\n  SGroupAttachmentPointAdd,\n  SGroupAttachmentPointRemove,\n} from 'application/editor/operations/sgroup/sgroupAttachmentPoints';\nimport Restruct from 'application/render/restruct/restruct';\nimport assert from 'assert';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { isNumber } from 'lodash';\n\nexport function fromSeveralSgroupAddition(\n  restruct: Restruct,\n  type,\n  atoms,\n  attrs,\n) {\n  const attachmentPoints = [];\n\n  const descriptors = attrs.fieldValue;\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId(),\n      attachmentPoints,\n    );\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs);\n    localAttrs.fieldValue = fValue;\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId(),\n        attachmentPoints,\n      ),\n    );\n  }, new Action());\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]));\n  });\n\n  return action.perform(restruct);\n}\n\nexport function setExpandSGroup(\n  restruct: Restruct,\n  sgid: number,\n  attrs: { expanded: boolean },\n) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]));\n  });\n\n  const sgroup = restruct.molecule.sgroups.get(sgid);\n  assert(sgroup != null);\n  const atoms = SGroup.getAtoms(restruct, sgroup);\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid)?.a, false),\n    );\n  });\n\n  return action.perform(restruct);\n}\n\n// todo delete after supporting expand - collapse for 2 attachment points\nexport function expandSGroupWithMultipleAttachmentPoint(restruct) {\n  const action = new Action();\n\n  const struct = restruct.molecule;\n\n  struct.sgroups.forEach((sgroup: SGroup) => {\n    if (\n      sgroup.isNotContractible(struct) &&\n      !(sgroup instanceof MonomerMicromolecule)\n    ) {\n      action.mergeWith(\n        setExpandSGroup(restruct, sgroup.id, {\n          expanded: true,\n        }),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action();\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]));\n  });\n\n  return action;\n}\n\nexport function fromSgroupDeletion(restruct, id, needPerform = true) {\n  let action = new Action();\n  const struct = restruct.molecule;\n\n  const sG = restruct.sgroups.get(id).item;\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds();\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'));\n      }\n    });\n  }\n\n  const sg = struct.sgroups.get(id) as SGroup;\n  const atoms = SGroup.getAtoms(struct, sg);\n  const attrs = sg.getAttrs();\n\n  action.addOp(new SGroupRemoveFromHierarchy(id));\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom));\n  });\n\n  sg.getAttachmentPoints().forEach((attachmentPoint) => {\n    action.addOp(new SGroupAttachmentPointRemove(id, attachmentPoint));\n  });\n\n  action.addOp(new SGroupDelete(id));\n\n  action.mergeWith(sGroupAttributeAction(id, attrs));\n\n  if (needPerform) {\n    action = action.perform(restruct);\n  }\n\n  return action;\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  attachmentPoints,\n  pp?,\n  expanded?,\n  name?,\n  oldSgroup?,\n) {\n  // eslint-disable-line\n  let action = new Action();\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId();\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name, oldSgroup));\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp));\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom));\n  });\n\n  if (type === 'SUP') {\n    attachmentPoints.forEach((attachmentPoint) => {\n      action.addOp(new SGroupAttachmentPointAdd(sgid, attachmentPoint));\n    });\n  }\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, []),\n  );\n\n  action = action.perform(restruct);\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds();\n    let asteriskAction = new Action();\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon();\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'));\n      }\n    });\n\n    asteriskAction = asteriskAction.perform(restruct);\n    asteriskAction.mergeWith(action);\n    action = asteriskAction;\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action);\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection,\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection);\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds);\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds));\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys()),\n    );\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms);\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms);\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms);\n  }\n\n  if (SGroup.isQuerySGroup(newSg)) {\n    return fromQueryComponentSGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms as number[],\n      Array.from(restruct.atoms.keys()),\n    );\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      newSourceAtoms,\n      newSg.attrs,\n    ),\n  };\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs),\n      );\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromQueryComponentSGroupAction(\n  restruct: Restruct,\n  newSg: {\n    type: string;\n    attrs: object;\n  },\n  sourceAtoms: number[],\n  targetAtoms: number[],\n) {\n  const selection: {\n    atoms: number[];\n    bonds: number[];\n  } = {\n    atoms: [],\n    bonds: [],\n  };\n\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid)?.a.fragment),\n  );\n\n  Array.from(allFragments).forEach((fragId) => {\n    const atoms = targetAtoms.reduce((res: number[], aid: number) => {\n      const atom = restruct.atoms.get(aid)?.a;\n      if (fragId === atom?.fragment) res.push(aid);\n\n      return res;\n    }, []);\n\n    const bonds = getAtomsBondIds(restruct.molecule, atoms) as number[];\n\n    selection.atoms = selection.atoms.concat(atoms);\n    selection.bonds = selection.bonds.concat(bonds);\n  });\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      selection.atoms,\n      newSg.attrs,\n    ),\n    selection,\n  };\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment),\n  );\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a;\n        if (fragId === atom.fragment) res.push(aid);\n\n        return res;\n      }, []);\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms);\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n      );\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms);\n      acc.selection.bonds = acc.selection.bonds.concat(bonds);\n\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule;\n  let bonds = getAtomsBondIds(struct, sourceAtoms);\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds));\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid);\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs,\n        ),\n      );\n\n      acc.selection.bonds.push(bondid);\n\n      return acc;\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: [],\n      },\n    },\n  );\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms);\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds,\n    },\n  };\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id);\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id));\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct: Restruct, atoms) {\n  const struct = restruct.molecule;\n  const sgCounts = new Map();\n\n  atoms.forEach((atomId) => {\n    const sgroups = atomGetSGroups(restruct, atomId);\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1);\n    });\n  });\n\n  sgCounts.forEach((count, sid) => {\n    const sGroup = restruct.sgroups.get(sid)?.item;\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sGroup);\n\n    if (sgAtoms.length === count && !sGroup?.isSuperatomWithoutLabel) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid) as SGroup;\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()));\n      action.addOp(new SGroupRemoveFromHierarchy(sid));\n      sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n        action.addOp(new SGroupAttachmentPointRemove(sid, attachmentPoint));\n      });\n      action.addOp(new SGroupDelete(sid));\n    }\n\n    if (\n      sGroup?.isSuperatomWithoutLabel &&\n      sGroup.getAttachmentPoints().length === 0\n    ) {\n      action.mergeWith(fromSgroupDeletion(restruct, sid, false));\n    }\n  });\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms);\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid);\n    return atomSet.has(bond.begin) && atomSet.has(bond.end);\n  });\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || [];\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid);\n    acc = acc.concat([bond.begin, bond.end]);\n    return acc;\n  }, []);\n}\n\nexport function fromSgroupAttachmentPointAddition(\n  restruct: Restruct,\n  sgroupId: number,\n  attachmentPoint: SGroupAttachmentPoint,\n) {\n  let action = new Action();\n\n  action.addOp(new SGroupAttachmentPointAdd(sgroupId, attachmentPoint));\n  action = action.perform(restruct);\n\n  return action;\n}\n\nexport function fromSgroupAttachmentPointRemove(\n  restruct: Restruct,\n  sgroupId: number,\n  atomId: number,\n  leaveAtomId?: number,\n  needPerform = true,\n) {\n  let action = new Action();\n  const struct = restruct.molecule;\n  const sgroup = struct.sgroups.get(sgroupId);\n  const atomAttachmentPoints = sgroup\n    ?.getAttachmentPoints()\n    .filter((attachmentPoint) => attachmentPoint.atomId === atomId);\n  atomAttachmentPoints?.forEach((attachmentPoint) => {\n    if (\n      sgroup &&\n      (!isNumber(attachmentPoint.leaveAtomId) ||\n        attachmentPoint.leaveAtomId === leaveAtomId)\n    ) {\n      action.addOp(new SGroupAttachmentPointRemove(sgroupId, attachmentPoint));\n    }\n  });\n\n  if (needPerform) {\n    action = action.perform(restruct);\n  }\n\n  return action;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2,\n  AtomAttributes,\n  BondAttributes,\n  FunctionalGroup,\n  SGroupAttachmentPoint,\n  SGroup,\n} from 'domain/entities';\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag,\n} from '../operations';\nimport { atomForNewBond, atomGetAttr } from './utils';\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups,\n} from './atom';\n\nimport { Action } from './action';\nimport { ReSGroup, ReStruct } from '../../render';\nimport { StereoValidator } from 'domain/helpers';\nimport utils from '../shared/utils';\nimport { fromSgroupAttachmentPointRemove } from 'application/editor';\n\nexport function fromBondAddition(\n  reStruct: ReStruct,\n  bond: Partial<BondAttributes>,\n  begin: number | AtomAttributes,\n  end: number | AtomAttributes,\n  beginAtomPos?: Vec2,\n  endAtomPos?: Vec2,\n): [Action, number, number, number] {\n  const action = new Action();\n  const struct = reStruct.molecule;\n\n  const mouseDownNothingAndUpNothing = (\n    beginAtomAttr: AtomAttributes,\n    endAtomAttr: AtomAttributes,\n  ) => {\n    const newFragmentId = (\n      action.addOp(new FragmentAdd().perform(reStruct)) as FragmentAdd\n    ).frid;\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: newFragmentId },\n          beginAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...endAtomAttr, fragment: newFragmentId },\n          endAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    return [newBeginAtomId, newEndAtomId] as const;\n  };\n\n  const mouseDownNothingAndUpAtom = (\n    beginAtomAttr: AtomAttributes,\n    endAtomId: number,\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, endAtomId, 'fragment');\n\n    const newBeginAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          { ...beginAtomAttr, fragment: fragmentId },\n          beginAtomPos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const endAtom = struct.atoms.get(endAtomId);\n    if (\n      endAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        endAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false,\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newBeginAtomId], endAtomId);\n    }\n    return [newBeginAtomId, endAtomId] as const;\n  };\n\n  const mouseDownAtomAndUpNothing = (\n    beginAtomId: number,\n    endAtomAttr: AtomAttributes,\n  ) => {\n    const fragmentId = atomGetAttr(reStruct, beginAtomId, 'fragment');\n\n    const newEndAtomId: number = (\n      action.addOp(\n        new AtomAdd(\n          {\n            ...endAtomAttr,\n            fragment: fragmentId,\n          },\n          endAtomPos ?? atomForNewBond(reStruct, begin, bond).pos,\n        ).perform(reStruct),\n      ) as AtomAdd\n    ).data.aid;\n\n    const beginAtom = struct.atoms.get(beginAtomId);\n    if (\n      beginAtom &&\n      !FunctionalGroup.isAtomInContractedFunctionalGroup(\n        beginAtom,\n        struct.sgroups,\n        struct.functionalGroups,\n        false,\n      )\n    ) {\n      mergeSgroups(action, reStruct, [newEndAtomId], beginAtomId);\n    }\n\n    return [beginAtomId, newEndAtomId] as const;\n  };\n\n  let beginAtomId: number, endAtomId: number;\n\n  const startsOnAtom = typeof begin === 'number';\n  const endsOnAtom = typeof end === 'number';\n\n  if (!startsOnAtom && !endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownNothingAndUpNothing(begin, end);\n  } else if (!startsOnAtom && endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownNothingAndUpAtom(begin, end);\n  } else if (startsOnAtom && !endsOnAtom) {\n    [beginAtomId, endAtomId] = mouseDownAtomAndUpNothing(begin, end);\n  } else {\n    [beginAtomId, endAtomId] = [begin as number, end as number];\n\n    if (reStruct.sgroups && reStruct.sgroups.size > 0) {\n      reStruct.sgroups.forEach((sgroup) => {\n        if (sgroup.item?.type && sgroup.item?.type === 'SUP') {\n          addAttachmentPointToSuperatom(sgroup, beginAtomId, endAtomId);\n        }\n      });\n    }\n  }\n\n  if (atomGetAttr(reStruct, beginAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(beginAtomId, 'label', 'C').perform(reStruct));\n  }\n\n  if (atomGetAttr(reStruct, endAtomId, 'label') === '*') {\n    action.addOp(new AtomAttr(endAtomId, 'label', 'C').perform(reStruct));\n  }\n\n  const newBondId = (\n    action.addOp(\n      new BondAdd(beginAtomId, endAtomId, bond).perform(reStruct),\n    ) as BondAdd\n  ).data.bid;\n  const newBond = struct.bonds.get(newBondId);\n  if (newBond) {\n    action.addOp(\n      new CalcImplicitH([newBond.begin, newBond.end]).perform(reStruct),\n    );\n    action.mergeWith(fromBondStereoUpdate(reStruct, newBond));\n  }\n\n  action.operations.reverse();\n\n  const mergedFragmentId = mergeFragmentsIfNeeded(\n    action,\n    reStruct,\n    beginAtomId,\n    endAtomId,\n  );\n  if (struct.frags.get(mergedFragmentId || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(\n      new FragmentStereoFlag(mergedFragmentId || 0).perform(reStruct),\n    );\n  }\n\n  return [action, beginAtomId, endAtomId, newBondId];\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean,\n): Action {\n  const struct = restruct.molecule;\n  const action = new Action();\n  const bids = Array.isArray(ids) ? ids : [ids];\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return;\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key);\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct));\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid);\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct),\n          );\n          action.mergeWith(fromBondStereoUpdate(restruct, bond));\n        }\n      }\n    });\n  });\n\n  return action;\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>,\n): Action {\n  const struct = restruct.molecule;\n\n  const atomPairs = new Map();\n  let action = new Action();\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId);\n    const bondCI = struct.bonds.get(dstId);\n    if (!bond || !bondCI) return;\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI);\n    if (!params.merged) return;\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end);\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin);\n  });\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action);\n  });\n\n  return action;\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id);\n\n  const action = new Action();\n  action.addOp(new BondDelete(id).perform(restruct));\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct));\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action;\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean,\n): Action {\n  const action = new Action();\n  const struct = restruct.molecule;\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment;\n  const endFrId = struct.atoms.get(bond?.end)?.fragment;\n\n  const fragmentStereoBonds: Array<Bond> = [];\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond);\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond);\n    }\n  });\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond);\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond,\n) {\n  const stereoAtomsMap = new Map();\n  const correctAtomIds: Array<number> = [];\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin,\n      );\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end,\n      );\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct,\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel;\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`,\n          });\n        }\n        correctAtomIds.push(bond.begin);\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null,\n          });\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null,\n          });\n        }\n      }\n    }\n  });\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null,\n      });\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null,\n      });\n    }\n  }\n\n  return stereoAtomsMap;\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null;\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD;\n      break;\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER;\n      break;\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN;\n      break;\n  }\n  return newAtomParity;\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE,\n];\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any,\n): Action {\n  const action = new Action();\n  let newItemId = itemID;\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID));\n    newItemId = (action.operations[1] as BondAdd).data.bid;\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null;\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length];\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action);\n}\n\nfunction addAttachmentPointToSuperatom(\n  sgroup: ReSGroup,\n  beginAtomId: number,\n  endAtomId: number,\n) {\n  (sgroup.item?.atoms as number[]).forEach((atomId) => {\n    if (beginAtomId === atomId || endAtomId === atomId) {\n      if (\n        !(sgroup.item as SGroup)\n          .getAttachmentPoints()\n          .map((attachmentPoint) => attachmentPoint.atomId)\n          .includes(atomId)\n      )\n        sgroup.item?.addAttachmentPoint(\n          new SGroupAttachmentPoint(atomId, undefined, undefined),\n        );\n    }\n  });\n}\n\nexport function removeAttachmentPointFromSuperatom(\n  sgroup: ReSGroup,\n  beginAtomId: number | undefined,\n  endAtomId: number | undefined,\n  action: Action,\n  restruct: ReStruct,\n) {\n  (sgroup.item?.atoms as number[]).forEach((atomId) => {\n    if (beginAtomId === atomId || endAtomId === atomId) {\n      const anotherSideAtomId =\n        beginAtomId === atomId ? endAtomId : beginAtomId;\n      action.mergeWith(\n        fromSgroupAttachmentPointRemove(\n          restruct,\n          sgroup.item?.id as number,\n          atomId as number,\n          anotherSideAtomId,\n          false,\n        ),\n      );\n    }\n  });\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  MonomerMicromolecule,\n  RGroup,\n  SGroupAttachmentPoint,\n} from 'domain/entities';\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd,\n} from '../operations';\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils';\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup';\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup';\n\nimport { Action } from './action';\nimport { fromBondStereoUpdate } from './bond';\nimport { without } from 'lodash/fp';\nimport ReStruct from 'application/render/restruct/restruct';\nimport assert from 'assert';\nimport { SGroupAttachmentPointRemove } from '../operations/sgroup/sgroupAttachmentPoints';\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom);\n  const action = new Action();\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid;\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid;\n  action.addOp(new CalcImplicitH([aid]).perform(restruct));\n\n  return action;\n}\n\nexport function fromAtomsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: any,\n  reset: boolean | null,\n) {\n  const action = new Action();\n  const aids = Array.isArray(ids) ? ids : [ids];\n\n  aids.forEach((atomId) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attachmentPoints' && !(key in attrs)) return;\n      if (!(key in attrs) && !reset) return;\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key);\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          }\n          break;\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          }\n          break;\n        default:\n          action.addOp(new AtomAttr(atomId, key, value).perform(restruct));\n          break;\n      }\n    });\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(atomId, 'atomList', null).perform(restruct));\n    }\n\n    action.addOp(new CalcImplicitH([atomId]).perform(restruct));\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(atomId);\n    const bond = restruct.molecule.bonds.get(atomNeighbors?.[0]?.bid as number);\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond));\n    }\n    // when a heteroatom connects to an aromatic ring it's necessary to add a ImplicitHCount\n    // property to this atom to specify the number of hydrogens on it.\n    const atom = restruct.molecule.atoms.get(atomId);\n    assert(atom != null);\n\n    if (Atom.isInAromatizedRing(restruct.molecule, atomId)) {\n      action.addOp(\n        new AtomAttr(atomId, 'implicitHCount', atom.implicitH).perform(\n          restruct,\n        ),\n      );\n    }\n  });\n\n  return action;\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action();\n  const atom = restruct.molecule.atoms.get(aid);\n  const sgroup = restruct.molecule.getGroupFromAtomId(aid);\n  if (atom && !(sgroup instanceof MonomerMicromolecule)) {\n    const frid = atom.fragment;\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct),\n      );\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct),\n      );\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct));\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct));\n      }\n    }\n    if (withReverse) action.operations.reverse();\n  }\n\n  return action;\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action();\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid);\n    const sgroup = restruct.molecule.getGroupFromAtomId(aid);\n    const oldfrid = atom.fragment;\n\n    if (sgroup instanceof MonomerMicromolecule) {\n      return;\n    }\n\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid));\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid));\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid));\n    }\n  });\n\n  return action.perform(restruct);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action();\n\n  const fragAction = new Action();\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId);\n\n  const action = new Action();\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId);\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid);\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid));\n      return;\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId;\n    const end = bond.begin === nei.aid ? dstId : nei.aid;\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end);\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond));\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond);\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]));\n      });\n    }\n\n    action.addOp(new BondDelete(nei.bid));\n  });\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId));\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C';\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]));\n    }\n  });\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId);\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId]);\n\n  const sgroups = atomGetSGroups(restruct, srcId);\n  sgroups.forEach((sgroupId: number) => {\n    const sgroup = restruct.sgroups.get(sgroupId).item;\n    for (let i = 0; i < sgroup.attachmentPoints.length; ++i) {\n      if (sgroup.attachmentPoints[i].atomId === srcId) {\n        action.addOp(\n          new SGroupAttachmentPointRemove(\n            sgroupId,\n            new SGroupAttachmentPoint(srcId, undefined, undefined),\n          ),\n        );\n        return;\n      }\n    }\n  });\n\n  action.addOp(new AtomDelete(srcId));\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId);\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid,\n  );\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond));\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment') as number;\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment');\n  if (frid2 === frid || typeof frid !== 'number' || typeof frid2 !== 'number') {\n    return frid;\n  }\n\n  const struct = restruct.molecule;\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2);\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid));\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid);\n\n  const atomsToNewFrag: Array<any> = [];\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid);\n  });\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid);\n\n  mergeSgroups(action, restruct, fridAtoms, dstId);\n  action.addOp(new FragmentDelete(frid2).perform(restruct));\n  action.mergeWith(moveAtomsAction);\n\n  return frid;\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom);\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid);\n    const notExpandedContexts = ['Atom', 'Bond', 'Group'];\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return;\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms);\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct)),\n    );\n  });\n}\n\nexport function checkAtomValence(restruct, atomId) {\n  const action = new Action();\n\n  if (!restruct.atoms.has(atomId)) return action;\n\n  action.addOp(new CalcImplicitH([atomId]));\n\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations';\n\nimport { Action } from './action';\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action();\n\n  action.addOp(new CanvasLoad(struct));\n  return action.perform(restruct);\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action();\n  action.addOp(new AlignDescriptors());\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations';\n\nimport { Action } from './action';\nimport { Vec2 } from 'domain/entities';\nimport { atomGetAttr } from './utils';\nimport { fromBondAddition } from './bond';\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6);\n  const dy = Math.sin(Math.PI / 6);\n\n  let action = new Action();\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid;\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: [],\n  };\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct),\n          ) as AtomAdd\n        ).data.aid;\n\n  chainItems.atoms.push(id0);\n  action.operations.reverse();\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0);\n\n    const ret = fromBondAddition(\n      restruct,\n      {},\n      id0,\n      { label: 'C' },\n      undefined,\n      pos,\n    );\n    action = ret[0].mergeWith(action);\n    id0 = ret[2];\n    chainItems.bonds.push(ret[3]);\n    chainItems.atoms.push(id0);\n  }\n\n  return [action, chainItems];\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action';\nimport { checkAtomValence, fromAtomMerge } from './atom';\nimport { fromBondsMerge } from './bond';\nimport utils from '../shared/utils';\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action();\n\n  if (!items) return action;\n\n  const usedAtoms = new Set();\n\n  const connectedAtomIds = getAllConnectedAtomsIds(\n    restruct,\n    mergeMapOfItemsToSet(items.atoms),\n    mergeMapOfItemsToSet(items.bonds),\n  );\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return;\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action);\n    usedAtoms.add(dst).add(src);\n  });\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action);\n\n  action = valenceCheck(restruct, connectedAtomIds).mergeWith(action);\n\n  return action;\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule;\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys()),\n  };\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds']),\n  );\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null;\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values()),\n    ...(items.functionalGroups && {\n      functionalGroups: Array.from(items.functionalGroups.values()),\n    }),\n    ...(items.atomToFunctionalGroup && {\n      sgroups: Array.from(items.atomToFunctionalGroup.values()),\n    }),\n  };\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems };\n}\n\nexport function mergeMapOfItemsToSet(items: Map<number, number>): Set<number> {\n  const itemsSet = new Set<number>();\n  items.forEach((value, key) => {\n    itemsSet.add(value).add(key);\n  });\n  return itemsSet;\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>,\n *    atomToFunctionalGroup: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds),\n    atomToFunctionalGroup: new Map(closestMap.atomToFunctionalGroup),\n  };\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId);\n    const bondCI = struct.bonds.get(dstId);\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin);\n      mergeMap.atoms.delete(bond.end);\n    } else {\n      mergeMap.bonds.delete(srcId);\n    }\n  });\n\n  if (\n    mergeMap.atoms.size === 0 &&\n    mergeMap.bonds.size === 0 &&\n    mergeMap.atomToFunctionalGroup.size === 0\n  ) {\n    return null;\n  }\n\n  return mergeMap;\n}\n\nfunction getAllConnectedAtomsIds(restruct, atomsIds, bondsIds) {\n  const initialAtoms = new Set(atomsIds);\n  const connectedAtoms = new Set();\n\n  for (const bondId of bondsIds) {\n    const bond = restruct.bonds.get(bondId);\n    if (bond) {\n      const { begin, end } = bond.b;\n      initialAtoms.add(begin).add(end);\n    }\n  }\n\n  for (const initialAtom of initialAtoms) {\n    if (connectedAtoms.has(initialAtom)) continue;\n    const relevantConnectedComponent = [\n      ...restruct.connectedComponents.values(),\n    ].find((component) => component.has(initialAtom));\n    if (relevantConnectedComponent)\n      relevantConnectedComponent.forEach((id) => connectedAtoms.add(id));\n  }\n\n  return connectedAtoms;\n}\n\nfunction valenceCheck(restruct, atomIds) {\n  let action = new Action();\n\n  if (!atomIds) return action;\n  const usedAtoms = new Set();\n\n  // merge single atoms\n  atomIds.forEach((atomId) => {\n    if (usedAtoms.has(atomId)) return;\n\n    action = checkAtomValence(restruct, atomId).mergeWith(action);\n    usedAtoms.add(atomId);\n  });\n\n  return action;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove,\n  ImageMove,\n} from '../operations';\nimport { Pile, RGroup, Vec2 } from 'domain/entities';\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup';\n\nimport { Action } from './action';\nimport { fromAtomsFragmentAttr } from './atom';\nimport { getRelSGroupsBySelection } from './utils';\nimport { IMAGE_KEY } from 'domain/constants';\n\nexport function fromMultipleMove(restruct, lists, d: Vec2) {\n  d = new Vec2(d);\n\n  const action = new Action();\n  const struct = restruct.molecule;\n  const loops = new Pile();\n  const atomsToInvalidate = new Pile();\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms);\n    const bondlist: Array<number> = [];\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid);\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop;\n          if (loop >= 0) loops.add(loop);\n        });\n        return;\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin);\n        return;\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end);\n    });\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d));\n    });\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d));\n      }\n    });\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)));\n    });\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSGroupsBySelection(struct, lists.atoms);\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d));\n      });\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true));\n    });\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true));\n    });\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true));\n    });\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d));\n    });\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d));\n    });\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true));\n    });\n  }\n\n  if (lists[IMAGE_KEY]) {\n    lists[IMAGE_KEY].forEach((image) => {\n      action.addOp(new ImageMove(image, d));\n    });\n  }\n\n  return action.perform(restruct);\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action();\n\n  if (!flag) {\n    const struct = restruct.molecule;\n    const frag = restruct.molecule.frags.get(frid);\n    frag?.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid));\n      }\n    });\n  }\n\n  action.addOp(new FragmentStereoFlag(frid));\n  return action.perform(restruct);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid];\n  const usedIds = new Pile(queue);\n\n  while (queue.length > 0) {\n    const id = queue.shift();\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid);\n        queue.push(nei.aid);\n      }\n    });\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid);\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = [],\n) {\n  const action = new Action();\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid);\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid;\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid));\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid));\n    }\n  });\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid));\n    action.addOp(new FragmentDelete(frid).perform(restruct));\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove));\n  }\n\n  action.operations.reverse();\n  return action;\n}\n","import assert from 'assert';\nimport { ReStruct } from 'application/render';\nimport { AttachmentPoints, Struct } from 'domain/entities';\nimport {\n  RGroupAttachmentPointAdd,\n  RGroupAttachmentPointRemove,\n} from '../operations';\nimport { Action } from './action';\nimport { fromAtomsAttrs } from '.';\n\nexport function fromRGroupAttachmentPointUpdate(\n  restruct: ReStruct,\n  atomId: number,\n  attachmentPoints: AttachmentPoints | null,\n) {\n  const action = new Action();\n  action.mergeWith(fromRGroupAttachmentPointsDeletionByAtom(restruct, atomId));\n  action.mergeWith(\n    fromRGroupAttachmentPointAddition(restruct, attachmentPoints, atomId),\n  );\n  return action;\n}\n\nexport function fromRGroupAttachmentPointAddition(\n  restruct: ReStruct,\n  attachmentPoints: AttachmentPoints | null,\n  atomId: number,\n) {\n  const action = new Action();\n  switch (attachmentPoints) {\n    case AttachmentPoints.FirstSideOnly:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'primary',\n        }),\n      );\n      break;\n\n    case AttachmentPoints.SecondSideOnly:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'secondary',\n        }),\n      );\n      break;\n\n    case AttachmentPoints.BothSides:\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'primary',\n        }),\n      );\n      action.addOp(\n        new RGroupAttachmentPointAdd({\n          atomId,\n          attachmentPointType: 'secondary',\n        }),\n      );\n      break;\n\n    default:\n      break;\n  }\n  return action.perform(restruct);\n}\n\nfunction fromRGroupAttachmentPointsDeletionByAtom(\n  restruct: ReStruct,\n  atomId: number,\n) {\n  const action = new Action();\n  const attachmentPointsToDelete =\n    restruct.molecule.getRGroupAttachmentPointsByAtomId(atomId);\n  attachmentPointsToDelete.forEach((rgroupAttachmentPointId) => {\n    action.addOp(new RGroupAttachmentPointRemove(rgroupAttachmentPointId));\n  });\n  return action.perform(restruct);\n}\n\nexport function fromRGroupAttachmentPointDeletion(\n  restruct: ReStruct,\n  id: number,\n) {\n  const { atomId, newAttachmentPoints } = getNewAtomAttachmentPoints(\n    restruct.molecule,\n    id,\n  );\n  const actionToUpdateAtomsAttrs = fromAtomsAttrs(\n    restruct,\n    atomId,\n    { attachmentPoints: newAttachmentPoints },\n    null,\n  );\n\n  const actionToDeletePoint = new Action();\n  actionToDeletePoint.addOp(new RGroupAttachmentPointRemove(id));\n\n  return actionToDeletePoint\n    .perform(restruct)\n    .mergeWith(actionToUpdateAtomsAttrs);\n}\n\nfunction getNewAtomAttachmentPoints(\n  struct: Struct,\n  rgroupAttachmentPointToDelete: number,\n) {\n  const pointToDelete = struct.rgroupAttachmentPoints.get(\n    rgroupAttachmentPointToDelete,\n  );\n  assert(pointToDelete != null);\n  const attachedAtomId = pointToDelete.atomId;\n  const attachedAtom = struct.atoms.get(attachedAtomId);\n  const currentAttachmentPoints = attachedAtom?.attachmentPoints;\n\n  let newAttachmentPoints = AttachmentPoints.None;\n  if (currentAttachmentPoints === AttachmentPoints.BothSides) {\n    const pointToDeleteType = pointToDelete.type;\n    if (pointToDeleteType === 'primary') {\n      newAttachmentPoints = AttachmentPoints.SecondSideOnly;\n    } else if (pointToDeleteType === 'secondary') {\n      newAttachmentPoints = AttachmentPoints.FirstSideOnly;\n    }\n  }\n\n  return { atomId: attachedAtomId, newAttachmentPoints };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  ImageDelete,\n  RGroupAttachmentPointRemove,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SGroupAtomRemove,\n  SimpleObjectDelete,\n  TextDelete,\n} from '../operations';\nimport { RGroup } from 'domain/entities';\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup';\n\nimport { Action } from './action';\nimport assert from 'assert';\nimport { atomGetDegree, formatSelection } from './utils';\nimport {\n  fromBondStereoUpdate,\n  removeAttachmentPointFromSuperatom,\n} from '../actions/bond';\nimport { fromFragmentSplit } from './fragment';\nimport { fromRGroupAttachmentPointDeletion } from './rgroupAttachmentPoint';\nimport { ReStruct } from 'application/render';\nimport { isNumber } from 'lodash';\nimport { IMAGE_KEY } from 'domain/constants';\n\nexport function fromOneAtomDeletion(restruct, atomId: number) {\n  return fromFragmentDeletion(restruct, { atoms: [atomId] });\n}\n\nfunction fromBondDeletion(\n  restruct: ReStruct,\n  bid: number,\n  skipAtoms: Array<any> = [],\n) {\n  let action = new Action();\n\n  if (restruct.sgroups && restruct.sgroups.size > 0) {\n    restruct.sgroups.forEach((sgroup) => {\n      if (sgroup.item?.type && sgroup.item?.type === 'SUP') {\n        const beginAtomConnectedToBond = restruct.bonds.get(bid)?.b.begin;\n        const endAtomConnectedToBond = restruct.bonds.get(bid)?.b.end;\n\n        removeAttachmentPointFromSuperatom(\n          sgroup,\n          beginAtomConnectedToBond,\n          endAtomConnectedToBond,\n          action,\n          restruct,\n        );\n      }\n    });\n  }\n\n  const bond: any = restruct.molecule.bonds.get(bid);\n  const atomsToRemove: Array<any> = [];\n\n  action.addOp(new BondDelete(bid));\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin);\n    }\n\n    action.addOp(new AtomDelete(bond.begin));\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 0\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end);\n    }\n\n    action.addOp(new AtomDelete(bond.end));\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove);\n  action = action.perform(restruct);\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct));\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false));\n\n  action.operations.reverse();\n\n  return action;\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id);\n  let action = fromBondDeletion(restruct, id);\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action);\n\n  return action;\n}\n\nexport function fromFragmentDeletion(restruct, rawSelection) {\n  assert(!!rawSelection != null);\n\n  let action = new Action();\n  const atomsToRemove: Array<number> = [];\n  const frids: Array<number> = [];\n  const struct = restruct.molecule;\n  const selection = formatSelection(rawSelection);\n\n  selection.sgroups.forEach((sgroupId) => {\n    const sgroup = restruct.sgroups.get(sgroupId);\n    const sgroupAtoms = sgroup.item.atoms;\n\n    selection.atoms = selection.atoms.concat(sgroupAtoms);\n\n    restruct.molecule.bonds.forEach((bond, bondId) => {\n      if (\n        sgroupAtoms.indexOf(bond.begin) >= 0 &&\n        sgroupAtoms.indexOf(bond.end) >= 0\n      ) {\n        selection.bonds.push(bondId);\n      }\n    });\n  });\n\n  selection.atoms = Array.from(new Set(selection.atoms));\n  selection.bonds = Array.from(new Set(selection.bonds));\n\n  selection.atoms.forEach((atomId) => {\n    const sgroup = struct.getGroupFromAtomId(atomId);\n    if (sgroup && sgroup.isSuperatomWithoutLabel) {\n      const attachmentPoints = sgroup.getAttachmentPoints();\n      attachmentPoints.forEach((attachmentPoint) => {\n        if (\n          attachmentPoint.atomId === atomId &&\n          isNumber(attachmentPoint.leaveAtomId) &&\n          !selection.atoms.includes(attachmentPoint.leaveAtomId)\n        ) {\n          action.addOp(\n            new SGroupAtomRemove(sgroup.id, attachmentPoint.leaveAtomId),\n          );\n          action.addOp(new AtomDelete(attachmentPoint.leaveAtomId));\n        }\n      });\n    }\n  });\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid]);\n      }\n    });\n  });\n\n  const actionRemoveBonds = new Action();\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid);\n    if (frids.indexOf(frid) < 0) frids.push(frid);\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms),\n    );\n  });\n\n  const removedRGroupAttachmentPoints: number[] = [];\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment;\n    if (frids.indexOf(frid3) < 0) frids.push(frid3);\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid);\n    }\n\n    action.addOp(new AtomDelete(aid));\n\n    const attachmentPointsToDelete =\n      restruct.molecule.getRGroupAttachmentPointsByAtomId(aid);\n    attachmentPointsToDelete.forEach((id) => {\n      action.addOp(new RGroupAttachmentPointRemove(id));\n      removedRGroupAttachmentPoints.push(id);\n    });\n  });\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove);\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id));\n  });\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id));\n  });\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id));\n  });\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id));\n  });\n\n  selection[IMAGE_KEY].forEach((id) => {\n    action.addOp(new ImageDelete(id));\n  });\n\n  const actionToDeleteRGroupAttachmentPoints = new Action();\n  selection.rgroupAttachmentPoints.forEach((id) => {\n    if (!removedRGroupAttachmentPoints.includes(id)) {\n      actionToDeleteRGroupAttachmentPoints.mergeWith(\n        fromRGroupAttachmentPointDeletion(restruct, id),\n      );\n    }\n  });\n\n  action = action.perform(restruct);\n  action\n    .mergeWith(actionRemoveBonds)\n    .mergeWith(actionToDeleteRGroupAttachmentPoints);\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!,\n  );\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action,\n    );\n  }\n\n  return action;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH,\n  FragmentSetProperties,\n  BondAttr,\n  AtomAttr,\n  ImageUpsert,\n} from '../operations';\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup';\n\nimport { Action } from './action';\nimport { SGroup, Struct, Vec2 } from 'domain/entities';\nimport { fromSgroupAddition } from './sgroup';\nimport { fromRGroupAttachmentPointAddition } from './rgroupAttachmentPoint';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { Image } from 'domain/entities/image';\n\nexport function fromPaste(\n  restruct,\n  pstruct,\n  point,\n  angle = 0,\n  isPreview = false,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  const xy0 = getStructCenter(pstruct);\n  const offset = Vec2.diff(point, xy0);\n\n  const action = new Action();\n\n  const aidMap = new Map();\n  const fridMap = new Map();\n\n  const pasteItems = {\n    // only atoms and bonds now\n    atoms: [] as number[],\n    bonds: [] as number[],\n  };\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment) && !pstruct.isAtomFromMacromolecule(aid)) {\n      fridMap.set(\n        atom.fragment,\n        (\n          action.addOp(\n            new FragmentAdd(null, atom.fragment.properties).perform(restruct),\n          ) as FragmentAdd\n        ).frid,\n      );\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment),\n    });\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point),\n    ).perform(restruct) as AtomAdd;\n    action.addOp(operation);\n    aidMap.set(aid, operation.data.aid);\n\n    pasteItems.atoms.push(operation.data.aid);\n\n    action.mergeWith(\n      fromRGroupAttachmentPointAddition(\n        restruct,\n        tmpAtom.attachmentPoints,\n        operation.data.aid,\n      ),\n    );\n  });\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return;\n    if (frag.properties) {\n      action.addOp(\n        new FragmentSetProperties(fridMap.get(frid), frag.properties).perform(\n          restruct,\n        ),\n      );\n    }\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct,\n        ),\n      ),\n    );\n  });\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond,\n      false,\n    ).perform(restruct) as BondAdd;\n    action.addOp(operation);\n\n    pasteItems.bonds.push(operation.data.bid);\n    new BondAttr(operation.data.bid, 'isPreview', isPreview, false).perform(\n      restruct,\n    );\n  });\n\n  pstruct.sgroups.forEach((sg: SGroup) => {\n    const newsgid = restruct.molecule.sgroups.newId();\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid));\n    const attachmentPoints = sg.cloneAttachmentPoints(aidMap);\n    if (\n      sg.isNotContractible(pstruct) &&\n      !(sg instanceof MonomerMicromolecule)\n    ) {\n      sg.setAttr('expanded', true);\n    }\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      attachmentPoints,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.isExpanded() : null,\n      sg.data.name,\n      sg,\n    );\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper);\n    });\n  });\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct));\n    new AtomAttr(aid, 'isPreview', isPreview).perform(restruct);\n  });\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode,\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct));\n  });\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode,\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset)),\n      ).perform(restruct),\n    );\n  });\n\n  pstruct.images.forEach((image: Image) => {\n    const clonedImage = image.clone();\n    clonedImage.addPositionOffset(offset);\n\n    action.addOp(new ImageUpsert(clonedImage).perform(restruct));\n  });\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct),\n      );\n    });\n    const ifThen = pstruct.rgroups.get(rgid).ifthen;\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0;\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen));\n  });\n\n  action.operations.reverse();\n  return [action, pasteItems];\n}\n\nfunction getStructCenter(struct: Struct): Vec2 {\n  const isOnlyOneSGroup = struct.sgroups.size === 1;\n  if (isOnlyOneSGroup) {\n    const onlyOneStructsSgroupId = struct.sgroups.keys().next().value;\n    const sgroup = struct.sgroups.get(onlyOneStructsSgroupId) as SGroup;\n    if (sgroup.isContracted()) {\n      return sgroup.getContractedPosition(struct).position;\n    }\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50;\n    let ymin = xmin;\n    let xmax = -xmin;\n    let ymax = -ymin;\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x);\n      ymin = Math.min(ymin, atom.pp.y);\n      xmax = Math.max(xmax, atom.pp.x);\n      ymax = Math.max(ymax, atom.pp.y);\n    });\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2); // TODO: check\n  }\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0)!.center();\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0)!.pp;\n  if (struct.simpleObjects.size > 0)\n    // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n    return struct.simpleObjects.get(0)!.center();\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.texts.size > 0) return struct.texts.get(0)!.position;\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  if (struct.images.size > 0) return struct.images.get(0)!.center();\n\n  return new Vec2(0, 0);\n}\n","import { ReStruct } from 'application/render';\nimport { ImageReferencePositionInfo, Vec2 } from 'domain/entities';\nimport {\n  Action,\n  ImageDelete,\n  ImageMove,\n  ImageResize,\n  ImageUpsert,\n} from 'application/editor';\nimport { Image } from 'domain/entities/image';\n\nexport function fromImageCreation(\n  reStruct: ReStruct,\n  bitmap: string,\n  center: Vec2,\n  halfSize: Vec2,\n) {\n  const action = new Action();\n  const image = new Image(bitmap, center, halfSize);\n  action.addOp(new ImageUpsert(image));\n  return action.perform(reStruct);\n}\n\nexport function fromImageDeletion(reStruct: ReStruct, id: number) {\n  const action = new Action();\n  action.addOp(new ImageDelete(id));\n  return action.perform(reStruct);\n}\n\nexport function fromImageMove(reStruct: ReStruct, id: number, offset: Vec2) {\n  const action = new Action();\n  action.addOp(new ImageMove(id, offset));\n  return action.perform(reStruct);\n}\n\nexport function fromImageResize(\n  reStruct: ReStruct,\n  id: number,\n  position: Vec2,\n  referencePositionInfo: ImageReferencePositionInfo,\n) {\n  const action = new Action();\n  const positionWithOffset = position.add(referencePositionInfo.offset);\n  action.addOp(\n    new ImageResize(id, positionWithOffset, referencePositionInfo.name),\n  );\n  return action.perform(reStruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from 'application/render';\nimport { Vec2 } from 'domain/entities';\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete,\n} from '../operations';\n\nimport { Action } from './action';\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action();\n  action.addOp(new RxnArrowAdd(pos, mode));\n  return action.perform(restruct);\n}\n\nexport function fromArrowResizing(\n  restruct: ReStruct,\n  id: number,\n  d: Vec2,\n  current: Vec2,\n  anchor: Vec2 | null,\n  isSnappingEnabled: boolean,\n) {\n  const action = new Action();\n  action.addOp(\n    new RxnArrowResize(id, d, current, anchor, false, isSnappingEnabled),\n  );\n  return action.perform(restruct);\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new RxnArrowDelete(id));\n  return action.perform(restruct);\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action();\n  action.addOp(new RxnPlusAdd(pos).perform(restruct));\n  return action;\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new RxnPlusDelete(id));\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnArrowRotate,\n  RxnPlusMove,\n  SGroupDataMove,\n  TextMove,\n} from '../operations';\nimport { Bond, Fragment, Struct, Vec2 } from 'domain/entities';\nimport { ReStruct } from 'application/render';\nimport { getRelSGroupsBySelection, structSelection } from './utils';\nimport { Action } from './action';\nimport { EditorSelection } from '../editor.types';\n\nexport type FlipDirection = 'horizontal' | 'vertical';\n\nexport function fromFlip(\n  reStruct: ReStruct,\n  selection: EditorSelection | null,\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n  const structToFlip = selection || structSelection(reStruct.molecule);\n\n  action.mergeWith(\n    fromStructureFlip(reStruct, structToFlip, flipDirection, center),\n  );\n\n  if (structToFlip.rxnArrows) {\n    action.mergeWith(\n      fromRxnArrowFlip(reStruct, structToFlip.rxnArrows, flipDirection, center),\n    );\n  }\n\n  if (structToFlip.rxnPluses) {\n    action.mergeWith(\n      fromRxnPlusFlip(reStruct, structToFlip.rxnPluses, flipDirection, center),\n    );\n  }\n\n  if (structToFlip.texts) {\n    action.mergeWith(\n      fromTextFlip(reStruct, structToFlip.texts, flipDirection, center),\n    );\n  }\n\n  return action;\n}\n\nfunction fromRxnArrowFlip(\n  reStruct: ReStruct,\n  rxnArrowIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  rxnArrowIds.forEach((arrowId) => {\n    const rxnArrow = reStruct.molecule.rxnArrows.get(arrowId);\n    if (!rxnArrow) {\n      return;\n    }\n\n    const [start, end] = rxnArrow.pos;\n    const oxAngle = end.sub(start).oxAngle();\n    const oyAngle = oxAngle - Math.PI / 2;\n    const rotateAngle =\n      flipDirection === 'vertical' ? -2 * oxAngle : -2 * oyAngle;\n    action.addOp(new RxnArrowRotate(arrowId, rotateAngle, rxnArrow.center()));\n\n    const difference = flipPointByCenter(\n      rxnArrow.center(),\n      center,\n      flipDirection,\n    );\n    action.addOp(new RxnArrowMove(arrowId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromRxnPlusFlip(\n  reStruct: ReStruct,\n  rxnPlusIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  rxnPlusIds.forEach((plusId) => {\n    const rxnPlus = reStruct.molecule.rxnPluses.get(plusId);\n    if (!rxnPlus) {\n      return;\n    }\n\n    const difference = flipPointByCenter(rxnPlus.pp, center, flipDirection);\n    action.addOp(new RxnPlusMove(plusId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromTextFlip(\n  reStruct: ReStruct,\n  textIds: number[],\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const action = new Action();\n\n  textIds.forEach((textId) => {\n    const text = reStruct.molecule.texts.get(textId);\n    if (!text) {\n      return;\n    }\n\n    // Note: text has two position properties\n    //      `position`: the middle left point\n    //      `pos`: a box (not bounding box)\n    // `TextMove` is to move `position`, so we have to calculate the flipped `position`\n    const textMiddleLeft = text.pos[0];\n    const textMiddleRight = text.pos[2];\n    const textCenter = Vec2.centre(textMiddleLeft, textMiddleRight);\n\n    const difference = flipPointByCenter(textCenter, center, flipDirection);\n    action.addOp(new TextMove(textId, difference));\n  });\n\n  return action.perform(reStruct);\n}\n\nfunction fromStructureFlip(\n  reStruct: ReStruct,\n  selection: EditorSelection | null,\n  flipDirection: FlipDirection,\n  center: Vec2,\n) {\n  const struct = reStruct.molecule;\n  const action = new Action();\n\n  selection?.atoms?.forEach((atomId) => {\n    const atom = struct.atoms.get(atomId);\n    if (!atom) {\n      return;\n    }\n\n    const difference = flipPointByCenter(atom.pp, center, flipDirection);\n    action.addOp(new AtomMove(atomId, difference));\n  });\n\n  const sGroups = getRelSGroupsBySelection(struct, selection?.atoms || []);\n  sGroups.forEach((sGroup) => {\n    if (!sGroup.pp) {\n      return;\n    }\n    const difference = flipPointByCenter(sGroup.pp, center, flipDirection);\n    action.addOp(new SGroupDataMove(sGroup.id, difference));\n  });\n\n  if (selection?.bonds) {\n    flipBonds(selection.bonds, struct, action);\n  }\n\n  return action.perform(reStruct);\n}\n\nfunction flipBonds(bondIds: number[], struct: Struct, action: Action) {\n  bondIds.forEach((bondId) => {\n    const bond = struct.bonds.get(bondId);\n\n    if (!bond) {\n      return;\n    }\n\n    if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n      return;\n    }\n\n    if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n      action.addOp(new BondAttr(bondId, 'stereo', Bond.PATTERN.STEREO.DOWN));\n      return;\n    }\n\n    if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n      action.addOp(new BondAttr(bondId, 'stereo', Bond.PATTERN.STEREO.UP));\n    }\n  });\n}\n\nfunction flipPointByCenter(\n  pointToFlip: Vec2,\n  center: Vec2,\n  flipDirection: FlipDirection,\n) {\n  const d = new Vec2();\n  if (flipDirection === 'horizontal') {\n    d.x =\n      center.x > pointToFlip.x\n        ? 2 * (center.x - pointToFlip.x)\n        : -2 * (pointToFlip.x - center.x);\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > pointToFlip.y\n        ? 2 * (center.y - pointToFlip.y)\n        : -2 * (pointToFlip.y - center.y);\n  }\n  return d;\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule;\n\n  const action = new Action();\n\n  if (!selection) {\n    selection = structSelection(struct);\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid);\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)));\n    });\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSGroupsBySelection(struct, selection.atoms);\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle)),\n        );\n      });\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((arrowId) => {\n      action.addOp(new RxnArrowRotate(arrowId, angle, center));\n    });\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid);\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)));\n    });\n  }\n\n  if (selection.texts) {\n    selection.texts.forEach((textId) => {\n      const text = struct.texts.get(textId);\n      action.addOp(\n        new TextMove(textId, rotateDelta(text.position, center, angle)),\n      );\n    });\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did);\n      action.addOp(\n        new SGroupDataMove(did, rotateDelta(data.pp, center, angle)),\n      );\n    });\n  }\n\n  if (selection.enhancedFlags) {\n    selection.enhancedFlags.forEach((flagId) => {\n      const frId = flagId;\n      const frag = restruct.molecule.frags.get(frId);\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle,\n          ),\n        ),\n      );\n    });\n  }\n\n  return action.perform(restruct);\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center);\n  v1 = v1.rotate(angle);\n  v1.add_(center); // eslint-disable-line no-underscore-dangle\n  return v1.sub(v);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize,\n} from '../operations';\n\nimport { Action } from './action';\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action();\n  action.addOp(new SimpleObjectDelete(id));\n  return action.perform(restruct);\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action();\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle));\n  return action.perform(restruct);\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle,\n) {\n  const action = new Action();\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle));\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct, Vec2 } from 'domain/entities';\nimport { AtomAdd, BondAdd, BondAttr, CalcImplicitH } from '../operations';\nimport { atomForNewBond, atomGetAttr } from './utils';\nimport { fromAtomsAttrs, mergeSgroups } from './atom';\nimport { fromBondStereoUpdate, fromBondsAttrs, fromBondAddition } from './bond';\n\nimport { Action } from './action';\nimport closest from '../shared/closest';\nimport { fromAromaticTemplateOnBond } from './aromaticFusing';\nimport { fromPaste } from './paste';\nimport utils from '../shared/utils';\nimport { fromSgroupAddition } from './sgroup';\n\nconst benzeneMoleculeName = 'Benzene';\nconst cyclopentadieneMoleculeName = 'Cyclopentadiene';\nconst benzeneDoubleBondIndexes = [2, 4];\n\nexport function fromTemplateOnCanvas(\n  restruct,\n  template,\n  pos,\n  angle = 0,\n  isPreview = true,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle,\n    isPreview,\n  );\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct));\n\n  return [action, pasteItems];\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action();\n  const frid = atomGetAttr(restruct, aid, 'fragment');\n  let additionalAtom: any = null;\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid);\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      undefined,\n      middleAtom.pos.get_xy0(),\n    );\n    action = actionRes[0];\n    action.operations.reverse();\n    additionalAtom = actionRes[2];\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0(),\n    ).perform(restruct) as AtomAdd;\n\n    action.addOp(operation);\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct),\n    );\n\n    additionalAtom = operation.data.aid;\n  }\n\n  return { action, aid1: additionalAtom };\n}\n\nexport function fromTemplateOnAtom(\n  restruct,\n  template,\n  aid,\n  angle,\n  extraBond,\n  isPreview = false,\n): [Action, { atoms: number[]; bonds: number[] }] {\n  let action = new Action();\n\n  const tmpl = template.molecule;\n  const struct = restruct.molecule;\n\n  const isTmplSingleGroup = template.molecule.isSingleGroup();\n\n  let atom = struct.atoms.get(aid); // aid - the atom that was clicked on\n  let aid1 = aid; // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null;\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle);\n    action = extraRes.action;\n    aid1 = extraRes.aid1;\n\n    atom = struct.atoms.get(aid1);\n    delta =\n      utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0;\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos);\n    }\n    delta = angle - template.angle0;\n  }\n\n  const map = new Map();\n  const xy0 = tmpl.atoms.get(template.aid).pp;\n  const frid = atomGetAttr(restruct, aid, 'fragment');\n\n  /* For merge */\n  const pasteItems = {\n    // only atoms and bonds now\n    atoms: [] as number[],\n    bonds: [] as number[],\n  };\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a);\n    attrs.fragment = frid;\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true));\n      map.set(id, aid1);\n      pasteItems.atoms.push(aid1);\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp);\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct,\n      ) as AtomAdd;\n      action.addOp(operation);\n      map.set(id, operation.data.aid);\n      pasteItems.atoms.push(operation.data.aid);\n    }\n  });\n\n  if (!isTmplSingleGroup) mergeSgroups(action, restruct, pasteItems.atoms, aid);\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond,\n    ).perform(restruct) as BondAdd;\n    action.addOp(operation);\n    new BondAttr(operation.data.bid, 'isPreview', isPreview).perform(restruct);\n\n    pasteItems.bonds.push(operation.data.bid);\n  });\n\n  tmpl.sgroups.forEach((sg: SGroup) => {\n    const newsgid = restruct.molecule.sgroups.newId();\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid));\n    const attachmentPoints = sg.cloneAttachmentPoints(map);\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      {\n        ...sg.data,\n        expanded: isPreview ? true : sg.data.expanded,\n      },\n      newsgid,\n      attachmentPoints,\n      atom.pp,\n      sg.type === 'SUP' ? sg.isExpanded() : null,\n      sg.data.name,\n    );\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper);\n    });\n  });\n\n  action.operations.reverse();\n\n  action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct));\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0]),\n    ),\n  );\n\n  return [action, pasteItems];\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force,\n  isPreview = false,\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip);\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip, isPreview); // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing,\n  );\n}\n\nfunction getConnectingBond(\n  template: Struct,\n  struct: Struct,\n  bondId: number,\n  bond: Bond,\n) {\n  const isBenzeneTemplate = template.name === benzeneMoleculeName;\n  const isCyclopentadieneTemplate =\n    template.name === cyclopentadieneMoleculeName;\n  if (template.bonds.size && (isBenzeneTemplate || isCyclopentadieneTemplate)) {\n    const { beginBondIds, endBondIds } = Bond.getBondNeighbourIds(\n      struct,\n      bondId,\n    );\n    const isOnlyTwoConnectingBonds =\n      beginBondIds.length === 1 && endBondIds.length === 1;\n\n    if (!isOnlyTwoConnectingBonds) {\n      return null;\n    }\n    const beginBond = struct.bonds.get(beginBondIds[0]);\n    const endBond = struct.bonds.get(endBondIds[0]);\n\n    if (!beginBond || !endBond) {\n      throw new Error('Incorrect bond id was provided');\n    }\n\n    if (isBenzeneTemplate) {\n      return Bond.getBenzeneConnectingBondType(bond, beginBond, endBond);\n    }\n\n    if (isCyclopentadieneTemplate) {\n      return Bond.getCyclopentadieneFusingBondType(bond, beginBond, endBond);\n    }\n  }\n  return null;\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip, isPreview = false) {\n  // TODO: refactor function !!\n  const action = new Action();\n\n  const tmpl = template.molecule;\n  const struct = restruct.molecule;\n\n  const bond = struct.bonds.get(bid);\n  const tmplBond = tmpl.bonds.get(template.bid);\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin);\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end],\n  ]);\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end,\n  };\n  const { angle, scale } = utils.mergeBondsParams(\n    struct,\n    bond,\n    tmpl,\n    bondAtoms,\n  );\n\n  const frid = struct.getBondFragment(bid);\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: [],\n  };\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom);\n    attrs.fragment = frid;\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\n      return;\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp);\n    const mergeA = closest.atom(restruct, v, null, 0.1);\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd;\n      action.addOp(operation);\n      atomsMap.set(id, operation.data.aid);\n      pasteItems.atoms.push(operation.data.aid);\n    } else {\n      atomsMap.set(id, mergeA.id);\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\n      // TODO [RB] need to merge fragments?\n    }\n  });\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin);\n\n  // When a template of \"Benzene\" molecule is attached it\n  // uses specific fusing rules when attaching to a bond\n  // that is connected exactly to one bond on each side.\n  // For more info please refer to: https://github.com/epam/ketcher/issues/1855\n  const fusingBondType = getConnectingBond(tmpl, struct, bid, bond);\n  const isFusingBenzeneBySpecialRules = fusingBondType !== null;\n\n  tmpl.bonds.forEach((tBond, tBondIndex) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end),\n    );\n    let previewBondId = null;\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond,\n      ).perform(restruct) as BondAdd;\n      action.addOp(operation);\n      const newBondId = operation.data.bid;\n      previewBondId = newBondId;\n\n      if (isFusingBenzeneBySpecialRules) {\n        const isBenzeneTemplate = tmpl.name === benzeneMoleculeName;\n        const isCyclopentadieneTemplate =\n          tmpl.name === cyclopentadieneMoleculeName;\n        if (isBenzeneTemplate) {\n          const newBondType = benzeneDoubleBondIndexes.includes(tBondIndex)\n            ? Bond.PATTERN.TYPE.DOUBLE\n            : Bond.PATTERN.TYPE.SINGLE;\n          action.addOp(\n            new BondAttr(newBondId, 'type', newBondType).perform(restruct),\n          );\n        }\n        if (isCyclopentadieneTemplate) {\n          const { beginBondIds, endBondIds } = Bond.getBondNeighbourIds(\n            struct,\n            bid,\n          );\n          const bondBegin = struct.bonds.get(beginBondIds[0])!;\n          const bondEnd = struct.bonds.get(endBondIds[0])!;\n          const newBondType = Bond.getCyclopentadieneDoubleBondIndexes(\n            bond,\n            bondBegin,\n            bondEnd,\n          ).includes(tBondIndex)\n            ? Bond.PATTERN.TYPE.DOUBLE\n            : Bond.PATTERN.TYPE.SINGLE;\n          action.addOp(\n            new BondAttr(newBondId, 'type', newBondType).perform(restruct),\n          );\n        }\n      }\n\n      pasteItems.bonds.push(newBondId);\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond;\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true));\n\n      if (isFusingBenzeneBySpecialRules && fusingBondType) {\n        action.addOp(\n          new BondAttr(bid, 'type', fusingBondType).perform(restruct),\n        );\n      }\n      previewBondId = bid;\n    }\n    action.addOp(\n      new BondAttr(previewBondId, 'isPreview', isPreview).perform(restruct),\n    );\n  });\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct,\n      ),\n    );\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0]),\n      ),\n    );\n  }\n\n  action.operations.reverse();\n\n  return [action, pasteItems];\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations';\n\nimport { Action } from './action';\nimport { ReStruct } from '../../render';\nimport { Vec2 } from 'domain/entities';\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>,\n) {\n  const action = new Action();\n  action.addOp(new TextCreate(content, position, pos));\n  return action.perform(restruct);\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string,\n) {\n  const action = new Action();\n  action.addOp(new TextUpdate(id, content));\n  return action.perform(restruct);\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action();\n\n  action.addOp(new TextDelete(id));\n\n  return action.perform(restruct);\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { Highlight } from 'domain/entities';\nimport { ReStruct } from '../../render';\n\nimport { BaseOperation } from './base';\nimport { OperationType } from './OperationType';\n\ntype Data = {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n  highlightId?: number;\n};\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data;\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number,\n  ) {\n    super(OperationType.ADD_HIGHLIGHT);\n    this.data = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data;\n\n    if (!color) {\n      return;\n    }\n\n    const struct = restruct.molecule;\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color,\n    });\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight);\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight);\n    }\n\n    notifyChanged(restruct, atoms, bonds);\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data;\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color);\n    return inverted;\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data;\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string,\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5);\n    this.data = {\n      highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white',\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule;\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId);\n      if (typeof highlightToRemove === 'undefined') {\n        return;\n      }\n\n      const { atoms, bonds, color } = highlightToRemove;\n\n      this.data.atoms = atoms;\n      this.data.bonds = bonds;\n      this.data.color = color;\n\n      struct.highlights.delete(this.data.highlightId);\n      notifyChanged(restruct, atoms, bonds);\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data;\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId);\n    inverted.data = this.data;\n    return inverted;\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number };\n  oldData: Data & { highlightId: number };\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT);\n    this.newData = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms,\n      bonds,\n      color,\n      highlightId,\n    };\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData;\n    if (!color) {\n      return;\n    }\n\n    const highlightId = this.newData.highlightId;\n    const struct = restruct.molecule;\n\n    const highlightToUpdate = struct.highlights.get(highlightId);\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n      } = highlightToUpdate;\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId,\n      };\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color,\n      });\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight);\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds]);\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData;\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color,\n    );\n    return inverted;\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms;\n  const reBonds = restruct.bonds;\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1);\n      }\n    });\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1);\n      }\n    });\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render';\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight';\n\nimport { Action } from './action';\n\ntype HighlightType = {\n  atoms: number[];\n  bonds: number[];\n  color: string;\n};\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[],\n): Action {\n  const action = new Action();\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight;\n\n    action.addOp(new HighlightAdd(atoms, bonds, color));\n  });\n  return action.perform(restruct);\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action();\n\n  const highlights = restruct.molecule.highlights;\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key));\n  });\n\n  return action.perform(restruct);\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Command } from 'domain/entities/Command';\nimport { CoreEditor } from './Editor';\nimport assert from 'assert';\nconst HISTORY_SIZE = 32; // put me to options\n\nexport type HistoryOperationType = 'undo' | 'redo';\n\nexport class EditorHistory {\n  historyStack: Command[] | [] = [];\n  historyPointer = 0;\n  editor: CoreEditor | undefined;\n\n  private static _instance;\n  constructor(editor: CoreEditor) {\n    if (EditorHistory._instance) {\n      return EditorHistory._instance;\n    }\n    this.editor = editor;\n    this.historyPointer = 0;\n\n    EditorHistory._instance = this;\n\n    return this;\n  }\n\n  update(command: Command, megreWithLatestHistoryCommand?: boolean) {\n    const latestCommand = this.historyStack[this.historyStack.length - 1];\n    if (megreWithLatestHistoryCommand && latestCommand) {\n      latestCommand.merge(command);\n    } else {\n      this.historyStack.splice(this.historyPointer, HISTORY_SIZE + 1, command);\n      if (this.historyStack.length > HISTORY_SIZE) {\n        this.historyStack.shift();\n      }\n      this.historyPointer = this.historyStack.length;\n    }\n  }\n\n  undo() {\n    if (this.historyPointer === 0) {\n      return;\n    }\n\n    assert(this.editor);\n\n    this.historyPointer--;\n    const lastCommand = this.historyStack[this.historyPointer];\n    lastCommand.invert(this.editor.renderersContainer);\n    const turnOffSelectionCommand =\n      this.editor?.drawingEntitiesManager.unselectAllDrawingEntities();\n    this.editor?.renderersContainer.update(turnOffSelectionCommand);\n  }\n\n  redo() {\n    if (this.historyPointer === this.historyStack.length) {\n      return;\n    }\n\n    assert(this.editor);\n\n    const lastCommand = this.historyStack[this.historyPointer];\n    lastCommand.execute(this.editor.renderersContainer);\n    this.historyPointer++;\n  }\n\n  destroy() {\n    EditorHistory._instance = null;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils';\n\nexport const vectorUtils = {\n  fracAngle: utils.fracAngle,\n  calcAngle: utils.calcAngle,\n  degrees: utils.degrees,\n  calcNewAtomPos: utils.calcNewAtomPos,\n};\n\nexport * from './operations';\nexport * from './actions';\nexport * from './shared/constants';\nexport * from './shared/coordinates';\nexport * from './editor.types';\nexport * from './Editor';\nexport * from './EditorHistory';\nexport * from './modes';\nexport * from './editorEvents';\nexport * from './editorSettings';\nexport * from './tools';\n","import { CoreEditor } from 'application/editor/internal';\nimport { SequenceType } from 'domain/entities';\nimport { RNA_DNA_NON_MODIFIED_PART } from 'domain/constants/monomers';\nimport { MONOMER_CONST } from 'application/editor';\n\nexport function getRnaPartLibraryItem(editor: CoreEditor, rnaBaseName: string) {\n  return editor.monomersLibrary.find(\n    (libraryItem) =>\n      libraryItem.props.MonomerType === MONOMER_CONST.RNA &&\n      libraryItem.props.MonomerName === rnaBaseName,\n  );\n}\n\nexport function getPeptideLibraryItem(editor: CoreEditor, peptideName: string) {\n  return editor.monomersLibrary.find(\n    (libraryItem) =>\n      libraryItem.props.MonomerType === MONOMER_CONST.PEPTIDE &&\n      libraryItem.props.MonomerName === peptideName,\n  );\n}\n\nexport function getSugarBySequenceType(sequenceType: SequenceType) {\n  switch (sequenceType) {\n    case SequenceType.DNA:\n      return RNA_DNA_NON_MODIFIED_PART.SUGAR_DNA;\n    case SequenceType.RNA:\n      return RNA_DNA_NON_MODIFIED_PART.SUGAR_RNA;\n    default:\n      return undefined;\n  }\n}\n","import { RNABase } from 'domain/entities/RNABase';\nimport { Sugar } from 'domain/entities/Sugar';\nimport assert from 'assert';\nimport {\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { CoreEditor } from 'application/editor/internal';\nimport { AttachmentPointName } from 'domain/types';\nimport { Command } from 'domain/entities/Command';\nimport {\n  getRnaPartLibraryItem,\n  getSugarBySequenceType,\n} from 'domain/helpers/rna';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class Nucleoside {\n  constructor(public sugar: Sugar, public rnaBase: RNABase) {}\n\n  static fromSugar(sugar: Sugar, needValidation = true) {\n    if (needValidation) {\n      assert(\n        isValidNucleoside(sugar),\n        'Created nucleoside is not valid. Please check nucleotide parts connections.',\n      );\n\n      const isNucleotide = isValidNucleotide(sugar);\n      assert(!isNucleotide, 'Created nucleoside is nucleotide.');\n    }\n\n    return new Nucleoside(sugar, getRnaBaseFromSugar(sugar) as RNABase);\n  }\n\n  static createOnCanvas(rnaBaseName: string, position: Vec2) {\n    const editor = CoreEditor.provideEditorInstance();\n    const rnaBaseLibraryItem = getRnaPartLibraryItem(editor, rnaBaseName);\n    const sugarName = getSugarBySequenceType(editor.sequenceTypeEnterMode);\n    assert(sugarName);\n\n    const sugarLibraryItem = getRnaPartLibraryItem(editor, sugarName);\n\n    assert(sugarLibraryItem);\n    assert(rnaBaseLibraryItem);\n\n    const modelChanges = new Command();\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.addMonomer(sugarLibraryItem, position),\n    );\n    modelChanges.merge(\n      editor.drawingEntitiesManager.addMonomer(rnaBaseLibraryItem, position),\n    );\n\n    const sugar = modelChanges.operations[0].monomer as Sugar;\n    const rnaBase = modelChanges.operations[1].monomer as RNABase;\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.createPolymerBond(\n        sugar,\n        rnaBase,\n        AttachmentPointName.R3,\n        AttachmentPointName.R1,\n      ),\n    );\n\n    return { modelChanges, node: Nucleoside.fromSugar(sugar, false) };\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return this.sugar.isMonomerTypeDifferentForChaining(monomerToChain);\n  }\n\n  public get SubChainConstructor() {\n    return this.sugar.SubChainConstructor;\n  }\n\n  public get monomer() {\n    return this.sugar;\n  }\n\n  public get monomers(): BaseMonomer[] {\n    return [this.sugar, this.rnaBase];\n  }\n\n  public get firstMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get lastMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    // TODO move isNotLastNode to separate getter because it is not modification\n    //  It was added here because it needs to show similar icon as for phosphates modifications\n    const isNotLastNode = !!getNextMonomerInChain(this.sugar);\n\n    return (\n      this.rnaBase.isModification || this.sugar.isModification || isNotLastNode\n    );\n  }\n}\n","import { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\n\nexport class BackBoneBondSequenceRenderer extends BaseSequenceRenderer {\n  constructor(polymerBond: PolymerBond) {\n    super(polymerBond);\n  }\n\n  public get isSnake() {\n    return false;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return false;\n  }\n\n  public moveStart() {}\n\n  public moveEnd() {}\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { Operation } from 'domain/entities/Operation';\nimport { CoreEditor } from 'application/editor/internal';\nimport { SequenceMode, SnakeMode } from 'application/editor/modes';\nimport {\n  SequencePointer,\n  SequenceRenderer,\n} from 'application/render/renderers/sequence/SequenceRenderer';\n\nexport class ReinitializeModeOperation implements Operation {\n  public priority = 2;\n  constructor() {}\n\n  public execute(_renderersManager: RenderersManager) {\n    const editor = CoreEditor.provideEditorInstance();\n    if (\n      editor.mode instanceof SequenceMode ||\n      editor.mode instanceof SnakeMode\n    ) {\n      editor.mode.initialize(false);\n    }\n  }\n\n  public invert(_renderersManager: RenderersManager) {\n    const editor = CoreEditor.provideEditorInstance();\n    if (\n      editor.mode instanceof SequenceMode ||\n      editor.mode instanceof SnakeMode\n    ) {\n      editor.mode.initialize(false);\n    }\n  }\n}\n\nexport class RestoreSequenceCaretPositionOperation implements Operation {\n  constructor(\n    private previousPosition: SequencePointer,\n    private nextPosition: SequencePointer,\n  ) {\n    this.execute();\n  }\n\n  public execute() {\n    SequenceRenderer.setCaretPosition(this.nextPosition);\n  }\n\n  public invert(_renderersManager: RenderersManager) {\n    SequenceRenderer.setCaretPosition(this.previousPosition);\n  }\n}\n","import { BaseSequenceItemRenderer, SequenceRenderer } from 'application/render';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { CoreEditor } from 'application/editor';\nimport ZoomTool from '../../../../editor/tools/Zoom';\nimport { select } from 'd3';\nimport { drawnStructuresSelector } from 'application/editor/constants';\n\nconst TEXT_COLOR = '#333333';\nconst HOVER_COLOR = '#167782';\nconst BUTTON_OFFSET_FROM_CANVAS = 20;\nconst BUTTON_Y_OFFSET_FROM_ROW = 18;\n\nexport class NewSequenceButton {\n  private buttonElement?: D3SvgElementSelection<SVGElement, void>;\n  private canvas: D3SvgElementSelection<SVGSVGElement, void>;\n  private rootElement?: D3SvgElementSelection<SVGGElement, void>;\n  private bodyElement?: D3SvgElementSelection<SVGForeignObjectElement, void>;\n\n  constructor(private indexOfRowBefore: number) {\n    this.canvas = ZoomTool.instance?.canvas || select(drawnStructuresSelector);\n  }\n\n  public show() {\n    const editor = CoreEditor.provideEditorInstance();\n    const chain =\n      SequenceRenderer.chainsCollection.chains[this.indexOfRowBefore];\n    const lastNodeRendererInChain = chain.lastNode?.renderer;\n\n    if (!(lastNodeRendererInChain instanceof BaseSequenceItemRenderer)) {\n      return;\n    }\n\n    this.rootElement = this.canvas\n      .append('g')\n      .data([this])\n      .attr('class', 'dynamic-element')\n      .attr(\n        'transform',\n        `translate(${BUTTON_OFFSET_FROM_CANVAS}, ${\n          lastNodeRendererInChain.scaledMonomerPositionForSequence.y +\n          BUTTON_Y_OFFSET_FROM_ROW\n        })`,\n      )\n      .attr('cursor', 'pointer') as never as D3SvgElementSelection<\n      SVGGElement,\n      void\n    >;\n\n    this.rootElement.attr('opacity', '0');\n    this.rootElement\n      .append('rect')\n      .attr('x', '16')\n      .attr('y', '14')\n      .attr('width', '595')\n      .attr('height', '4')\n      .attr('stroke', '#B4B9D6')\n      .attr('stroke-width', '1')\n      .attr('fill', '#fff');\n\n    this.bodyElement = this.rootElement\n      .append('foreignObject')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', '35')\n      .attr('width', '611');\n\n    this.buttonElement = this.bodyElement.append<SVGElement>('xhtml:div').attr(\n      'style',\n      `\n        width: 32px;\n        padding:  8px;\n        font-size: 12px;\n        color: ${TEXT_COLOR};\n        border-radius: 20px;\n        box-shadow: 0px 2px 5px 0px #67688426;\n        background-color: #ffffff;\n        font-weight: 400;\n        border: none;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      `,\n    );\n\n    NewSequenceButton.appendPlusIcon(this.buttonElement);\n\n    this.rootElement\n      .on('mouseover', () => {\n        this.appendHover();\n        this.rootElement?.attr('opacity', '1');\n      })\n      .on('mouseout', () => {\n        this.removeHover();\n        this.rootElement?.attr('opacity', '0');\n      })\n      .on('click', (event: MouseEvent) => {\n        event.stopPropagation();\n        editor.events.startNewSequence.dispatch({\n          indexOfRowBefore: this.indexOfRowBefore,\n        });\n      });\n  }\n\n  public static appendPlusIcon(\n    element: D3SvgElementSelection<SVGElement, void>,\n  ) {\n    element\n      .append('svg')\n      .attr('width', '16')\n      .attr('height', '16')\n      .attr('fill', 'currentColor')\n      .append('path')\n      .attr(\n        'd',\n        'M16 7.00095V9.00095H9V16.002H7V9.00095H0V7.00095H7V0.00195312H9V7.00095H16Z',\n      );\n  }\n\n  protected appendHover(): D3SvgElementSelection<SVGUseElement, void> | void {\n    this.buttonElement?.style('color', HOVER_COLOR);\n  }\n\n  protected appendHoverAreaElement(): void {}\n\n  drawSelection(): void {}\n\n  moveSelection(): void {}\n\n  protected removeHover(): void {\n    this.buttonElement?.style('color', TEXT_COLOR);\n  }\n\n  public remove() {\n    this.rootElement?.remove();\n    this.rootElement = undefined;\n  }\n}\n","import { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { SequenceNodeRendererFactory } from 'application/render/renderers/sequence/SequenceNodeRendererFactory';\nimport {\n  BaseMonomer,\n  Nucleotide,\n  Phosphate,\n  RNABase,\n  Sugar,\n  Vec2,\n} from 'domain/entities';\nimport { AttachmentPointName } from 'domain/types';\nimport { PolymerBondSequenceRenderer } from 'application/render/renderers/sequence/PolymerBondSequenceRenderer';\nimport {\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  getSugarFromRnaBase,\n} from 'domain/helpers/monomers';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { BackBoneBondSequenceRenderer } from 'application/render/renderers/sequence/BackBoneBondSequenceRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { EmptySequenceItemRenderer } from 'application/render/renderers/sequence/EmptySequenceItemRenderer';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { Chain } from 'domain/entities/monomer-chains/Chain';\nimport { EmptySubChain } from 'domain/entities/monomer-chains/EmptySubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { CoreEditor } from 'application/editor/internal';\nimport { RestoreSequenceCaretPositionOperation } from 'application/editor/operations/modes';\nimport assert from 'assert';\nimport { BaseSubChain } from 'domain/entities/monomer-chains/BaseSubChain';\nimport { BaseMonomerRenderer } from 'application/render';\nimport { Command } from 'domain/entities/Command';\nimport { NewSequenceButton } from 'application/render/renderers/sequence/ui-controls/NewSequenceButton';\nimport { isNumber } from 'lodash';\n\nexport type SequencePointer = number;\nexport type NumberOfSymbolsInRow = number;\nexport type SequenceLastCaretPosition = number;\n\nexport type NodeSelection = {\n  node: SubChainNode;\n  nodeIndexOverall: number;\n  isNucleosideConnectedAndSelectedWithPhosphate?: boolean;\n  hasR1Connection?: boolean;\n};\n\nexport type NodesSelection = NodeSelection[][];\nconst NUMBER_OF_SYMBOLS_IN_ROW: NumberOfSymbolsInRow = 30;\n\nexport class SequenceRenderer {\n  public static caretPosition: SequencePointer = -1;\n  public static lastUserDefinedCaretPosition: SequenceLastCaretPosition = 0;\n  public static chainsCollection: ChainsCollection;\n  public static lastChainStartPosition: Vec2;\n  private static emptySequenceItemRenderers: EmptySequenceItemRenderer[] = [];\n  private static newSequenceButtons: NewSequenceButton[] = [];\n  public static show(\n    chainsCollection: ChainsCollection,\n    emptyChainIndex?: number,\n  ) {\n    SequenceRenderer.chainsCollection = chainsCollection;\n    this.removeEmptyNodes();\n    this.removeNewSequenceButtons();\n    this.showNodes(\n      SequenceRenderer.chainsCollection,\n      chainsCollection.length === 0 ? 0 : emptyChainIndex,\n    );\n    this.showBonds(SequenceRenderer.chainsCollection);\n  }\n\n  public static removeEmptyNodes() {\n    SequenceRenderer.emptySequenceItemRenderers.forEach(\n      (emptySequenceItemRenderer) => {\n        emptySequenceItemRenderer.remove();\n        SequenceRenderer.emptySequenceItemRenderers = [];\n      },\n    );\n  }\n\n  public static removeNewSequenceButtons() {\n    this.newSequenceButtons.forEach((newSequenceButton) =>\n      newSequenceButton.remove(),\n    );\n    this.newSequenceButtons = [];\n  }\n\n  private static showNodes(\n    chainsCollection: ChainsCollection,\n    chainBeforeEmptyChainIndex?: number,\n  ) {\n    const firstNode = chainsCollection.firstNode;\n    const emptyChainIndex = isNumber(chainBeforeEmptyChainIndex)\n      ? chainBeforeEmptyChainIndex + 1\n      : undefined;\n    let newSequenceEmptyNode;\n\n    let currentChainStartPosition = firstNode\n      ? BaseMonomerRenderer.getScaledMonomerPosition(\n          firstNode.monomer.position,\n          firstNode.monomer.renderer?.monomerSize,\n        )\n      : new Vec2(41.5, 41.5);\n\n    let currentMonomerIndexInChain = 0;\n    let currentMonomerIndexOverall = 0;\n    const isEditMode = CoreEditor.provideEditorInstance().isSequenceEditMode;\n    const isEditInRnaBuilderMode =\n      CoreEditor.provideEditorInstance().isSequenceEditInRNABuilderMode;\n\n    if (isEditMode) {\n      chainsCollection.chains.forEach((chain) => {\n        const emptySequenceNode = new EmptySequenceNode();\n        const emptySubChain = new EmptySubChain();\n        emptySubChain.add(emptySequenceNode);\n        chain.subChains.push(emptySubChain);\n      });\n    }\n\n    if (isNumber(emptyChainIndex)) {\n      const { emptyChain, emptySequenceNode } =\n        Chain.createChainWithEmptyNode();\n\n      SequenceRenderer.chainsCollection.chains.splice(\n        emptyChainIndex,\n        0,\n        emptyChain,\n      );\n\n      newSequenceEmptyNode = emptySequenceNode;\n    }\n\n    chainsCollection.chains.forEach((chain, chainIndex) => {\n      currentMonomerIndexInChain = 0;\n      chain.subChains.forEach((subChain) => {\n        subChain.nodes.forEach((node) => {\n          const renderer = SequenceNodeRendererFactory.fromNode(\n            node,\n            currentChainStartPosition,\n            currentMonomerIndexInChain,\n            currentMonomerIndexInChain + 1 + (isEditMode ? 1 : 0) ===\n              chain.subChains.reduce(\n                (prev, curr) => prev + curr.nodes.length,\n                0,\n              ),\n            subChain,\n            currentMonomerIndexOverall === SequenceRenderer.caretPosition,\n            node.monomer.renderer,\n          );\n          renderer.show();\n          node.monomers?.forEach((monomer) => monomer.setRenderer(renderer));\n          currentMonomerIndexInChain++;\n          currentMonomerIndexOverall++;\n\n          if (node instanceof EmptySequenceNode) {\n            SequenceRenderer.emptySequenceItemRenderers.push(renderer);\n            node.setRenderer(renderer);\n          }\n        });\n      });\n\n      currentChainStartPosition = SequenceRenderer.getNextChainPosition(\n        currentChainStartPosition,\n        chain,\n      );\n\n      if (!isEditInRnaBuilderMode) {\n        this.showNewSequenceButton(chainIndex);\n      }\n    });\n\n    if (newSequenceEmptyNode) {\n      SequenceRenderer.setCaretPositionByNode(newSequenceEmptyNode);\n    }\n\n    if (this.caretPosition > currentMonomerIndexOverall) {\n      this.setCaretPosition(currentMonomerIndexOverall);\n    }\n\n    this.lastChainStartPosition = currentChainStartPosition;\n  }\n\n  public static getNextChainPosition(\n    currentChainStartPosition: Vec2 = SequenceRenderer.lastChainStartPosition,\n    lastChain: Chain = SequenceRenderer.lastChain,\n  ) {\n    return new Vec2(\n      currentChainStartPosition.x,\n      currentChainStartPosition.y +\n        80 +\n        47 * Math.floor((lastChain.length - 1) / 30),\n    );\n  }\n\n  private static showBonds(chainsCollection: ChainsCollection) {\n    const handledMonomersToAttachmentPoints: Map<\n      BaseMonomer,\n      Set<AttachmentPointName>\n    > = new Map();\n\n    chainsCollection.chains.forEach((chain) => {\n      chain.subChains.forEach((subChain) => {\n        subChain.nodes.forEach((node) => {\n          if (node instanceof EmptySequenceNode) {\n            return;\n          }\n\n          if (!handledMonomersToAttachmentPoints.has(node.monomer)) {\n            handledMonomersToAttachmentPoints.set(node.monomer, new Set());\n          }\n          node.monomer.forEachBond((polymerBond, attachmentPointName) => {\n            if (!subChain.bonds.includes(polymerBond)) {\n              subChain.bonds.push(polymerBond);\n            }\n            if (!polymerBond.isSideChainConnection) {\n              polymerBond.setRenderer(\n                new BackBoneBondSequenceRenderer(polymerBond),\n              );\n              return;\n            }\n\n            const handledAttachmentPoints =\n              handledMonomersToAttachmentPoints.get(\n                node.monomer,\n              ) as Set<AttachmentPointName>;\n\n            if (handledAttachmentPoints.has(attachmentPointName)) {\n              return;\n            }\n\n            const anotherMonomer = polymerBond.getAnotherMonomer(\n              node.monomer,\n            ) as BaseMonomer;\n\n            // Skip handling side chains for sugar(R3) + base(R1) connections.\n            if (\n              (node.monomer instanceof Sugar &&\n                getRnaBaseFromSugar(node.monomer) === anotherMonomer) ||\n              (anotherMonomer instanceof Sugar &&\n                getRnaBaseFromSugar(anotherMonomer) === node.monomer)\n            ) {\n              return;\n            }\n\n            let bondRenderer;\n\n            // If side connection comes from rna base then take connected sugar and draw side connection from it\n            // because for rna we display only one letter instead of three\n            const connectedSugarToBase = getSugarFromRnaBase(anotherMonomer);\n            if (anotherMonomer instanceof RNABase && connectedSugarToBase) {\n              bondRenderer = new PolymerBondSequenceRenderer(\n                new PolymerBond(node.monomer, connectedSugarToBase),\n              );\n            } else {\n              bondRenderer = new PolymerBondSequenceRenderer(polymerBond);\n            }\n            bondRenderer.show();\n            polymerBond.setRenderer(bondRenderer);\n            handledAttachmentPoints.add(attachmentPointName);\n\n            if (!handledMonomersToAttachmentPoints.get(anotherMonomer)) {\n              handledMonomersToAttachmentPoints.set(anotherMonomer, new Set());\n            }\n            const anotherMonomerHandledAttachmentPoints =\n              handledMonomersToAttachmentPoints.get(\n                anotherMonomer,\n              ) as Set<AttachmentPointName>;\n\n            anotherMonomerHandledAttachmentPoints.add(\n              anotherMonomer?.getAttachmentPointByBond(\n                polymerBond,\n              ) as AttachmentPointName,\n            );\n          });\n        });\n      });\n      if (chain.isCyclic) {\n        const polymerBond = chain.firstMonomer?.attachmentPointsToBonds\n          .R1 as PolymerBond;\n        const bondRenderer = new PolymerBondSequenceRenderer(\n          polymerBond,\n          chain.firstNode,\n          chain.lastNonEmptyNode,\n        );\n        bondRenderer.show();\n        polymerBond.setRenderer(bondRenderer);\n      }\n    });\n  }\n\n  public static setCaretPosition(caretPosition: SequencePointer) {\n    const oldSubChainNode = SequenceRenderer.currentEdittingNode;\n\n    if (oldSubChainNode) {\n      assert(oldSubChainNode.renderer instanceof BaseSequenceItemRenderer);\n      oldSubChainNode.renderer.isEditingSymbol = false;\n      oldSubChainNode.renderer?.removeCaret();\n    }\n    SequenceRenderer.caretPosition = caretPosition;\n    const subChainNode = SequenceRenderer.currentEdittingNode;\n\n    if (!subChainNode) {\n      return;\n    }\n\n    assert(subChainNode.renderer instanceof BaseSequenceItemRenderer);\n    subChainNode.renderer.isEditingSymbol = true;\n    subChainNode.renderer?.showCaret();\n  }\n\n  public static forEachNode(\n    forEachCallback: (params: {\n      chainIndex: number;\n      subChainIndex: number;\n      nodeIndex: number;\n      nodeIndexOverall: number;\n      node: SubChainNode;\n      subChain: BaseSubChain;\n      chain: Chain;\n    }) => void,\n  ) {\n    this.chainsCollection.forEachNode(forEachCallback);\n  }\n\n  public static setCaretPositionBySequenceItemRenderer(\n    sequenceItemRenderer: BaseSequenceItemRenderer,\n  ) {\n    let newCaretPosition = -1;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.renderer === sequenceItemRenderer) {\n        newCaretPosition = nodeIndexOverall;\n      }\n    });\n\n    this.setCaretPosition(newCaretPosition);\n  }\n\n  public static setCaretPositionByMonomer(monomer: BaseMonomer) {\n    let newCaretPosition = -1;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.monomer === monomer) {\n        newCaretPosition = nodeIndexOverall;\n      }\n    });\n\n    this.setCaretPosition(newCaretPosition);\n  }\n\n  public static setCaretPositionByNode(nodeToCompare: SubChainNode) {\n    let newCaretPosition = -1;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node === nodeToCompare) {\n        newCaretPosition = nodeIndexOverall;\n      }\n    });\n\n    this.setCaretPosition(newCaretPosition);\n  }\n\n  public static getMonomersByCaretPositionRange(\n    startCaretPosition: SequencePointer,\n    endCaretPosition,\n  ) {\n    const monomers: BaseMonomer[] = [];\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (\n        startCaretPosition <= nodeIndexOverall &&\n        nodeIndexOverall < (endCaretPosition || this.caretPosition)\n      ) {\n        monomers.push(node.monomer);\n      }\n    });\n    return monomers;\n  }\n\n  public static resetLastUserDefinedCaretPosition() {\n    this.lastUserDefinedCaretPosition = this.caretPosition;\n  }\n\n  private static get nodesGroupedByRows() {\n    const finalArray: Array<Array<SubChainNode>> = [];\n    let chainNodes: Array<SubChainNode> = [];\n    SequenceRenderer.forEachNode(({ node }) => {\n      chainNodes.push(node);\n      if (!(node instanceof EmptySequenceNode)) {\n        return;\n      }\n\n      if (chainNodes.length > NUMBER_OF_SYMBOLS_IN_ROW) {\n        while (chainNodes.length > 0) {\n          finalArray.push(chainNodes.splice(0, NUMBER_OF_SYMBOLS_IN_ROW));\n        }\n      } else {\n        finalArray.push([...chainNodes]);\n      }\n      chainNodes = [];\n    });\n\n    return finalArray;\n  }\n\n  private static getNodeIndexInRowByGlobalIndex(nodeIndexOverall: number) {\n    let restNodes = nodeIndexOverall;\n    let nodeIndexInRow;\n\n    this.nodesGroupedByRows.forEach((row) => {\n      if (nodeIndexInRow === undefined && restNodes - row.length < 0) {\n        nodeIndexInRow = restNodes;\n      }\n      restNodes -= row.length;\n    });\n\n    return nodeIndexInRow;\n  }\n\n  private static get currentChainRow() {\n    return (\n      this.nodesGroupedByRows.find((idexRow) =>\n        idexRow.includes(this.currentEdittingNode),\n      ) || []\n    );\n  }\n\n  private static get previousRowOfNodes() {\n    const index = this.nodesGroupedByRows.findIndex((row) =>\n      row.includes(this.currentEdittingNode),\n    );\n    return index > 0 ? this.nodesGroupedByRows[index - 1] : [];\n  }\n\n  private static get nextRowOfNodes() {\n    const currentIndex = this.nodesGroupedByRows.findIndex((row) =>\n      row.includes(this.currentEdittingNode),\n    );\n    return currentIndex !== -1 &&\n      currentIndex + 1 < this.nodesGroupedByRows.length\n      ? this.nodesGroupedByRows[currentIndex + 1]\n      : [];\n  }\n\n  public static moveCaretUp() {\n    const currentNodeIndexInRow = this.currentChainRow.indexOf(\n      this.currentEdittingNode,\n    );\n\n    let newCaretPosition = this.caretPosition;\n    const symbolsBeforeCaretInCurrentRow = currentNodeIndexInRow;\n    const lastUserDefinedCursorPositionInRow =\n      this.getNodeIndexInRowByGlobalIndex(this.lastUserDefinedCaretPosition);\n\n    newCaretPosition -= symbolsBeforeCaretInCurrentRow;\n    newCaretPosition -= Math.max(\n      this.previousRowOfNodes.length === 0 ? 0 : 1,\n      this.previousRowOfNodes.length - lastUserDefinedCursorPositionInRow,\n    );\n\n    SequenceRenderer.setCaretPosition(newCaretPosition);\n  }\n\n  public static moveCaretDown() {\n    const currentNodeIndexInRow = this.currentChainRow.indexOf(\n      this.currentEdittingNode,\n    );\n\n    let newCaretPosition = this.caretPosition;\n    const lastUserDefinedCursorPositionInRow =\n      this.getNodeIndexInRowByGlobalIndex(this.lastUserDefinedCaretPosition);\n    const symbolsAfterCaretInCurrentRow =\n      this.currentChainRow.length - currentNodeIndexInRow;\n\n    newCaretPosition += symbolsAfterCaretInCurrentRow;\n    newCaretPosition += Math.min(\n      lastUserDefinedCursorPositionInRow,\n      this.nextRowOfNodes.length - 1,\n    );\n\n    SequenceRenderer.setCaretPosition(newCaretPosition);\n  }\n\n  public static moveCaretForward() {\n    const operation = new RestoreSequenceCaretPositionOperation(\n      this.caretPosition,\n      this.nextCaretPosition || this.caretPosition,\n    );\n    SequenceRenderer.resetLastUserDefinedCaretPosition();\n\n    return operation;\n  }\n\n  public static moveCaretBack() {\n    const operation = new RestoreSequenceCaretPositionOperation(\n      this.caretPosition,\n      this.previousCaretPosition === undefined\n        ? this.caretPosition\n        : this.previousCaretPosition,\n    );\n    SequenceRenderer.resetLastUserDefinedCaretPosition();\n\n    return operation;\n  }\n\n  public static get currentChainIndex() {\n    let currentChainIndex = -1;\n\n    SequenceRenderer.forEachNode(({ nodeIndexOverall, chainIndex }) => {\n      if (nodeIndexOverall === this.caretPosition) {\n        currentChainIndex = chainIndex;\n      }\n    });\n\n    return currentChainIndex;\n  }\n\n  public static get lastNodeCaretPosition(): SequencePointer | undefined {\n    if (SequenceRenderer.chainsCollection.chains.length === 0) {\n      return undefined;\n    }\n\n    let lastNodeIndex = -1;\n\n    SequenceRenderer.forEachNode(() => {\n      lastNodeIndex++;\n    });\n\n    return lastNodeIndex === -1 ? undefined : lastNodeIndex;\n  }\n\n  public static getNodeByPointer(sequencePointer?: SequencePointer) {\n    if (sequencePointer === undefined) return;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (nodeIndexOverall === sequencePointer) {\n        nodeToReturn = node;\n      }\n    });\n\n    return nodeToReturn;\n  }\n\n  public static get currentEdittingNode() {\n    return SequenceRenderer.getNodeByPointer(this.caretPosition);\n  }\n\n  public static get previousFromCurrentEdittingMonomer() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.previousCaretPosition,\n    );\n  }\n\n  public static get currentChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.currentChainIndex\n    ];\n  }\n\n  public static get previousChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.currentChainIndex - 1\n    ];\n  }\n\n  public static get nextChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.currentChainIndex + 1\n    ];\n  }\n\n  public static getLastNonEmptyNode(chain: Chain) {\n    const subChainBeforeLast = chain.subChains[chain.subChains.length - 2];\n\n    return subChainBeforeLast.nodes[subChainBeforeLast.nodes.length - 1];\n  }\n\n  public static getLastNode(chain: Chain) {\n    const lastSubChain = chain.subChains[chain.subChains.length - 1];\n\n    return lastSubChain.nodes[lastSubChain.nodes.length - 1];\n  }\n\n  public static get nextNode() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.nextCaretPosition,\n    );\n  }\n\n  public static get previousNode() {\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.previousCaretPosition,\n    );\n  }\n\n  public static get nextNodeInSameChain(): SubChainNode | undefined {\n    if (SequenceRenderer.nextCaretPosition === SequenceRenderer.caretPosition) {\n      return;\n    }\n\n    return SequenceRenderer.getNodeByPointer(\n      SequenceRenderer.nextCaretPosition,\n    );\n  }\n\n  public static get previousNodeInSameChain() {\n    return SequenceRenderer.getPreviousNodeInSameChain(\n      SequenceRenderer.currentEdittingNode,\n    );\n  }\n\n  private static get nextCaretPosition(): SequencePointer | undefined {\n    const nodeOnNextPosition = SequenceRenderer.getNodeByPointer(\n      this.caretPosition + 1,\n    );\n\n    return nodeOnNextPosition ? this.caretPosition + 1 : undefined;\n  }\n\n  public static get previousCaretPosition() {\n    const nodeOnPreviousPosition = SequenceRenderer.getNodeByPointer(\n      this.caretPosition - 1,\n    );\n\n    return nodeOnPreviousPosition ? this.caretPosition - 1 : undefined;\n  }\n\n  public static get lastChain() {\n    return SequenceRenderer.chainsCollection.chains[\n      SequenceRenderer.chainsCollection.chains.length - 1\n    ];\n  }\n\n  public static startNewSequence(indexOfRowBefore?: number) {\n    const editor = CoreEditor.provideEditorInstance();\n    const oldNewSequenceChainIndex =\n      SequenceRenderer.chainsCollection.chains.findIndex((chain) => {\n        return chain.isNewSequenceChain;\n      });\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...editor.drawingEntitiesManager.monomers.values(),\n    ]);\n    chainsCollection.rearrange();\n\n    editor.drawingEntitiesManager.clearCanvas();\n\n    SequenceRenderer.show(\n      chainsCollection,\n      oldNewSequenceChainIndex !== -1 &&\n        isNumber(indexOfRowBefore) &&\n        indexOfRowBefore > oldNewSequenceChainIndex\n        ? indexOfRowBefore - 1\n        : indexOfRowBefore,\n    );\n  }\n\n  public static getPreviousNodeInSameChain(\n    nodeToCompare: SubChainNode,\n  ): SubChainNode | undefined {\n    let previousNode;\n    let previousNodeChainIndex = -1;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, chainIndex }) => {\n      if (nodeToCompare === node && chainIndex === previousNodeChainIndex) {\n        nodeToReturn = previousNode;\n      }\n      previousNodeChainIndex = chainIndex;\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getNextNodeInSameChain(\n    nodeToCompare: SubChainNode,\n  ): SubChainNode {\n    let previousNode;\n    let previousNodeChainIndex = -1;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node, chainIndex }) => {\n      if (\n        nodeToCompare === previousNode &&\n        chainIndex === previousNodeChainIndex\n      ) {\n        nodeToReturn = node;\n      }\n      previousNodeChainIndex = chainIndex;\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getPreviousNode(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (nodeToCompare === node) {\n        nodeToReturn = previousNode;\n      }\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static getNextNode(nodeToCompare: SubChainNode) {\n    let previousNode;\n    let nodeToReturn;\n\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (previousNode === nodeToCompare) {\n        nodeToReturn = node;\n      }\n      previousNode = node;\n    });\n\n    return nodeToReturn;\n  }\n\n  public static shiftArrowSelectionInEditMode(event) {\n    const editor = CoreEditor.provideEditorInstance();\n    let modelChanges = new Command();\n    const arrowKey = event.code;\n    if (arrowKey === 'ArrowRight') {\n      modelChanges = SequenceRenderer.getShiftArrowChanges(\n        editor,\n        this.currentEdittingNode.monomer,\n      );\n      modelChanges.addOperation(this.moveCaretForward());\n    } else if (arrowKey === 'ArrowLeft') {\n      if (this.previousNodeInSameChain) {\n        modelChanges = SequenceRenderer.getShiftArrowChanges(\n          editor,\n          this.previousNodeInSameChain.monomer,\n        );\n      } else if (SequenceRenderer.previousChain) {\n        const previousChainLastEmptyNode = SequenceRenderer.getLastNode(\n          SequenceRenderer.previousChain,\n        );\n        ({ command: modelChanges } =\n          editor.drawingEntitiesManager.getAllSelectedEntitiesForSingleEntity(\n            previousChainLastEmptyNode.monomer,\n          ));\n      }\n      modelChanges.addOperation(this.moveCaretBack());\n    } else if (arrowKey === 'ArrowUp') {\n      const previousCaretPosition = SequenceRenderer.caretPosition;\n      SequenceRenderer.moveCaretUp();\n      const newCaretPosition = SequenceRenderer.caretPosition;\n\n      SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n        if (\n          nodeIndexOverall < previousCaretPosition &&\n          nodeIndexOverall >= newCaretPosition\n        ) {\n          modelChanges.merge(\n            SequenceRenderer.getShiftArrowChanges(editor, node.monomer),\n          );\n        }\n      });\n    } else if (arrowKey === 'ArrowDown') {\n      const previousCaretPosition = SequenceRenderer.caretPosition;\n      SequenceRenderer.moveCaretDown();\n      const newCaretPosition = SequenceRenderer.caretPosition;\n\n      SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n        if (\n          nodeIndexOverall >= previousCaretPosition &&\n          nodeIndexOverall < newCaretPosition\n        ) {\n          modelChanges.merge(\n            SequenceRenderer.getShiftArrowChanges(editor, node.monomer),\n          );\n        }\n      });\n    }\n    editor.renderersContainer.update(modelChanges);\n  }\n\n  private static getShiftArrowChanges(\n    editor: CoreEditor,\n    monomer: BaseMonomer,\n  ) {\n    let modelChanges;\n    const needTurnOffSelection = monomer.selected;\n    const result =\n      editor.drawingEntitiesManager.getAllSelectedEntitiesForSingleEntity(\n        monomer,\n      );\n    if (needTurnOffSelection) {\n      modelChanges =\n        editor.drawingEntitiesManager.addDrawingEntitiesToSelection(\n          result.drawingEntities,\n        );\n    } else {\n      modelChanges = result.command;\n    }\n    return modelChanges;\n  }\n\n  public static unselectEmptySequenceNodes() {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (node instanceof EmptySequenceNode) {\n        command.merge(\n          editor.drawingEntitiesManager.unselectDrawingEntity(node.monomer),\n        );\n      }\n    });\n    return command;\n  }\n\n  public static get selections() {\n    const editor = CoreEditor.provideEditorInstance();\n    const selections: NodesSelection = [];\n    let lastSelectionRangeIndex = -1;\n    let previousNode;\n\n    SequenceRenderer.forEachNode(({ node, nodeIndexOverall }) => {\n      if (node.monomer.selected) {\n        const selection: Partial<NodeSelection> = {};\n\n        // Add field 'isNucleosideConnectedAndSelectedWithPhosphate' to the Nucleoside elements\n        if (node instanceof Nucleoside) {\n          const nextMonomer = getNextMonomerInChain(node.sugar);\n\n          selection.isNucleosideConnectedAndSelectedWithPhosphate =\n            nextMonomer instanceof Phosphate &&\n            nextMonomer.selected &&\n            editor.drawingEntitiesManager.isNucleosideAndPhosphateConnectedAsNucleotide(\n              node,\n              nextMonomer,\n            );\n        }\n\n        // Add field 'hasR1Connection' to the Nucleotide/Nucleoside elements\n        if (node instanceof Nucleotide || node instanceof Nucleoside) {\n          selection.hasR1Connection = !!node.sugar.attachmentPointsToBonds.R1;\n        }\n\n        if (!previousNode?.monomer.selected) {\n          lastSelectionRangeIndex = selections.push([]) - 1;\n        }\n        selections[lastSelectionRangeIndex].push({\n          ...selection,\n          node,\n          nodeIndexOverall,\n        });\n      }\n      previousNode = node;\n    });\n\n    return selections;\n  }\n\n  public static getRenderedStructuresBbox() {\n    let left;\n    let right;\n    let top;\n    let bottom;\n    SequenceRenderer.forEachNode(({ node }) => {\n      assert(node.monomer.renderer instanceof BaseSequenceItemRenderer);\n      const nodePosition =\n        node.monomer.renderer?.scaledMonomerPositionForSequence;\n      left = left ? Math.min(left, nodePosition.x) : nodePosition.x;\n      right = right ? Math.max(right, nodePosition.x) : nodePosition.x;\n      top = top ? Math.min(top, nodePosition.y) : nodePosition.y;\n      bottom = bottom ? Math.max(bottom, nodePosition.y) : nodePosition.y;\n    });\n    return {\n      left,\n      right,\n      top,\n      bottom,\n      width: right - left,\n      height: bottom - top,\n    };\n  }\n\n  public static getRendererByMonomer(monomer: BaseMonomer) {\n    let rendererToReturn;\n\n    SequenceRenderer.forEachNode(({ node }) => {\n      if (node.monomer === monomer) {\n        rendererToReturn = node.renderer;\n      }\n    });\n\n    return rendererToReturn;\n  }\n\n  public static showNewSequenceButton(indexOfRowBefore: number) {\n    const newSequenceButton = new NewSequenceButton(indexOfRowBefore);\n    newSequenceButton.show();\n    this.newSequenceButtons.push(newSequenceButton);\n  }\n}\n","import { RNABase } from 'domain/entities/RNABase';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { Sugar } from 'domain/entities/Sugar';\nimport assert from 'assert';\nimport {\n  getPhosphateFromSugar,\n  getRnaBaseFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { CoreEditor } from 'application/editor/internal';\nimport { Vec2 } from 'domain/entities/vec2';\nimport {\n  getRnaPartLibraryItem,\n  getSugarBySequenceType,\n} from 'domain/helpers/rna';\nimport { RNA_DNA_NON_MODIFIED_PART } from 'domain/constants/monomers';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class Nucleotide {\n  constructor(\n    public sugar: Sugar,\n    public rnaBase: RNABase,\n    public phosphate: Phosphate,\n  ) {}\n\n  static fromSugar(sugar: Sugar, needValidation = true) {\n    if (needValidation) {\n      assert(\n        isValidNucleotide(sugar),\n        'Nucleotide is not valid. Please check nucleotide parts connections.',\n      );\n\n      const isNucleoside = isValidNucleoside(sugar);\n      assert(\n        !isNucleoside,\n        'Nucleotide is nucleoside because it is a last sugar+base of rna chain',\n      );\n    }\n\n    return new Nucleotide(\n      sugar,\n      getRnaBaseFromSugar(sugar) as RNABase,\n      getPhosphateFromSugar(sugar) as Phosphate,\n    );\n  }\n\n  static createOnCanvas(rnaBaseName: string, position: Vec2) {\n    const editor = CoreEditor.provideEditorInstance();\n    const rnaBaseLibraryItem = getRnaPartLibraryItem(editor, rnaBaseName);\n    const phosphateLibraryItem = getRnaPartLibraryItem(\n      editor,\n      RNA_DNA_NON_MODIFIED_PART.PHOSPHATE,\n    );\n    const sugarName = getSugarBySequenceType(editor.sequenceTypeEnterMode);\n    assert(sugarName);\n\n    const sugarLibraryItem = getRnaPartLibraryItem(editor, sugarName);\n\n    assert(sugarLibraryItem);\n    assert(rnaBaseLibraryItem);\n    assert(phosphateLibraryItem);\n\n    const { command: modelChanges, monomers } =\n      editor.drawingEntitiesManager.addRnaPreset({\n        sugar: sugarLibraryItem,\n        sugarPosition: position,\n        rnaBase: rnaBaseLibraryItem,\n        rnaBasePosition: position,\n        phosphate: phosphateLibraryItem,\n        phosphatePosition: position,\n      });\n\n    const sugar = monomers.find((monomer) => monomer instanceof Sugar) as Sugar;\n\n    return { modelChanges, node: Nucleotide.fromSugar(sugar, false) };\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return this.sugar.isMonomerTypeDifferentForChaining(monomerToChain);\n  }\n\n  public get SubChainConstructor() {\n    return this.sugar.SubChainConstructor;\n  }\n\n  public get monomer() {\n    return this.sugar;\n  }\n\n  public get monomers(): BaseMonomer[] {\n    return [this.sugar, this.rnaBase, this.phosphate];\n  }\n\n  public get firstMonomerInNode() {\n    return this.sugar;\n  }\n\n  public get lastMonomerInNode() {\n    return this.phosphate;\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return (\n      this.rnaBase.isModification ||\n      this.sugar.isModification ||\n      this.phosphate.isModification\n    );\n  }\n}\n","export class Matrix<T> {\n  private matrix: T[][];\n\n  constructor() {\n    this.matrix = [];\n  }\n\n  get(x: number, y: number): T | undefined {\n    if (!this.matrix[x]) {\n      return undefined;\n    }\n    return this.matrix[x][y];\n  }\n\n  getRow(x: number) {\n    return this.matrix[x];\n  }\n\n  set(x: number, y: number, value: T) {\n    if (!this.matrix[x]) {\n      this.matrix[x] = [];\n    }\n    this.matrix[x][y] = value;\n  }\n\n  public get height() {\n    return this.matrix.length;\n  }\n\n  public get width() {\n    return this.matrix.reduce((max, row) => Math.max(max, row.length), 0);\n  }\n\n  forEach(callback: (value: T, x: number, y: number) => void): void {\n    for (let x = 0; x < this.matrix.length; x++) {\n      for (let y = 0; y < this.matrix[x]?.length; y++) {\n        const value = this.matrix[x][y];\n        if (value) {\n          callback(value, x, y);\n        }\n      }\n    }\n  }\n\n  forEachRightToLeft(callback: (value: T, x: number, y: number) => void): void {\n    for (let x = this.matrix.length - 1; x >= 0; x--) {\n      for (let y = this.matrix[x]?.length - 1; y >= 0; y--) {\n        const value = this.matrix[x][y];\n        if (value) {\n          callback(value, x, y);\n        }\n      }\n    }\n  }\n\n  forEachBottomToTop(callback: (value: T, x: number, y: number) => void): void {\n    for (let y = this.matrix[0]?.length - 1; y >= 0; y--) {\n      for (let x = this.matrix.length - 1; x >= 0; x--) {\n        const value = this.matrix[x][y];\n        if (value) {\n          callback(value, x, y);\n        }\n      }\n    }\n  }\n}\n","import { BaseMonomer, SubChainNode } from 'domain/entities';\nimport { Connection } from 'domain/entities/canvas-matrix/Connection';\n\nexport class Cell {\n  constructor(\n    public node: SubChainNode | null,\n    public connections: Connection[],\n    public x: number,\n    public y: number,\n    public monomer?: BaseMonomer,\n  ) {}\n}\n","import {\n  BaseMonomer,\n  Nucleoside,\n  Nucleotide,\n  RNABase,\n  SubChainNode,\n} from 'domain/entities';\nimport { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { Matrix } from 'domain/entities/canvas-matrix/Matrix';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { Connection } from 'domain/entities/canvas-matrix/Connection';\nimport { Cell } from 'domain/entities/canvas-matrix/Cell';\nimport { isNumber } from 'lodash';\n\ninterface MatrixConfig {\n  initialMatrix: Matrix<Cell>;\n}\n\nexport class CanvasMatrix {\n  private matrix: Matrix<Cell>;\n  private initialMatrixWidth: number;\n  private monomerToCell: Map<BaseMonomer, Cell> = new Map();\n  public polymerBondToCells: Map<PolymerBond, Cell[]> = new Map();\n  public polymerBondToConnections: Map<PolymerBond, Connection[]> = new Map();\n\n  constructor(\n    public chainsCollection: ChainsCollection,\n    private matrixConfig: MatrixConfig = {\n      initialMatrix: new Matrix<Cell>(),\n    },\n  ) {\n    this.matrix = new Matrix<Cell>();\n    this.initialMatrixWidth = this.matrixConfig.initialMatrix.width;\n    this.fillCells();\n  }\n\n  private get chains() {\n    return this.chainsCollection.chains;\n  }\n\n  private fillConnectionsOffset(\n    direction: number,\n    increaseOffset = (connection: Connection, increaseValue?: number) => {\n      if (isNumber(increaseValue)) {\n        connection.offset = increaseValue;\n      } else {\n        connection.offset++;\n      }\n    },\n    getOffset = (connection: Connection) => connection.offset,\n  ) {\n    // set offsets for connections with overlappings\n    const currentConnections = new Map<PolymerBond, Set<Connection>>();\n    const iterationMethod =\n      direction === 180\n        ? this.matrix.forEach.bind(this.matrix)\n        : direction === 0\n        ? this.matrix.forEachRightToLeft.bind(this.matrix)\n        : this.matrix.forEachBottomToTop.bind(this.matrix);\n\n    iterationMethod((cell) => {\n      const biggestOffsetInCell = cell.connections.reduce(\n        (biggestOffset, connection) => {\n          return getOffset(connection) > biggestOffset\n            ? getOffset(connection)\n            : biggestOffset;\n        },\n        0,\n      );\n      cell.connections.forEach((connection) => {\n        if (connection.direction !== direction || connection.connectedNode) {\n          return;\n        }\n        if (!currentConnections.has(connection.polymerBond)) {\n          const polymerBondConnections = this.polymerBondToConnections.get(\n            connection.polymerBond,\n          );\n          polymerBondConnections?.forEach((polymerBondConnection) => {\n            increaseOffset(polymerBondConnection, biggestOffsetInCell);\n          });\n          currentConnections.set(\n            connection.polymerBond,\n            new Set(polymerBondConnections),\n          );\n        }\n      });\n      cell.connections.forEach((connection) => {\n        if (\n          !connection.connectedNode ||\n          (connection.direction !== direction &&\n            !currentConnections.has(connection.polymerBond))\n        ) {\n          return;\n        }\n        if (currentConnections.has(connection.polymerBond)) {\n          currentConnections.delete(connection.polymerBond);\n          currentConnections.forEach((connections) => {\n            Array.from(connections.values()).forEach((currentConnection) => {\n              increaseOffset(currentConnection);\n            });\n          });\n        } else {\n          currentConnections.set(\n            connection.polymerBond,\n            new Set(this.polymerBondToConnections.get(connection.polymerBond)),\n          );\n        }\n      });\n      if (\n        (cell.x === 0 && direction !== 90) ||\n        (cell.y === 0 && direction === 90)\n      ) {\n        currentConnections.clear();\n      }\n      Array.from(currentConnections.keys()).forEach((polymerBond) => {\n        const polymerBondConnections =\n          this.polymerBondToConnections.get(polymerBond);\n        if (\n          polymerBondConnections?.every(\n            (connection) => !cell.connections.includes(connection),\n          )\n        ) {\n          currentConnections.delete(polymerBond);\n        }\n      });\n    });\n  }\n\n  private fillRightConnectionsOffset() {\n    const direction = 0;\n    const handledConnections = new Set<PolymerBond>();\n\n    this.matrix.forEach((cell) => {\n      const biggestOffsetInCell = cell.connections.reduce(\n        (biggestOffset, connection) => {\n          return connection.offset > biggestOffset\n            ? connection.offset\n            : biggestOffset;\n        },\n        0,\n      );\n\n      cell.connections.forEach((connection) => {\n        if (connection.direction !== direction) {\n          return;\n        }\n        if (connection.offset <= biggestOffsetInCell) {\n          const polymerBondConnections = this.polymerBondToConnections.get(\n            connection.polymerBond,\n          );\n          polymerBondConnections?.forEach((polymerBondConnection) => {\n            polymerBondConnection.offset = biggestOffsetInCell;\n          });\n          handledConnections.add(connection.polymerBond);\n        }\n      });\n    });\n\n    handledConnections.forEach((polymerBond) => {\n      const polymerBondConnections =\n        this.polymerBondToConnections.get(polymerBond);\n      polymerBondConnections?.forEach((polymerBondConnection) => {\n        if (polymerBondConnection.direction !== direction) {\n          return;\n        }\n\n        polymerBondConnection.offset++;\n      });\n    });\n  }\n\n  private fillCells() {\n    // iterate over each chain and fill matrix with cells\n    let rowNumber = 0;\n    let columnNumber = 0;\n    let rowsWithRnaBases = 0;\n    let wereBasesInRow = false;\n    this.chains.forEach((chain) => {\n      chain.forEachNode(({ node }) => {\n        node.monomers.forEach((monomer) => {\n          if (\n            (node instanceof Nucleotide || node instanceof Nucleoside) &&\n            monomer instanceof RNABase\n          ) {\n            const cell = new Cell(\n              node,\n              [],\n              columnNumber - 1,\n              rowNumber + rowsWithRnaBases + 1,\n              monomer,\n            );\n            this.matrix.set(\n              rowNumber + rowsWithRnaBases + 1,\n              columnNumber - 1,\n              cell,\n            );\n            this.monomerToCell.set(monomer, cell);\n            wereBasesInRow = true;\n\n            return;\n          }\n\n          const initialMatrixRowLength =\n            this.matrixConfig.initialMatrix?.getRow(rowNumber)?.length || 0;\n\n          if (columnNumber >= initialMatrixRowLength) {\n            let emptyCellsAmount = this.initialMatrixWidth - columnNumber;\n            while (emptyCellsAmount > 0) {\n              this.matrix.set(\n                rowNumber + rowsWithRnaBases,\n                columnNumber,\n                new Cell(null, [], columnNumber, rowNumber + rowsWithRnaBases),\n              );\n              columnNumber++;\n              emptyCellsAmount--;\n            }\n\n            if (wereBasesInRow) {\n              rowsWithRnaBases++;\n              wereBasesInRow = false;\n              let index = 0;\n              while (index < this.initialMatrixWidth) {\n                const cellWithPotentialRnaBase = this.matrix.get(\n                  rowNumber + rowsWithRnaBases,\n                  index,\n                );\n                if (cellWithPotentialRnaBase) {\n                  index++;\n                  continue;\n                }\n                this.matrix.set(\n                  rowNumber + rowsWithRnaBases,\n                  index,\n                  new Cell(null, [], index, rowNumber + rowsWithRnaBases + 1),\n                );\n                index++;\n              }\n            }\n\n            rowNumber++;\n            columnNumber = 0;\n          }\n\n          const cell = new Cell(\n            node,\n            [],\n            columnNumber,\n            rowNumber + rowsWithRnaBases,\n            monomer,\n          );\n          this.matrix.set(rowNumber + rowsWithRnaBases, columnNumber, cell);\n          this.monomerToCell.set(monomer, cell);\n          columnNumber++;\n        });\n      });\n    });\n\n    const monomerToNode = this.chainsCollection.monomerToNode;\n    const handledConnections = new Set<PolymerBond>();\n\n    this.matrix.forEach((cell) => {\n      const monomer = cell.monomer;\n\n      monomer?.forEachBond((polymerBond) => {\n        if (\n          polymerBond.isSideChainConnection &&\n          !handledConnections.has(polymerBond)\n        ) {\n          const anotherMonomer = polymerBond.getAnotherMonomer(\n            monomer,\n          ) as BaseMonomer;\n          const connectedNode = monomerToNode.get(\n            anotherMonomer,\n          ) as SubChainNode;\n          const connectedCell = this.monomerToCell.get(anotherMonomer) as Cell;\n          const xDistance = connectedCell.x - cell.x;\n          const yDistance = connectedCell.y - cell.y;\n          const xDirection = xDistance > 0 ? 0 : 180;\n          const yDirection = yDistance > 0 ? 90 : 270;\n          let xDistanceAbsolute = Math.abs(xDistance);\n          let yDistanceAbsolute = Math.abs(yDistance);\n          const isVertical = xDistanceAbsolute === 0;\n\n          // fill start cell by connection with direction\n          let connection: Connection = {\n            polymerBond,\n            connectedNode,\n            direction: isVertical ? 90 : xDirection,\n            offset: 0,\n            yOffset: 0,\n            isVertical,\n          };\n\n          cell.connections.push(connection);\n          this.polymerBondToCells.set(polymerBond, [cell]);\n          this.polymerBondToConnections.set(polymerBond, [connection]);\n\n          let nextCellX = cell.x;\n          let nextCellY = cell.y;\n\n          // fill x cells by connection with direction\n          while (xDistanceAbsolute > 1) {\n            nextCellX += Math.sign(xDistance);\n            const nextCellToHandle = this.matrix.get(\n              nextCellY,\n              nextCellX,\n            ) as Cell;\n            connection = {\n              polymerBond,\n              connectedNode: null,\n              direction: xDirection,\n              offset: 0,\n              yOffset: 0,\n              isVertical,\n            };\n            nextCellToHandle.connections.push(connection);\n            this.polymerBondToCells.get(polymerBond)?.push(nextCellToHandle);\n            this.polymerBondToConnections.get(polymerBond)?.push(connection);\n\n            xDistanceAbsolute--;\n          }\n\n          // fill y cells by connection with direction\n          while (yDistanceAbsolute > 1) {\n            nextCellY += Math.sign(yDistance);\n            const nextCellToHandle = this.matrix.get(\n              nextCellY,\n              nextCellX,\n            ) as Cell;\n            connection = {\n              polymerBond,\n              connectedNode: null,\n              direction: yDirection,\n              offset: 0,\n              yOffset: 0,\n              isVertical,\n            };\n            nextCellToHandle.connections.push(connection);\n            this.polymerBondToCells.get(polymerBond)?.push(nextCellToHandle);\n            this.polymerBondToConnections.get(polymerBond)?.push(connection);\n\n            yDistanceAbsolute--;\n          }\n\n          // fill last cell by connection\n          nextCellX += Math.sign(xDistance);\n          nextCellY += Math.sign(yDistance);\n\n          const lastCellToHandle = this.matrix.get(\n            nextCellY,\n            nextCellX,\n          ) as Cell;\n          connection = {\n            polymerBond,\n            connectedNode,\n            direction: isVertical\n              ? yDirection\n              : { x: xDistance === 0 ? 0 : xDirection, y: yDirection },\n            offset: 0,\n            yOffset: 0,\n            isVertical,\n          };\n          lastCellToHandle.connections.push(connection);\n          this.polymerBondToCells.get(polymerBond)?.push(lastCellToHandle);\n          this.polymerBondToConnections.get(polymerBond)?.push(connection);\n\n          handledConnections.add(polymerBond);\n        }\n      });\n    });\n\n    this.fillConnectionsOffset(180);\n    this.fillRightConnectionsOffset();\n    this.fillConnectionsOffset(0);\n    this.fillConnectionsOffset(\n      90,\n      (connection, increaseValue) => {\n        if (isNumber(increaseValue)) {\n          connection.yOffset = increaseValue;\n        } else {\n          connection.yOffset++;\n        }\n      },\n      (connection) => connection.yOffset,\n    );\n  }\n}\n","import { Operation } from 'domain/entities/Operation';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\n\nexport class RecalculateCanvasMatrixOperation implements Operation {\n  constructor(\n    private recalculateCanvasMatrixModelChange: () => void,\n    private invertRecalculateCanvasMatrixModelChange: () => void,\n  ) {}\n\n  public execute(renderersManager: RenderersManager) {\n    this.recalculateCanvasMatrixModelChange();\n    renderersManager.rerenderSideConnectionPolymerBonds();\n  }\n\n  public invert(renderersManager: RenderersManager) {\n    this.invertRecalculateCanvasMatrixModelChange();\n    renderersManager.rerenderSideConnectionPolymerBonds();\n  }\n}\n","import { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { Command } from 'domain/entities/Command';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport {\n  BaseMonomer,\n  Phosphate,\n  Pool,\n  RNABase,\n  SGroupForest,\n  Struct,\n  Sugar,\n} from 'domain/entities';\nimport {\n  AttachmentPointHoverOperation,\n  MonomerAddOperation,\n  MonomerDeleteOperation,\n  MonomerHoverOperation,\n  MonomerItemModifyOperation,\n  MonomerMoveOperation,\n} from 'application/editor/operations/monomer';\nimport {\n  DrawingEntityHoverOperation,\n  DrawingEntityMoveOperation,\n  DrawingEntityRedrawOperation,\n  DrawingEntitySelectOperation,\n} from 'application/editor/operations/drawingEntity';\nimport {\n  PolymerBondAddOperation,\n  PolymerBondCancelCreationOperation,\n  PolymerBondDeleteOperation,\n  PolymerBondFinishCreationOperation,\n  PolymerBondMoveOperation,\n  PolymerBondShowInfoOperation,\n  ReconnectPolymerBondOperation,\n} from 'application/editor/operations/polymerBond';\nimport {\n  MONOMER_CONST,\n  monomerFactory,\n} from 'application/editor/operations/monomer/monomerFactory';\nimport { Coordinates, CoreEditor } from 'application/editor/internal';\nimport {\n  getNextMonomerInChain,\n  getPhosphateFromSugar,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { RNA_MONOMER_DISTANCE } from 'application/editor/tools/RnaPreset';\nimport { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { SequenceRenderer } from 'application/render/renderers/sequence/SequenceRenderer';\nimport { Nucleoside } from './Nucleoside';\nimport { Nucleotide } from './Nucleotide';\nimport { SequenceMode, SnakeMode } from 'application/editor';\nimport { CanvasMatrix } from 'domain/entities/canvas-matrix/CanvasMatrix';\nimport { RecalculateCanvasMatrixOperation } from 'application/editor/operations/modes/snake';\nimport { Matrix } from 'domain/entities/canvas-matrix/Matrix';\nimport { Cell } from 'domain/entities/canvas-matrix/Cell';\n\nconst VERTICAL_DISTANCE_FROM_MONOMER = 30;\nconst DISTANCE_FROM_RIGHT = 55;\nexport const SNAKE_LAYOUT_CELL_WIDTH = 60;\nexport const MONOMER_START_X_POSITION = 20 + SNAKE_LAYOUT_CELL_WIDTH / 2;\nexport const MONOMER_START_Y_POSITION = 20 + SNAKE_LAYOUT_CELL_WIDTH / 2;\n\ntype RnaPresetAdditionParams = {\n  sugar: MonomerItemType;\n  sugarPosition: Vec2;\n  rnaBase: MonomerItemType | undefined;\n  rnaBasePosition: Vec2 | undefined;\n  phosphate: MonomerItemType | undefined;\n  phosphatePosition: Vec2 | undefined;\n};\n\ntype NucleotideOrNucleoside = {\n  sugar: Sugar;\n  phosphate?: Phosphate;\n  rnaBase: RNABase;\n  baseMonomer: Sugar | Phosphate;\n};\n\nexport class DrawingEntitiesManager {\n  public monomers: Map<number, BaseMonomer> = new Map();\n  public polymerBonds: Map<number, PolymerBond> = new Map();\n  public micromoleculesHiddenEntities: Struct = new Struct();\n  public canvasMatrix?: CanvasMatrix;\n  public snakeLayoutMatrix?: Matrix<Cell>;\n  public get bottomRightMonomerPosition(): Vec2 {\n    let position: Vec2 | null = null;\n\n    this.monomers.forEach((monomer) => {\n      if (\n        !position ||\n        monomer.position.x + monomer.position.y > position.x + position.y\n      ) {\n        position = monomer.position;\n      }\n    });\n\n    return position || new Vec2(0, 0, 0);\n  }\n\n  get selectedEntitiesArr() {\n    const selectedEntities: DrawingEntity[] = [];\n    this.allEntities.forEach(([, drawingEntity]) => {\n      if (drawingEntity.selected) {\n        selectedEntities.push(drawingEntity);\n      }\n    });\n    return selectedEntities;\n  }\n\n  get selectedEntities() {\n    return this.allEntities.filter(\n      ([, drawingEntity]) => drawingEntity.selected,\n    );\n  }\n\n  get allEntities() {\n    return [\n      ...(this.monomers as Map<number, DrawingEntity>),\n      ...(this.polymerBonds as Map<number, DrawingEntity>),\n    ];\n  }\n\n  public deleteSelectedEntities() {\n    const mergedCommand = new Command();\n    this.selectedEntities.forEach(([, drawingEntity]) => {\n      const command = this.deleteDrawingEntity(drawingEntity);\n      mergedCommand.merge(command);\n    });\n    return mergedCommand;\n  }\n\n  public deleteAllEntities() {\n    const mergedCommand = new Command();\n    this.allEntities.forEach(([, drawingEntity]) => {\n      const command = this.deleteDrawingEntity(drawingEntity, false);\n      mergedCommand.merge(command);\n    });\n    return mergedCommand;\n  }\n\n  public addMonomerChangeModel(\n    monomerItem: MonomerItemType,\n    position: Vec2,\n    _monomer?: BaseMonomer,\n  ) {\n    if (_monomer) {\n      this.monomers.set(_monomer.id, _monomer);\n      return _monomer;\n    }\n    const [Monomer] = monomerFactory(monomerItem);\n    const monomer = new Monomer(monomerItem, position);\n    monomer.moveAbsolute(position);\n    this.monomers.set(monomer.id, monomer);\n    return monomer;\n  }\n\n  public updateMonomerItem(\n    monomer: BaseMonomer,\n    monomerItemNew: MonomerItemType,\n  ) {\n    const initialMonomer = this.monomers.get(monomer.id);\n    if (!initialMonomer) return monomer;\n    initialMonomer.monomerItem = monomerItemNew;\n    this.monomers.set(monomer.id, initialMonomer);\n    return initialMonomer;\n  }\n\n  public addMonomer(monomerItem: MonomerItemType, position: Vec2) {\n    const command = new Command();\n    const operation = new MonomerAddOperation(\n      this.addMonomerChangeModel.bind(this, monomerItem, position),\n      this.deleteMonomerChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public deleteDrawingEntity(\n    drawingEntity: DrawingEntity,\n    needToDeleteConnectedEntities = true,\n  ) {\n    if (drawingEntity instanceof BaseMonomer) {\n      return this.deleteMonomer(drawingEntity, needToDeleteConnectedEntities);\n    } else if (drawingEntity instanceof PolymerBond) {\n      return this.deletePolymerBond(drawingEntity);\n    } else {\n      return new Command();\n    }\n  }\n\n  public selectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = this.unselectAllDrawingEntities();\n\n    drawingEntity.turnOnSelection();\n    command.merge(this.createDrawingEntitySelectionCommand(drawingEntity));\n\n    return command;\n  }\n\n  public selectDrawingEntities(drawingEntities: DrawingEntity[]) {\n    const command = this.unselectAllDrawingEntities();\n    drawingEntities.forEach((drawingEntity: DrawingEntity) => {\n      drawingEntity.turnOnSelection();\n      const operation = new DrawingEntitySelectOperation(drawingEntity);\n      command.addOperation(operation);\n    });\n    return command;\n  }\n\n  public createDrawingEntitySelectionCommand(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    const selectionCommand = new DrawingEntitySelectOperation(drawingEntity);\n    command.addOperation(selectionCommand);\n\n    return command;\n  }\n\n  public unselectAllDrawingEntities() {\n    const command = new Command();\n\n    this.allEntities.forEach(([, drawingEntity]) => {\n      if (drawingEntity.selected) {\n        command.merge(this.unselectDrawingEntity(drawingEntity));\n      }\n    });\n\n    return command;\n  }\n\n  public unselectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n    drawingEntity.turnOffSelection();\n    command.addOperation(new DrawingEntitySelectOperation(drawingEntity));\n    return command;\n  }\n\n  public selectAllDrawingEntities() {\n    const command = new Command();\n\n    this.allEntities.forEach(([, drawingEntity]) => {\n      if (!drawingEntity.selected) {\n        drawingEntity.turnOnSelection();\n        const operation = new DrawingEntitySelectOperation(drawingEntity);\n        command.addOperation(operation);\n      }\n    });\n\n    return command;\n  }\n\n  public addDrawingEntitiesToSelection(drawingEntities: DrawingEntity[]) {\n    const command = new Command();\n    drawingEntities.forEach((drawingEntity: DrawingEntity) => {\n      if (drawingEntity.selected) {\n        drawingEntity.turnOffSelection();\n      } else {\n        drawingEntity.turnOnSelection();\n      }\n      command.addOperation(new DrawingEntitySelectOperation(drawingEntity));\n    });\n    return command;\n  }\n\n  public moveDrawingEntityModelChange(\n    drawingEntity: DrawingEntity,\n    offset?: Vec2,\n  ) {\n    if (drawingEntity instanceof PolymerBond) {\n      drawingEntity.moveToLinkedMonomers();\n    } else {\n      assert(offset);\n      drawingEntity.moveRelative(offset);\n      if (drawingEntity instanceof BaseMonomer)\n        this.moveChemAtomsPoint(drawingEntity, offset);\n    }\n\n    return drawingEntity;\n  }\n\n  private moveChemAtomsPoint(drawingEntity: BaseMonomer, offset?: Vec2) {\n    if (drawingEntity.monomerItem.props.isMicromoleculeFragment && offset) {\n      drawingEntity.monomerItem.struct.atoms.forEach((atom) => {\n        atom.pp.add_(offset);\n      });\n\n      drawingEntity.monomerItem.struct.sgroups.forEach((sgroup) => {\n        sgroup.pp?.add_(offset);\n      });\n    }\n  }\n\n  public moveSelectedDrawingEntities(\n    partOfMovementOffset: Vec2,\n    fullMovementOffset?: Vec2,\n  ) {\n    const command = new Command();\n\n    this.monomers.forEach((drawingEntity) => {\n      if (drawingEntity.selected) {\n        command.merge(\n          this.createDrawingEntityMovingCommand(\n            drawingEntity,\n            partOfMovementOffset,\n            fullMovementOffset,\n          ),\n        );\n      }\n    });\n\n    this.polymerBonds.forEach((drawingEntity) => {\n      if (\n        drawingEntity.selected ||\n        drawingEntity.firstMonomer.selected ||\n        drawingEntity.secondMonomer?.selected\n      ) {\n        command.merge(\n          this.createDrawingEntityMovingCommand(\n            drawingEntity,\n            partOfMovementOffset,\n            fullMovementOffset,\n          ),\n        );\n      }\n    });\n    return command;\n  }\n\n  public createDrawingEntityMovingCommand(\n    drawingEntity: DrawingEntity,\n    partOfMovementOffset: Vec2,\n    fullMovementOffset?: Vec2,\n  ) {\n    const command = new Command();\n\n    const movingCommand = new DrawingEntityMoveOperation(\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        partOfMovementOffset,\n      ),\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        fullMovementOffset\n          ? fullMovementOffset.negated()\n          : partOfMovementOffset.negated(),\n      ),\n      this.moveDrawingEntityModelChange.bind(\n        this,\n        drawingEntity,\n        fullMovementOffset || partOfMovementOffset,\n      ),\n      drawingEntity,\n    );\n    command.addOperation(movingCommand);\n\n    return command;\n  }\n\n  public createDrawingEntityRedrawCommand(\n    drawingEntityRedrawModelChange: () => DrawingEntity,\n    invertDrawingEntityRedrawModelChange: () => DrawingEntity,\n  ) {\n    const command = new Command();\n\n    const redrawCommand = new DrawingEntityRedrawOperation(\n      drawingEntityRedrawModelChange,\n      invertDrawingEntityRedrawModelChange,\n    );\n    command.addOperation(redrawCommand);\n\n    return command;\n  }\n\n  private deleteMonomerChangeModel(monomer: BaseMonomer) {\n    this.monomers.delete(monomer.id);\n  }\n\n  public deleteMonomer(\n    monomer: BaseMonomer,\n    needToDeleteConnectedBonds = true,\n  ) {\n    const command = new Command();\n    const operation = new MonomerDeleteOperation(\n      monomer,\n      this.addMonomerChangeModel.bind(\n        this,\n        monomer.monomerItem,\n        monomer.position,\n      ),\n      this.deleteMonomerChangeModel.bind(this),\n    );\n    command.addOperation(operation);\n\n    if (needToDeleteConnectedBonds && monomer.hasBonds) {\n      monomer.forEachBond((bond) => {\n        // Do not delete connected bond if it is selected because it is done deleteDrawingEntity method\n        // This check helps to avoid operations duplication\n        if (bond.selected) return;\n\n        // We need to remove connected bond when doing a group selection even if it is not selected\n        // and mark it as selected to avoid operations duplication\n        bond.turnOnSelection();\n        command.merge(this.deletePolymerBond(bond));\n      });\n    }\n\n    return command;\n  }\n\n  public modifyMonomerItem(\n    monomer: BaseMonomer,\n    monomerItemNew: MonomerItemType,\n  ) {\n    const command = new Command();\n    const operation = new MonomerItemModifyOperation(\n      monomer,\n      this.updateMonomerItem.bind(this, monomer, monomerItemNew),\n      this.updateMonomerItem.bind(this, monomer, monomer.monomerItem),\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public selectIfLocatedInRectangle(\n    rectangleTopLeftPoint: Vec2,\n    rectangleBottomRightPoint: Vec2,\n    previousSelectedEntities: [number, DrawingEntity][],\n    shiftKey = false,\n  ) {\n    const command = new Command();\n    this.allEntities.forEach(([, drawingEntity]) => {\n      const isPreviousSelected = previousSelectedEntities.find(\n        ([, entity]) => entity === drawingEntity,\n      );\n      let isValueChanged;\n      const editor = CoreEditor.provideEditorInstance();\n      if (\n        editor.mode instanceof SequenceMode &&\n        drawingEntity instanceof PolymerBond\n      ) {\n        isValueChanged = this.checkBondSelectionForSequenceMode(\n          drawingEntity,\n          isValueChanged,\n        );\n      } else {\n        isValueChanged = drawingEntity.selectIfLocatedInRectangle(\n          rectangleTopLeftPoint,\n          rectangleBottomRightPoint,\n          !!isPreviousSelected,\n          shiftKey,\n        );\n      }\n      if (isValueChanged) {\n        const selectionCommand =\n          this.createDrawingEntitySelectionCommand(drawingEntity);\n\n        command.merge(selectionCommand);\n      }\n    });\n    return command;\n  }\n\n  private checkBondSelectionForSequenceMode(\n    bond: PolymerBond,\n    isValueChanged: boolean,\n  ) {\n    const prevSelectedValue = bond.selected;\n    if (bond.firstMonomer.selected && bond.secondMonomer?.selected) {\n      bond.turnOnSelection();\n    } else {\n      bond.turnOffSelection();\n    }\n    isValueChanged = prevSelectedValue !== bond.selected;\n    return isValueChanged;\n  }\n\n  public startPolymerBondCreationChangeModel(\n    firstMonomer,\n    startPosition,\n    endPosition,\n    _polymerBond?: PolymerBond,\n  ) {\n    if (_polymerBond) {\n      this.polymerBonds.set(_polymerBond.id, _polymerBond);\n      return _polymerBond;\n    }\n\n    const polymerBond = new PolymerBond(firstMonomer);\n    this.polymerBonds.set(polymerBond.id, polymerBond);\n    // If we started from a specific AP, we need to 'attach' the bond to the first monomer\n    if (firstMonomer.chosenFirstAttachmentPointForBond) {\n      const startBondAttachmentPoint = firstMonomer.startBondAttachmentPoint;\n      firstMonomer.setBond(startBondAttachmentPoint, polymerBond);\n      firstMonomer.setPotentialBond(startBondAttachmentPoint, polymerBond);\n    }\n    polymerBond.moveBondStartAbsolute(startPosition.x, startPosition.y);\n    polymerBond.moveBondEndAbsolute(endPosition.x, endPosition.y);\n    return polymerBond;\n  }\n\n  public startPolymerBondCreation(firstMonomer, startPosition, endPosition) {\n    const command = new Command();\n\n    const operation = new PolymerBondAddOperation(\n      this.startPolymerBondCreationChangeModel.bind(\n        this,\n        firstMonomer,\n        startPosition,\n        endPosition,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return { command, polymerBond: operation.polymerBond };\n  }\n\n  public deletePolymerBondChangeModel(polymerBond: PolymerBond) {\n    if (this.polymerBonds.get(polymerBond.id) !== polymerBond) {\n      return;\n    }\n\n    this.polymerBonds.delete(polymerBond.id);\n\n    const firstMonomerAttachmentPoint =\n      polymerBond.firstMonomer.getAttachmentPointByBond(polymerBond);\n    const secondMonomerAttachmentPoint =\n      polymerBond.secondMonomer?.getAttachmentPointByBond(polymerBond);\n    polymerBond.firstMonomer.removePotentialBonds();\n    polymerBond.secondMonomer?.removePotentialBonds();\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.secondMonomer?.turnOffSelection();\n    if (firstMonomerAttachmentPoint) {\n      polymerBond.firstMonomer.unsetBond(firstMonomerAttachmentPoint);\n    }\n    if (secondMonomerAttachmentPoint) {\n      polymerBond.secondMonomer?.unsetBond(secondMonomerAttachmentPoint);\n    }\n  }\n\n  public deletePolymerBond(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    const operation = new PolymerBondDeleteOperation(\n      polymerBond,\n      this.deletePolymerBondChangeModel.bind(this, polymerBond),\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        polymerBond.firstMonomer,\n        polymerBond.secondMonomer as BaseMonomer,\n        polymerBond.firstMonomer.getAttachmentPointByBond(\n          polymerBond,\n        ) as AttachmentPointName,\n        polymerBond.secondMonomer?.getAttachmentPointByBond(\n          polymerBond,\n        ) as AttachmentPointName,\n      ),\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public cancelPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer?: BaseMonomer,\n  ) {\n    this.polymerBonds.delete(polymerBond.id);\n    const command = new Command();\n    polymerBond.firstMonomer.removeBond(polymerBond);\n    polymerBond.firstMonomer.removePotentialBonds(true);\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n\n    secondMonomer?.turnOffSelection();\n    secondMonomer?.turnOffHover();\n    secondMonomer?.turnOffAttachmentPointsVisibility();\n    const operation = new PolymerBondCancelCreationOperation(\n      polymerBond,\n      secondMonomer,\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public movePolymerBond(polymerBond: PolymerBond, position: Vec2) {\n    const command = new Command();\n    polymerBond.moveBondEndAbsolute(position.x, position.y);\n\n    const operation = new PolymerBondMoveOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public finishPolymerBondCreationModelChange(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: AttachmentPointName,\n    secondMonomerAttachmentPoint: AttachmentPointName,\n    _polymerBond?: PolymerBond,\n  ) {\n    if (_polymerBond) {\n      this.polymerBonds.set(_polymerBond.id, _polymerBond);\n      firstMonomer.setBond(firstMonomerAttachmentPoint, _polymerBond);\n      secondMonomer.setBond(secondMonomerAttachmentPoint, _polymerBond);\n      return _polymerBond;\n    }\n\n    const polymerBond = new PolymerBond(firstMonomer);\n    this.polymerBonds.set(polymerBond.id, polymerBond);\n    polymerBond.setSecondMonomer(secondMonomer);\n    polymerBond.firstMonomer.setBond(firstMonomerAttachmentPoint, polymerBond);\n    assert(polymerBond.secondMonomer);\n    polymerBond.secondMonomer.setBond(\n      secondMonomerAttachmentPoint,\n      polymerBond,\n    );\n\n    polymerBond.firstMonomer.removePotentialBonds(true);\n    polymerBond.secondMonomer.removePotentialBonds(true);\n    polymerBond.firstMonomer.setChosenFirstAttachmentPoint(null);\n    polymerBond.secondMonomer?.setChosenSecondAttachmentPoint(null);\n    polymerBond.moveToLinkedMonomers();\n    polymerBond.firstMonomer.turnOffSelection();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n    polymerBond.secondMonomer.turnOffSelection();\n    polymerBond.secondMonomer.turnOffHover();\n    polymerBond.secondMonomer.turnOffAttachmentPointsVisibility();\n    polymerBond.turnOffHover();\n\n    return polymerBond;\n  }\n\n  public finishPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: AttachmentPointName,\n    secondMonomerAttachmentPoint: AttachmentPointName,\n  ) {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n\n    const firstMonomer = polymerBond.firstMonomer;\n    this.polymerBonds.delete(polymerBond.id);\n    const operation = new PolymerBondFinishCreationOperation(\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        firstMonomer,\n        secondMonomer,\n        firstMonomerAttachmentPoint,\n        secondMonomerAttachmentPoint,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    if (editor.mode instanceof SnakeMode) {\n      command.merge(this.recalculateCanvasMatrix());\n    }\n\n    return command;\n  }\n\n  public createPolymerBond(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: AttachmentPointName,\n    secondMonomerAttachmentPoint: AttachmentPointName,\n  ) {\n    const command = new Command();\n\n    const operation = new PolymerBondFinishCreationOperation(\n      this.finishPolymerBondCreationModelChange.bind(\n        this,\n        firstMonomer,\n        secondMonomer,\n        firstMonomerAttachmentPoint,\n        secondMonomerAttachmentPoint,\n      ),\n      this.deletePolymerBondChangeModel.bind(this),\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToStartBondCreation(monomer: BaseMonomer) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new MonomerHoverOperation(monomer, true);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToStartAttachmenPointBondCreation(\n    monomer: BaseMonomer,\n    attachmentPointName: AttachmentPointName,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new AttachmentPointHoverOperation(\n      monomer,\n      attachmentPointName,\n    );\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public intendToFinishBondCreation(\n    monomer: BaseMonomer,\n    bond: PolymerBond,\n    shouldCalculateBonds: boolean,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n    if (shouldCalculateBonds) {\n      bond.firstMonomer.removePotentialBonds();\n      monomer.removePotentialBonds();\n      const firstMonomerValidSourcePoint =\n        bond.firstMonomer.getValidSourcePoint(monomer);\n      const secondMonomerValidTargetPoint = monomer.getValidTargetPoint(\n        bond.firstMonomer,\n      );\n      bond.firstMonomer.setPotentialBond(firstMonomerValidSourcePoint, bond);\n      monomer.setPotentialBond(secondMonomerValidTargetPoint, bond);\n    }\n    const connectFirstMonomerOperation = new MonomerHoverOperation(\n      bond.firstMonomer,\n      true,\n    );\n    const connectSecondMonomerOperation = new MonomerHoverOperation(\n      monomer,\n      true,\n    );\n    command.addOperation(connectFirstMonomerOperation);\n    command.addOperation(connectSecondMonomerOperation);\n    return command;\n  }\n\n  public intendToFinishAttachmenPointBondCreation(\n    monomer: BaseMonomer,\n    bond: PolymerBond,\n    attachmentPointName: AttachmentPointName,\n    shouldCalculateBonds: boolean,\n  ) {\n    const command = new Command();\n    monomer.turnOnHover();\n    monomer.turnOnAttachmentPointsVisibility();\n\n    if (monomer.isAttachmentPointUsed(attachmentPointName)) {\n      const operation = new MonomerHoverOperation(monomer, true);\n      command.addOperation(operation);\n      return command;\n    }\n    if (attachmentPointName) {\n      monomer.setPotentialSecondAttachmentPoint(attachmentPointName);\n      monomer.setPotentialBond(attachmentPointName, bond);\n    }\n\n    if (shouldCalculateBonds) {\n      bond.firstMonomer.removePotentialBonds();\n      monomer.removePotentialBonds();\n      const firstMonomerValidSourcePoint =\n        bond.firstMonomer.getValidSourcePoint(monomer);\n      const secondMonomerValidTargetPoint = monomer.getValidTargetPoint(\n        bond.firstMonomer,\n      );\n      bond.firstMonomer.setPotentialBond(firstMonomerValidSourcePoint, bond);\n      monomer.setPotentialBond(secondMonomerValidTargetPoint, bond);\n    }\n    const connectFirstMonomerOperation = new MonomerHoverOperation(\n      bond.firstMonomer,\n      true,\n    );\n    const connectSecondMonomerOperation = new AttachmentPointHoverOperation(\n      monomer,\n      attachmentPointName,\n    );\n    command.addOperation(connectFirstMonomerOperation);\n    command.addOperation(connectSecondMonomerOperation);\n    return command;\n  }\n\n  public cancelIntentionToFinishBondCreation(\n    monomer: BaseMonomer,\n    polymerBond?: PolymerBond,\n  ) {\n    const command = new Command();\n    monomer.turnOffHover();\n    monomer.turnOffAttachmentPointsVisibility();\n    monomer.setPotentialSecondAttachmentPoint(null);\n    monomer.removePotentialBonds();\n    const operation = new MonomerHoverOperation(monomer, true);\n    command.addOperation(operation);\n\n    // If the initial AP has been chosen automatically, it needs to be removed\n    if (\n      polymerBond &&\n      !polymerBond.firstMonomer.chosenFirstAttachmentPointForBond\n    ) {\n      polymerBond.firstMonomer.removePotentialBonds();\n      const operation = new MonomerHoverOperation(\n        polymerBond.firstMonomer,\n        true,\n      );\n      command.addOperation(operation);\n    }\n\n    return command;\n  }\n\n  public intendToSelectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    drawingEntity.turnOnHover();\n\n    const operation = new DrawingEntityHoverOperation(drawingEntity);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public cancelIntentionToSelectDrawingEntity(drawingEntity: DrawingEntity) {\n    const command = new Command();\n\n    drawingEntity.turnOffHover();\n\n    const operation = new DrawingEntityHoverOperation(drawingEntity);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public showPolymerBondInformation(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    polymerBond.turnOnHover();\n    polymerBond.firstMonomer.turnOnHover();\n    polymerBond.firstMonomer.turnOnAttachmentPointsVisibility();\n\n    assert(polymerBond.secondMonomer);\n\n    polymerBond.secondMonomer.turnOnHover();\n    polymerBond.secondMonomer.turnOnAttachmentPointsVisibility();\n\n    const operation = new PolymerBondShowInfoOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public hidePolymerBondInformation(polymerBond: PolymerBond) {\n    const command = new Command();\n\n    polymerBond.turnOffHover();\n    polymerBond.firstMonomer.turnOffHover();\n    polymerBond.firstMonomer.turnOffAttachmentPointsVisibility();\n\n    assert(polymerBond.secondMonomer);\n\n    polymerBond.secondMonomer.turnOffHover();\n    polymerBond.secondMonomer.turnOffAttachmentPointsVisibility();\n\n    const operation = new PolymerBondShowInfoOperation(polymerBond);\n\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public addRnaPreset({\n    sugar,\n    sugarPosition,\n    phosphate,\n    phosphatePosition,\n    rnaBase,\n    rnaBasePosition,\n  }: RnaPresetAdditionParams) {\n    const command = new Command();\n    const monomersToAdd: Array<[MonomerItemType, Vec2]> = [];\n    if (rnaBase && rnaBasePosition) {\n      monomersToAdd.push([rnaBase, rnaBasePosition]);\n    }\n    monomersToAdd.push([sugar, sugarPosition]);\n    if (phosphate && phosphatePosition) {\n      monomersToAdd.push([phosphate, phosphatePosition]);\n    }\n\n    let previousMonomer: BaseMonomer | undefined;\n    const monomers: BaseMonomer[] = [];\n\n    monomersToAdd.forEach(([monomerItem, monomerPosition]) => {\n      const monomerAddOperation = new MonomerAddOperation(\n        this.addMonomerChangeModel.bind(this, monomerItem, monomerPosition),\n        this.deleteMonomerChangeModel.bind(this),\n      );\n      const monomer = monomerAddOperation.monomer;\n      monomers.push(monomer);\n      command.addOperation(monomerAddOperation);\n      if (previousMonomer) {\n        // requirements are: Base(R1)-(R3)Sugar(R2)-(R1)Phosphate\n        const attPointStart = previousMonomer.getValidSourcePoint(monomer);\n        const attPointEnd = monomer.getValidSourcePoint(previousMonomer);\n\n        assert(attPointStart);\n        assert(attPointEnd);\n\n        const operation = new PolymerBondFinishCreationOperation(\n          this.finishPolymerBondCreationModelChange.bind(\n            this,\n            previousMonomer,\n            monomer,\n            attPointStart,\n            attPointEnd,\n          ),\n          this.deletePolymerBondChangeModel.bind(this),\n        );\n        command.addOperation(operation);\n      }\n      previousMonomer = monomer;\n    });\n\n    return { command, monomers };\n  }\n\n  public rearrangeChainModelChange(monomer: BaseMonomer, newPosition: Vec2) {\n    if (monomer.monomerItem.props.isMicromoleculeFragment) {\n      const offset = newPosition.sub(monomer.position);\n      this.moveChemAtomsPoint(monomer, offset);\n    }\n\n    monomer.moveAbsolute(newPosition);\n\n    return monomer;\n  }\n\n  public getNucleotideSize(nucleotide: NucleotideOrNucleoside) {\n    const width =\n      (nucleotide.sugar.renderer?.monomerSize?.width || 0) +\n      (nucleotide.phosphate?.renderer?.monomerSize?.width || 0) +\n      (nucleotide.phosphate ? RNA_MONOMER_DISTANCE : 0);\n    const height =\n      (nucleotide.sugar.renderer?.monomerSize?.height || 0) +\n      (nucleotide.rnaBase.renderer?.monomerSize?.height || 0) +\n      RNA_MONOMER_DISTANCE;\n    return { width, height };\n  }\n\n  private reArrangeChain(\n    monomer: BaseMonomer,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    maxVerticalDistance: number,\n    snakeLayoutMatrix: Matrix<Cell>,\n    firstMonomer?: BaseMonomer,\n  ) {\n    const command = new Command();\n    const heightMonomerWithBond =\n      SNAKE_LAYOUT_CELL_WIDTH / 2 + VERTICAL_DISTANCE_FROM_MONOMER;\n    const isNewRow = lastPosition.x === MONOMER_START_X_POSITION;\n    maxVerticalDistance = isNewRow\n      ? heightMonomerWithBond\n      : Math.max(maxVerticalDistance, heightMonomerWithBond);\n    monomer.isMonomerInRnaChainRow =\n      maxVerticalDistance > heightMonomerWithBond;\n    const oldMonomerPosition = monomer.position;\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(\n        this,\n        monomer,\n        Coordinates.canvasToModel(lastPosition),\n      ),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n    rearrangedMonomersSet.add(monomer.id);\n\n    const matrixX = isNewRow\n      ? snakeLayoutMatrix.height\n      : snakeLayoutMatrix.height - 1;\n    const matrixY = isNewRow\n      ? 0\n      : snakeLayoutMatrix.getRow(matrixX)?.length ?? 0;\n\n    snakeLayoutMatrix.set(\n      matrixX,\n      matrixY,\n      new Cell(null, [], matrixX, matrixY, monomer),\n    );\n\n    const nextPositionAndVerticalDistance =\n      this.getNextMonomerPositionForSnakeLayout(\n        monomer,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        maxVerticalDistance,\n      );\n\n    return {\n      lastPosition:\n        nextPositionAndVerticalDistance?.lastPosition || lastPosition,\n      maxVerticalDistance:\n        nextPositionAndVerticalDistance?.maxVerticalDistance ||\n        maxVerticalDistance,\n      nextMonomer: getNextMonomerInChain(monomer, firstMonomer),\n      command,\n    };\n  }\n\n  private reArrangeRnaChain(\n    nucleotide: NucleotideOrNucleoside,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    maxVerticalDistance: number,\n    snakeLayoutMatrix: Matrix<Cell>,\n    firstMonomer?: BaseMonomer,\n  ) {\n    const command = new Command();\n    const nucleotideSize = this.getNucleotideSize(nucleotide);\n    const { height } = nucleotideSize;\n    const heightWithBond = height + VERTICAL_DISTANCE_FROM_MONOMER;\n    const isNewRow = lastPosition.x === MONOMER_START_X_POSITION;\n    maxVerticalDistance = Math.max(maxVerticalDistance, heightWithBond);\n    nucleotide.sugar.isMonomerInRnaChainRow = true;\n    nucleotide.rnaBase.isMonomerInRnaChainRow = true;\n    const oldSugarPosition = nucleotide.sugar.position;\n    const rnaBasePosition = new Vec2(\n      lastPosition.x,\n      lastPosition.y +\n        (nucleotide.sugar.renderer?.monomerSize?.height ?? 0) / 2 +\n        (nucleotide.rnaBase.renderer?.monomerSize?.height ?? 0) / 2 +\n        RNA_MONOMER_DISTANCE,\n    );\n    this.addRnaOperations(\n      command,\n      oldSugarPosition,\n      lastPosition,\n      nucleotide.sugar,\n    );\n    this.addRnaOperations(\n      command,\n      nucleotide.rnaBase?.position,\n      rnaBasePosition,\n      nucleotide.rnaBase,\n    );\n    rearrangedMonomersSet.add(nucleotide.sugar.id);\n    rearrangedMonomersSet.add(nucleotide.rnaBase?.id);\n\n    const matrixX = isNewRow\n      ? snakeLayoutMatrix.height\n      : snakeLayoutMatrix.height - 1;\n    const matrixY = isNewRow\n      ? 0\n      : snakeLayoutMatrix.getRow(matrixX)?.length ?? 0;\n\n    snakeLayoutMatrix.set(\n      matrixX,\n      matrixY,\n      new Cell(null, [], matrixX, matrixY, nucleotide.sugar),\n    );\n\n    if (nucleotide.phosphate) {\n      nucleotide.phosphate.isMonomerInRnaChainRow = true;\n      const phosphatePosition = new Vec2(\n        lastPosition.x + SNAKE_LAYOUT_CELL_WIDTH,\n        lastPosition.y,\n      );\n      this.addRnaOperations(\n        command,\n        nucleotide.phosphate?.position,\n        phosphatePosition,\n        nucleotide.phosphate,\n      );\n      rearrangedMonomersSet.add(nucleotide.phosphate?.id);\n      snakeLayoutMatrix.set(\n        matrixX,\n        matrixY + 1,\n        new Cell(null, [], matrixX, matrixY, nucleotide.sugar),\n      );\n    }\n    const lastMonomerInNucleotide =\n      nucleotide.baseMonomer === nucleotide.sugar && nucleotide.phosphate\n        ? nucleotide.phosphate\n        : nucleotide.sugar;\n\n    const nextMonomerPositionAndVerticalDistance =\n      this.getNextMonomerPositionForSnakeLayout(\n        lastMonomerInNucleotide,\n        lastPosition,\n        canvasWidth,\n        rearrangedMonomersSet,\n        maxVerticalDistance,\n        nucleotide.phosphate\n          ? SNAKE_LAYOUT_CELL_WIDTH * 2\n          : SNAKE_LAYOUT_CELL_WIDTH,\n      );\n\n    const nextMonomer = getNextMonomerInChain(\n      lastMonomerInNucleotide,\n      firstMonomer,\n    );\n\n    return {\n      command,\n      lastPosition:\n        nextMonomerPositionAndVerticalDistance?.lastPosition || lastPosition,\n      maxVerticalDistance:\n        nextMonomerPositionAndVerticalDistance?.maxVerticalDistance ||\n        maxVerticalDistance,\n      nextMonomer,\n    };\n  }\n\n  private getNextMonomerPositionForSnakeLayout(\n    monomer: BaseMonomer,\n    lastPosition: Vec2,\n    canvasWidth: number,\n    rearrangedMonomersSet: Set<number>,\n    maxVerticalDistance: number,\n    width?: number,\n  ) {\n    let nextPositionAndDistance;\n    for (const attachmentPointName in monomer.attachmentPointsToBonds) {\n      const polymerBond = monomer.attachmentPointsToBonds[attachmentPointName];\n      const nextMonomer = polymerBond?.getAnotherMonomer(monomer);\n      if (!polymerBond || rearrangedMonomersSet.has(nextMonomer.id)) {\n        continue;\n      }\n      if (\n        (attachmentPointName === 'R2' &&\n          nextMonomer.getAttachmentPointByBond(polymerBond) === 'R1') ||\n        (attachmentPointName === 'R1' &&\n          nextMonomer.getAttachmentPointByBond(polymerBond) === 'R2')\n      ) {\n        nextPositionAndDistance = this.getNextPositionAndDistance(\n          lastPosition,\n          maxVerticalDistance,\n          canvasWidth,\n          width,\n        );\n      }\n    }\n    return nextPositionAndDistance;\n  }\n\n  private addRnaOperations(\n    command: Command,\n    oldMonomerPosition: Vec2 | undefined,\n    newPosition: Vec2 | undefined,\n    monomer?: BaseMonomer,\n  ) {\n    if (!monomer || !oldMonomerPosition || !newPosition) {\n      return;\n    }\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(\n        this,\n        monomer,\n        Coordinates.canvasToModel(newPosition),\n      ),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n  }\n\n  private recalculateCanvasMatrixModelChange(\n    snakeLayoutMatrix?: Matrix<Cell>,\n    _chainsCollection?: ChainsCollection,\n  ) {\n    if (!snakeLayoutMatrix || snakeLayoutMatrix.height === 0) {\n      return;\n    }\n\n    const chainsCollection =\n      _chainsCollection ||\n      ChainsCollection.fromMonomers(Array.from(this.monomers.values()));\n\n    if (!_chainsCollection) {\n      chainsCollection.rearrange();\n    }\n\n    this.canvasMatrix = new CanvasMatrix(chainsCollection, {\n      initialMatrix: snakeLayoutMatrix,\n    });\n\n    return this.redrawBonds();\n  }\n\n  public recalculateCanvasMatrix(\n    chainsCollection?: ChainsCollection,\n    previousSnakeLayoutMatrix?: Matrix<Cell>,\n  ) {\n    const command = new Command();\n\n    command.addOperation(\n      new RecalculateCanvasMatrixOperation(\n        this.recalculateCanvasMatrixModelChange.bind(\n          this,\n          this.snakeLayoutMatrix,\n          chainsCollection,\n        ),\n        this.recalculateCanvasMatrixModelChange.bind(\n          this,\n          previousSnakeLayoutMatrix,\n          chainsCollection,\n        ),\n      ),\n    );\n\n    return command;\n  }\n\n  public reArrangeChains(\n    canvasWidth: number,\n    isSnakeMode: boolean,\n    needRedrawBonds = true,\n  ) {\n    const snakeLayoutMatrix = new Matrix<Cell>();\n    const previousSnakeLayoutMatrix = this.snakeLayoutMatrix;\n    const command = new Command();\n    let chainsCollection;\n\n    if (isSnakeMode) {\n      const rearrangedMonomersSet: Set<number> = new Set();\n      let lastPosition = new Vec2({\n        x: MONOMER_START_X_POSITION,\n        y: MONOMER_START_Y_POSITION,\n      });\n      let maxVerticalDistance = 0;\n      chainsCollection = ChainsCollection.fromMonomers([\n        ...this.monomers.values(),\n      ]);\n      chainsCollection.rearrange();\n\n      chainsCollection.chains.forEach((chain) => {\n        chain.forEachNode(({ node }) => {\n          if (rearrangedMonomersSet.has(node.monomer.id)) {\n            return;\n          }\n\n          if (node instanceof Nucleoside || node instanceof Nucleotide) {\n            const rearrangeResult = this.reArrangeRnaChain(\n              {\n                sugar: node.sugar,\n                phosphate:\n                  node instanceof Nucleotide\n                    ? node.phosphate\n                    : getPhosphateFromSugar(node.sugar),\n                rnaBase: node.rnaBase,\n                baseMonomer: node.firstMonomerInNode,\n              },\n              lastPosition,\n              canvasWidth,\n              rearrangedMonomersSet,\n              maxVerticalDistance,\n              snakeLayoutMatrix,\n            );\n            lastPosition = rearrangeResult.lastPosition;\n            maxVerticalDistance = rearrangeResult.maxVerticalDistance;\n            command.merge(rearrangeResult.command);\n          } else {\n            node.monomers.forEach((monomer) => {\n              const rearrangeResult = this.reArrangeChain(\n                monomer,\n                lastPosition,\n                canvasWidth,\n                rearrangedMonomersSet,\n                maxVerticalDistance,\n                snakeLayoutMatrix,\n              );\n              lastPosition = rearrangeResult.lastPosition;\n              maxVerticalDistance = rearrangeResult.maxVerticalDistance;\n              command.merge(rearrangeResult.command);\n            });\n          }\n        });\n        lastPosition = getFirstPosition(maxVerticalDistance, lastPosition);\n        maxVerticalDistance = 0;\n      });\n    }\n\n    if (needRedrawBonds) {\n      command.merge(this.redrawBonds());\n    }\n\n    this.snakeLayoutMatrix = snakeLayoutMatrix;\n\n    command.merge(\n      this.recalculateCanvasMatrix(chainsCollection, previousSnakeLayoutMatrix),\n    );\n\n    return command;\n  }\n\n  private redrawBondsModelChange(\n    polymerBond: PolymerBond,\n    startPosition?: Vec2,\n    endPosition?: Vec2,\n  ) {\n    if (startPosition && endPosition) {\n      polymerBond.moveBondStartAbsolute(startPosition.x, startPosition.y);\n      polymerBond.moveBondEndAbsolute(endPosition.x, endPosition.y);\n    } else {\n      polymerBond.moveToLinkedMonomers();\n    }\n\n    return polymerBond;\n  }\n\n  public redrawBonds() {\n    const command = new Command();\n\n    this.polymerBonds.forEach((polymerBond) => {\n      command.merge(\n        this.createDrawingEntityRedrawCommand(\n          this.redrawBondsModelChange.bind(this, polymerBond),\n          this.redrawBondsModelChange.bind(\n            this,\n            polymerBond,\n            polymerBond.startPosition,\n            polymerBond.endPosition,\n          ),\n        ),\n      );\n    });\n    return command;\n  }\n\n  public getNextPositionAndDistance(\n    lastPosition: Vec2,\n    height: number,\n    canvasWidth: number,\n    width = SNAKE_LAYOUT_CELL_WIDTH,\n  ) {\n    const isMonomerFitCanvas =\n      lastPosition.x +\n        width +\n        DISTANCE_FROM_RIGHT +\n        SNAKE_LAYOUT_CELL_WIDTH / 2 <\n      canvasWidth;\n\n    if (!isMonomerFitCanvas) {\n      return {\n        maxVerticalDistance: 0,\n        lastPosition: getFirstPosition(height, lastPosition),\n      };\n    }\n\n    return {\n      maxVerticalDistance: height,\n      lastPosition: new Vec2({\n        x: lastPosition.x + width,\n        y: lastPosition.y,\n      }),\n    };\n  }\n\n  public isNucleosideAndPhosphateConnectedAsNucleotide(\n    nucleoside: Nucleoside,\n    phosphate: Phosphate,\n  ) {\n    if (\n      !(nucleoside instanceof Nucleoside) ||\n      !(phosphate instanceof Phosphate)\n    )\n      return false;\n\n    return (\n      nucleoside.sugar.attachmentPointsToBonds.R2?.secondMonomer === phosphate\n    );\n  }\n\n  public setMicromoleculesHiddenEntities(struct: Struct) {\n    struct.mergeInto(this.micromoleculesHiddenEntities);\n    this.micromoleculesHiddenEntities.atoms = new Pool();\n    this.micromoleculesHiddenEntities.bonds = new Pool();\n    this.micromoleculesHiddenEntities.halfBonds = new Pool();\n    this.micromoleculesHiddenEntities.sgroups = new Pool();\n    this.micromoleculesHiddenEntities.functionalGroups = new Pool();\n    this.micromoleculesHiddenEntities.sGroupForest = new SGroupForest();\n    this.micromoleculesHiddenEntities.frags = new Pool();\n  }\n\n  public clearMicromoleculesHiddenEntities() {\n    this.micromoleculesHiddenEntities = new Struct();\n  }\n\n  public mergeInto(targetDrawingEntitiesManager: DrawingEntitiesManager) {\n    const command = new Command();\n    const monomerToNewMonomer = new Map<BaseMonomer, BaseMonomer>();\n    const mergedDrawingEntities = new DrawingEntitiesManager();\n    this.monomers.forEach((monomer) => {\n      const monomerAddCommand = targetDrawingEntitiesManager.addMonomer(\n        monomer.monomerItem,\n        monomer.position,\n      );\n\n      command.merge(monomerAddCommand);\n\n      const addedMonomer = monomerAddCommand.operations[0]\n        .monomer as BaseMonomer;\n\n      mergedDrawingEntities.monomers.set(addedMonomer.id, addedMonomer);\n\n      monomerToNewMonomer.set(\n        monomer,\n        monomerAddCommand.operations[0].monomer as BaseMonomer,\n      );\n    });\n    this.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      const polymerBondCreateCommand =\n        targetDrawingEntitiesManager.createPolymerBond(\n          monomerToNewMonomer.get(polymerBond.firstMonomer) as BaseMonomer,\n          monomerToNewMonomer.get(polymerBond.secondMonomer) as BaseMonomer,\n          polymerBond.firstMonomer.getAttachmentPointByBond(\n            polymerBond,\n          ) as AttachmentPointName,\n          polymerBond.secondMonomer.getAttachmentPointByBond(\n            polymerBond,\n          ) as AttachmentPointName,\n        );\n      command.merge(polymerBondCreateCommand);\n\n      const addedPolymerBond = polymerBondCreateCommand.operations[0]\n        .polymerBond as PolymerBond;\n\n      mergedDrawingEntities.polymerBonds.set(\n        addedPolymerBond.id,\n        addedPolymerBond,\n      );\n    });\n    this.micromoleculesHiddenEntities.mergeInto(\n      targetDrawingEntitiesManager.micromoleculesHiddenEntities,\n    );\n\n    return { command, mergedDrawingEntities };\n  }\n\n  public centerMacroStructure() {\n    const centerPointOfModel = Coordinates.canvasToModel(\n      this.getCurrentCenterPointOfCanvas(),\n    );\n    const structCenter = this.getMacroStructureCenter();\n    const offset = Vec2.diff(centerPointOfModel, structCenter);\n    this.monomers.forEach((monomer: BaseMonomer) => {\n      this.moveMonomer(monomer, new Vec2(monomer.position).add(offset));\n    });\n    this.polymerBonds.forEach((bond: PolymerBond) => {\n      const { x: startX, y: startY } = new Vec2(bond.position).add(offset);\n      bond.moveBondStartAbsolute(startX, startY);\n      const { x: endX, y: endY } = new Vec2(bond.endPosition).add(offset);\n      bond.moveBondEndAbsolute(endX, endY);\n    });\n  }\n\n  public getCurrentCenterPointOfCanvas() {\n    const editor = CoreEditor.provideEditorInstance();\n    const originalCenterPointOfCanvas = new Vec2(\n      editor.canvasOffset.width / 2,\n      editor.canvasOffset.height / 2,\n    );\n    return Coordinates.viewToCanvas(originalCenterPointOfCanvas);\n  }\n\n  public getMacroStructureCenter() {\n    let xmin = 1e50;\n    let ymin = xmin;\n    let xmax = -xmin;\n    let ymax = -ymin;\n\n    this.monomers.forEach((monomer: BaseMonomer) => {\n      xmin = Math.min(xmin, monomer.position.x);\n      ymin = Math.min(ymin, monomer.position.y);\n      xmax = Math.max(xmax, monomer.position.x);\n      ymax = Math.max(ymax, monomer.position.y);\n    });\n    this.polymerBonds.forEach((bond: PolymerBond) => {\n      xmin = Math.min(xmin, bond.position.x);\n      ymin = Math.min(ymin, bond.position.y);\n      xmax = Math.max(xmax, bond.position.x);\n      ymax = Math.max(ymax, bond.position.y);\n    });\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2);\n  }\n\n  public applyMonomersSequenceLayout() {\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...this.monomers.values(),\n    ]);\n    chainsCollection.rearrange();\n\n    SequenceRenderer.show(chainsCollection);\n\n    return chainsCollection;\n  }\n\n  public clearCanvas() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.monomers.forEach((monomer) => {\n      editor.renderersContainer.deleteMonomer(monomer);\n    });\n\n    this.polymerBonds.forEach((polymerBond) => {\n      editor.renderersContainer.deletePolymerBond(polymerBond);\n    });\n\n    SequenceRenderer.removeEmptyNodes();\n  }\n\n  public applyFlexLayoutMode(needRedrawBonds = false) {\n    const editor = CoreEditor.provideEditorInstance();\n    const command = new Command();\n\n    if (needRedrawBonds) {\n      command.merge(this.redrawBonds());\n    }\n\n    this.monomers.forEach((monomer) => {\n      editor.renderersContainer.deleteMonomer(monomer);\n      editor.renderersContainer.addMonomer(monomer);\n    });\n\n    this.polymerBonds.forEach((polymerBond) => {\n      editor.renderersContainer.deletePolymerBond(polymerBond);\n      editor.renderersContainer.addPolymerBond(polymerBond);\n    });\n\n    SequenceRenderer.removeEmptyNodes();\n\n    return command;\n  }\n\n  public rerenderPolymerBonds() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.polymerBonds.forEach((polymerBond) => {\n      editor.renderersContainer.deletePolymerBond(polymerBond);\n      editor.renderersContainer.addPolymerBond(polymerBond);\n    });\n  }\n\n  public getAllSelectedEntitiesForEntities(drawingEntities: DrawingEntity[]) {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    drawingEntities.forEach((monomer) => monomer.turnOnSelection());\n    const newDrawingEntities = drawingEntities.reduce(\n      (\n        selectedDrawingEntities: DrawingEntity[],\n        drawingEntity: DrawingEntity,\n      ) => {\n        const res =\n          editor.drawingEntitiesManager.getAllSelectedEntitiesForSingleEntity(\n            drawingEntity,\n            true,\n            selectedDrawingEntities,\n          );\n        res.drawingEntities.forEach((entity) =>\n          command.addOperation(new DrawingEntitySelectOperation(entity)),\n        );\n        return selectedDrawingEntities.concat(res.drawingEntities);\n      },\n      [],\n    );\n    return { command, drawingEntities: newDrawingEntities };\n  }\n\n  public getAllSelectedEntitiesForSingleEntity(\n    drawingEntity: DrawingEntity,\n    needToSelectConnectedBonds = true,\n    selectedDrawingEntities?: DrawingEntity[],\n  ) {\n    const command = new Command();\n    command.addOperation(new DrawingEntitySelectOperation(drawingEntity));\n    drawingEntity.turnOnSelection();\n    let drawingEntities: DrawingEntity[] = [drawingEntity];\n\n    const editor = CoreEditor.provideEditorInstance();\n    if (\n      !(editor.mode instanceof SequenceMode) ||\n      drawingEntity instanceof PolymerBond\n    ) {\n      return { command, drawingEntities };\n    }\n    if (drawingEntity instanceof Sugar && drawingEntity.isPartOfRNA) {\n      const sugar = drawingEntity;\n      if (isValidNucleoside(sugar)) {\n        const nucleoside = Nucleoside.fromSugar(sugar);\n        drawingEntities = nucleoside.monomers;\n      } else if (isValidNucleotide(sugar)) {\n        const nucleotide = Nucleotide.fromSugar(sugar);\n        drawingEntities = nucleotide.monomers;\n      }\n      drawingEntities.forEach((entity) => {\n        if (!(entity instanceof Sugar)) {\n          entity.turnOnSelection();\n          command.addOperation(new DrawingEntitySelectOperation(entity));\n        }\n      });\n    }\n    drawingEntities.forEach((entity) => {\n      const monomer = entity as BaseMonomer;\n      if (needToSelectConnectedBonds && monomer.hasBonds) {\n        monomer.forEachBond((polymerBond) => {\n          if (\n            !selectedDrawingEntities?.includes(polymerBond) &&\n            !drawingEntities.includes(polymerBond) &&\n            polymerBond.getAnotherMonomer(monomer)?.selected\n          ) {\n            drawingEntities.push(polymerBond);\n            polymerBond.turnOnSelection();\n            command.addOperation(new DrawingEntitySelectOperation(polymerBond));\n          }\n        });\n      }\n    });\n    return { command, drawingEntities };\n  }\n\n  public validateIfApplicableForFasta() {\n    const monomerTypes = new Set();\n    let isValid = true;\n\n    this.monomers.forEach((monomer) => {\n      const monomerType = monomer.monomerItem.props.MonomerType;\n      monomerTypes.add(monomerType);\n      if (monomerType === MONOMER_CONST.CHEM || monomerTypes.size > 1) {\n        isValid = false;\n      }\n    });\n\n    return isValid;\n  }\n\n  public moveMonomer(monomer: BaseMonomer, position: Vec2) {\n    const oldMonomerPosition = monomer.position;\n    const command = new Command();\n    const operation = new MonomerMoveOperation(\n      this.rearrangeChainModelChange.bind(this, monomer, position),\n      this.rearrangeChainModelChange.bind(this, monomer, oldMonomerPosition),\n    );\n    command.addOperation(operation);\n\n    return command;\n  }\n\n  public removeHoverForAllMonomers() {\n    const command = new Command();\n    this.monomers.forEach((monomer) => {\n      if (!monomer.hovered) {\n        return;\n      }\n\n      monomer.turnOffHover();\n      monomer.turnOffAttachmentPointsVisibility();\n\n      command.addOperation(new MonomerHoverOperation(monomer, true));\n    });\n\n    return command;\n  }\n\n  private reconnectPolymerBondModelChange(\n    polymerBond: PolymerBond,\n    {\n      newFirstMonomerAttachmentPoint,\n      newSecondMonomerAttachmentPoint,\n      initialFirstMonomerAttachmentPoint,\n      initialSecondMonomerAttachmentPoint,\n    }: {\n      newFirstMonomerAttachmentPoint: AttachmentPointName;\n      newSecondMonomerAttachmentPoint: AttachmentPointName;\n      initialFirstMonomerAttachmentPoint: AttachmentPointName;\n      initialSecondMonomerAttachmentPoint: AttachmentPointName;\n    },\n  ) {\n    polymerBond.firstMonomer.unsetBond(initialFirstMonomerAttachmentPoint);\n    polymerBond.secondMonomer?.unsetBond(initialSecondMonomerAttachmentPoint);\n\n    polymerBond.firstMonomer.setBond(\n      newFirstMonomerAttachmentPoint,\n      polymerBond,\n    );\n    polymerBond.secondMonomer?.setBond(\n      newSecondMonomerAttachmentPoint,\n      polymerBond,\n    );\n\n    return polymerBond;\n  }\n\n  public reconnectPolymerBond(\n    polymerBond: PolymerBond,\n    newFirstMonomerAttachmentPoint: AttachmentPointName,\n    newSecondMonomerAttachmentPoint: AttachmentPointName,\n    initialFirstMonomerAttachmentPoint: AttachmentPointName,\n    initialSecondMonomerAttachmentPoint: AttachmentPointName,\n  ) {\n    const command = new Command();\n\n    command.addOperation(\n      new ReconnectPolymerBondOperation(\n        this.reconnectPolymerBondModelChange.bind(this, polymerBond, {\n          newFirstMonomerAttachmentPoint,\n          newSecondMonomerAttachmentPoint,\n          initialFirstMonomerAttachmentPoint,\n          initialSecondMonomerAttachmentPoint,\n        }),\n        this.reconnectPolymerBondModelChange.bind(this, polymerBond, {\n          newFirstMonomerAttachmentPoint: initialFirstMonomerAttachmentPoint,\n          newSecondMonomerAttachmentPoint: initialSecondMonomerAttachmentPoint,\n          initialFirstMonomerAttachmentPoint: newFirstMonomerAttachmentPoint,\n          initialSecondMonomerAttachmentPoint: newSecondMonomerAttachmentPoint,\n        }),\n      ),\n    );\n\n    return command;\n  }\n}\nfunction getFirstPosition(height: number, lastPosition: Vec2) {\n  return new Vec2(MONOMER_START_X_POSITION, lastPosition.y + height);\n}\n","import { Command } from 'domain/entities/Command';\nimport { SelectLayoutModeOperation } from '../operations/polymerBond';\nimport { CoreEditor, EditorHistory } from '../internal';\nimport {\n  DEFAULT_LAYOUT_MODE,\n  LayoutMode,\n  modesMap,\n} from 'application/editor/modes';\nimport {\n  getStructStringFromClipboardData,\n  initHotKeys,\n  isClipboardAPIAvailable,\n  keyNorm,\n  legacyCopy,\n  legacyPaste,\n} from 'utilities';\nimport { BaseMonomer, Struct, Vec2 } from 'domain/entities';\nimport {\n  identifyStructFormat,\n  macromoleculesFilesInputFormats,\n  SupportedFormat,\n} from 'application/formatters';\nimport { KetSerializer } from 'domain/serializers';\nimport { ChemicalMimeType } from 'domain/services';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { ketcherProvider } from 'application/utils';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\n\nexport abstract class BaseMode {\n  private _pasteIsInProgress = false;\n\n  protected constructor(\n    public modeName: LayoutMode,\n    public previousMode: LayoutMode = DEFAULT_LAYOUT_MODE,\n  ) {}\n\n  private changeMode(editor: CoreEditor, modeName: LayoutMode, isUndo = false) {\n    editor.events.layoutModeChange.dispatch(modeName);\n    const ModeConstructor = modesMap[modeName];\n    editor.mode.destroy();\n    editor.setMode(new ModeConstructor());\n    editor.mode.initialize(true, isUndo);\n  }\n\n  public initialize(needRemoveSelection = true, _isUndo = false) {\n    const command = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n\n    command.addOperation(\n      new SelectLayoutModeOperation(\n        this.changeMode.bind(this, editor, this.modeName),\n        this.changeMode.bind(this, editor, this.previousMode, true),\n        this.modeName,\n        this.previousMode,\n      ),\n    );\n\n    if (needRemoveSelection) {\n      editor.events.selectTool.dispatch('select-rectangle');\n    }\n\n    return command;\n  }\n\n  async onKeyDown(event: KeyboardEvent) {\n    await new Promise<void>((resolve) => {\n      setTimeout(() => {\n        const editor = CoreEditor.provideEditorInstance();\n        if (!this.checkIfTargetIsInput(event)) {\n          const hotKeys = initHotKeys(this.keyboardEventHandlers);\n          const shortcutKey = keyNorm.lookup(hotKeys, event);\n          this.keyboardEventHandlers[shortcutKey]?.handler(event);\n        }\n        editor.events.mouseLeaveSequenceItem.dispatch();\n        resolve();\n      }, 0);\n    });\n  }\n\n  get keyboardEventHandlers() {\n    return {};\n  }\n\n  abstract getNewNodePosition();\n\n  abstract applyAdditionalPasteOperations(\n    _drawingEntitiesManager: DrawingEntitiesManager,\n  ): Command;\n\n  abstract isPasteAllowedByMode(\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ): boolean;\n\n  abstract isPasteAvailable(\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ): boolean;\n\n  abstract scrollForView(): void;\n\n  onCopy(event: ClipboardEvent) {\n    if (this.checkIfTargetIsInput(event)) {\n      return;\n    }\n    const editor = CoreEditor.provideEditorInstance();\n    const drawingEntitiesManager = new DrawingEntitiesManager();\n    editor.drawingEntitiesManager.selectedEntities.forEach(([, entity]) => {\n      if (entity instanceof BaseMonomer) {\n        drawingEntitiesManager.addMonomerChangeModel(\n          entity.monomerItem,\n          entity.position,\n          entity,\n        );\n      } else if (entity instanceof PolymerBond && entity.secondMonomer) {\n        const firstAttachmentPoint =\n          entity.firstMonomer.getAttachmentPointByBond(entity);\n        const secondAttachmentPoint =\n          entity.secondMonomer?.getAttachmentPointByBond(entity);\n        if (\n          firstAttachmentPoint &&\n          secondAttachmentPoint &&\n          entity.firstMonomer.selected &&\n          entity.secondMonomer?.selected\n        ) {\n          drawingEntitiesManager.finishPolymerBondCreationModelChange(\n            entity.firstMonomer,\n            entity.secondMonomer,\n            firstAttachmentPoint,\n            secondAttachmentPoint,\n            entity,\n          );\n        }\n      }\n    });\n    const ketSerializer = new KetSerializer();\n    const serializedKet = ketSerializer.serialize(\n      new Struct(),\n      drawingEntitiesManager,\n    );\n    if (isClipboardAPIAvailable()) {\n      navigator.clipboard.writeText(serializedKet);\n    } else {\n      legacyCopy(event.clipboardData, {\n        'text/plain': serializedKet,\n      });\n      event.preventDefault();\n    }\n  }\n\n  async onPaste(event: ClipboardEvent) {\n    if (!this.checkIfTargetIsInput(event)) {\n      if (isClipboardAPIAvailable()) {\n        const isSequenceEditInRNABuilderMode =\n          CoreEditor.provideEditorInstance().isSequenceEditInRNABuilderMode;\n\n        if (isSequenceEditInRNABuilderMode || this._pasteIsInProgress) return;\n        this._pasteIsInProgress = true;\n\n        const clipboardData = await navigator.clipboard.read();\n        this.pasteFromClipboard(clipboardData).finally(() => {\n          this._pasteIsInProgress = false;\n        });\n      } else {\n        const clipboardData = legacyPaste(event.clipboardData, ['text/plain']);\n        this.pasteFromClipboard(clipboardData);\n        event.preventDefault();\n      }\n    }\n  }\n\n  async pasteFromClipboard(clipboardData) {\n    let modelChanges;\n    const editor = CoreEditor.provideEditorInstance();\n    const pastedStr = await getStructStringFromClipboardData(clipboardData);\n    const format = identifyStructFormat(pastedStr, true);\n    if (format === SupportedFormat.ket) {\n      modelChanges = this.pasteKetFormatFragment(pastedStr);\n    } else {\n      let inputFormat;\n      let isSequenceOrFasta = false;\n      switch (format) {\n        case SupportedFormat.sequence:\n          inputFormat =\n            macromoleculesFilesInputFormats.seq[\n              editor.sequenceTypeEnterMode.toLowerCase()\n            ];\n          isSequenceOrFasta = true;\n          break;\n        case SupportedFormat.fasta:\n          inputFormat =\n            macromoleculesFilesInputFormats.fasta[\n              editor.sequenceTypeEnterMode.toLowerCase()\n            ];\n          isSequenceOrFasta = true;\n          break;\n        case SupportedFormat.molV3000:\n          inputFormat = macromoleculesFilesInputFormats.mol;\n          break;\n        default:\n          break;\n      }\n\n      modelChanges = await this.pasteWithIndigoConversion(\n        pastedStr,\n        inputFormat,\n        isSequenceOrFasta,\n      );\n    }\n\n    if (!modelChanges || modelChanges.operations.length === 0) {\n      return;\n    }\n    editor.renderersContainer.update(modelChanges);\n    new EditorHistory(editor).update(modelChanges);\n    this.scrollForView();\n  }\n\n  pasteKetFormatFragment(pastedStr: string) {\n    const editor = CoreEditor.provideEditorInstance();\n    const ketSerializer = new KetSerializer();\n    const deserialisedKet =\n      ketSerializer.deserializeToDrawingEntities(pastedStr);\n    if (!deserialisedKet) {\n      throw new Error('Error during parsing file');\n    }\n    const drawingEntitiesManager = deserialisedKet?.drawingEntitiesManager;\n\n    if (\n      !drawingEntitiesManager ||\n      !this.isPasteAllowedByMode(drawingEntitiesManager)\n    ) {\n      return;\n    }\n    if (!this.isPasteAvailable(drawingEntitiesManager)) {\n      editor.events.openErrorModal.dispatch({\n        errorTitle: 'Error Message',\n        errorMessage:\n          'It is impossible to merge fragments. Attachment point to establish bonds are not available.',\n      });\n      return;\n    }\n\n    this.updateMonomersPosition(drawingEntitiesManager);\n    const { command: modelChanges, mergedDrawingEntities } =\n      drawingEntitiesManager.mergeInto(editor.drawingEntitiesManager);\n\n    modelChanges.merge(\n      this.applyAdditionalPasteOperations(mergedDrawingEntities),\n    );\n\n    return modelChanges;\n  }\n\n  async pasteWithIndigoConversion(\n    pastedStr: string,\n    inputFormat: ChemicalMimeType,\n    isSequenceOrFasta = false,\n  ) {\n    const indigo = ketcherProvider.getKetcher().indigo;\n    try {\n      const ketStruct = await indigo.convert(\n        isSequenceOrFasta ? pastedStr.toUpperCase() : pastedStr,\n        {\n          outputFormat: ChemicalMimeType.KET,\n          inputFormat,\n        },\n      );\n\n      return this.pasteKetFormatFragment(ketStruct.struct);\n    } catch (error) {\n      const stringError =\n        typeof error === 'string' ? error : JSON.stringify(error);\n      const errorMessage = 'Convert error! ' + stringError;\n\n      this.unsupportedSymbolsError(errorMessage, isSequenceOrFasta);\n\n      return new Command();\n    }\n  }\n\n  private updateMonomersPosition(\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    let offset: Vec2;\n    let index = 0;\n    const newNodePosition = this.getNewNodePosition();\n    drawingEntitiesManager.monomers.forEach((monomer) => {\n      let position;\n      if (index === 0) {\n        offset = Vec2.diff(newNodePosition, new Vec2(monomer.position));\n        position = newNodePosition;\n      } else {\n        position = offset\n          ? new Vec2(monomer.position).add(offset)\n          : new Vec2(monomer.position);\n      }\n      drawingEntitiesManager.moveMonomer(monomer, position);\n      index++;\n    });\n  }\n\n  unsupportedSymbolsError(errorMessage: string, isSequenceOrFasta = false) {\n    const editor = CoreEditor.provideEditorInstance();\n    editor.events.openErrorModal.dispatch({\n      errorTitle: isSequenceOrFasta ? 'Unsupported symbols' : 'Error',\n      errorMessage,\n    });\n  }\n\n  private checkIfTargetIsInput(event: Event) {\n    return (\n      event.target instanceof HTMLElement &&\n      (event.target?.nodeName === 'INPUT' ||\n        event.target?.nodeName === 'TEXTAREA')\n    );\n  }\n\n  public destroy() {}\n}\n","import { LayoutMode } from 'application/editor/modes/types';\nimport { BaseMode } from 'application/editor/modes/internal';\nimport { CoreEditor } from '../Editor';\nimport { Coordinates } from '../internal';\nimport { Command } from 'domain/entities/Command';\nexport class FlexMode extends BaseMode {\n  constructor(previousMode?: LayoutMode) {\n    super('flex-layout-mode', previousMode);\n  }\n\n  initialize() {\n    const command = super.initialize();\n    const editor = CoreEditor.provideEditorInstance();\n\n    const modelChanges =\n      editor.drawingEntitiesManager.applyFlexLayoutMode(true);\n\n    command.merge(editor.drawingEntitiesManager.recalculateCanvasMatrix());\n\n    editor.renderersContainer.update(modelChanges);\n\n    return command;\n  }\n\n  getNewNodePosition() {\n    const editor = CoreEditor.provideEditorInstance();\n    return Coordinates.canvasToModel(editor.lastCursorPositionOfCanvas);\n  }\n\n  applyAdditionalPasteOperations() {\n    return new Command();\n  }\n\n  isPasteAllowedByMode(): boolean {\n    return true;\n  }\n\n  isPasteAvailable(): boolean {\n    return true;\n  }\n\n  scrollForView(): void {}\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\n\nexport class MonomerSequenceNode {\n  constructor(public monomer: BaseMonomer) {}\n\n  public get SubChainConstructor() {\n    return this.monomer.SubChainConstructor;\n  }\n\n  public get firstMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get lastMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get monomers() {\n    return [this.monomer];\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return this.monomer.isModification;\n  }\n}\n","import { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { LayoutMode } from 'application/editor/modes';\nimport { BaseMode } from 'application/editor/modes/BaseMode';\nimport ZoomTool from 'application/editor/tools/Zoom';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport {\n  NodeSelection,\n  NodesSelection,\n  SequenceRenderer,\n} from 'application/render/renderers/sequence/SequenceRenderer';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { Command } from 'domain/entities/Command';\nimport {\n  BaseMonomer,\n  LinkerSequenceNode,\n  Phosphate,\n  RNABase,\n  SequenceType,\n  Sugar,\n  Vec2,\n} from 'domain/entities';\nimport { BaseRenderer } from 'application/render/renderers/internal';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport {\n  ReinitializeModeOperation,\n  RestoreSequenceCaretPositionOperation,\n} from 'application/editor/operations/modes';\nimport assert from 'assert';\nimport {\n  getPeptideLibraryItem,\n  getRnaPartLibraryItem,\n} from 'domain/helpers/rna';\nimport {\n  peptideNaturalAnalogues,\n  RNA_DNA_NON_MODIFIED_PART,\n  rnaDnaNaturalAnalogues,\n} from 'domain/constants/monomers';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { isNumber, uniq } from 'lodash';\nimport { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { Chain } from 'domain/entities/monomer-chains/Chain';\nimport { MonomerSequenceNode } from 'domain/entities/MonomerSequenceNode';\nimport {\n  IRnaPreset,\n  LabeledNodesWithPositionInSequence,\n} from 'application/editor/tools/Tool';\nimport { NewSequenceButton } from 'application/render/renderers/sequence/ui-controls/NewSequenceButton';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\n\nconst naturalAnalogues = uniq([\n  ...rnaDnaNaturalAnalogues,\n  ...peptideNaturalAnalogues,\n]);\n\nenum Direction {\n  Left = 'left',\n  Right = 'right',\n}\n\nexport interface StartNewSequenceEventData {\n  indexOfRowBefore: number;\n}\n\nexport class SequenceMode extends BaseMode {\n  private _isEditMode = false;\n  private _isEditInRNABuilderMode = false;\n  private selectionStarted = false;\n  private selectionStartCaretPosition = -1;\n  private mousemoveCounter = 0;\n\n  constructor(previousMode?: LayoutMode) {\n    super('sequence-layout-mode', previousMode);\n  }\n\n  public get isEditMode() {\n    return this._isEditMode;\n  }\n\n  public set isEditMode(isEditMode) {\n    this._isEditMode = isEditMode;\n  }\n\n  public get isEditInRNABuilderMode() {\n    return this._isEditInRNABuilderMode;\n  }\n\n  public set isEditInRNABuilderMode(isEditInRNABuilderMode) {\n    this._isEditInRNABuilderMode = isEditInRNABuilderMode;\n  }\n\n  public initialize(needScroll = true, needRemoveSelection = true) {\n    const command = super.initialize(needRemoveSelection);\n    const editor = CoreEditor.provideEditorInstance();\n\n    editor.drawingEntitiesManager.clearCanvas();\n\n    const modelChanges = editor.drawingEntitiesManager.reArrangeChains(\n      editor.canvas.width.baseVal.value,\n      true,\n      false,\n    );\n    const zoom = ZoomTool.instance;\n\n    editor.renderersContainer.update(modelChanges);\n\n    const chainsCollection =\n      editor.drawingEntitiesManager.applyMonomersSequenceLayout();\n    const firstMonomerPosition =\n      chainsCollection.firstNode?.monomer.renderer?.scaledMonomerPosition;\n\n    if (firstMonomerPosition && needScroll) {\n      zoom.scrollTo(firstMonomerPosition);\n    }\n\n    modelChanges.merge(command);\n\n    return modelChanges;\n  }\n\n  public turnOnEditMode(\n    sequenceItemRenderer?: BaseSequenceItemRenderer,\n    needToRemoveSelection = true,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditMode = true;\n    this.initialize(false, needToRemoveSelection);\n    if (sequenceItemRenderer) {\n      SequenceRenderer.setCaretPositionByMonomer(\n        sequenceItemRenderer.node.monomer,\n      );\n    }\n    editor.events.toggleSequenceEditMode.dispatch(true);\n  }\n\n  public turnOffEditMode() {\n    if (!this.isEditMode) return;\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditMode = false;\n    this.initialize(false);\n    editor.events.toggleSequenceEditMode.dispatch(false);\n  }\n\n  public turnOnSequenceEditInRNABuilderMode() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditInRNABuilderMode = true;\n    this.initialize(false, false);\n\n    editor.events.toggleSequenceEditInRNABuilderMode.dispatch(true);\n  }\n\n  public turnOffSequenceEditInRNABuilderMode() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    this.isEditInRNABuilderMode = false;\n    this.initialize(false);\n    editor.events.toggleSequenceEditInRNABuilderMode.dispatch(false);\n  }\n\n  public startNewSequence(eventData?: StartNewSequenceEventData) {\n    const currentChainIndex = this.isEditMode\n      ? SequenceRenderer.currentChainIndex\n      : SequenceRenderer.chainsCollection.chains.length - 1;\n    const indexOfRowBefore = isNumber(eventData?.indexOfRowBefore)\n      ? eventData?.indexOfRowBefore\n      : currentChainIndex;\n\n    if (!this.isEditMode) {\n      this.turnOnEditMode();\n    }\n\n    SequenceRenderer.startNewSequence(indexOfRowBefore);\n  }\n\n  public modifySequenceInRnaBuilder(\n    updatedSelection: LabeledNodesWithPositionInSequence[],\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const modelChanges = new Command();\n\n    // Update Nucleotides one by one\n    for (const labeledNucleoelement of updatedSelection) {\n      const nodeIndexOverall = labeledNucleoelement.nodeIndexOverall;\n\n      if (nodeIndexOverall === undefined) return;\n\n      // Create monomerItem(s) based on label\n      let sugarMonomerItem;\n      let baseMonomerItem;\n      let phosphateMonomerItem;\n      if (labeledNucleoelement.sugarLabel) {\n        sugarMonomerItem = getRnaPartLibraryItem(\n          editor,\n          labeledNucleoelement.sugarLabel,\n        );\n      }\n      if (labeledNucleoelement.baseLabel) {\n        baseMonomerItem = getRnaPartLibraryItem(\n          editor,\n          labeledNucleoelement.baseLabel,\n        );\n      }\n      if (labeledNucleoelement.phosphateLabel) {\n        phosphateMonomerItem = getRnaPartLibraryItem(\n          editor,\n          labeledNucleoelement.phosphateLabel,\n        );\n      }\n\n      const currentNode = SequenceRenderer.getNodeByPointer(nodeIndexOverall);\n\n      // Update Sugar monomerItem object\n      if (currentNode.sugar && sugarMonomerItem) {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.modifyMonomerItem(\n            currentNode.sugar,\n            sugarMonomerItem,\n          ),\n        );\n      }\n      // Update Base monomerItem object\n      if (currentNode.rnaBase && baseMonomerItem) {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.modifyMonomerItem(\n            currentNode.rnaBase,\n            baseMonomerItem,\n          ),\n        );\n      }\n\n      // Update monomerItem object or add Phosphate\n      if (phosphateMonomerItem) {\n        // Update Phosphate monomerItem object for Nucleotide\n        if (currentNode instanceof Nucleotide) {\n          modelChanges.merge(\n            editor.drawingEntitiesManager.modifyMonomerItem(\n              currentNode.phosphate,\n              phosphateMonomerItem,\n            ),\n          );\n          // Add Phosphate to Nucleoside\n        } else if (currentNode instanceof Nucleoside) {\n          const sugarR2 = currentNode.sugar.attachmentPointsToBonds.R2;\n          const nextMonomerInSameChain = sugarR2?.secondMonomer;\n\n          // Remove existing bond connection between Nucleoside Sugar and next node in case of any\n          if (sugarR2) {\n            modelChanges.merge(\n              editor.drawingEntitiesManager.deletePolymerBond(sugarR2),\n            );\n          }\n\n          modelChanges.merge(\n            this.bondNodesThroughNewPhosphate(\n              new Vec2(0, 0),\n              currentNode.sugar,\n              nextMonomerInSameChain,\n              labeledNucleoelement.phosphateLabel,\n            ),\n          );\n          // Update Phosphate monomerItem object\n        } else if (currentNode.monomer instanceof Phosphate) {\n          modelChanges.merge(\n            editor.drawingEntitiesManager.modifyMonomerItem(\n              currentNode.monomer,\n              phosphateMonomerItem,\n            ),\n          );\n        }\n      }\n    }\n\n    // Refresh UI\n    modelChanges.addOperation(new ReinitializeModeOperation());\n    editor.renderersContainer.update(modelChanges);\n    history.update(modelChanges);\n  }\n\n  public click(event: MouseEvent) {\n    const eventData = event.target?.__data__;\n    const isClickedOnSequenceItem =\n      eventData instanceof BaseSequenceItemRenderer;\n\n    if (this.isEditMode && isClickedOnSequenceItem) {\n      this.unselectAllEntities();\n    }\n  }\n\n  public doubleClickOnSequenceItem(event: MouseEvent) {\n    if (this.isEditInRNABuilderMode) {\n      return;\n    }\n\n    const eventData = event.target?.__data__ as BaseSequenceItemRenderer;\n\n    this.turnOnEditMode(eventData, false);\n  }\n\n  public mousedownBetweenSequenceItems(event: MouseEvent) {\n    if (this.isEditInRNABuilderMode) {\n      return;\n    }\n\n    const eventData = event.target?.__data__ as BaseSequenceItemRenderer;\n\n    this.turnOnEditMode(eventData);\n    SequenceRenderer.moveCaretForward();\n  }\n\n  public mousedown(event: MouseEvent) {\n    const eventData: BaseRenderer | NewSequenceButton | undefined =\n      event.target?.__data__;\n    const isClickedOnEmptyPlace = !(\n      eventData instanceof NewSequenceButton ||\n      eventData instanceof BaseRenderer\n    );\n    const isEventOnSequenceItem = eventData instanceof BaseSequenceItemRenderer;\n\n    if (isClickedOnEmptyPlace) {\n      this.turnOffEditMode();\n\n      return;\n    }\n\n    if (this.isEditMode && isEventOnSequenceItem && !event.shiftKey) {\n      let sequenceItemBoundingBox = eventData.rootBoundingClientRect;\n\n      // Case when user clicks between symbols. In this case renderer stored in eventData\n      // is already destroyed during rerender in mousedownBetweenSequenceItems handler\n      if (!sequenceItemBoundingBox) {\n        sequenceItemBoundingBox = SequenceRenderer.getRendererByMonomer(\n          eventData.node.monomer,\n        )?.rootBoundingClientRect;\n      }\n\n      const isRightSideOfSequenceItemClicked = sequenceItemBoundingBox\n        ? event.clientX >\n          sequenceItemBoundingBox.x + sequenceItemBoundingBox.width / 2\n        : false;\n\n      SequenceRenderer.setCaretPositionByMonomer(eventData.node.monomer);\n\n      if (isRightSideOfSequenceItemClicked) {\n        SequenceRenderer.moveCaretForward();\n      }\n\n      SequenceRenderer.resetLastUserDefinedCaretPosition();\n\n      this.unselectAllEntities();\n      this.selectionStarted = true;\n      this.selectionStartCaretPosition = SequenceRenderer.caretPosition;\n    }\n  }\n\n  public mousemove(event: MouseEvent) {\n    const eventData = event.target?.__data__;\n    const isEventOnSequenceItem = eventData instanceof BaseSequenceItemRenderer;\n    // this.mousemoveCounter > 1 used here to prevent selection of single monomer\n    // when user just clicked on it during the mousemove event\n    if (\n      this.isEditMode &&\n      isEventOnSequenceItem &&\n      this.selectionStarted &&\n      this.mousemoveCounter > 1\n    ) {\n      const editor = CoreEditor.provideEditorInstance();\n      SequenceRenderer.setCaretPositionBySequenceItemRenderer(\n        eventData as BaseSequenceItemRenderer,\n      );\n\n      let startCaretPosition = this.selectionStartCaretPosition;\n      let endCaretPosition = SequenceRenderer.caretPosition;\n      if (this.selectionStartCaretPosition > SequenceRenderer.caretPosition) {\n        startCaretPosition = SequenceRenderer.caretPosition;\n        endCaretPosition = this.selectionStartCaretPosition;\n      }\n      const monomers = SequenceRenderer.getMonomersByCaretPositionRange(\n        startCaretPosition,\n        endCaretPosition,\n      );\n      this.unselectAllEntities();\n      const { command: modelChanges } =\n        editor.drawingEntitiesManager.getAllSelectedEntitiesForEntities(\n          monomers,\n        );\n      const moveCaretOperation = new RestoreSequenceCaretPositionOperation(\n        this.selectionStartCaretPosition,\n        SequenceRenderer.caretPosition,\n      );\n      modelChanges.addOperation(moveCaretOperation);\n      editor.renderersContainer.update(modelChanges);\n    }\n\n    if (this.selectionStarted) {\n      this.mousemoveCounter++;\n    }\n  }\n\n  mouseup() {\n    if (this.selectionStarted) {\n      this.selectionStarted = false;\n    }\n\n    if (this.isEditMode) {\n      SequenceRenderer.resetLastUserDefinedCaretPosition();\n    }\n    this.mousemoveCounter = 0;\n  }\n\n  private bondNodesThroughNewPhosphate(\n    position: Vec2,\n    previousMonomer: BaseMonomer,\n    nextMonomer?: BaseMonomer,\n    phosphate?: string,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const phosphateLibraryItem = getRnaPartLibraryItem(\n      editor,\n      phosphate || RNA_DNA_NON_MODIFIED_PART.PHOSPHATE,\n    );\n\n    assert(phosphateLibraryItem);\n\n    const modelChanges = editor.drawingEntitiesManager.addMonomer(\n      phosphateLibraryItem,\n      position,\n    );\n\n    const additionalPhosphate = modelChanges.operations[0]\n      .monomer as BaseMonomer;\n\n    modelChanges.merge(\n      this.tryToCreatePolymerBond(previousMonomer, additionalPhosphate),\n    );\n\n    if (nextMonomer) {\n      modelChanges.merge(\n        this.tryToCreatePolymerBond(additionalPhosphate, nextMonomer),\n      );\n    }\n\n    return modelChanges;\n  }\n\n  private handlePeptideNodeAddition(\n    enteredSymbol: string,\n    newNodePosition: Vec2,\n  ) {\n    if (!peptideNaturalAnalogues.includes(enteredSymbol)) {\n      return undefined;\n    }\n\n    const modelChanges = new Command();\n    const editor = CoreEditor.provideEditorInstance();\n    const newPeptideLibraryItem = getPeptideLibraryItem(editor, enteredSymbol);\n\n    assert(newPeptideLibraryItem);\n\n    const peptideAddCommand = editor.drawingEntitiesManager.addMonomer(\n      newPeptideLibraryItem,\n      newNodePosition,\n    );\n\n    const newPeptide = peptideAddCommand.operations[0].monomer as BaseMonomer;\n    const newPeptideNode = new MonomerSequenceNode(newPeptide);\n\n    modelChanges.merge(peptideAddCommand);\n\n    modelChanges.merge(this.insertNewSequenceFragment(newPeptideNode));\n\n    return modelChanges;\n  }\n\n  private handleRnaDnaNodeAddition(\n    enteredSymbol: string,\n    currentNode: SubChainNode,\n    newNodePosition: Vec2,\n  ) {\n    if (!rnaDnaNaturalAnalogues.includes(enteredSymbol)) {\n      return undefined;\n    }\n\n    const modelChanges = new Command();\n    const { modelChanges: addedNodeModelChanges, node: nodeToAdd } =\n      currentNode instanceof Nucleotide || currentNode instanceof Nucleoside\n        ? Nucleotide.createOnCanvas(enteredSymbol, newNodePosition)\n        : Nucleoside.createOnCanvas(enteredSymbol, newNodePosition);\n\n    modelChanges.merge(addedNodeModelChanges);\n\n    modelChanges.merge(this.insertNewSequenceFragment(nodeToAdd));\n\n    return modelChanges;\n  }\n\n  private connectNodes(\n    firstNodeToConnect: SubChainNode | undefined,\n    secondNodeToConnect: SubChainNode | undefined,\n    modelChanges: Command,\n    newNodePosition: Vec2,\n    nextNodeInSameChain?: SubChainNode,\n  ) {\n    if (\n      !firstNodeToConnect ||\n      firstNodeToConnect instanceof EmptySequenceNode ||\n      !secondNodeToConnect ||\n      secondNodeToConnect instanceof EmptySequenceNode\n    ) {\n      return;\n    }\n\n    const editor = CoreEditor.provideEditorInstance();\n    const nodeR2Bond =\n      firstNodeToConnect.lastMonomerInNode.attachmentPointsToBonds?.R2;\n    const nextNodeR1Bond =\n      secondNodeToConnect?.firstMonomerInNode?.attachmentPointsToBonds.R1;\n\n    if (nodeR2Bond || nextNodeR1Bond) {\n      editor.events.error.dispatch(\n        'No available attachment points to establish bonds for merge.',\n      );\n\n      return;\n    }\n\n    if (\n      nextNodeInSameChain instanceof EmptySequenceNode &&\n      firstNodeToConnect instanceof Nucleoside &&\n      (secondNodeToConnect instanceof Nucleotide ||\n        secondNodeToConnect instanceof Nucleoside)\n    ) {\n      modelChanges.merge(\n        this.bondNodesThroughNewPhosphate(\n          newNodePosition,\n          firstNodeToConnect.lastMonomerInNode,\n          secondNodeToConnect.firstMonomerInNode,\n        ),\n      );\n    } else {\n      modelChanges.merge(\n        this.tryToCreatePolymerBond(\n          firstNodeToConnect.lastMonomerInNode,\n          secondNodeToConnect.firstMonomerInNode,\n        ),\n      );\n    }\n  }\n\n  private deleteBondToNextNodeInChain(\n    node: SubChainNode | undefined,\n    modelChanges: Command,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const nodeR2Bond = node?.lastMonomerInNode.attachmentPointsToBonds.R2;\n\n    if (!nodeR2Bond) {\n      return;\n    }\n\n    modelChanges.merge(\n      editor.drawingEntitiesManager.deletePolymerBond(nodeR2Bond),\n    );\n  }\n\n  private finishNodesDeletion(\n    modelChanges: Command,\n    previousCaretPosition: number,\n    newCaretPosition?: number,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const moveCaretOperation = new RestoreSequenceCaretPositionOperation(\n      previousCaretPosition,\n      isNumber(newCaretPosition)\n        ? newCaretPosition\n        : SequenceRenderer.caretPosition,\n    );\n    modelChanges.addOperation(new ReinitializeModeOperation());\n    editor.renderersContainer.update(modelChanges);\n    modelChanges.addOperation(moveCaretOperation);\n    history.update(modelChanges);\n    this.selectionStartCaretPosition = -1;\n    SequenceRenderer.resetLastUserDefinedCaretPosition();\n  }\n\n  private tryToCreatePolymerBond(\n    firstMonomer: BaseMonomer,\n    secondMonomer: BaseMonomer,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n\n    const isConnectionPossible = this.areR1R2Free(secondMonomer, firstMonomer);\n\n    if (!isConnectionPossible) {\n      this.showMergeWarningModal();\n      return new Command();\n    }\n\n    return editor.drawingEntitiesManager.createPolymerBond(\n      firstMonomer,\n      secondMonomer,\n      AttachmentPointName.R2,\n      AttachmentPointName.R1,\n    );\n  }\n\n  private handleNodesDeletion(selections: NodesSelection) {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges = new Command();\n\n    selections.forEach((selectionRange) => {\n      const selectionStartNode = selectionRange[0].node;\n      const selectionEndNode = selectionRange[selectionRange.length - 1].node;\n      let isPhosphateAdditionalyDeleted = false;\n\n      const nodeBeforeSelection =\n        SequenceRenderer.getPreviousNode(selectionStartNode);\n      const nodeAfterSelection = SequenceRenderer.getNextNode(selectionEndNode);\n      const nodeInSameChainBeforeSelection =\n        SequenceRenderer.getPreviousNodeInSameChain(selectionStartNode);\n      const nodeInSameChainAfterSelection =\n        SequenceRenderer.getNextNodeInSameChain(selectionEndNode);\n\n      if (\n        !nodeInSameChainBeforeSelection &&\n        nodeAfterSelection &&\n        !(nodeAfterSelection instanceof EmptySequenceNode)\n      ) {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.moveMonomer(\n            nodeAfterSelection.monomer,\n            selectionStartNode.monomer.position,\n          ),\n        );\n      }\n\n      if (\n        !nodeBeforeSelection ||\n        nodeBeforeSelection instanceof EmptySequenceNode\n      ) {\n        return;\n      }\n\n      if (\n        nodeBeforeSelection === nodeInSameChainBeforeSelection &&\n        nodeBeforeSelection instanceof Nucleotide &&\n        !(nodeInSameChainAfterSelection instanceof Nucleotide) &&\n        !(nodeInSameChainAfterSelection instanceof Nucleoside)\n      ) {\n        // delete phosphate from last nucleotide\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deleteMonomer(\n            nodeBeforeSelection.lastMonomerInNode,\n          ),\n        );\n        // TODO get rid of this boolean\n        isPhosphateAdditionalyDeleted = true;\n      }\n\n      if (\n        !nodeAfterSelection ||\n        nodeAfterSelection instanceof EmptySequenceNode ||\n        (!this.isEditMode &&\n          (nodeAfterSelection !== nodeInSameChainAfterSelection ||\n            nodeBeforeSelection !== nodeInSameChainBeforeSelection))\n      ) {\n        return;\n      }\n\n      if (\n        nodeBeforeSelection instanceof Nucleoside &&\n        nodeAfterSelection instanceof Nucleotide\n      ) {\n        modelChanges.merge(\n          this.bondNodesThroughNewPhosphate(\n            this.getNewSequenceItemPosition(nodeBeforeSelection),\n            nodeBeforeSelection.lastMonomerInNode,\n            nodeAfterSelection.firstMonomerInNode,\n          ),\n        );\n      } else {\n        modelChanges.merge(\n          this.tryToCreatePolymerBond(\n            isPhosphateAdditionalyDeleted\n              ? nodeBeforeSelection.firstMonomerInNode\n              : nodeBeforeSelection.lastMonomerInNode,\n            nodeAfterSelection.firstMonomerInNode,\n          ),\n        );\n      }\n    });\n\n    return modelChanges;\n  }\n\n  get keyboardEventHandlers() {\n    const deleteNode = (direction: Direction) => {\n      const editor = CoreEditor.provideEditorInstance();\n      const nodeToDelete =\n        direction === Direction.Left\n          ? SequenceRenderer.previousNode\n          : SequenceRenderer.getNodeByPointer(SequenceRenderer.caretPosition);\n      const caretPosition =\n        direction === Direction.Left\n          ? (SequenceRenderer.previousCaretPosition as number)\n          : SequenceRenderer.caretPosition;\n      const selections = SequenceRenderer.selections;\n      const modelChanges = new Command();\n      let nodesToDelete: NodesSelection;\n\n      if (selections.length) {\n        modelChanges.merge(this.deleteSelectedDrawingEntities());\n        nodesToDelete = selections;\n      } else if (nodeToDelete) {\n        nodeToDelete.monomers.forEach((monomer) => {\n          modelChanges.merge(\n            editor.drawingEntitiesManager.deleteMonomer(monomer),\n          );\n        });\n        nodesToDelete = [\n          [\n            {\n              node: nodeToDelete,\n              nodeIndexOverall: caretPosition,\n            },\n          ],\n        ];\n      } else {\n        return;\n      }\n\n      modelChanges.merge(this.handleNodesDeletion(nodesToDelete));\n\n      this.finishNodesDeletion(\n        modelChanges,\n        nodesToDelete[0][0].nodeIndexOverall,\n        nodesToDelete[0][0].nodeIndexOverall,\n      );\n\n      if (\n        SequenceRenderer.caretPosition === 0 &&\n        SequenceRenderer.chainsCollection.chains.length === 0\n      ) {\n        this.startNewSequence();\n      }\n    };\n\n    return {\n      delete: {\n        shortcut: ['Delete'],\n        handler: () => deleteNode(Direction.Right),\n      },\n      backspace: {\n        shortcut: ['Backspace'],\n        handler: () => deleteNode(Direction.Left),\n      },\n      'turn-off-edit-mode': {\n        shortcut: ['Escape'],\n        handler: () => {\n          this.turnOffEditMode();\n        },\n      },\n      'start-new-sequence': {\n        shortcut: ['Enter'],\n        handler: () => {\n          this.unselectAllEntities();\n          this.startNewSequence();\n        },\n      },\n      'move-caret-up': {\n        shortcut: ['ArrowUp'],\n        handler: () => {\n          SequenceRenderer.moveCaretUp();\n        },\n      },\n      'move-caret-down': {\n        shortcut: ['ArrowDown'],\n        handler: () => {\n          SequenceRenderer.moveCaretDown();\n        },\n      },\n      'move-caret-forward': {\n        shortcut: ['ArrowRight'],\n        handler: () => {\n          if (!this.isEditMode) {\n            return;\n          }\n          SequenceRenderer.moveCaretForward();\n          SequenceRenderer.resetLastUserDefinedCaretPosition();\n        },\n      },\n      'move-caret-back': {\n        shortcut: ['ArrowLeft'],\n        handler: () => {\n          if (!this.isEditMode) {\n            return;\n          }\n          SequenceRenderer.moveCaretBack();\n          SequenceRenderer.resetLastUserDefinedCaretPosition();\n        },\n      },\n      'add-sequence-item': {\n        shortcut: [\n          ...naturalAnalogues,\n          ...naturalAnalogues.map((naturalAnalogue) =>\n            naturalAnalogue.toLowerCase(),\n          ),\n        ],\n        handler: (event) => {\n          if (\n            SequenceRenderer.chainsCollection.length === 1 &&\n            SequenceRenderer.chainsCollection.firstNode instanceof\n              EmptySequenceNode &&\n            !this.isEditMode\n          ) {\n            this.turnOnEditMode();\n            SequenceRenderer.setCaretPosition(0);\n          }\n\n          if (!this.isEditMode) {\n            return;\n          }\n\n          if (!this.deleteSelection()) {\n            return;\n          }\n\n          const enteredSymbol = event.code.replace('Key', '');\n          const editor = CoreEditor.provideEditorInstance();\n          const history = new EditorHistory(editor);\n          const modelChanges = this.insertNewSequenceItem(\n            editor,\n            enteredSymbol,\n          );\n\n          // Case when user type symbol that does not exist in current sequence type mode\n          if (!modelChanges) {\n            return;\n          }\n\n          modelChanges.addOperation(new ReinitializeModeOperation());\n          editor.renderersContainer.update(modelChanges);\n          modelChanges.addOperation(SequenceRenderer.moveCaretForward());\n          history.update(modelChanges);\n        },\n      },\n      'sequence-edit-select': {\n        shortcut: [\n          'Shift+ArrowLeft',\n          'Shift+ArrowRight',\n          'Shift+ArrowUp',\n          'Shift+ArrowDown',\n        ],\n        handler: (event) => {\n          const arrowKey = event.key;\n\n          if (\n            SequenceRenderer.caretPosition === 0 &&\n            arrowKey === 'ArrowLeft'\n          ) {\n            return;\n          }\n\n          this.selectionStartCaretPosition =\n            this.selectionStartCaretPosition !== -1\n              ? this.selectionStartCaretPosition\n              : SequenceRenderer.caretPosition;\n          SequenceRenderer.shiftArrowSelectionInEditMode(event);\n\n          if (arrowKey === 'ArrowLeft' || arrowKey === 'ArrowRight') {\n            SequenceRenderer.resetLastUserDefinedCaretPosition();\n          }\n        },\n      },\n    };\n  }\n\n  private deleteSelection() {\n    const selections = SequenceRenderer.selections;\n\n    if (selections.length > 1) {\n      return false;\n    }\n\n    if (selections.length === 1) {\n      const deletionModelChanges = this.deleteSelectedDrawingEntities();\n\n      deletionModelChanges.merge(this.handleNodesDeletion(selections));\n      this.finishNodesDeletion(\n        deletionModelChanges,\n        SequenceRenderer.caretPosition,\n        selections[0][0].nodeIndexOverall,\n      );\n    }\n    return true;\n  }\n\n  isPasteAllowedByMode(drawingEntitiesManager: DrawingEntitiesManager) {\n    const editor = CoreEditor.provideEditorInstance();\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...drawingEntitiesManager.monomers.values(),\n    ]);\n    if (!this.isEditMode) {\n      return true;\n    }\n\n    if (chainsCollection.chains.length > 1) {\n      editor.events.error.dispatch(\n        'Paste of several fragments is prohibited in text-editing mode.',\n      );\n      return false;\n    }\n\n    if (chainsCollection.chains.length === 0) {\n      editor.events.error.dispatch('No copied fragments.');\n      return false;\n    }\n\n    if (!this.deleteSelection()) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private isR1Free(entity: SubChainNode | BaseMonomer): boolean {\n    if (entity instanceof BaseMonomer) {\n      return entity.attachmentPointsToBonds.R1 === null;\n    }\n\n    return entity?.firstMonomerInNode?.attachmentPointsToBonds?.R1 === null;\n  }\n\n  private isR2Free(entity?: SubChainNode | BaseMonomer): boolean {\n    if (entity instanceof BaseMonomer) {\n      return entity.attachmentPointsToBonds.R2 === null;\n    }\n\n    return entity?.lastMonomerInNode?.attachmentPointsToBonds?.R2 === null;\n  }\n\n  private areR1R2Free(\n    firstEntity: SubChainNode | BaseMonomer,\n    lastEntity: SubChainNode | BaseMonomer,\n  ): boolean {\n    return this.isR1Free(firstEntity) && this.isR2Free(lastEntity);\n  }\n\n  private isConnectionPossible(\n    firstMonomer: BaseMonomer,\n    firstMonomerAttachmentPoint: AttachmentPointName,\n    secondMonomer: BaseMonomer,\n    secondMonomerAttachmentPoint: AttachmentPointName,\n  ) {\n    return (\n      firstMonomer.attachmentPointsToBonds[firstMonomerAttachmentPoint] ===\n        null &&\n      secondMonomer.attachmentPointsToBonds[secondMonomerAttachmentPoint] ===\n        null\n    );\n  }\n\n  isPasteAvailable(drawingEntitiesManager: DrawingEntitiesManager) {\n    if (!this.isEditMode) {\n      return true;\n    }\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...drawingEntitiesManager.monomers.values(),\n    ]);\n    const currentNode = SequenceRenderer.currentEdittingNode;\n    const previousNodeInSameChain = SequenceRenderer.previousNodeInSameChain;\n    const lastNodeOfNewFragment = chainsCollection.lastNode;\n    const firstNodeOfNewFragment = chainsCollection.firstNode;\n    const isPasteInEnd =\n      currentNode instanceof EmptySequenceNode || !currentNode;\n    const isPasteInStart = !previousNodeInSameChain;\n    if (isPasteInEnd && !previousNodeInSameChain) return true;\n    if (isPasteInEnd) {\n      return (\n        this.isR1Free(firstNodeOfNewFragment) &&\n        this.isR2Free(previousNodeInSameChain)\n      );\n    }\n    if (isPasteInStart) {\n      return this.isR2Free(lastNodeOfNewFragment) && this.isR1Free(currentNode);\n    }\n    return this.areR1R2Free(firstNodeOfNewFragment, lastNodeOfNewFragment);\n  }\n\n  applyAdditionalPasteOperations(\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    if (!this.isEditMode) {\n      const command = new Command();\n\n      command.addOperation(new ReinitializeModeOperation());\n\n      return command;\n    }\n\n    const chainsCollection = ChainsCollection.fromMonomers([\n      ...drawingEntitiesManager.monomers.values(),\n    ]);\n\n    const currentSequence = SequenceRenderer.currentChain;\n\n    const currentSequenceHasPhosphate =\n      currentSequence?.lastNonEmptyNode?.monomer?.monomerItem?.props?.Name ===\n      'Phosphate';\n\n    let nextCaretPosition =\n      SequenceRenderer.caretPosition + chainsCollection.length;\n\n    if (currentSequenceHasPhosphate) {\n      nextCaretPosition -= 1;\n    }\n\n    const modelChanges = this.insertNewSequenceFragment(chainsCollection);\n\n    modelChanges.addOperation(new ReinitializeModeOperation());\n\n    modelChanges.addOperation(\n      new RestoreSequenceCaretPositionOperation(\n        SequenceRenderer.caretPosition,\n        nextCaretPosition,\n      ),\n    );\n\n    return modelChanges;\n  }\n\n  private preserveSideChainConnections(selection: NodeSelection) {\n    if (selection.node.monomer.sideConnections.length === 0) {\n      return null;\n    }\n\n    const sideConnectionsData: Array<{\n      firstMonomerAttachmentPointName: AttachmentPointName;\n      secondMonomer: BaseMonomer;\n      secondMonomerAttachmentPointName: AttachmentPointName;\n    }> = [];\n\n    Object.entries(selection.node.monomer.attachmentPointsToBonds).forEach(\n      ([key, bond]) => {\n        if (!bond || !bond.isSideChainConnection) {\n          return;\n        }\n\n        const secondMonomer = bond.getAnotherMonomer(selection.node.monomer);\n        if (!secondMonomer?.attachmentPointsToBonds) {\n          return;\n        }\n\n        const secondMonomerBondData = Object.entries(\n          secondMonomer?.attachmentPointsToBonds,\n        ).find(([, value]) => value === bond);\n\n        if (!secondMonomerBondData) {\n          return;\n        }\n\n        const [secondMonomerAttachmentPointName] = secondMonomerBondData;\n\n        sideConnectionsData.push({\n          firstMonomerAttachmentPointName: key as AttachmentPointName,\n          secondMonomer,\n          secondMonomerAttachmentPointName:\n            secondMonomerAttachmentPointName as AttachmentPointName,\n        });\n      },\n    );\n\n    return sideConnectionsData;\n  }\n\n  private replaceSelectionWithMonomer(\n    monomerItem: MonomerItemType,\n    selection: NodeSelection,\n    modelChanges: Command,\n    previousSelectionNode?: SubChainNode,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const nextNode = SequenceRenderer.getNextNodeInSameChain(selection.node);\n    const position = selection.node.monomer.position;\n    const sideChainConnections = this.preserveSideChainConnections(selection);\n    const hasPreviousNodeInChain =\n      selection.node.firstMonomerInNode.attachmentPointsToBonds.R1;\n    const hasNextNodeInChain =\n      selection.node.lastMonomerInNode.attachmentPointsToBonds.R2;\n\n    selection.node.monomers.forEach((monomer) => {\n      modelChanges.merge(editor.drawingEntitiesManager.deleteMonomer(monomer));\n      monomer.forEachBond((polymerBond) => {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deletePolymerBond(polymerBond),\n        );\n      });\n    });\n\n    const monomerAddCommand = editor.drawingEntitiesManager.addMonomer(\n      monomerItem,\n      position,\n    );\n    const newMonomer = monomerAddCommand.operations[0].monomer as BaseMonomer;\n    const newMonomerSequenceNode = new MonomerSequenceNode(newMonomer);\n\n    modelChanges.merge(monomerAddCommand);\n    modelChanges.merge(\n      this.insertNewSequenceFragment(\n        newMonomerSequenceNode,\n        nextNode || null,\n        previousSelectionNode,\n        Boolean(hasPreviousNodeInChain),\n        Boolean(hasNextNodeInChain),\n      ),\n    );\n\n    // TODO: Check for multiple side chain connections in Linkers\n    sideChainConnections?.forEach((sideConnectionData) => {\n      const {\n        firstMonomerAttachmentPointName,\n        secondMonomer,\n        secondMonomerAttachmentPointName,\n      } = sideConnectionData;\n      if (\n        !this.isConnectionPossible(\n          newMonomer,\n          firstMonomerAttachmentPointName,\n          secondMonomer,\n          secondMonomerAttachmentPointName,\n        )\n      ) {\n        return;\n      }\n\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          newMonomer,\n          secondMonomer,\n          firstMonomerAttachmentPointName,\n          secondMonomerAttachmentPointName,\n        ),\n      );\n    });\n\n    return newMonomerSequenceNode;\n  }\n\n  private replaceSelectionsWithMonomer(\n    selections: NodesSelection,\n    monomerItem: MonomerItemType,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const modelChanges = new Command();\n\n    selections.forEach((selectionRange) => {\n      let previousReplacedNode = SequenceRenderer.getPreviousNodeInSameChain(\n        selectionRange[0].node,\n      );\n\n      selectionRange.forEach((nodeSelection) => {\n        if (nodeSelection.node instanceof EmptySequenceNode) {\n          return;\n        }\n\n        previousReplacedNode = this.replaceSelectionWithMonomer(\n          monomerItem,\n          nodeSelection,\n          modelChanges,\n          previousReplacedNode,\n        );\n      });\n    });\n\n    modelChanges.addOperation(new ReinitializeModeOperation());\n    editor.renderersContainer.update(modelChanges);\n    modelChanges.setUndoOperationReverse();\n    modelChanges.setUndoOperationsByPriority();\n    history.update(modelChanges);\n  }\n\n  private checkIfNewMonomerCouldEstablishConnections(\n    nodeSelection: NodeSelection,\n    monomerItem: MonomerItemType | undefined,\n    sideChainConnections?: boolean,\n  ) {\n    if (!monomerItem?.attachmentPoints) {\n      return false;\n    }\n\n    const newMonomerAttachmentPoints =\n      BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n        monomerItem.attachmentPoints,\n      );\n    // Side chains\n    // node.selection.node.monomers.attachmentPoints\n    const oldMonomerBonds: [string, PolymerBond | null][] = sideChainConnections\n      ? Object.entries(nodeSelection.node.monomer.attachmentPointsToBonds)\n      : [\n          [\n            AttachmentPointName.R1 as string,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            nodeSelection.node.firstMonomerInNode.attachmentPointsToBonds.R1!,\n          ],\n          [\n            AttachmentPointName.R2 as string,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            nodeSelection.node.lastMonomerInNode.attachmentPointsToBonds.R2!,\n          ],\n        ];\n    // Backbone\n    // nodeSelection.node.firstMonomerInNode.attachmentPointsToBonds.R1\n    // nodeSelection.node.lastMonomerInNode.attachmentPointsToBonds.R2\n    return oldMonomerBonds.every(([key, bond]) => {\n      if (\n        !bond ||\n        (sideChainConnections\n          ? !bond.isSideChainConnection\n          : !bond.isBackBoneChainConnection)\n      ) {\n        return true;\n      }\n\n      return newMonomerAttachmentPoints.attachmentPointsList.includes(\n        key as AttachmentPointName,\n      );\n    });\n  }\n\n  private selectionsContainLinkerNode(selections: NodesSelection) {\n    return selections.some((selectionRange) =>\n      selectionRange.some(\n        (nodeSelection) => nodeSelection.node instanceof LinkerSequenceNode,\n      ),\n    );\n  }\n\n  private selectionsCantPreserveConnectionsWithMonomer(\n    selections: NodesSelection,\n    monomerItem: MonomerItemType,\n    sideChainConnections?: boolean,\n  ) {\n    return selections.some((selectionRange) =>\n      selectionRange.some(\n        (nodeSelection) =>\n          !this.checkIfNewMonomerCouldEstablishConnections(\n            nodeSelection,\n            monomerItem,\n            sideChainConnections,\n          ),\n      ),\n    );\n  }\n\n  private presetHasNeededAttachmentPoints(preset) {\n    // TODO: This check is not universal, it won't allow to put presets without R1 in sugar, revisit later\n    if (!preset.sugar) {\n      return false;\n    }\n\n    const sugarHasR1 = BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n      preset.sugar.attachmentPoints,\n    ).attachmentPointsList.includes(AttachmentPointName.R1);\n\n    if (preset.phosphate) {\n      const phosphateHasR2 =\n        BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n          preset.phosphate.attachmentPoints,\n        ).attachmentPointsList.includes(AttachmentPointName.R2);\n\n      return sugarHasR1 && phosphateHasR2;\n    }\n\n    return sugarHasR1;\n  }\n\n  private selectionsCantPreserveConnectionsWithPreset(\n    selections: NodesSelection,\n    preset: IRnaPreset,\n    sideChainConnections?: boolean,\n  ) {\n    return selections.some((selectionRange) =>\n      selectionRange.some((nodeSelection) =>\n        [preset.sugar, preset.base, preset.phosphate].some(\n          (monomer) =>\n            monomer &&\n            !this.checkIfNewMonomerCouldEstablishConnections(\n              nodeSelection,\n              monomer,\n              sideChainConnections,\n            ),\n        ),\n      ),\n    );\n  }\n\n  public insertMonomerFromLibrary(monomerItem: MonomerItemType) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const modelChanges = new Command();\n    const selections = SequenceRenderer.selections;\n    const previousNodeInSameChain = SequenceRenderer.previousNodeInSameChain;\n    const nextNodeInSameChain = SequenceRenderer.nextNodeInSameChain;\n    const newMonomerAttachmentPoints =\n      BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n        monomerItem.attachmentPoints || [],\n      );\n\n    if (selections.length > 0) {\n      if (\n        this.selectionsCantPreserveConnectionsWithMonomer(\n          selections,\n          monomerItem,\n        )\n      ) {\n        this.showMergeWarningModal();\n        return;\n      }\n\n      if (this.selectionsContainLinkerNode(selections)) {\n        editor.events.openConfirmationDialog.dispatch({\n          confirmationText:\n            'Symbol @ can represent multiple monomers, all of them are going to be deleted. Do you want to proceed?',\n          onConfirm: () => {\n            this.replaceSelectionsWithMonomer(selections, monomerItem);\n          },\n        });\n      } else if (\n        this.selectionsCantPreserveConnectionsWithMonomer(\n          selections,\n          monomerItem,\n          true,\n        )\n      ) {\n        editor.events.openConfirmationDialog.dispatch({\n          confirmationText:\n            'Side chain connections will be deleted during replacement. Do you want to proceed?',\n          onConfirm: () => {\n            this.replaceSelectionsWithMonomer(selections, monomerItem);\n          },\n        });\n      } else {\n        this.replaceSelectionsWithMonomer(selections, monomerItem);\n      }\n    } else if (\n      (previousNodeInSameChain &&\n        (!previousNodeInSameChain?.lastMonomerInNode.hasAttachmentPoint(\n          AttachmentPointName.R2,\n        ) ||\n          !newMonomerAttachmentPoints.attachmentPointsList.includes(\n            AttachmentPointName.R1,\n          ))) ||\n      (nextNodeInSameChain &&\n        (!nextNodeInSameChain?.firstMonomerInNode.hasAttachmentPoint(\n          AttachmentPointName.R1,\n        ) ||\n          !newMonomerAttachmentPoints.attachmentPointsList.includes(\n            AttachmentPointName.R2,\n          )))\n    ) {\n      this.showMergeWarningModal();\n    } else {\n      const newNodePosition = this.getNewNodePosition();\n\n      const monomerAddCommand = editor.drawingEntitiesManager.addMonomer(\n        monomerItem,\n        newNodePosition,\n      );\n      const newMonomer = monomerAddCommand.operations[0].monomer as BaseMonomer;\n      const newMonomerSequenceNode = new MonomerSequenceNode(newMonomer);\n\n      modelChanges.merge(monomerAddCommand);\n      modelChanges.merge(\n        this.insertNewSequenceFragment(newMonomerSequenceNode),\n      );\n\n      modelChanges.addOperation(new ReinitializeModeOperation());\n      editor.renderersContainer.update(modelChanges);\n      SequenceRenderer.moveCaretForward();\n      history.update(modelChanges);\n    }\n  }\n\n  private createRnaPresetNode(preset: IRnaPreset, position: Vec2) {\n    const editor = CoreEditor.provideEditorInstance();\n    const { base: rnaBase, sugar, phosphate } = preset;\n\n    if (!sugar) {\n      return;\n    }\n\n    const rnaPresetAddResult = editor.drawingEntitiesManager.addRnaPreset({\n      sugar,\n      sugarPosition: position,\n      rnaBase,\n      rnaBasePosition: position,\n      phosphate,\n      phosphatePosition: position,\n    });\n\n    const sugarMonomer = rnaPresetAddResult.monomers.find(\n      (monomer) => monomer instanceof Sugar,\n    ) as Sugar;\n    const rnaBaseMonomer = rnaPresetAddResult.monomers.find(\n      (monomer) => monomer instanceof RNABase,\n    ) as RNABase;\n    const phosphateMonomer = rnaPresetAddResult.monomers.find(\n      (monomer) => monomer instanceof Phosphate,\n    ) as Phosphate;\n\n    let newPresetNode: Nucleotide | Nucleoside | LinkerSequenceNode;\n\n    if (!rnaBase) {\n      newPresetNode = new LinkerSequenceNode(sugarMonomer);\n    } else if (!phosphateMonomer) {\n      newPresetNode = new Nucleoside(sugarMonomer, rnaBaseMonomer);\n    } else {\n      newPresetNode = new Nucleotide(\n        sugarMonomer,\n        rnaBaseMonomer,\n        phosphateMonomer,\n      );\n    }\n\n    return {\n      newPresetNode,\n      rnaPresetAddModelChanges: rnaPresetAddResult.command,\n    };\n  }\n\n  private replaceSelectionWithPreset(\n    preset: IRnaPreset,\n    selection: NodeSelection,\n    modelChanges: Command,\n    previousSelectionNode?: SubChainNode,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const nextNode = SequenceRenderer.getNextNodeInSameChain(selection.node);\n    const position = selection.node.monomer.position;\n    const hasPreviousNodeInChain =\n      selection.node.firstMonomerInNode.attachmentPointsToBonds.R1;\n    const hasNextNodeInChain =\n      selection.node.lastMonomerInNode.attachmentPointsToBonds.R2;\n\n    const sideChainConnections = this.preserveSideChainConnections(selection);\n\n    selection.node.monomers.forEach((monomer) => {\n      modelChanges.merge(editor.drawingEntitiesManager.deleteMonomer(monomer));\n      monomer.forEachBond((polymerBond) => {\n        modelChanges.merge(\n          editor.drawingEntitiesManager.deletePolymerBond(polymerBond),\n        );\n      });\n    });\n\n    const rnaAdditionResult = this.createRnaPresetNode(preset, position);\n\n    if (!rnaAdditionResult) {\n      return;\n    }\n\n    const { newPresetNode, rnaPresetAddModelChanges } = rnaAdditionResult;\n\n    modelChanges.merge(rnaPresetAddModelChanges);\n    modelChanges.merge(\n      this.insertNewSequenceFragment(\n        newPresetNode,\n        nextNode || null,\n        previousSelectionNode,\n        Boolean(hasPreviousNodeInChain),\n        Boolean(hasNextNodeInChain),\n      ),\n    );\n\n    // TODO: This check breaks some side chains (e.g. Sugar-to-Sugar for Nucleotides), need another way of preserving connections\n    const monomerForSideConnections =\n      newPresetNode instanceof Nucleotide\n        ? newPresetNode.phosphate\n        : newPresetNode instanceof Nucleoside\n        ? newPresetNode.sugar\n        : newPresetNode.monomer;\n\n    sideChainConnections?.forEach((sideConnectionData) => {\n      const {\n        firstMonomerAttachmentPointName,\n        secondMonomer,\n        secondMonomerAttachmentPointName,\n      } = sideConnectionData;\n      if (\n        !this.isConnectionPossible(\n          monomerForSideConnections,\n          firstMonomerAttachmentPointName,\n          secondMonomer,\n          secondMonomerAttachmentPointName,\n        )\n      ) {\n        return;\n      }\n\n      modelChanges.merge(\n        editor.drawingEntitiesManager.createPolymerBond(\n          monomerForSideConnections,\n          secondMonomer,\n          firstMonomerAttachmentPointName,\n          secondMonomerAttachmentPointName,\n        ),\n      );\n    });\n\n    return newPresetNode;\n  }\n\n  private replaceSelectionsWithPreset(\n    selections: NodesSelection,\n    preset: IRnaPreset,\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const modelChanges = new Command();\n\n    selections.forEach((selectionRange) => {\n      let previousReplacedNode = SequenceRenderer.getPreviousNodeInSameChain(\n        selectionRange[0].node,\n      );\n\n      selectionRange.forEach((nodeSelection) => {\n        if (nodeSelection.node instanceof EmptySequenceNode) {\n          return;\n        }\n\n        previousReplacedNode = this.replaceSelectionWithPreset(\n          preset,\n          nodeSelection,\n          modelChanges,\n          previousReplacedNode,\n        );\n      });\n    });\n\n    modelChanges.addOperation(new ReinitializeModeOperation());\n    editor.renderersContainer.update(modelChanges);\n    modelChanges.setUndoOperationReverse();\n    modelChanges.setUndoOperationsByPriority();\n    history.update(modelChanges);\n  }\n\n  public insertPresetFromLibrary(preset: IRnaPreset) {\n    const editor = CoreEditor.provideEditorInstance();\n    const history = new EditorHistory(editor);\n    const modelChanges = new Command();\n    const selections = SequenceRenderer.selections;\n\n    if (selections.length > 0) {\n      if (!this.presetHasNeededAttachmentPoints(preset)) {\n        this.showMergeWarningModal();\n        return;\n      }\n\n      if (this.selectionsContainLinkerNode(selections)) {\n        editor.events.openConfirmationDialog.dispatch({\n          confirmationText:\n            'Symbol @ can represent multiple monomers, all of them are going to be deleted. Do you want to proceed?',\n          onConfirm: () => {\n            this.replaceSelectionsWithPreset(selections, preset);\n          },\n        });\n      } else if (\n        this.selectionsCantPreserveConnectionsWithPreset(\n          selections,\n          preset,\n          true,\n        )\n      ) {\n        editor.events.openConfirmationDialog.dispatch({\n          confirmationText:\n            'Side chain connections will be deleted during replacement. Do you want to proceed?',\n          onConfirm: () => {\n            this.replaceSelectionsWithPreset(selections, preset);\n          },\n        });\n      } else {\n        this.replaceSelectionsWithPreset(selections, preset);\n      }\n    } else {\n      const newNodePosition = this.getNewNodePosition();\n\n      const rnaAdditionResult = this.createRnaPresetNode(\n        preset,\n        newNodePosition,\n      );\n\n      if (!rnaAdditionResult) {\n        return;\n      }\n\n      modelChanges.merge(rnaAdditionResult.rnaPresetAddModelChanges);\n      modelChanges.merge(\n        this.insertNewSequenceFragment(rnaAdditionResult.newPresetNode),\n      );\n\n      modelChanges.addOperation(new ReinitializeModeOperation());\n      editor.renderersContainer.update(modelChanges);\n      SequenceRenderer.moveCaretForward();\n      history.update(modelChanges);\n    }\n  }\n\n  private insertNewSequenceItem(editor: CoreEditor, enteredSymbol: string) {\n    const currentNode = SequenceRenderer.currentEdittingNode;\n    const newNodePosition = this.getNewNodePosition();\n    let modelChanges;\n    const previousNodeInSameChain = SequenceRenderer.previousNodeInSameChain;\n\n    if (\n      currentNode instanceof MonomerSequenceNode &&\n      currentNode.monomer instanceof Phosphate\n    ) {\n      return;\n    }\n\n    if (currentNode instanceof EmptySequenceNode && previousNodeInSameChain) {\n      if (!this.isR2Free(previousNodeInSameChain)) {\n        this.showMergeWarningModal();\n        return;\n      }\n    }\n    if (\n      !previousNodeInSameChain &&\n      !(currentNode instanceof EmptySequenceNode) &&\n      currentNode\n    ) {\n      if (!this.isR1Free(currentNode)) {\n        this.showMergeWarningModal();\n        return;\n      }\n    }\n    if (editor.sequenceTypeEnterMode === SequenceType.PEPTIDE) {\n      modelChanges = this.handlePeptideNodeAddition(\n        enteredSymbol,\n        newNodePosition,\n      );\n    } else {\n      modelChanges = this.handleRnaDnaNodeAddition(\n        enteredSymbol,\n        currentNode,\n        newNodePosition,\n      );\n    }\n    return modelChanges;\n  }\n\n  private showMergeWarningModal() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    editor.events.openErrorModal.dispatch({\n      errorTitle: 'Error Message',\n      errorMessage:\n        'It is impossible to merge fragments. Attachment point to establish bonds are not available.',\n    });\n  }\n\n  private insertNewSequenceFragment(\n    chainsCollectionOrNode: ChainsCollection | SubChainNode,\n    nextNodeToConnect?: SubChainNode | null,\n    previousNodeToConnect?: SubChainNode,\n    needConnectWithPreviousNodeInChain = true,\n    needConnectWithNextNodeInChain = true,\n  ) {\n    const chainsCollection =\n      chainsCollectionOrNode instanceof ChainsCollection\n        ? chainsCollectionOrNode\n        : new ChainsCollection().add(\n            new Chain().addNode(chainsCollectionOrNode),\n          );\n    const currentNode =\n      nextNodeToConnect === null\n        ? undefined\n        : nextNodeToConnect || SequenceRenderer.currentEdittingNode;\n    const previousNodeInSameChain =\n      previousNodeToConnect || SequenceRenderer.previousNodeInSameChain;\n    const modelChanges = new Command();\n    const lastNodeOfNewFragment = chainsCollection.lastNode;\n    const firstNodeOfNewFragment = chainsCollection.firstNode;\n    const newNodePosition = this.getNewNodePosition();\n\n    this.deleteBondToNextNodeInChain(previousNodeInSameChain, modelChanges);\n\n    if (needConnectWithPreviousNodeInChain) {\n      this.connectNodes(\n        previousNodeInSameChain,\n        firstNodeOfNewFragment,\n        modelChanges,\n        newNodePosition,\n        currentNode,\n      );\n    }\n\n    if (needConnectWithNextNodeInChain) {\n      this.connectNodes(\n        lastNodeOfNewFragment,\n        currentNode,\n        modelChanges,\n        newNodePosition,\n      );\n    }\n\n    return modelChanges;\n  }\n\n  getNewNodePosition() {\n    if (this.isEditMode) {\n      const currentNode = SequenceRenderer.currentEdittingNode;\n      const previousNode = SequenceRenderer.previousFromCurrentEdittingMonomer;\n      const nodeBeforePreviousNode = previousNode\n        ? SequenceRenderer.getPreviousNodeInSameChain(previousNode)\n        : undefined;\n      const newNodePosition = this.getNewSequenceItemPosition(\n        previousNode,\n        nodeBeforePreviousNode,\n        currentNode,\n      );\n      return newNodePosition;\n    } else {\n      return SequenceRenderer.chainsCollection.chains.length > 0\n        ? SequenceRenderer.getNextChainPosition()\n        : new Vec2(0, 0);\n    }\n  }\n\n  private deleteSelectedDrawingEntities() {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges = new Command();\n    editor.drawingEntitiesManager.selectedEntities.forEach(([, entity]) => {\n      modelChanges.merge(\n        editor.drawingEntitiesManager.deleteDrawingEntity(entity),\n      );\n    });\n\n    return modelChanges;\n  }\n\n  private getNewSequenceItemPosition(\n    previousNode?: SubChainNode,\n    nodeBeforePreviousNode?: SubChainNode,\n    currentNode?: SubChainNode,\n  ) {\n    const offsetFromPrevious = new Vec2(1, 1);\n\n    if (previousNode && !(previousNode instanceof EmptySequenceNode)) {\n      return previousNode.lastMonomerInNode.position.add(offsetFromPrevious);\n    } else if (currentNode && !(currentNode instanceof EmptySequenceNode)) {\n      return currentNode.firstMonomerInNode.position.add(offsetFromPrevious);\n    } else if (nodeBeforePreviousNode) {\n      return nodeBeforePreviousNode.lastMonomerInNode.position.add(\n        offsetFromPrevious,\n      );\n    } else {\n      return new Vec2(0, 0);\n    }\n  }\n\n  scrollForView() {\n    if (this.isEditMode) {\n      return;\n    }\n\n    const zoom = ZoomTool.instance;\n    const drawnEntitiesBoundingBox =\n      SequenceRenderer.getRenderedStructuresBbox();\n\n    if (zoom.isFitToCanvasHeight(drawnEntitiesBoundingBox.height)) {\n      zoom.scrollTo(\n        new Vec2(drawnEntitiesBoundingBox.left, drawnEntitiesBoundingBox.top),\n      );\n    } else {\n      zoom.scrollTo(\n        new Vec2(\n          drawnEntitiesBoundingBox.left,\n          drawnEntitiesBoundingBox.bottom,\n        ),\n        true,\n      );\n    }\n  }\n\n  private unselectAllEntities() {\n    const editor = CoreEditor.provideEditorInstance();\n    const modelChanges =\n      editor.drawingEntitiesManager.unselectAllDrawingEntities();\n    modelChanges.merge(SequenceRenderer.unselectEmptySequenceNodes());\n    editor.renderersContainer.update(modelChanges);\n  }\n\n  public destroy() {\n    this.turnOffEditMode();\n    SequenceRenderer.removeNewSequenceButtons();\n  }\n}\n","import { PolymerBondRenderer } from 'application/render/renderers/PolymerBondRenderer';\nimport { Command } from 'domain/entities/Command';\nimport assert from 'assert';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { monomerFactory } from 'application/editor/operations/monomer/monomerFactory';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { AttachmentPointName } from 'domain/types';\nimport {\n  PeptideRenderer,\n  PhosphateRenderer,\n  RNABaseRenderer,\n  SugarRenderer,\n  UnsplitNucleotideRenderer,\n} from 'application/render';\nimport { notifyRenderComplete } from 'application/render/internal';\nimport {\n  Peptide,\n  Sugar,\n  RNABase,\n  Phosphate,\n  UnsplitNucleotide,\n} from 'domain/entities';\nimport {\n  checkIsR2R1Connection,\n  getNextMonomerInChain,\n  getRnaBaseFromSugar,\n  isMonomerBeginningOfChain,\n} from 'domain/helpers/monomers';\nimport { CoreEditor } from 'application/editor';\nimport { ChainsCollection } from 'domain/entities/monomer-chains/ChainsCollection';\n\nexport class RenderersManager {\n  private theme;\n  public monomers: Map<number, BaseMonomerRenderer> = new Map();\n  public polymerBonds: Map<number, PolymerBondRenderer> = new Map();\n  private needRecalculateMonomersEnumeration = false;\n  private needRecalculateMonomersBeginning = false;\n\n  constructor({ theme }) {\n    this.theme = theme;\n  }\n\n  public hoverDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.redrawHover();\n  }\n\n  public selectDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.drawSelection();\n  }\n\n  public moveDrawingEntity(drawingEntity: DrawingEntity) {\n    assert(drawingEntity.baseRenderer);\n    drawingEntity.baseRenderer.moveSelection();\n    drawingEntity.baseRenderer.drawSelection();\n  }\n\n  private markForReEnumeration() {\n    this.needRecalculateMonomersEnumeration = true;\n  }\n\n  public markForRecalculateBegin() {\n    this.needRecalculateMonomersBeginning = true;\n  }\n\n  public addMonomer(monomer: BaseMonomer, callback?: () => void) {\n    const [, MonomerRenderer] = monomerFactory(monomer.monomerItem);\n    const monomerRenderer = new MonomerRenderer(monomer);\n    this.monomers.set(monomer.id, monomerRenderer);\n    monomerRenderer.show(this.theme);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n    if (callback) {\n      callback();\n    }\n  }\n\n  public moveMonomer(monomer: BaseMonomer) {\n    monomer.renderer?.move();\n    monomer.renderer?.drawSelection();\n  }\n\n  public redrawDrawingEntity(drawingEntity: DrawingEntity, force = false) {\n    drawingEntity.baseRenderer?.remove();\n    drawingEntity.baseRenderer?.show(this.theme, force);\n  }\n\n  public deleteAllDrawingEntities() {\n    this.monomers.forEach((monomerRenderer) => {\n      monomerRenderer.remove();\n    });\n    this.polymerBonds.forEach((polymerBondRenderer) => {\n      polymerBondRenderer.remove();\n    });\n  }\n\n  public deleteMonomer(monomer: BaseMonomer) {\n    monomer.renderer?.remove();\n    this.monomers.delete(monomer.id);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n  }\n\n  public addPolymerBond(polymerBond: PolymerBond) {\n    const polymerBondRenderer = new PolymerBondRenderer(polymerBond);\n    this.polymerBonds.set(polymerBond.id, polymerBondRenderer);\n    polymerBondRenderer.show();\n    polymerBondRenderer.polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n  }\n\n  public movePolymerBond(polymerBond: PolymerBond) {\n    polymerBond.renderer?.moveStart();\n    polymerBond.renderer?.moveEnd();\n    polymerBond.renderer?.drawSelection();\n    // If we started bond from the specific AP, it needs to be redrawn to face the bond direction\n    if (polymerBond.firstMonomer.chosenFirstAttachmentPointForBond) {\n      polymerBond.firstMonomer.renderer?.redrawAttachmentPointsCoordinates();\n    }\n  }\n\n  public showPolymerBondInformation(polymerBond: PolymerBond) {\n    polymerBond.renderer?.redrawHover();\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    polymerBond.secondMonomer?.renderer?.redrawAttachmentPoints();\n    polymerBond.secondMonomer?.renderer?.redrawHover();\n  }\n\n  public deletePolymerBond(\n    polymerBond: PolymerBond,\n    recalculateEnumeration = true,\n    recalculateBeginning = true,\n  ) {\n    polymerBond.renderer?.remove();\n    polymerBond?.firstMonomer?.renderer?.redrawAttachmentPoints?.();\n    polymerBond?.secondMonomer?.renderer?.redrawAttachmentPoints?.();\n    this.polymerBonds.delete(polymerBond.id);\n    if (recalculateEnumeration) {\n      this.markForReEnumeration();\n    }\n    if (recalculateBeginning) {\n      this.markForRecalculateBegin();\n    }\n  }\n\n  private recalculatePeptideChainEnumeration(\n    peptideRenderer: PeptideRenderer,\n    _currentEnumeration = 1,\n  ) {\n    let currentEnumeration = _currentEnumeration;\n    const stack = [{ monomerRenderer: peptideRenderer }];\n\n    while (stack.length > 0) {\n      const stackItem = stack.pop();\n      assert(stackItem);\n      const { monomerRenderer } = stackItem;\n\n      monomerRenderer.setEnumeration(currentEnumeration);\n      monomerRenderer.redrawEnumeration();\n\n      const nextMonomer = getNextMonomerInChain(monomerRenderer.monomer);\n\n      if (\n        !(nextMonomer instanceof Peptide) ||\n        nextMonomer === peptideRenderer.monomer\n      ) {\n        return;\n      }\n\n      const isR2R1Connection = checkIsR2R1Connection(\n        monomerRenderer.monomer,\n        nextMonomer,\n      );\n\n      if (!isR2R1Connection) {\n        return;\n      }\n\n      assert(nextMonomer.renderer);\n\n      stack.push({ monomerRenderer: nextMonomer.renderer as PeptideRenderer });\n      currentEnumeration++;\n    }\n  }\n\n  private recalculateRnaChainEnumeration(\n    rnaComponentRenderer: BaseMonomerRenderer,\n    _currentEnumeration = 1,\n  ) {\n    let currentEnumeration = _currentEnumeration;\n    const stack = [{ monomerRenderer: rnaComponentRenderer }];\n\n    while (stack.length > 0) {\n      const stackItem = stack.pop();\n      assert(stackItem);\n      const { monomerRenderer } = stackItem;\n\n      if (monomerRenderer instanceof SugarRenderer) {\n        const rnaBaseMonomer = getRnaBaseFromSugar(\n          monomerRenderer.monomer as Sugar,\n        );\n        if (rnaBaseMonomer instanceof RNABase) {\n          rnaBaseMonomer.renderer?.setEnumeration(currentEnumeration);\n          rnaBaseMonomer.renderer?.redrawEnumeration();\n          currentEnumeration++;\n        }\n      }\n\n      if (monomerRenderer instanceof UnsplitNucleotideRenderer) {\n        monomerRenderer.setEnumeration(currentEnumeration);\n        monomerRenderer.redrawEnumeration();\n        currentEnumeration++;\n      }\n\n      const nextMonomer = getNextMonomerInChain(monomerRenderer.monomer);\n\n      if (\n        (!(nextMonomer instanceof Sugar) &&\n          !(nextMonomer instanceof Phosphate) &&\n          !(nextMonomer instanceof UnsplitNucleotide)) ||\n        nextMonomer === rnaComponentRenderer.monomer\n      ) {\n        return;\n      }\n\n      const isR2R1Connection = checkIsR2R1Connection(\n        monomerRenderer.monomer,\n        nextMonomer,\n      );\n\n      if (\n        !isR2R1Connection ||\n        !(nextMonomer.renderer instanceof BaseMonomerRenderer)\n      ) {\n        return;\n      }\n\n      stack.push({\n        monomerRenderer: nextMonomer.renderer,\n      });\n    }\n  }\n\n  private recalculatePeptideEnumeration(\n    peptideRenderer: PeptideRenderer,\n    firstMonomers: BaseMonomer[],\n  ) {\n    if (!peptideRenderer.monomer.hasBonds) {\n      peptideRenderer.setEnumeration(null);\n      peptideRenderer.redrawEnumeration();\n    }\n\n    if (\n      !isMonomerBeginningOfChain(peptideRenderer.monomer, [Peptide]) &&\n      !firstMonomers.includes(peptideRenderer.monomer)\n    ) {\n      return;\n    }\n\n    this.recalculatePeptideChainEnumeration(peptideRenderer);\n  }\n\n  private recalculateRnaEnumeration(\n    rnaComponentRenderer: BaseMonomerRenderer,\n    firstMonomers: BaseMonomer[],\n  ) {\n    if (\n      !isMonomerBeginningOfChain(rnaComponentRenderer.monomer, [\n        Phosphate,\n        Sugar,\n        UnsplitNucleotide,\n      ]) &&\n      !firstMonomers.includes(rnaComponentRenderer.monomer)\n    ) {\n      return;\n    }\n\n    this.recalculateRnaChainEnumeration(rnaComponentRenderer);\n  }\n\n  private recalculateMonomersEnumeration() {\n    const editor = CoreEditor.provideEditorInstance();\n    const [, firstMonomersInCyclicChains] =\n      ChainsCollection.getFirstMonomersInChains([\n        ...editor.drawingEntitiesManager.monomers.values(),\n      ]);\n\n    this.monomers.forEach((monomerRenderer) => {\n      if (monomerRenderer instanceof PeptideRenderer) {\n        this.recalculatePeptideEnumeration(\n          monomerRenderer as PeptideRenderer,\n          firstMonomersInCyclicChains,\n        );\n      }\n\n      if (\n        monomerRenderer instanceof UnsplitNucleotideRenderer ||\n        monomerRenderer instanceof PhosphateRenderer ||\n        monomerRenderer instanceof SugarRenderer\n      ) {\n        this.recalculateRnaEnumeration(\n          monomerRenderer as BaseMonomerRenderer,\n          firstMonomersInCyclicChains,\n        );\n      }\n\n      if (\n        monomerRenderer instanceof RNABaseRenderer &&\n        !monomerRenderer.monomer.isAttachmentPointUsed(AttachmentPointName.R1)\n      ) {\n        monomerRenderer.setEnumeration(null);\n        monomerRenderer.redrawEnumeration();\n      }\n    });\n\n    this.needRecalculateMonomersEnumeration = false;\n  }\n\n  private isOnlyPartOfRnaChain(sugar: Sugar) {\n    const phosphate = getNextMonomerInChain(sugar);\n    const nextMonomerAfterPhospate = getNextMonomerInChain(phosphate);\n    return !sugar.attachmentPointsToBonds.R1 && !nextMonomerAfterPhospate;\n  }\n\n  private recalculateMonomersBeginning() {\n    this.monomers.forEach((monomerRenderer) => {\n      if (monomerRenderer instanceof PeptideRenderer) {\n        if (monomerRenderer.enumeration === 1) {\n          monomerRenderer.setBeginning(monomerRenderer.CHAIN_BEGINNING);\n        } else {\n          monomerRenderer.setBeginning(null);\n        }\n        monomerRenderer.reDrawChainBeginning();\n      }\n      if (monomerRenderer instanceof SugarRenderer) {\n        const rnaBaseMonomer = getRnaBaseFromSugar(\n          monomerRenderer.monomer as Sugar,\n        );\n        if (\n          rnaBaseMonomer instanceof RNABase &&\n          rnaBaseMonomer.renderer?.enumeration === 1 &&\n          !this.isOnlyPartOfRnaChain(monomerRenderer.monomer)\n        ) {\n          monomerRenderer.setBeginning(monomerRenderer.CHAIN_BEGINNING);\n        } else {\n          monomerRenderer.setBeginning(null);\n        }\n        monomerRenderer.reDrawChainBeginning();\n      }\n    });\n    this.needRecalculateMonomersBeginning = false;\n  }\n\n  public finishPolymerBondCreation(polymerBond: PolymerBond) {\n    assert(polymerBond.secondMonomer);\n\n    const polymerBondRenderer = new PolymerBondRenderer(polymerBond);\n    this.polymerBonds.set(polymerBond.id, polymerBondRenderer);\n    this.markForReEnumeration();\n    this.markForRecalculateBegin();\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.drawSelection();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    polymerBond.secondMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.secondMonomer.renderer?.drawSelection();\n    polymerBond.secondMonomer.renderer?.redrawHover();\n\n    polymerBond.renderer?.show();\n  }\n\n  public cancelPolymerBondCreation(\n    polymerBond: PolymerBond,\n    secondMonomer?: BaseMonomer,\n  ) {\n    this.deletePolymerBond(polymerBond);\n    polymerBond.firstMonomer.renderer?.redrawAttachmentPoints();\n    polymerBond.firstMonomer.renderer?.drawSelection();\n    polymerBond.firstMonomer.renderer?.redrawHover();\n    secondMonomer?.renderer?.redrawAttachmentPoints();\n    secondMonomer?.renderer?.drawSelection();\n    secondMonomer?.renderer?.redrawHover();\n  }\n\n  public hoverMonomer(monomer: BaseMonomer, needRedrawAttachmentPoints) {\n    this.hoverDrawingEntity(monomer as DrawingEntity);\n    if (needRedrawAttachmentPoints) {\n      monomer.renderer?.redrawAttachmentPoints();\n    }\n  }\n\n  public hoverAttachmentPoint(\n    monomer: BaseMonomer,\n    attachmentPointName: AttachmentPointName,\n  ) {\n    this.hoverDrawingEntity(monomer as DrawingEntity);\n    monomer.renderer?.hoverAttachmenPoint(attachmentPointName);\n    monomer.renderer?.updateAttachmentPoints();\n  }\n\n  public update(modelChanges?: Command) {\n    modelChanges?.execute(this);\n    this.runPostRenderMethods();\n    notifyRenderComplete();\n  }\n\n  public runPostRenderMethods() {\n    if (this.needRecalculateMonomersEnumeration) {\n      this.recalculateMonomersEnumeration();\n    }\n    if (this.needRecalculateMonomersBeginning) {\n      this.recalculateMonomersBeginning();\n    }\n  }\n\n  public static getRenderedStructuresBbox() {\n    let left;\n    let right;\n    let top;\n    let bottom;\n    const editor = CoreEditor.provideEditorInstance();\n\n    editor.drawingEntitiesManager.monomers.forEach((monomer) => {\n      const monomerPosition = monomer.renderer?.scaledMonomerPosition;\n\n      assert(monomerPosition);\n\n      left = left ? Math.min(left, monomerPosition.x) : monomerPosition.x;\n      right = right ? Math.max(right, monomerPosition.x) : monomerPosition.x;\n      top = top ? Math.min(top, monomerPosition.y) : monomerPosition.y;\n      bottom = bottom ? Math.max(bottom, monomerPosition.y) : monomerPosition.y;\n    });\n    return {\n      left,\n      right,\n      top,\n      bottom,\n      width: right - left,\n      height: bottom - top,\n    };\n  }\n\n  public rerenderSideConnectionPolymerBonds() {\n    this.polymerBonds.forEach((polymerBondRenderer) => {\n      if (!polymerBondRenderer.polymerBond.isSideChainConnection) {\n        return;\n      }\n\n      polymerBondRenderer.remove();\n      polymerBondRenderer.show(undefined, true);\n    });\n  }\n}\n","import { BaseMode } from 'application/editor/modes/BaseMode';\nimport { LayoutMode } from 'application/editor/modes';\nimport ZoomTool from '../tools/Zoom';\nimport { CoreEditor } from '../Editor';\nimport { Coordinates } from '../internal';\nimport { Command } from 'domain/entities/Command';\nimport { ReinitializeModeOperation } from 'application/editor/operations/modes';\nimport { Vec2 } from 'domain/entities';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport {\n  MONOMER_START_X_POSITION,\n  MONOMER_START_Y_POSITION,\n  SNAKE_LAYOUT_CELL_WIDTH,\n} from 'domain/entities/DrawingEntitiesManager';\n\nexport class SnakeMode extends BaseMode {\n  constructor(previousMode?: LayoutMode) {\n    super('snake-layout-mode', previousMode);\n  }\n\n  public initialize(_needRemoveSelection: boolean, _isUndo = false) {\n    const command = super.initialize();\n    const editor = CoreEditor.provideEditorInstance();\n\n    // Prevent layout to be called if turn on snake mode by undo operation\n    // because during undo to flex mode if monomers were not moved\n    // we need just redraw canvas to apply new bond view style (straight instead of curved)\n    const modelChanges = _isUndo\n      ? new Command()\n      : editor.drawingEntitiesManager.reArrangeChains(\n          editor.canvas.width.baseVal.value,\n          true,\n        );\n\n    editor.drawingEntitiesManager.applyFlexLayoutMode();\n\n    command.merge(modelChanges);\n    editor.renderersContainer.update(modelChanges);\n    command.setUndoOperationReverse();\n\n    const drawnEntitiesBoundingBox =\n      RenderersManager.getRenderedStructuresBbox();\n    const zoom = ZoomTool.instance;\n\n    zoom.scrollTo(\n      new Vec2(drawnEntitiesBoundingBox.left, drawnEntitiesBoundingBox.top),\n      false,\n      MONOMER_START_X_POSITION - SNAKE_LAYOUT_CELL_WIDTH / 4,\n      MONOMER_START_Y_POSITION - SNAKE_LAYOUT_CELL_WIDTH / 4,\n      false,\n    );\n\n    return command;\n  }\n\n  getNewNodePosition() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    return Coordinates.modelToCanvas(\n      editor.drawingEntitiesManager.bottomRightMonomerPosition,\n    );\n  }\n\n  scrollForView() {\n    const zoom = ZoomTool.instance;\n    const drawnEntitiesBoundingBox =\n      RenderersManager.getRenderedStructuresBbox();\n\n    if (zoom.isFitToCanvasHeight(drawnEntitiesBoundingBox.height)) {\n      zoom.scrollTo(\n        new Vec2(drawnEntitiesBoundingBox.left, drawnEntitiesBoundingBox.top),\n        false,\n        2,\n      );\n    } else {\n      zoom.scrollTo(\n        new Vec2(\n          drawnEntitiesBoundingBox.left,\n          drawnEntitiesBoundingBox.bottom,\n        ),\n        true,\n        2,\n      );\n    }\n  }\n\n  applyAdditionalPasteOperations() {\n    const command = new Command();\n    command.addOperation(new ReinitializeModeOperation());\n\n    return command;\n  }\n\n  isPasteAllowedByMode(): boolean {\n    return true;\n  }\n\n  isPasteAvailable(): boolean {\n    return true;\n  }\n}\n","import { BaseMode } from 'application/editor/modes/BaseMode';\nimport { SequenceMode } from 'application/editor';\n\nexport type LayoutMode =\n  | 'flex-layout-mode'\n  | 'snake-layout-mode'\n  | 'sequence-layout-mode';\n\nexport const DEFAULT_LAYOUT_MODE: LayoutMode = 'sequence-layout-mode';\n\nexport function isSequenceMode(mode: BaseMode): mode is SequenceMode {\n  return mode instanceof SequenceMode;\n}\n","import { FlexMode } from './FlexMode';\nimport { SequenceMode } from './SequenceMode';\nimport { SnakeMode } from './SnakeMode';\n\nexport * from './FlexMode';\nexport * from './SequenceMode';\nexport * from './SnakeMode';\nexport * from './types';\n\nexport const modesMap = {\n  'flex-layout-mode': FlexMode,\n  'snake-layout-mode': SnakeMode,\n  'sequence-layout-mode': SequenceMode,\n};\n","import { BaseRenderer } from './BaseRenderer';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport assert from 'assert';\nimport { D3SvgElementSelection } from 'application/render/types';\nimport { editorEvents } from 'application/editor/editorEvents';\nimport { Vec2 } from 'domain/entities';\nimport { SnakeMode } from 'application/editor/modes/';\nimport { Coordinates } from 'application/editor/shared/coordinates';\nimport { CoreEditor } from 'application/editor/internal';\nimport { SNAKE_LAYOUT_CELL_WIDTH } from 'domain/entities/DrawingEntitiesManager';\nimport { Connection } from 'domain/entities/canvas-matrix/Connection';\nimport { getSugarFromRnaBase } from 'domain/helpers/monomers';\n\nconst LINE_FROM_MONOMER_LENGTH = 15;\nconst VERTICAL_LINE_LENGTH = 21;\nconst RNA_CHAIN_VERTICAL_LINE_LENGTH = 74;\nconst CORNER_LENGTH = 4;\nconst DOUBLE_CORNER_LENGTH = CORNER_LENGTH * 2;\n\nconst BOND_END_LENGTH = 15;\nconst CELL_HEIGHT = 40;\nconst SMOOTH_CORNER_SIZE = 5;\nconst SIDE_CONNECTION_BODY_ELEMENT_CLASS = 'polymer-bond-body';\nenum LINE_DIRECTION {\n  Horizontal = 'Horizontal',\n  Vertical = 'Vertical',\n}\n\nexport class PolymerBondRenderer extends BaseRenderer {\n  private editorEvents: typeof editorEvents;\n  private selectionElement;\n  private path = '';\n  private previousStateOfIsMonomersOnSameHorisontalLine = false;\n  private sideConnectionBondTurnPoint?: number;\n  constructor(public polymerBond: PolymerBond) {\n    super(polymerBond as DrawingEntity);\n    this.polymerBond.setRenderer(this);\n    this.editorEvents = editorEvents;\n  }\n\n  get isSnake() {\n    if (this.polymerBond.isSideChainConnection) {\n      return false;\n    }\n\n    if (\n      getSugarFromRnaBase(this.polymerBond.firstMonomer) ||\n      getSugarFromRnaBase(this.polymerBond.secondMonomer)\n    ) {\n      return false;\n    }\n\n    const editor = CoreEditor.provideEditorInstance();\n    return editor?.mode instanceof SnakeMode;\n  }\n\n  public get rootBBox() {\n    const rootNode = this.rootElement?.node();\n    if (!rootNode) return;\n\n    return rootNode.getBBox();\n  }\n\n  public get width() {\n    return this.rootBBox?.width || 0;\n  }\n\n  public get height() {\n    return this.rootBBox?.height || 0;\n  }\n\n  private get scaledPosition() {\n    // we need to convert monomer coordinates(stored in angstroms) to pixels.\n    // it needs to be done in view layer of application (like renderers)\n    const startPositionInPixels = Coordinates.modelToCanvas(\n      this.polymerBond.startPosition,\n    );\n\n    const endPositionInPixels = Coordinates.modelToCanvas(\n      this.polymerBond.endPosition,\n    );\n\n    return {\n      startPosition: startPositionInPixels,\n      endPosition: endPositionInPixels,\n    };\n  }\n\n  public moveSelection() {\n    if (\n      this.previousStateOfIsMonomersOnSameHorisontalLine !==\n      this.isMonomersOnSameHorizontalLine()\n    ) {\n      this.remove();\n      this.show();\n    } else {\n      assert(this.rootElement);\n      this.moveStart();\n      this.moveEnd();\n    }\n    this.previousStateOfIsMonomersOnSameHorisontalLine =\n      this.isMonomersOnSameHorizontalLine();\n  }\n\n  public appendBond(rootElement) {\n    const editor = CoreEditor.provideEditorInstance();\n\n    if (\n      editor?.mode instanceof SnakeMode &&\n      this.polymerBond.isSideChainConnection\n    ) {\n      this.appendSideConnectionBond(rootElement);\n    } else if (\n      this.isSnake &&\n      this.polymerBond.finished &&\n      !this.isMonomersOnSameHorizontalLine()\n    ) {\n      this.appendSnakeBond(rootElement);\n    } else {\n      this.appendBondGraph(rootElement);\n    }\n\n    return this.bodyElement;\n  }\n\n  public appendSnakeBond(rootElement) {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    this.bodyElement = rootElement\n      .append('path')\n      .attr('stroke', this.polymerBond.finished ? '#333333' : '#0097A8')\n      .attr('stroke-width', 1)\n      .attr('class', 'selection-area')\n      .attr('d', this.path)\n      .attr('fill-opacity', 0)\n      .attr('pointer-events', 'stroke');\n    return this.bodyElement;\n  }\n\n  private drawPartOfSideConnection(isHorizontal, connection, cell, direction) {\n    const sin = Math.sin((direction * Math.PI) / 180);\n    const cos = Math.cos((direction * Math.PI) / 180);\n    const xOffset = (SNAKE_LAYOUT_CELL_WIDTH / 2) * cos;\n    const yOffset = (CELL_HEIGHT / 2) * sin;\n    const maxXOffset = cell.connections.reduce((max, connection) => {\n      return max > connection.offset ? max : connection.offset;\n    }, 0);\n    const maxYOffset = cell.connections.reduce((max, connection) => {\n      const connectionYOffset = connection.yOffset || 0;\n      return max > connectionYOffset ? max : connectionYOffset;\n    }, 0);\n\n    let endOfPathPart = isHorizontal\n      ? this.sideConnectionBondTurnPoint ||\n        cell.monomer.renderer?.scaledMonomerPosition.x +\n          cell.monomer.renderer?.monomerSize.width / 2 +\n          xOffset\n      : cell.monomer.renderer?.scaledMonomerPosition.y +\n        cell.monomer.renderer?.monomerSize.height / 2 +\n        yOffset;\n\n    this.sideConnectionBondTurnPoint = endOfPathPart;\n\n    if (isHorizontal) {\n      endOfPathPart +=\n        -(connection.yOffset || 0) * 3 +\n        cos * -connection.offset * 3 +\n        cos * (maxXOffset + 1) * 3 +\n        (maxYOffset + 1) * 3;\n    }\n    let pathPart = isHorizontal ? 'H ' : 'V ';\n    pathPart += `${endOfPathPart - SMOOTH_CORNER_SIZE * cos} `;\n    pathPart += `q ${SMOOTH_CORNER_SIZE * cos},${SMOOTH_CORNER_SIZE * sin} ${\n      SMOOTH_CORNER_SIZE * cos\n    },${SMOOTH_CORNER_SIZE} `;\n\n    return pathPart;\n  }\n\n  private appendSideConnectionBond(rootElement) {\n    const editor = CoreEditor.provideEditorInstance();\n    const matrix = editor.drawingEntitiesManager.canvasMatrix;\n    const cells = matrix?.polymerBondToCells.get(this.polymerBond);\n\n    if (!cells) {\n      return;\n    }\n\n    const firstCell = cells[0];\n    const firstCellConnection = firstCell.connections.find((connection) => {\n      return connection.polymerBond === this.polymerBond;\n    }) as Connection;\n    const isVerticalConnection = firstCellConnection.isVertical;\n    const isStraightVerticalConnection =\n      cells.length === 2 && isVerticalConnection;\n    const isFirstMonomerOfBondInFirstCell = firstCell.node?.monomers.includes(\n      this.polymerBond.firstMonomer,\n    );\n    const isTwoNeighborRowsConnection = cells.every(\n      (cell) => cell.y === firstCell.y || cell.y === firstCell.y + 1,\n    );\n    const startPosition = isFirstMonomerOfBondInFirstCell\n      ? this.scaledPosition.startPosition\n      : this.scaledPosition.endPosition;\n    const endPosition = isFirstMonomerOfBondInFirstCell\n      ? this.scaledPosition.endPosition\n      : this.scaledPosition.startPosition;\n    const xDirection =\n      startPosition.x >= (this.sideConnectionBondTurnPoint || endPosition.x)\n        ? 180\n        : 0;\n    let dAttributeForPath = `M ${startPosition.x},${startPosition.y} `;\n\n    const cos = Math.cos((xDirection * Math.PI) / 180);\n\n    let previousConnection;\n    let previousCell;\n\n    const horizontalPartIntersectionsOffset = firstCellConnection.offset;\n\n    const areCellsOnSameRow = cells.every((cell) => {\n      return cell.y === firstCell.y;\n    });\n    const isSecondCellEmpty = cells[1].node === null;\n\n    if (areCellsOnSameRow) {\n      dAttributeForPath += `L ${startPosition.x},${\n        startPosition.y -\n        BOND_END_LENGTH -\n        horizontalPartIntersectionsOffset * 3\n      } `;\n      dAttributeForPath += `q 0,-${SMOOTH_CORNER_SIZE}, ${\n        SMOOTH_CORNER_SIZE * cos\n      },-${SMOOTH_CORNER_SIZE} `;\n    } else {\n      dAttributeForPath += `L ${startPosition.x},${\n        startPosition.y +\n        BOND_END_LENGTH +\n        horizontalPartIntersectionsOffset * 3\n      } `;\n      if (\n        !isStraightVerticalConnection &&\n        !isSecondCellEmpty &&\n        !isTwoNeighborRowsConnection\n      ) {\n        dAttributeForPath += `q 0,${SMOOTH_CORNER_SIZE} ${\n          SMOOTH_CORNER_SIZE * cos\n        },${SMOOTH_CORNER_SIZE} `;\n      }\n    }\n\n    if (isVerticalConnection && !isStraightVerticalConnection) {\n      dAttributeForPath += this.drawPartOfSideConnection(\n        true,\n        firstCellConnection,\n        firstCell,\n        this.sideConnectionBondTurnPoint &&\n          startPosition.x < this.sideConnectionBondTurnPoint\n          ? 0\n          : 180,\n      );\n    }\n\n    let maxHorizontalOffset = 0;\n\n    cells.forEach((cell, cellIndex) => {\n      const cellConnection = cell.connections.find((connection) => {\n        return connection.polymerBond === this.polymerBond;\n      }) as Connection;\n      const isLastCell = cellIndex === cells.length - 1;\n      const _xDirection = this.sideConnectionBondTurnPoint\n        ? endPosition.x < this.sideConnectionBondTurnPoint\n          ? 180\n          : 0\n        : xDirection;\n      const maxXOffset = cell.connections.reduce((max, connection) => {\n        return connection.isVertical || max > connection.offset\n          ? max\n          : connection.offset;\n      }, 0);\n\n      maxHorizontalOffset =\n        maxHorizontalOffset > maxXOffset ? maxHorizontalOffset : maxXOffset;\n\n      if (isLastCell) {\n        if (isStraightVerticalConnection) {\n          return;\n        }\n\n        const directionObject = cellConnection.direction as {\n          x: number;\n          y: number;\n        };\n        const yDirection = isVerticalConnection ? 90 : directionObject.y;\n        const sin = Math.sin((yDirection * Math.PI) / 180);\n        const cos = Math.cos((_xDirection * Math.PI) / 180);\n\n        if (!areCellsOnSameRow) {\n          dAttributeForPath += `V ${\n            endPosition.y -\n            CELL_HEIGHT / 2 -\n            SMOOTH_CORNER_SIZE -\n            sin * (cellConnection.yOffset || 0) * 3 -\n            (isTwoNeighborRowsConnection\n              ? maxHorizontalOffset - cellConnection.offset\n              : cellConnection.offset) *\n              3\n          } `;\n          dAttributeForPath += `q 0,${SMOOTH_CORNER_SIZE * sin} ${\n            SMOOTH_CORNER_SIZE * cos\n          },${SMOOTH_CORNER_SIZE} `;\n        }\n        dAttributeForPath += `H ${endPosition.x - SMOOTH_CORNER_SIZE * cos} `;\n        dAttributeForPath += `q ${SMOOTH_CORNER_SIZE * cos},0 ${\n          SMOOTH_CORNER_SIZE * cos\n        },${SMOOTH_CORNER_SIZE} `;\n        return;\n      }\n      // empty cells\n      if (cell.node === null) {\n        return;\n      }\n\n      // other cells\n      if (\n        previousConnection &&\n        previousConnection.direction !== cellConnection.direction\n      ) {\n        const isHorizontal =\n          previousConnection.direction === 0 ||\n          previousConnection.direction === 180;\n\n        dAttributeForPath += this.drawPartOfSideConnection(\n          isHorizontal,\n          previousConnection,\n          previousCell,\n          isHorizontal ? xDirection : previousConnection.direction,\n        );\n      }\n      previousCell = cell;\n      previousConnection = cellConnection;\n    });\n\n    dAttributeForPath += `L ${endPosition.x},${endPosition.y} `;\n\n    this.bodyElement = rootElement\n      .append('path')\n      .attr('class', `${SIDE_CONNECTION_BODY_ELEMENT_CLASS}`)\n      .attr('stroke', '#43B5C0')\n      .attr('stroke-width', 1)\n      .attr('d', dAttributeForPath)\n      .attr('fill', 'none')\n      .attr('pointer-events', 'stroke');\n\n    this.path = dAttributeForPath;\n\n    return this.bodyElement;\n  }\n\n  private getMonomerWidth() {\n    return this.polymerBond.firstMonomer.renderer?.monomerSize.width ?? 0;\n  }\n\n  private getMonomerHeight() {\n    return this.polymerBond.firstMonomer.renderer?.monomerSize.height ?? 0;\n  }\n\n  public isMonomersOnSameHorizontalLine() {\n    return Boolean(\n      this.polymerBond.secondMonomer &&\n        this.polymerBond.firstMonomer.position.y -\n          this.polymerBond.secondMonomer.position.y <\n          0.5 &&\n        this.polymerBond.firstMonomer.position.y -\n          this.polymerBond.secondMonomer.position.y >\n          -0.5,\n    );\n  }\n\n  private updateSnakeBondPath(\n    startPosition: Vec2,\n    endPosition: Vec2,\n    reCheckAttachmentpoint = true,\n  ) {\n    const isR1TheCurrentAttachmentpointOfFirstMonomer =\n      this.polymerBond.firstMonomer.getAttachmentPointByBond(\n        this.polymerBond,\n      ) === 'R1' ||\n      this.polymerBond.firstMonomer.getPotentialAttachmentPointByBond(\n        this.polymerBond,\n      ) === 'R1';\n\n    // check if there is nucleotide in current row\n    const isBondConnectedWithNucleotide =\n      this.polymerBond.firstMonomer.isMonomerInRnaChainRow;\n\n    const verticalLineLength = isBondConnectedWithNucleotide\n      ? RNA_CHAIN_VERTICAL_LINE_LENGTH\n      : VERTICAL_LINE_LENGTH + 5;\n\n    if (this.isSecondMonomerBottomRight(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y - CORNER_LENGTH * 2,\n      );\n      this.addLineFromTopToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        endPosition.x -\n          startPosition.x -\n          CORNER_LENGTH * 2 -\n          LINE_FROM_MONOMER_LENGTH -\n          this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerTopRight(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToTop();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y -\n          startPosition.y -\n          CORNER_LENGTH * 2 +\n          this.getMonomerHeight() / 2,\n      );\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        endPosition.x -\n          startPosition.x -\n          CORNER_LENGTH * 2 -\n          LINE_FROM_MONOMER_LENGTH -\n          this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerBottomLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(LINE_DIRECTION.Vertical, verticalLineLength);\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n      this.addLineFromRightToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y -\n          startPosition.y -\n          CORNER_LENGTH * 4 -\n          verticalLineLength,\n      );\n      this.addLineFromTopToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerTopLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(LINE_DIRECTION.Vertical, this.getMonomerHeight());\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n\n      this.addLineFromRightToUp();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y - this.getMonomerHeight(),\n      );\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else if (this.isSecondMonomerLeft(startPosition, endPosition)) {\n      if (\n        isR1TheCurrentAttachmentpointOfFirstMonomer &&\n        reCheckAttachmentpoint\n      ) {\n        this.updateSnakeBondPath(endPosition, startPosition, false);\n        return;\n      }\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n        startPosition,\n      );\n      this.addLineFromLeftToBottom();\n      this.addLine(\n        LINE_DIRECTION.Vertical,\n        endPosition.y - startPosition.y + this.getMonomerHeight(),\n      );\n      this.addLineFromTopToLeft();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        -(\n          startPosition.x -\n          endPosition.x +\n          LINE_FROM_MONOMER_LENGTH * 2 +\n          this.getMonomerWidth()\n        ),\n      );\n\n      this.addLineFromRightToUp();\n      this.addLine(LINE_DIRECTION.Vertical, -this.getMonomerHeight());\n      this.addLineFromBottomToRight();\n      this.addLine(\n        LINE_DIRECTION.Horizontal,\n        LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth() / 2,\n      );\n    } else {\n      this.addRandomLine(startPosition, endPosition);\n    }\n  }\n\n  private isSecondMonomerTopRight(startPosition, endPosition): boolean {\n    return (\n      startPosition.y - endPosition.y > DOUBLE_CORNER_LENGTH &&\n      endPosition.x - startPosition.x >\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerBottomRight(startPosition, endPosition): boolean {\n    return (\n      endPosition.y - startPosition.y > DOUBLE_CORNER_LENGTH &&\n      endPosition.x - startPosition.x >\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerBottomLeft(\n    startPosition: Vec2,\n    endPosition: Vec2,\n  ): boolean {\n    return (\n      endPosition.y - startPosition.y >=\n        2 * (VERTICAL_LINE_LENGTH + DOUBLE_CORNER_LENGTH) &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerTopLeft(startPosition, endPosition): boolean {\n    return (\n      startPosition.y - endPosition.y > 0 &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private isSecondMonomerLeft(startPosition: Vec2, endPosition: Vec2): boolean {\n    return (\n      startPosition.y - endPosition.y < 0 &&\n      startPosition.y - endPosition.y >\n        -2 * (VERTICAL_LINE_LENGTH + DOUBLE_CORNER_LENGTH) &&\n      endPosition.x - startPosition.x <=\n        DOUBLE_CORNER_LENGTH + LINE_FROM_MONOMER_LENGTH + this.getMonomerWidth()\n    );\n  }\n\n  private addLineFromTopToRight() {\n    this.path = `${this.path} c 0,4.418 3.582,${CORNER_LENGTH} ${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromLeftToTop() {\n    this.path = `${this.path} c 4.418,0 ${CORNER_LENGTH},-3.582 ${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromBottomToRight() {\n    this.path = `${this.path} c 0,-4.418 3.582,-${CORNER_LENGTH} ${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromLeftToBottom() {\n    this.path = `${this.path} c 4.418,0 ${CORNER_LENGTH},3.582 ${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromTopToLeft() {\n    this.path = `${this.path} c 0,4.418 -3.582,${CORNER_LENGTH} -${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLineFromRightToUp() {\n    this.path = `${this.path} c -4.418,0 -${CORNER_LENGTH},-3.582 -${CORNER_LENGTH},-${CORNER_LENGTH}`;\n  }\n\n  private addLineFromRightToBottom() {\n    this.path = `${this.path} c -4.418,0 -${CORNER_LENGTH},3.582 -${CORNER_LENGTH},${CORNER_LENGTH}`;\n  }\n\n  private addLine(\n    isHorisontal: LINE_DIRECTION,\n    length: number,\n    startPosition?: Vec2,\n  ) {\n    const start = startPosition\n      ? `M ${Math.round(startPosition.x)},${Math.round(startPosition.y)}`\n      : this.path;\n    const line =\n      isHorisontal === LINE_DIRECTION.Horizontal\n        ? `l${length}, 0`\n        : `l 0, ${length}`;\n    this.path = `${start} ${line}`;\n  }\n\n  private addRandomLine(startPosition: Vec2, endPosition: Vec2) {\n    const start = `M ${Math.round(startPosition.x)},${Math.round(\n      startPosition.y,\n    )}`;\n    const line = `L ${Math.round(endPosition.x)},${Math.round(endPosition.y)}`;\n    this.path = `${start} ${line}`;\n  }\n\n  public appendBondGraph(rootElement) {\n    this.bodyElement = rootElement\n      .append('line')\n      .attr('stroke', this.polymerBond.finished ? '#333333' : '#0097A8')\n      .attr('stroke-width', 1)\n      .attr('class', 'selection-area')\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y)\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y)\n      .attr('pointer-events', 'stroke');\n\n    return this.bodyElement;\n  }\n\n  private appendRootElement() {\n    return this.canvas\n      .insert('g', `.monomer`)\n      .data([this])\n      .on('mouseover', (event) => {\n        this.editorEvents.mouseOverPolymerBond.dispatch(event);\n        this.editorEvents.mouseOverDrawingEntity.dispatch(event);\n      })\n      .on('mouseout', (event) => {\n        this.editorEvents.mouseLeavePolymerBond.dispatch(event);\n        this.editorEvents.mouseLeaveDrawingEntity.dispatch(event);\n      })\n      .attr('pointer-events', 'stroke') as never as D3SvgElementSelection<\n      SVGGElement,\n      void\n    >;\n  }\n\n  public show(_theme?, force = false) {\n    if (force) {\n      this.sideConnectionBondTurnPoint = undefined;\n    }\n    this.rootElement = this.rootElement || this.appendRootElement();\n    this.appendBond(this.rootElement);\n    this.appendHoverAreaElement();\n    this.drawSelection();\n  }\n\n  public drawSelection() {\n    if (this.polymerBond.selected) {\n      const editor = CoreEditor.provideEditorInstance();\n\n      this.selectionElement?.remove();\n      if (\n        (this.isSnake && !this.isMonomersOnSameHorizontalLine()) ||\n        (editor.mode instanceof SnakeMode &&\n          this.polymerBond.isSideChainConnection)\n      ) {\n        this.selectionElement = this.rootElement\n          ?.insert('path', ':first-child')\n          .attr('stroke', '#57FF8F')\n          .attr('stroke-width', 2)\n          .attr('fill-opacity', 0)\n          .attr('d', this.path);\n      } else {\n        this.selectionElement = this.rootElement\n          ?.insert('line', ':first-child')\n          .attr('stroke', '#57FF8F')\n          .attr('x1', this.scaledPosition.startPosition.x)\n          .attr('y1', this.scaledPosition.startPosition.y)\n          .attr('x2', this.scaledPosition.endPosition.x)\n          .attr('y2', this.scaledPosition.endPosition.y)\n          .attr('stroke-width', '5')\n          .attr('class', 'dynamic-element');\n      }\n    } else {\n      this.selectionElement?.remove();\n    }\n  }\n\n  public moveEnd() {\n    if (\n      this.isSnake &&\n      !this.isMonomersOnSameHorizontalLine() &&\n      this.polymerBond.finished\n    ) {\n      this.moveSnakeBondEnd();\n    } else {\n      this.moveGraphBondEnd();\n    }\n  }\n\n  private moveSnakeBondEnd() {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement.attr('d', this.path);\n\n    this.hoverAreaElement.attr('d', this.path);\n    this.selectionElement?.attr('d', this.path);\n  }\n\n  private moveGraphBondEnd() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y);\n\n    this.hoverAreaElement\n      .attr('x2', this.scaledPosition.endPosition.x)\n      .attr('y2', this.scaledPosition.endPosition.y);\n\n    this.hoverCircleAreaElement\n      ?.attr('cx', this.scaledPosition.endPosition.x)\n      .attr('cy', this.scaledPosition.endPosition.y);\n\n    this.selectionElement\n      ?.attr('x2', this.scaledPosition.endPosition.x)\n      ?.attr('y2', this.scaledPosition.endPosition.y);\n  }\n\n  public moveStart() {\n    if (this.isSnake && !this.isMonomersOnSameHorizontalLine()) {\n      this.moveSnakeBondStart();\n    } else {\n      this.moveGraphBondStart();\n    }\n  }\n\n  private moveSnakeBondStart() {\n    const startPosition = this.scaledPosition.startPosition;\n    const endPosition = this.scaledPosition.endPosition;\n    this.updateSnakeBondPath(startPosition, endPosition);\n\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement.attr('d', this.path);\n\n    this.hoverAreaElement.attr('d', this.path);\n    this.selectionElement?.attr('d', this.path);\n  }\n\n  private moveGraphBondStart() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n    this.bodyElement\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y);\n\n    this.hoverAreaElement\n      .attr('x1', this.scaledPosition.startPosition.x)\n      .attr('y1', this.scaledPosition.startPosition.y);\n\n    this.selectionElement\n      ?.attr('x1', this.scaledPosition.startPosition.x)\n      ?.attr('y1', this.scaledPosition.startPosition.y);\n  }\n\n  protected appendHoverAreaElement() {\n    const editor = CoreEditor.provideEditorInstance();\n\n    if (\n      (this.isSnake && !this.isMonomersOnSameHorizontalLine()) ||\n      (editor?.mode instanceof SnakeMode &&\n        this.polymerBond.isSideChainConnection)\n    ) {\n      (<D3SvgElementSelection<SVGPathElement, void> | undefined>(\n        this.hoverAreaElement\n      )) = this.rootElement\n        ?.append('path')\n        .attr('stroke', 'transparent')\n        .attr('d', this.path)\n        .attr('fill-opacity', 0)\n        .attr('stroke-width', '5');\n    } else {\n      (<D3SvgElementSelection<SVGLineElement, void> | undefined>(\n        this.hoverAreaElement\n      )) = this.rootElement\n        ?.append('line')\n        .attr('stroke', 'transparent')\n        .attr('x1', this.scaledPosition.startPosition.x)\n        .attr('y1', this.scaledPosition.startPosition.y)\n        .attr('x2', this.scaledPosition.endPosition.x)\n        .attr('y2', this.scaledPosition.endPosition.y)\n        .attr('stroke-width', '10');\n\n      (<D3SvgElementSelection<SVGCircleElement, void> | undefined>(\n        this.hoverCircleAreaElement\n      )) = this.rootElement\n        ?.append('circle')\n        .attr('cursor', 'pointer')\n        .attr('r', '1')\n        .attr('fill', 'transparent')\n        .attr('stroke-width', '10')\n        .attr('cx', this.scaledPosition.endPosition.x)\n        .attr('cy', this.scaledPosition.endPosition.y);\n    }\n  }\n\n  public appendHover() {\n    assert(this.bodyElement);\n\n    const editor = CoreEditor.provideEditorInstance();\n\n    if (\n      editor.mode instanceof SnakeMode &&\n      this.polymerBond.isSideChainConnection\n    ) {\n      const allSideConnectionBondsBodyElements = editor.canvas.querySelectorAll(\n        `.${SIDE_CONNECTION_BODY_ELEMENT_CLASS}`,\n      );\n\n      Array.from(allSideConnectionBondsBodyElements).forEach(\n        (bondBodyElement) => {\n          bondBodyElement.setAttribute('stroke', '#C0E2E6');\n        },\n      );\n    }\n\n    this.bodyElement.attr('stroke', '#0097A8').attr('pointer-events', 'none');\n\n    if (this.polymerBond.selected && this.selectionElement) {\n      this.selectionElement.attr('stroke', '#CCFFDD');\n    }\n  }\n\n  public removeHover() {\n    assert(this.bodyElement);\n    assert(this.hoverAreaElement);\n\n    const editor = CoreEditor.provideEditorInstance();\n\n    if (\n      editor.mode instanceof SnakeMode &&\n      this.polymerBond.isSideChainConnection\n    ) {\n      const allSideConnectionBondsBodyElements = editor.canvas.querySelectorAll(\n        `.${SIDE_CONNECTION_BODY_ELEMENT_CLASS}`,\n      );\n\n      Array.from(allSideConnectionBondsBodyElements).forEach(\n        (bondBodyElement) => {\n          const renderer = bondBodyElement.__data__ as PolymerBondRenderer;\n\n          bondBodyElement.setAttribute(\n            'stroke',\n            editor.mode instanceof SnakeMode &&\n              renderer.polymerBond.isSideChainConnection\n              ? '#43B5C0'\n              : '#333333',\n          );\n        },\n      );\n    }\n\n    this.bodyElement\n      .attr(\n        'stroke',\n        editor.mode instanceof SnakeMode &&\n          this.polymerBond.isSideChainConnection\n          ? '#43B5C0'\n          : '#333333',\n      )\n      .attr('pointer-events', 'stroke');\n\n    if (this.polymerBond.selected && this.selectionElement) {\n      this.selectionElement.attr('stroke', '#57FF8F');\n    }\n\n    return this.hoverAreaElement.attr('stroke', 'transparent');\n  }\n}\n","import { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { UnresolvedMonomer } from 'domain/entities';\nimport { Selection } from 'd3';\n\nconst UNRESOLVED_MONOMER_SELECTED_ELEMENT_ID = '#unresolved-monomer-selection';\nconst UNRESOLVED_MONOMER_HOVERED_ELEMENT_ID = '#unresolved-monomer-hover';\nconst UNRESOLVED_MONOMER_SYMBOL_ELEMENT_ID = '#unresolved-monomer';\n\nexport class UnresolvedMonomerRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: UnresolvedMonomer, scale?: number) {\n    super(\n      monomer,\n      UNRESOLVED_MONOMER_SELECTED_ELEMENT_ID,\n      UNRESOLVED_MONOMER_HOVERED_ELEMENT_ID,\n      UNRESOLVED_MONOMER_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  public get textColor() {\n    return 'white';\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', UNRESOLVED_MONOMER_SYMBOL_ELEMENT_ID);\n  }\n\n  show(theme) {\n    super.show(theme);\n  }\n\n  protected get enumerationElementPosition() {\n    return undefined;\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { Selection } from 'd3';\nimport { BaseMonomerRenderer } from 'application/render/renderers/BaseMonomerRenderer';\nimport { UnsplitNucleotide } from 'domain/entities';\nimport { D3SvgElementSelection } from 'application/render/types';\n\nconst NUCLEOTIDE_SELECTED_ELEMENT_ID = '#nucleotide-selection';\nconst NUCLEOTIDE_HOVERED_ELEMENT_ID = '#nucleotide-hover';\nconst NUCLEOTIDE_SYMBOL_ELEMENT_ID = '#nucleotide';\n\nexport class UnsplitNucleotideRenderer extends BaseMonomerRenderer {\n  constructor(public monomer: UnsplitNucleotide, scale?: number) {\n    super(\n      monomer,\n      NUCLEOTIDE_SELECTED_ELEMENT_ID,\n      NUCLEOTIDE_HOVERED_ELEMENT_ID,\n      NUCLEOTIDE_SYMBOL_ELEMENT_ID,\n      scale,\n    );\n  }\n\n  protected appendBody(\n    rootElement: Selection<SVGGElement, void, HTMLElement, never>,\n    theme,\n  ) {\n    return rootElement\n      .append('use')\n      .data([this])\n      .attr('href', NUCLEOTIDE_SYMBOL_ELEMENT_ID)\n      .attr('fill', this.getMonomerColor(theme));\n  }\n\n  show(theme) {\n    super.show(theme);\n    this.appendEnumeration();\n  }\n\n  protected appendLabel(rootElement: D3SvgElementSelection<SVGGElement, void>) {\n    const fontSize = 6;\n    const Y_OFFSET_FROM_MIDDLE = -2;\n\n    rootElement\n      .append('foreignObject')\n      .attr('width', this.width)\n      .attr('height', this.height - this.height / 3)\n      .html(\n        `\n        <div style=\"\n            padding: 0 4px;\n            text-align: center;\n            color: ${this.textColor};\n            display: flex;\n            height: 100%;\n            align-items: center;\n            justify-content: center;\n        \">\n          ${this.monomer.label}\n        </div>\n      `,\n      )\n      .attr('font-size', `${fontSize}px`)\n      .attr('line-height', `${fontSize}px`)\n      .attr('font-weight', '700')\n      .style('cursor', 'pointer')\n      .style('user-select', 'none')\n      .attr('pointer-events', 'none')\n      .attr('x', '4px')\n      .attr('y', this.height / 2 + Y_OFFSET_FROM_MIDDLE);\n  }\n\n  protected get enumerationElementPosition() {\n    return { x: 7, y: 7 };\n  }\n\n  protected get beginningElementPosition() {\n    return undefined;\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class ChemSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return '@';\n  }\n\n  protected drawModification() {}\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class EmptySequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return '';\n  }\n\n  protected drawModification() {}\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { Nucleoside, Nucleotide } from 'domain/entities';\n\nexport abstract class RNASequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return (\n      this.node.monomer.attachmentPointsToBonds.R3?.getAnotherMonomer(\n        this.node.monomer,\n      )?.monomerItem?.props.MonomerNaturalAnalogCode || '@'\n    );\n  }\n\n  protected drawCommonModification(node: Nucleoside | Nucleotide) {\n    if (node.rnaBase.isModification) {\n      this.backgroundElement?.attr(\n        'fill',\n        this.node.monomer.selected\n          ? this.isSequenceEditInRnaBuilderModeTurnedOn\n            ? '#41A8B2'\n            : '#3ACA6A'\n          : '#CAD3DD',\n      );\n    }\n\n    if (node.sugar.isModification) {\n      this.backgroundElement\n        ?.attr(\n          'stroke',\n          this.isSequenceEditInRnaBuilderModeTurnedOn ? '#24545A' : '#585858',\n        )\n        .attr('stroke-width', '1px');\n    }\n  }\n}\n","import { Nucleotide } from 'domain/entities';\nimport { D3SvgElementSelection } from 'application/render/types';\n\nimport { RNASequenceItemRenderer } from './RNASequenceItemRenderer';\n\nexport class NucleotideSequenceItemRenderer extends RNASequenceItemRenderer {\n  private phosphateModificationCircleElement?: D3SvgElementSelection<\n    SVGCircleElement,\n    void\n  >;\n\n  drawModification() {\n    const node = this.node as Nucleotide;\n\n    this.drawCommonModification(node);\n\n    if (this.phosphateModificationCircleElement) {\n      this.phosphateModificationCircleElement.remove();\n    }\n\n    if (node.phosphate?.isModification) {\n      this.phosphateModificationCircleElement = this.rootElement\n        ?.append('circle')\n        .attr('r', '3px')\n        .attr(\n          'fill',\n          this.isSequenceEditInRnaBuilderModeTurnedOn ? '#24545A' : '#585858',\n        )\n        .attr('cx', '10')\n        .attr('cy', '-16');\n    }\n  }\n}\n","import { Nucleoside, Phosphate } from 'domain/entities';\nimport { getNextMonomerInChain } from 'domain/helpers/monomers';\nimport { RNASequenceItemRenderer } from './RNASequenceItemRenderer';\nimport { D3SvgElementSelection } from 'application/render/types';\n\nexport class NucleosideSequenceItemRenderer extends RNASequenceItemRenderer {\n  private nucleosideCircleElement?: D3SvgElementSelection<\n    SVGCircleElement,\n    void\n  >;\n\n  protected drawModification() {\n    const node = this.node as Nucleoside;\n    const nextNode = getNextMonomerInChain(node.sugar);\n\n    this.drawCommonModification(node);\n\n    if (this.nucleosideCircleElement) {\n      this.nucleosideCircleElement.remove();\n    }\n\n    // show modification for not last Nucleoside\n    if (nextNode && !(nextNode instanceof Phosphate)) {\n      this.nucleosideCircleElement = this.rootElement\n        ?.append('circle')\n        .attr('r', '3px')\n        .attr(\n          'stroke',\n          this.isSequenceEditInRnaBuilderModeTurnedOn ? '#24545A' : '#585858',\n        )\n        .attr('stroke-width', '1px')\n        .attr('fill', 'none')\n        .attr('cx', '10')\n        .attr('cy', '-16');\n    }\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PeptideSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return this.node.monomer.monomerItem.props.MonomerNaturalAnalogCode || '@';\n  }\n\n  protected drawModification() {}\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class PhosphateSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return 'p';\n  }\n\n  protected drawModification() {}\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\n\nexport class UnresolvedMonomerSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    return '?';\n  }\n\n  protected drawModification(): void {\n    return undefined;\n  }\n}\n","import { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { NO_NATURAL_ANALOGUE } from 'domain/constants/monomers';\n\nexport class UnsplitNucleotideSequenceItemRenderer extends BaseSequenceItemRenderer {\n  get symbolToDisplay(): string {\n    const naturalAnalogue =\n      this.node.monomer.monomerItem.props.MonomerNaturalAnalogCode;\n\n    return naturalAnalogue && naturalAnalogue !== NO_NATURAL_ANALOGUE\n      ? naturalAnalogue\n      : '@';\n  }\n\n  protected drawModification(): void {\n    return undefined;\n  }\n}\n","import {\n  PeptideRenderer,\n  ChemRenderer,\n  BaseMonomerRenderer,\n  RNABaseRenderer,\n  SugarRenderer,\n  PhosphateRenderer,\n  UnresolvedMonomerRenderer,\n  UnsplitNucleotideRenderer,\n} from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport {\n  Peptide,\n  Chem,\n  Sugar,\n  Phosphate,\n  RNABase,\n  UnresolvedMonomer,\n  UnsplitNucleotide,\n} from 'domain/entities';\nimport { KetMonomerClass } from 'application/formatters/types/ket';\n\ntype DerivedClass<T> = new (...args: unknown[]) => T;\nexport const MONOMER_CONST = {\n  AMINO_ACID: 'AminoAcid',\n  PEPTIDE: 'PEPTIDE',\n  CHEM: 'CHEM',\n  RNA: 'RNA',\n  DNA: 'DNA',\n  MODDNA: 'MODDNA',\n  R: 'R', // states for Ribose\n  P: 'P', // states for Phosphate\n  SUGAR: 'SUGAR',\n  BASE: 'BASE',\n  PHOSPHATE: 'PHOSPHATE',\n};\n\ntype Monomer =\n  | typeof Chem\n  | typeof Sugar\n  | typeof Peptide\n  | typeof RNABase\n  | typeof Phosphate;\n\nexport const monomerFactory = (\n  monomer: MonomerItemType,\n): [\n  Monomer: Monomer,\n  MonomerRenderer: DerivedClass<BaseMonomerRenderer>,\n  ketMonomerClass: KetMonomerClass,\n] => {\n  let Monomer;\n  let MonomerRenderer;\n  let ketMonomerClass: KetMonomerClass;\n\n  if (monomer.props.unresolved) {\n    Monomer = UnresolvedMonomer;\n    MonomerRenderer = UnresolvedMonomerRenderer;\n    ketMonomerClass = KetMonomerClass.CHEM;\n  } else if (\n    monomer.props.MonomerType === MONOMER_CONST.CHEM ||\n    (monomer.props.MonomerType === MONOMER_CONST.RNA &&\n      (monomer.props.MonomerClass === MONOMER_CONST.MODDNA ||\n        monomer.props.MonomerClass === MONOMER_CONST.DNA))\n  ) {\n    Monomer = Chem;\n    MonomerRenderer = ChemRenderer;\n    ketMonomerClass = KetMonomerClass.CHEM;\n  } else if (\n    monomer.props.MonomerClass === MONOMER_CONST.RNA ||\n    monomer.props.MonomerClass === MONOMER_CONST.DNA\n  ) {\n    Monomer = UnsplitNucleotide;\n    MonomerRenderer = UnsplitNucleotideRenderer;\n    ketMonomerClass = KetMonomerClass.RNA;\n  } else if (monomer.props.MonomerType === MONOMER_CONST.PEPTIDE) {\n    Monomer = Peptide;\n    MonomerRenderer = PeptideRenderer;\n    ketMonomerClass = KetMonomerClass.AminoAcid;\n  } else {\n    if (monomer.props.MonomerNaturalAnalogCode === MONOMER_CONST.R) {\n      Monomer = Sugar;\n      MonomerRenderer = SugarRenderer;\n      ketMonomerClass = KetMonomerClass.Sugar;\n    } else if (monomer.props.MonomerNaturalAnalogCode === MONOMER_CONST.P) {\n      Monomer = Phosphate;\n      MonomerRenderer = PhosphateRenderer;\n      ketMonomerClass = KetMonomerClass.Phosphate;\n    } else {\n      Monomer = RNABase;\n      MonomerRenderer = RNABaseRenderer;\n      ketMonomerClass = KetMonomerClass.Base;\n    }\n  }\n\n  return [Monomer, MonomerRenderer, ketMonomerClass];\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Peptide } from 'domain/entities/Peptide';\nimport { Chem } from 'domain/entities/Chem';\nimport { Sugar } from 'domain/entities/Sugar';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Vec2 } from 'domain/entities';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseMonomerRenderer } from 'application/render/renderers';\nimport { MonomerItemType } from 'domain/types';\nimport { monomerFactory } from '../operations/monomer/monomerFactory';\nimport assert from 'assert';\nimport { Coordinates } from '../shared/coordinates';\n\nclass MonomerTool implements BaseTool {\n  private monomerPreview:\n    | Peptide\n    | Chem\n    | Sugar\n    | RNABase\n    | Phosphate\n    | undefined;\n\n  private monomerPreviewRenderer: BaseMonomerRenderer | undefined;\n  readonly MONOMER_PREVIEW_SCALE_FACTOR = 0.8;\n  readonly MONOMER_PREVIEW_OFFSET_X = 30;\n  readonly MONOMER_PREVIEW_OFFSET_Y = 30;\n  history: EditorHistory;\n  constructor(private editor: CoreEditor, private monomer: MonomerItemType) {\n    this.editor = editor;\n    this.monomer = monomer;\n    this.history = new EditorHistory(this.editor);\n  }\n\n  mousedown() {\n    assert(this.monomerPreviewRenderer);\n    const position = Coordinates.canvasToModel(\n      new Vec2(\n        this.editor.lastCursorPositionOfCanvas.x,\n        this.editor.lastCursorPositionOfCanvas.y,\n      ),\n    );\n    const modelChanges = this.editor.drawingEntitiesManager.addMonomer(\n      this.monomer,\n      // We convert monomer coordinates from pixels to angstroms\n      // because the model layer (like BaseMonomer) should not work with pixels\n      position,\n    );\n\n    this.history.update(modelChanges);\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mousemove() {\n    const position = Coordinates.canvasToModel(\n      new Vec2(\n        this.editor.lastCursorPosition.x + this.MONOMER_PREVIEW_OFFSET_X,\n        this.editor.lastCursorPosition.y + this.MONOMER_PREVIEW_OFFSET_Y,\n      ),\n    );\n    this.monomerPreview?.moveAbsolute(position);\n    this.monomerPreviewRenderer?.move();\n  }\n\n  public mouseLeaveClientArea() {\n    this.hidePreview();\n  }\n\n  public mouseover() {\n    if (!this.monomerPreview) {\n      const [Monomer, MonomerRenderer] = monomerFactory(this.monomer);\n\n      this.monomerPreview = new Monomer(this.monomer);\n      this.monomerPreviewRenderer = new MonomerRenderer(\n        this.monomerPreview,\n        this.MONOMER_PREVIEW_SCALE_FACTOR,\n        false,\n      );\n      this.monomerPreviewRenderer?.show(this.editor.theme);\n    }\n  }\n\n  hidePreview() {\n    this.monomerPreviewRenderer?.remove();\n    this.monomerPreviewRenderer = undefined;\n    this.monomerPreview = undefined;\n  }\n\n  destroy(): void {\n    this.hidePreview();\n  }\n}\n\nexport { MonomerTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { BaseSequenceRenderer } from 'application/render/renderers/sequence/BaseSequenceRenderer';\nimport { SequenceMode } from '../modes';\n\nclass EraserTool implements BaseTool {\n  private history: EditorHistory;\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(editor);\n    if (\n      this.editor.drawingEntitiesManager.selectedEntities.length &&\n      !(this.editor.mode instanceof SequenceMode)\n    ) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.deleteSelectedEntities();\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  mousedown(event) {\n    const selectedItemRenderer = event.target.__data__;\n\n    if (selectedItemRenderer instanceof BaseSequenceRenderer) {\n      return;\n    }\n\n    if (selectedItemRenderer instanceof BaseRenderer) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.deleteDrawingEntity(\n          selectedItemRenderer.drawingEntity,\n        );\n      this.history.update(modelChanges);\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n\n  // TODO move hover logic somewhere to apply it for all or several tools from one place.\n  //  Currently it is duplicated from select-rectangle tool\n  mouseOverDrawingEntity(event) {\n    const renderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.intendToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mouseLeaveDrawingEntity(event) {\n    const renderer: BaseRenderer = event.target.__data__;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelIntentionToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  destroy() {}\n}\n\nexport { EraserTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Vec2 } from 'domain/entities';\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { brush as d3Brush, select } from 'd3';\nimport { BaseRenderer } from 'application/render/renderers/BaseRenderer';\nimport { Command } from 'domain/entities/Command';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { Coordinates } from '../shared/coordinates';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { DrawingEntity } from 'domain/entities/DrawingEntity';\nimport { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { SequenceMode } from '../modes';\nimport { isMacOs } from 'react-device-detect';\nimport { EraserTool } from './Erase';\n\nclass SelectRectangle implements BaseTool {\n  private brush;\n  private brushArea;\n  private moveStarted;\n  private mousePositionAfterMove = new Vec2(0, 0, 0);\n  private mousePositionBeforeMove = new Vec2(0, 0, 0);\n  private canvasResizeObserver?: ResizeObserver;\n  private history: EditorHistory;\n  private previousSelectedEntities: [number, DrawingEntity][] = [];\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(this.editor);\n    this.destroy();\n    this.createBrush();\n  }\n\n  private createBrush() {\n    this.brushArea = select(this.editor.canvas)\n      .insert('g', ':first-child')\n      .attr('id', 'rectangle-selection-area');\n\n    this.brush = d3Brush();\n\n    const brushed = (mo) => {\n      this.setSelectedEntities();\n      if (mo.selection) {\n        this.brushArea?.call(this.brush?.clear);\n      }\n    };\n\n    const onStartBrush = () => {\n      const editor = CoreEditor.provideEditorInstance();\n      if (editor.isSequenceEditInRNABuilderMode) {\n        this.brushArea.select('rect.selection').style('stroke', 'transparent');\n      } else {\n        this.brushArea.select('rect.selection').style('stroke', 'darkgrey');\n      }\n    };\n\n    const onBrush = (brushEvent) => {\n      const selection = brushEvent.selection;\n      const editor = CoreEditor.provideEditorInstance();\n      if (\n        !selection ||\n        editor.isSequenceEditMode ||\n        editor.isSequenceEditInRNABuilderMode\n      )\n        return;\n      requestAnimationFrame(() => {\n        const topLeftPoint = Coordinates.viewToCanvas(\n          new Vec2(selection[0][0], selection[0][1]),\n        );\n        const bottomRightPoint = Coordinates.viewToCanvas(\n          new Vec2(selection[1][0], selection[1][1]),\n        );\n\n        const modelChanges =\n          this.editor.drawingEntitiesManager.selectIfLocatedInRectangle(\n            topLeftPoint,\n            bottomRightPoint,\n            this.previousSelectedEntities,\n            brushEvent.sourceEvent.shiftKey,\n          );\n\n        this.editor.renderersContainer.update(modelChanges);\n      });\n    };\n\n    this.brush.on('start', onStartBrush);\n    this.brush.on('brush', onBrush);\n    this.brush.on('end', brushed);\n\n    this.brushArea.call(this.brush);\n\n    this.brushArea.select('rect.selection').style('fill', 'transparent');\n    this.brushArea.select('rect.overlay').attr('cursor', 'default');\n\n    const handleResizeCanvas = () => {\n      const { canvas } = this.editor;\n      if (canvas.clientWidth === 0 || canvas.clientHeight === 0) {\n        return;\n      }\n\n      this.brush\n        .extent([\n          [0, 0],\n          [canvas.width.baseVal.value, canvas.height.baseVal.value],\n        ])\n        .keyModifiers(false)\n        .filter((e) => {\n          e.preventDefault();\n          if (e.shiftKey) {\n            e.stopPropagation();\n          }\n          return true;\n        });\n\n      this.brushArea.call(this.brush);\n    };\n\n    const canvasElement = this.editor.canvas;\n\n    if (canvasElement) {\n      this.canvasResizeObserver = new ResizeObserver(handleResizeCanvas);\n      this.canvasResizeObserver.observe(canvasElement);\n    }\n  }\n\n  mousedown(event) {\n    if (CoreEditor.provideEditorInstance().isSequenceAnyEditMode) return;\n\n    const renderer = event.target.__data__;\n    this.mousePositionAfterMove = this.editor.lastCursorPositionOfCanvas;\n    this.mousePositionBeforeMove = this.editor.lastCursorPositionOfCanvas;\n    const ModKey = isMacOs ? event.metaKey : event.ctrlKey;\n\n    let modelChanges: Command;\n    if (renderer instanceof BaseRenderer && !event.shiftKey && !ModKey) {\n      this.moveStarted = true;\n      if (\n        renderer.drawingEntity.selected &&\n        !(this.editor.mode instanceof SequenceMode)\n      ) {\n        return;\n      }\n      modelChanges =\n        this.editor.drawingEntitiesManager.unselectAllDrawingEntities();\n      const { command: selectModelChanges } =\n        this.editor.drawingEntitiesManager.getAllSelectedEntitiesForSingleEntity(\n          renderer.drawingEntity,\n        );\n      modelChanges.merge(selectModelChanges);\n    } else if (renderer instanceof BaseRenderer && event.shiftKey) {\n      if (renderer.drawingEntity.selected) {\n        return;\n      }\n      const drawingEntities: DrawingEntity[] = [\n        ...this.editor.drawingEntitiesManager.selectedEntitiesArr,\n        renderer.drawingEntity,\n      ];\n      ({ command: modelChanges } =\n        this.editor.drawingEntitiesManager.getAllSelectedEntitiesForEntities(\n          drawingEntities,\n        ));\n    } else if (renderer instanceof BaseSequenceItemRenderer && ModKey) {\n      let drawingEntities: DrawingEntity[] = renderer.currentSubChain.nodes\n        .map((node) => {\n          if (node instanceof Nucleoside || node instanceof Nucleotide) {\n            return node.monomers;\n          } else {\n            return node.monomer;\n          }\n        })\n        .flat();\n      drawingEntities.forEach((entity) => entity.turnOnSelection());\n      const bondsInsideCurrentChain = renderer.currentSubChain.bonds.filter(\n        (bond) => bond.firstMonomer.selected && bond.secondMonomer?.selected,\n      );\n      drawingEntities = drawingEntities.concat(bondsInsideCurrentChain);\n      modelChanges =\n        this.editor.drawingEntitiesManager.selectDrawingEntities(\n          drawingEntities,\n        );\n    } else {\n      modelChanges =\n        this.editor.drawingEntitiesManager.unselectAllDrawingEntities();\n    }\n    this.editor.renderersContainer.update(modelChanges);\n    this.setSelectedEntities();\n  }\n\n  mousemove() {\n    if (this.editor.mode instanceof SequenceMode) {\n      return;\n    }\n    if (this.moveStarted) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.moveSelectedDrawingEntities(\n          Coordinates.canvasToModel(\n            new Vec2(\n              this.editor.lastCursorPositionOfCanvas.x -\n                this.mousePositionAfterMove.x,\n              this.editor.lastCursorPositionOfCanvas.y -\n                this.mousePositionAfterMove.y,\n            ),\n          ),\n        );\n      this.mousePositionAfterMove = this.editor.lastCursorPositionOfCanvas;\n      requestAnimationFrame(() => {\n        this.editor.renderersContainer.update(modelChanges);\n      });\n    }\n  }\n\n  mouseup(event) {\n    const renderer = event.target.__data__;\n    if (this.moveStarted && renderer?.drawingEntity?.selected) {\n      this.moveStarted = false;\n\n      if (\n        Vec2.diff(\n          this.mousePositionAfterMove,\n          this.mousePositionBeforeMove,\n        ).length() === 0\n      ) {\n        return;\n      }\n      const modelChanges =\n        this.editor.drawingEntitiesManager.moveSelectedDrawingEntities(\n          new Vec2(0, 0),\n          Coordinates.canvasToModel(\n            new Vec2(\n              this.mousePositionAfterMove.x - this.mousePositionBeforeMove.x,\n              this.mousePositionAfterMove.y - this.mousePositionBeforeMove.y,\n            ),\n          ),\n        );\n      this.history.update(modelChanges);\n    }\n  }\n\n  mouseOverDrawingEntity(event) {\n    const renderer = event.target.__data__;\n    const modelChanges =\n      this.editor.drawingEntitiesManager.intendToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  mouseLeaveDrawingEntity(event) {\n    const renderer: BaseRenderer = event.target.__data__;\n\n    const modelChanges =\n      this.editor.drawingEntitiesManager.cancelIntentionToSelectDrawingEntity(\n        renderer.drawingEntity,\n      );\n    this.editor.renderersContainer.update(modelChanges);\n  }\n\n  setSelectedEntities() {\n    this.previousSelectedEntities =\n      this.editor.drawingEntitiesManager.allEntities.filter(\n        ([, drawingEntity]) => drawingEntity.selected,\n      );\n  }\n\n  destroy() {\n    if (this.brush) {\n      this.brushArea.remove();\n      this.brush = null;\n      this.brushArea = null;\n    }\n\n    this.canvasResizeObserver?.disconnect();\n\n    if (!(this.editor.selectedTool instanceof EraserTool)) {\n      const modelChanges =\n        this.editor.drawingEntitiesManager.unselectAllDrawingEntities();\n\n      this.editor.renderersContainer.update(modelChanges);\n    }\n  }\n}\n\nexport { SelectRectangle };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { CoreEditor, EditorHistory } from 'application/editor/internal';\nimport { isSequenceMode } from 'application/editor/modes';\nimport { BaseTool } from 'application/editor/tools/Tool';\nimport { ReinitializeModeOperation } from 'application/editor/operations/modes';\n\nclass ClearTool implements BaseTool {\n  private history: EditorHistory;\n\n  constructor(private editor: CoreEditor) {\n    this.editor = editor;\n    this.history = new EditorHistory(editor);\n    const mode = editor.mode;\n    const isCurrentModeSequence = isSequenceMode(mode);\n    const isSequenceEditMode = isCurrentModeSequence && mode.isEditMode;\n\n    const modelChanges = this.editor.drawingEntitiesManager.deleteAllEntities();\n\n    if (isCurrentModeSequence) {\n      modelChanges.addOperation(new ReinitializeModeOperation());\n    }\n\n    this.editor.renderersContainer.update(modelChanges);\n    this.history.update(modelChanges);\n\n    if (isSequenceEditMode) {\n      mode.startNewSequence();\n    }\n  }\n\n  destroy() {}\n}\n\nexport { ClearTool };\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { ToolConstructorInterface } from './Tool';\nimport { MonomerTool } from 'application/editor/tools/Monomer';\nimport { RnaPresetTool } from 'application/editor/tools/RnaPreset';\nimport { SelectRectangle } from 'application/editor/tools/SelectRectangle';\nimport { PolymerBond } from 'application/editor/tools/Bond';\nimport { EraserTool } from 'application/editor/tools/Erase';\nimport { ClearTool } from 'application/editor/tools/Clear';\n\nexport const toolsMap: Record<string, ToolConstructorInterface> = {\n  monomer: MonomerTool,\n  preset: RnaPresetTool,\n  'select-rectangle': SelectRectangle,\n  'bond-single': PolymerBond,\n  erase: EraserTool,\n  clear: ClearTool,\n};\n\nexport * from './Tool';\nexport * from './Zoom';\n","import {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  Pile,\n  SGroup,\n  SGroupAttachmentPoint,\n  Struct,\n  Vec2,\n} from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { ReAtom, ReBond, ReSGroup, ReStruct } from 'application/render';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { MonomerMicromolecule } from 'domain/entities/monomerMicromolecule';\nimport { Command } from 'domain/entities/Command';\nimport { MONOMER_CONST } from 'application/editor/operations/monomer/monomerFactory';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport assert from 'assert';\nimport { AttachmentPointName } from 'domain/types';\nimport {\n  getAttachmentPointLabel,\n  getAttachmentPointNumberFromLabel,\n} from 'domain/helpers/attachmentPointCalculations';\nimport { isNumber } from 'lodash';\nimport { IKetAttachmentPoint } from 'application/formatters';\n\nexport class MacromoleculesConverter {\n  private static convertMonomerToMonomerMicromolecule(\n    monomer: BaseMonomer,\n    struct: Struct,\n  ) {\n    const monomerMicromolecule = new MonomerMicromolecule(\n      SGroup.TYPES.SUP,\n      monomer,\n    );\n    const sgroupId = struct.sgroups.add(monomerMicromolecule);\n\n    monomerMicromolecule.data.name = monomer.monomerItem.label;\n    monomerMicromolecule.data.expanded = false;\n    monomerMicromolecule.id = sgroupId;\n    monomerMicromolecule.pp = monomer.position;\n\n    return monomerMicromolecule;\n  }\n\n  private static addMonomerAtomToStruct(\n    atom: Atom,\n    monomer: BaseMonomer,\n    monomerMicromolecule: MonomerMicromolecule,\n    struct: Struct,\n  ) {\n    const atomClone = atom.clone();\n    atomClone.pp = monomer.position.add(atom.pp);\n    atomClone.sgs = new Pile<number>([monomerMicromolecule.id]);\n    atomClone.fragment = -1;\n    const atomId = struct.atoms.add(atomClone);\n    monomerMicromolecule.atoms.push(atomId);\n\n    return { atomId, atom: atomClone };\n  }\n\n  public static convertAttachmentPointNameToNumber(\n    attachmentPointName: AttachmentPointName,\n  ) {\n    return Number(attachmentPointName?.replace('R', ''));\n  }\n\n  public static findAttachmentPointAtom(\n    polymerBond: PolymerBond,\n    monomer: BaseMonomer,\n    monomerToAtomIdMap: Map<BaseMonomer, Map<number, number>>,\n  ) {\n    const attachmentPointName = monomer.getAttachmentPointByBond(polymerBond);\n\n    if (!attachmentPointName) {\n      return {\n        attachmentAtomId: undefined,\n        attachmentPointNumber: undefined,\n      };\n    }\n\n    const attachmentPointNumber =\n      MacromoleculesConverter.convertAttachmentPointNameToNumber(\n        attachmentPointName,\n      );\n    const attachmentPointIndex =\n      monomer.listOfAttachmentPoints.indexOf(attachmentPointName);\n    const attachmentPoint =\n      monomer.monomerItem.attachmentPoints?.[attachmentPointIndex];\n    const atomIdMap = monomerToAtomIdMap.get(monomer);\n\n    return {\n      globalAttachmentAtomId:\n        isNumber(attachmentPoint?.attachmentAtom) &&\n        atomIdMap?.get(attachmentPoint?.attachmentAtom as number),\n      attachmentAtomId:\n        isNumber(attachmentPoint?.attachmentAtom) &&\n        attachmentPoint?.attachmentAtom,\n      attachmentPointNumber,\n    };\n  }\n\n  public static convertDrawingEntitiesToStruct(\n    drawingEntitiesManager: DrawingEntitiesManager,\n    struct: Struct,\n    reStruct?: ReStruct,\n  ) {\n    const monomerToAtomIdMap = new Map<BaseMonomer, Map<number, number>>();\n\n    drawingEntitiesManager.micromoleculesHiddenEntities.mergeInto(struct);\n\n    drawingEntitiesManager.clearMicromoleculesHiddenEntities();\n    drawingEntitiesManager.monomers.forEach((monomer) => {\n      if (monomer.monomerItem.props.isMicromoleculeFragment) {\n        const atomIdMap = new Map<number, number>();\n        monomer.monomerItem.struct.mergeInto(\n          struct,\n          null,\n          null,\n          false,\n          false,\n          atomIdMap,\n        );\n        monomerToAtomIdMap.set(monomer, atomIdMap);\n      } else {\n        const atomIdsMap = new Map<number, number>();\n        const monomerMicromolecule = this.convertMonomerToMonomerMicromolecule(\n          monomer,\n          struct,\n        );\n        reStruct?.sgroups.set(\n          monomerMicromolecule.id,\n          new ReSGroup(monomerMicromolecule),\n        );\n\n        monomer.monomerItem.struct.atoms.forEach((oldAtom, oldAtomId) => {\n          const { atom, atomId } = this.addMonomerAtomToStruct(\n            oldAtom,\n            monomer,\n            monomerMicromolecule,\n            struct,\n          );\n          atomIdsMap.set(oldAtomId, atomId);\n          monomerToAtomIdMap.set(monomer, atomIdsMap);\n          reStruct?.atoms.set(atomId, new ReAtom(atom));\n        });\n\n        monomerMicromolecule.addAttachmentPoints(\n          monomer.listOfAttachmentPoints.map(\n            (attachmentPointName, attachmentPointIndex) => {\n              const attachmentPointNumber =\n                getAttachmentPointNumberFromLabel(attachmentPointName);\n              const attachmentPoint = monomer.monomerItem.attachmentPoints?.[\n                attachmentPointIndex\n              ] as IKetAttachmentPoint;\n\n              return new SGroupAttachmentPoint(\n                atomIdsMap.get(attachmentPoint.attachmentAtom) as number,\n                atomIdsMap.get(attachmentPoint.leavingGroup?.atoms[0]),\n                undefined,\n                attachmentPointNumber,\n              );\n            },\n          ) || [],\n        );\n        struct.sGroupForest.insert(monomerMicromolecule);\n        monomer.monomerItem.struct.bonds.forEach((bond) => {\n          const bondClone = bond.clone();\n          bondClone.begin = atomIdsMap.get(bondClone.begin) as number;\n          bondClone.end = atomIdsMap.get(bondClone.end) as number;\n          const bondId = struct.bonds.add(bondClone);\n          reStruct?.bonds.set(bondId, new ReBond(bondClone));\n        });\n\n        struct.functionalGroups.add(new FunctionalGroup(monomerMicromolecule));\n      }\n    });\n\n    let conversionErrorMessage = '';\n\n    drawingEntitiesManager.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      const {\n        globalAttachmentAtomId: beginAtom,\n        attachmentPointNumber: beginSuperatomAttachmentPointNumber,\n      } = this.findAttachmentPointAtom(\n        polymerBond,\n        polymerBond.firstMonomer,\n        monomerToAtomIdMap,\n      );\n      const {\n        globalAttachmentAtomId: endAtom,\n        attachmentPointNumber: endSuperatomAttachmentPointNumber,\n      } = this.findAttachmentPointAtom(\n        polymerBond,\n        polymerBond.secondMonomer,\n        monomerToAtomIdMap,\n      );\n\n      if (!isNumber(beginAtom) || !isNumber(endAtom)) {\n        conversionErrorMessage =\n          'There is no atom for provided attachment point. Bond between monomers was not created.';\n\n        return;\n      }\n\n      const bond = new Bond({\n        type: Bond.PATTERN.TYPE.SINGLE,\n        begin: beginAtom,\n        end: endAtom,\n        beginSuperatomAttachmentPointNumber,\n        endSuperatomAttachmentPointNumber,\n      });\n      const bondId = struct.bonds.add(bond);\n      reStruct?.bonds.set(bondId, new ReBond(bond));\n    });\n\n    return { struct, reStruct, conversionErrorMessage };\n  }\n\n  private static convertMonomerMicromoleculeToMonomer(\n    monomerMicromolecule: MonomerMicromolecule,\n    drawingEntitiesManager: DrawingEntitiesManager,\n    sgroupToMonomer: Map<SGroup, BaseMonomer>,\n  ) {\n    const command = new Command();\n    const monomerAdditionCommand = drawingEntitiesManager.addMonomer(\n      monomerMicromolecule.monomer.monomerItem,\n      monomerMicromolecule.pp as Vec2,\n    );\n    command.merge(monomerAdditionCommand);\n    sgroupToMonomer.set(\n      monomerMicromolecule,\n      monomerAdditionCommand.operations[0].monomer as BaseMonomer,\n    );\n\n    return command;\n  }\n\n  private static convertFragmentToChem(\n    fragmentNumber: number,\n    fragmentStruct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const fragmentBbox = fragmentStruct.getCoordBoundingBox();\n    return drawingEntitiesManager.addMonomer(\n      {\n        struct: fragmentStruct,\n        label: 'F' + fragmentNumber,\n        colorScheme: undefined,\n        favorite: false,\n        props: {\n          Name: 'F' + fragmentNumber,\n          MonomerNaturalAnalogCode: '',\n          MonomerName: 'F' + fragmentNumber,\n          MonomerType: MONOMER_CONST.CHEM,\n          isMicromoleculeFragment: true,\n        },\n      },\n      new Vec2(\n        fragmentBbox.max.x - (fragmentBbox.max.x - fragmentBbox.min.x) / 2,\n        fragmentBbox.max.y - (fragmentBbox.max.y - fragmentBbox.min.y) / 2,\n      ),\n    );\n  }\n\n  public static getAttachmentPointLabel(atom: Atom) {\n    let attachmentPointLabel = '';\n    const atomRglabel = Number(atom.rglabel);\n    assert(Number.isInteger(atomRglabel));\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atomRglabel & (1 << rgi)) {\n        attachmentPointLabel = 'R' + (rgi + 1).toString();\n      }\n    }\n    return attachmentPointLabel;\n  }\n\n  // This method returns array of arrays of fragmentIds grouped by sgroup\n  // It needs to serialize/deserialize several molecules grouped by sgroup as a single molecule\n  public static getFragmentsGroupedBySgroup(struct: Struct) {\n    const groupedFragments: number[][] = [];\n    struct.frags.forEach((_fragment, fragmentId) => {\n      const isAlreadyGrouped = groupedFragments.find((fragmentsGroup) =>\n        fragmentsGroup.includes(fragmentId),\n      );\n      if (isAlreadyGrouped) {\n        return;\n      }\n\n      // Find all sgroups related to fragment\n      const fragmentSgroups = new Set<SGroup>();\n      struct.atoms.forEach((atom, atomId) => {\n        if (atom.fragment !== fragmentId) return;\n        const sgroup = struct.getGroupFromAtomId(atomId);\n        if (sgroup) {\n          fragmentSgroups.add(sgroup);\n        }\n      });\n\n      // Add new group of fragments with fragments related to one sgroup\n      const lastFragmentGroupIndex = groupedFragments.push([fragmentId]) - 1;\n      fragmentSgroups.forEach((sgroup) => {\n        sgroup.atoms.forEach((aid) => {\n          const atomFragmentId = struct.atoms.get(aid)?.fragment;\n          if (\n            atomFragmentId &&\n            !groupedFragments[lastFragmentGroupIndex].includes(atomFragmentId)\n          ) {\n            groupedFragments[lastFragmentGroupIndex].push(atomFragmentId);\n          }\n        });\n      });\n    });\n\n    return groupedFragments;\n  }\n\n  public static convertStructToDrawingEntities(\n    struct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const sgroupToMonomer = new Map<SGroup, BaseMonomer>();\n    const fragmentIdToMonomer = new Map<number, BaseMonomer>();\n    const command = new Command();\n    struct.sgroups.forEach((sgroup) => {\n      if (sgroup instanceof MonomerMicromolecule) {\n        command.merge(\n          this.convertMonomerMicromoleculeToMonomer(\n            sgroup,\n            drawingEntitiesManager,\n            sgroupToMonomer,\n          ),\n        );\n      }\n    });\n    const fragments = this.getFragmentsGroupedBySgroup(struct);\n\n    let fragmentNumber = 1;\n    fragments.forEach((_fragment) => {\n      const fragmentStruct = struct.getFragment(_fragment, false);\n      const monomerAddCommand = this.convertFragmentToChem(\n        fragmentNumber,\n        fragmentStruct,\n        drawingEntitiesManager,\n      );\n      _fragment.forEach((_fid) => {\n        fragmentIdToMonomer.set(\n          _fid as number,\n          monomerAddCommand.operations[0].monomer as BaseMonomer,\n        );\n      });\n      command.merge(monomerAddCommand);\n      fragmentNumber++;\n    });\n    const superatomAttachmentPointToBond = new Map<\n      SGroupAttachmentPoint,\n      Bond\n    >();\n\n    struct.bonds.forEach((bond) => {\n      const beginAtom = struct.atoms.get(bond.begin) as Atom;\n      const endAtom = struct.atoms.get(bond.end) as Atom;\n      const beginAtomSgroup = struct.getGroupFromAtomId(bond.begin);\n      const beginAtomSgroupAttachmentPoints =\n        beginAtomSgroup?.getAttachmentPoints();\n      const endAtomSgroup = struct.getGroupFromAtomId(bond.end);\n      const endAtomSgroupAttachmentPoints =\n        endAtomSgroup?.getAttachmentPoints();\n      const beginAtomAttachmentPointNumber = isNumber(\n        bond.beginSuperatomAttachmentPointNumber,\n      )\n        ? bond.beginSuperatomAttachmentPointNumber\n        : beginAtomSgroupAttachmentPoints?.findIndex(\n            (sgroupAttachmentPoint) =>\n              sgroupAttachmentPoint.atomId === bond.begin &&\n              !superatomAttachmentPointToBond.has(sgroupAttachmentPoint),\n          );\n      const beginAtomAttachmentPoint =\n        isNumber(beginAtomAttachmentPointNumber) &&\n        beginAtomSgroupAttachmentPoints?.find(\n          (attachmentPoint) =>\n            attachmentPoint.attachmentPointNumber ===\n            beginAtomAttachmentPointNumber,\n        );\n      const endAtomAttachmentPointNumber = isNumber(\n        bond.endSuperatomAttachmentPointNumber,\n      )\n        ? bond.endSuperatomAttachmentPointNumber\n        : endAtomSgroupAttachmentPoints?.findIndex(\n            (sgroupAttachmentPoint) =>\n              sgroupAttachmentPoint.atomId === bond.end &&\n              !superatomAttachmentPointToBond.has(sgroupAttachmentPoint),\n          );\n      const endAtomAttachmentPoint =\n        isNumber(endAtomAttachmentPointNumber) &&\n        endAtomSgroupAttachmentPoints?.find(\n          (attachmentPoint) =>\n            attachmentPoint.attachmentPointNumber ===\n            endAtomAttachmentPointNumber,\n        );\n\n      if (beginAtomAttachmentPoint) {\n        superatomAttachmentPointToBond.set(beginAtomAttachmentPoint, bond);\n      }\n      if (endAtomAttachmentPoint) {\n        superatomAttachmentPointToBond.set(endAtomAttachmentPoint, bond);\n      }\n      if (\n        endAtomSgroup !== beginAtomSgroup &&\n        isNumber(beginAtomAttachmentPointNumber) &&\n        isNumber(endAtomAttachmentPointNumber) &&\n        beginAtomSgroup &&\n        endAtomSgroup &&\n        (beginAtomSgroup instanceof MonomerMicromolecule ||\n          beginAtomSgroup.isSuperatomWithoutLabel) &&\n        (endAtomSgroup instanceof MonomerMicromolecule ||\n          endAtomSgroup.isSuperatomWithoutLabel)\n      ) {\n        // Here we take monomers from sgroupToMonomer in case of macromolecules structure and\n        // from fragmentIdToMonomer in case of micromolecules structure.\n        const firstMonomer =\n          beginAtomSgroup instanceof MonomerMicromolecule\n            ? sgroupToMonomer.get(beginAtomSgroup)\n            : fragmentIdToMonomer.get(beginAtom.fragment);\n        const secondMonomer =\n          endAtomSgroup instanceof MonomerMicromolecule\n            ? sgroupToMonomer.get(endAtomSgroup)\n            : fragmentIdToMonomer.get(endAtom.fragment);\n\n        assert(firstMonomer);\n        assert(secondMonomer);\n\n        command.merge(\n          drawingEntitiesManager.createPolymerBond(\n            firstMonomer,\n            secondMonomer,\n            getAttachmentPointLabel(beginAtomAttachmentPointNumber),\n            getAttachmentPointLabel(endAtomAttachmentPointNumber),\n          ),\n        );\n      }\n    });\n    drawingEntitiesManager.setMicromoleculesHiddenEntities(struct);\n\n    return { drawingEntitiesManager, modelChanges: command };\n  }\n}\n","import { DOMSubscription } from 'subscription';\nimport { SequenceType, Struct, Vec2 } from 'domain/entities';\nimport {\n  BaseTool,\n  IRnaPreset,\n  isBaseTool,\n  Tool,\n  ToolConstructorInterface,\n  ToolEventHandlerName,\n} from 'application/editor/tools/Tool';\nimport { PolymerBond as PolymerBondTool } from 'application/editor/tools/Bond';\nimport { toolsMap } from 'application/editor/tools';\nimport { AttachmentPointName, MonomerItemType } from 'domain/types';\nimport { RenderersManager } from 'application/render/renderers/RenderersManager';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport ZoomTool from './tools/Zoom';\nimport { Coordinates } from './shared/coordinates';\nimport {\n  editorEvents,\n  hotkeysConfiguration,\n  renderersEvents,\n  resetEditorEvents,\n} from 'application/editor/editorEvents';\nimport { EditorHistory, HistoryOperationType } from './EditorHistory';\nimport { Editor } from 'application/editor/editor.types';\nimport { MacromoleculesConverter } from 'application/editor/MacromoleculesConverter';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { ketcherProvider } from 'application/utils';\nimport { initHotKeys, KetcherLogger, keyNorm } from 'utilities';\nimport {\n  LayoutMode,\n  modesMap,\n  SequenceMode,\n  SnakeMode,\n} from 'application/editor/modes/';\nimport { BaseMode } from 'application/editor/modes/internal';\nimport assert from 'assert';\nimport { BaseSequenceItemRenderer } from 'application/render/renderers/sequence/BaseSequenceItemRenderer';\nimport { SequenceRenderer } from 'application/render/renderers/sequence/SequenceRenderer';\nimport {\n  IKetMacromoleculesContent,\n  IKetMonomerGroupTemplate,\n  KetMonomerGroupTemplateClass,\n  KetTemplateType,\n} from 'application/formatters';\nimport { KetSerializer } from 'domain/serializers';\nimport monomersDataRaw from './data/monomers.ket';\nimport { drawnStructuresSelector } from 'application/editor/constants';\nimport { PolymerBondRenderer } from 'application/render';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { Command } from 'domain/entities/Command';\n\ninterface ICoreEditorConstructorParams {\n  theme;\n  canvas: SVGSVGElement;\n  mode?: BaseMode;\n}\n\nfunction isMouseMainButtonPressed(event: MouseEvent) {\n  return event.button === 0;\n}\n\nlet editor;\nexport class CoreEditor {\n  public events;\n\n  public renderersContainer: RenderersManager;\n  public drawingEntitiesManager: DrawingEntitiesManager;\n  public lastCursorPosition: Vec2 = new Vec2(0, 0);\n  public lastCursorPositionOfCanvas: Vec2 = new Vec2(0, 0);\n  private _monomersLibraryParsedJson?: IKetMacromoleculesContent;\n  private _monomersLibrary: MonomerItemType[] = [];\n  public canvas: SVGSVGElement;\n  public drawnStructuresWrapperElement: SVGGElement;\n  public canvasOffset: DOMRect;\n  public theme;\n  public zoomTool: ZoomTool;\n  // private lastEvent: Event | undefined;\n  private tool?: Tool | BaseTool | undefined;\n  public get selectedTool(): Tool | BaseTool | undefined {\n    return this.tool;\n  }\n\n  public mode: BaseMode;\n  public sequenceTypeEnterMode = SequenceType.RNA;\n  private micromoleculesEditor: Editor;\n  private hotKeyEventHandler: (event: unknown) => void = () => {};\n  private copyEventHandler: (event: ClipboardEvent) => void = () => {};\n  private pasteEventHandler: (event: ClipboardEvent) => void = () => {};\n  private keydownEventHandler: (event: KeyboardEvent) => void = () => {};\n\n  constructor({ theme, canvas, mode }: ICoreEditorConstructorParams) {\n    this.theme = theme;\n    this.canvas = canvas;\n    this.drawnStructuresWrapperElement = canvas.querySelector(\n      drawnStructuresSelector,\n    ) as SVGGElement;\n    this.mode = mode ?? new SequenceMode();\n    resetEditorEvents();\n    this.events = editorEvents;\n    this.setMonomersLibrary(monomersDataRaw);\n    this._monomersLibraryParsedJson = JSON.parse(monomersDataRaw);\n    this.subscribeEvents();\n    this.renderersContainer = new RenderersManager({ theme });\n    this.drawingEntitiesManager = new DrawingEntitiesManager();\n    this.domEventSetup();\n    this.setupContextMenuEvents();\n    this.setupKeyboardEvents();\n    this.setupCopyPasteEvent();\n    this.canvasOffset = this.canvas.getBoundingClientRect();\n    this.zoomTool = ZoomTool.initInstance(this.drawingEntitiesManager);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    editor = this;\n    const ketcher = ketcherProvider.getKetcher();\n    this.micromoleculesEditor = ketcher?.editor;\n    this.switchToMacromolecules();\n    this.rerenderSequenceMode();\n  }\n\n  static provideEditorInstance(): CoreEditor {\n    return editor;\n  }\n\n  private setMonomersLibrary(monomersDataRaw: string) {\n    const monomersLibraryParsedJson = JSON.parse(monomersDataRaw);\n    this._monomersLibraryParsedJson = monomersLibraryParsedJson;\n    const serializer = new KetSerializer();\n    this._monomersLibrary = serializer.convertMonomersLibrary(\n      monomersLibraryParsedJson,\n    );\n  }\n\n  public get monomersLibraryParsedJson() {\n    return this._monomersLibraryParsedJson;\n  }\n\n  public get monomersLibrary() {\n    return this._monomersLibrary;\n  }\n\n  public get defaultRnaPresetsLibraryItems() {\n    const monomersLibraryJson = this.monomersLibraryParsedJson;\n\n    if (!monomersLibraryJson) {\n      return [];\n    }\n\n    return monomersLibraryJson.root.templates\n      .filter((templateRef) => {\n        const template = monomersLibraryJson[templateRef.$ref];\n\n        return (\n          template.type === KetTemplateType.MONOMER_GROUP_TEMPLATE &&\n          template.class === KetMonomerGroupTemplateClass.RNA\n        );\n      })\n      .map(\n        (templateRef) => monomersLibraryJson[templateRef.$ref],\n      ) as IKetMonomerGroupTemplate[];\n  }\n\n  private handleHotKeyEvents(event) {\n    const keySettings = hotkeysConfiguration;\n    const hotKeys = initHotKeys(keySettings);\n    const shortcutKey = keyNorm.lookup(hotKeys, event);\n    const isInput =\n      event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA';\n\n    if (keySettings[shortcutKey]?.handler && !isInput) {\n      keySettings[shortcutKey].handler(this);\n      event.preventDefault();\n    }\n  }\n\n  private setupKeyboardEvents() {\n    this.setupHotKeysEvents();\n    this.keydownEventHandler = async (event: KeyboardEvent) => {\n      await this.mode.onKeyDown(event);\n    };\n\n    document.addEventListener('keydown', this.keydownEventHandler);\n  }\n\n  private setupCopyPasteEvent() {\n    this.copyEventHandler = (event: ClipboardEvent) => {\n      this.mode.onCopy(event);\n    };\n    this.pasteEventHandler = (event: ClipboardEvent) => {\n      this.mode.onPaste(event);\n    };\n    document.addEventListener('copy', this.copyEventHandler);\n    document.addEventListener('paste', this.pasteEventHandler);\n  }\n\n  private setupHotKeysEvents() {\n    this.hotKeyEventHandler = (event) => this.handleHotKeyEvents(event);\n    document.addEventListener('keydown', this.hotKeyEventHandler);\n  }\n\n  private setupContextMenuEvents() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      const eventData = event.target?.__data__;\n\n      if (eventData instanceof BaseSequenceItemRenderer) {\n        this.events.rightClickSequence.dispatch(\n          event,\n          SequenceRenderer.selections,\n        );\n      } else if (eventData instanceof PolymerBondRenderer) {\n        this.events.rightClickPolymerBond.dispatch(event, eventData);\n      } else {\n        this.events.rightClickCanvas.dispatch(event);\n      }\n\n      return false;\n    });\n  }\n\n  private subscribeEvents() {\n    this.events.selectMonomer.add((monomer) => this.onSelectMonomer(monomer));\n    this.events.selectPreset.add((preset) => this.onSelectRNAPreset(preset));\n    this.events.selectTool.add((tool) => this.onSelectTool(tool));\n    this.events.createBondViaModal.add((payload) => this.onCreateBond(payload));\n    this.events.cancelBondCreationViaModal.add((secondMonomer: BaseMonomer) =>\n      this.onCancelBondCreation(secondMonomer),\n    );\n    this.events.selectMode.add((isSnakeMode) => this.onSelectMode(isSnakeMode));\n    this.events.selectHistory.add((name) => this.onSelectHistory(name));\n\n    renderersEvents.forEach((eventName) => {\n      this.events[eventName].add((event) => {\n        this.useModeIfNeeded(eventName, event);\n        this.useToolIfNeeded(eventName, event);\n      });\n    });\n    this.events.editSequence.add(\n      (sequenceItemRenderer: BaseSequenceItemRenderer) =>\n        this.onEditSequence(sequenceItemRenderer),\n    );\n\n    this.events.turnOnSequenceEditInRNABuilderMode.add(() =>\n      this.onTurnOnSequenceEditInRNABuilderMode(),\n    );\n    this.events.turnOffSequenceEditInRNABuilderMode.add(() =>\n      this.onTurnOffSequenceEditInRNABuilderMode(),\n    );\n    this.events.changeSequenceTypeEnterMode.add((mode: SequenceType) =>\n      this.onChangeSequenceTypeEnterMode(mode),\n    );\n  }\n\n  private onEditSequence(sequenceItemRenderer: BaseSequenceItemRenderer) {\n    if (!(this.mode instanceof SequenceMode)) {\n      return;\n    }\n\n    this.mode.turnOnEditMode(sequenceItemRenderer);\n  }\n\n  private onTurnOnSequenceEditInRNABuilderMode() {\n    if (!(this.mode instanceof SequenceMode)) {\n      return;\n    }\n\n    this.mode.turnOnSequenceEditInRNABuilderMode();\n  }\n\n  private onTurnOffSequenceEditInRNABuilderMode() {\n    if (!(this.mode instanceof SequenceMode)) {\n      return;\n    }\n\n    this.mode.turnOffSequenceEditInRNABuilderMode();\n  }\n\n  private onChangeSequenceTypeEnterMode(mode: SequenceType) {\n    this.sequenceTypeEnterMode = mode;\n  }\n\n  private onSelectMonomer(monomer: MonomerItemType) {\n    if (this.mode instanceof SequenceMode) {\n      this.mode.insertMonomerFromLibrary(monomer);\n    } else {\n      this.selectTool('monomer', monomer);\n    }\n  }\n\n  private onSelectRNAPreset(preset: IRnaPreset) {\n    if (this.mode instanceof SequenceMode) {\n      this.mode.insertPresetFromLibrary(preset);\n    } else {\n      if (preset) {\n        this.selectTool('preset', preset);\n      } else {\n        this.tool = undefined;\n      }\n    }\n  }\n\n  public onSelectTool(tool: string) {\n    this.selectTool(tool);\n  }\n\n  private onCreateBond(payload: {\n    firstMonomer: BaseMonomer;\n    secondMonomer: BaseMonomer;\n    firstSelectedAttachmentPoint: AttachmentPointName;\n    secondSelectedAttachmentPoint: AttachmentPointName;\n    polymerBond?: PolymerBond;\n    isReconnection?: boolean;\n    initialFirstMonomerAttachmentPoint?: AttachmentPointName;\n    initialSecondMonomerAttachmentPoint?: AttachmentPointName;\n  }) {\n    if (\n      payload.isReconnection &&\n      payload.polymerBond &&\n      (payload.firstSelectedAttachmentPoint !==\n        payload.initialFirstMonomerAttachmentPoint ||\n        payload.secondSelectedAttachmentPoint !==\n          payload.initialSecondMonomerAttachmentPoint)\n    ) {\n      const command = new Command();\n      const history = new EditorHistory(this);\n\n      if (\n        !payload.initialFirstMonomerAttachmentPoint ||\n        !payload.initialSecondMonomerAttachmentPoint\n      ) {\n        KetcherLogger.error('Attachment points are not found for the bond');\n\n        return;\n      }\n\n      command.merge(\n        this.drawingEntitiesManager.reconnectPolymerBond(\n          payload.polymerBond,\n          payload.firstSelectedAttachmentPoint,\n          payload.secondSelectedAttachmentPoint,\n          payload.initialFirstMonomerAttachmentPoint,\n          payload.initialSecondMonomerAttachmentPoint,\n        ),\n      );\n\n      if (this.mode instanceof SnakeMode) {\n        command.merge(\n          this.drawingEntitiesManager.recalculateCanvasMatrix(\n            this.drawingEntitiesManager.canvasMatrix?.chainsCollection,\n            this.drawingEntitiesManager.snakeLayoutMatrix,\n          ),\n        );\n      }\n\n      history.update(command);\n      this.renderersContainer.update(command);\n\n      return;\n    }\n\n    if (this.tool instanceof PolymerBondTool) {\n      this.tool.handleBondCreation(payload);\n    }\n  }\n\n  private onCancelBondCreation(secondMonomer: BaseMonomer) {\n    if (this.tool instanceof PolymerBondTool) {\n      this.tool.handleBondCreationCancellation(secondMonomer);\n    }\n  }\n\n  private onSelectMode(\n    data:\n      | LayoutMode\n      | { mode: LayoutMode; mergeWithLatestHistoryCommand: boolean },\n  ) {\n    const mode = typeof data === 'object' ? data.mode : data;\n    const ModeConstructor = modesMap[mode];\n    assert(ModeConstructor);\n    const history = new EditorHistory(this);\n    this.mode.destroy();\n    this.mode = new ModeConstructor(this.mode.modeName);\n    const command = this.mode.initialize();\n    history.update(\n      command,\n      typeof data === 'object' ? data?.mergeWithLatestHistoryCommand : false,\n    );\n  }\n\n  public setMode(mode: BaseMode) {\n    this.mode = mode;\n  }\n\n  public get isSequenceMode() {\n    return this?.mode instanceof SequenceMode;\n  }\n\n  public get isSequenceEditMode() {\n    return this?.mode instanceof SequenceMode && this?.mode.isEditMode;\n  }\n\n  public get isSequenceEditInRNABuilderMode() {\n    return (\n      this?.mode instanceof SequenceMode && this?.mode.isEditInRNABuilderMode\n    );\n  }\n\n  public get isSequenceAnyEditMode() {\n    return (\n      this?.mode instanceof SequenceMode &&\n      (this?.mode.isEditMode || this?.mode.isEditInRNABuilderMode)\n    );\n  }\n\n  public onSelectHistory(name: HistoryOperationType) {\n    const history = new EditorHistory(this);\n    if (name === 'undo') {\n      history.undo();\n    } else if (name === 'redo') {\n      history.redo();\n    }\n  }\n\n  public selectTool(name: string, options?) {\n    const ToolConstructor: ToolConstructorInterface = toolsMap[name];\n    const oldTool = this.tool;\n\n    this.tool = new ToolConstructor(this, options);\n\n    if (isBaseTool(oldTool)) {\n      oldTool?.destroy();\n    }\n  }\n\n  public unsubscribeEvents() {\n    for (const eventName in this.events) {\n      this.events[eventName].handlers = [];\n    }\n    document.removeEventListener('keydown', this.hotKeyEventHandler);\n    document.removeEventListener('copy', this.copyEventHandler);\n    document.removeEventListener('paste', this.pasteEventHandler);\n    document.removeEventListener('keydown', this.keydownEventHandler);\n  }\n\n  get trackedDomEvents() {\n    const trackedDomEvents: {\n      target: Element | Document;\n      eventName: string;\n      toolEventHandler: ToolEventHandlerName;\n    }[] = [\n      {\n        target: this.canvas,\n        eventName: 'click',\n        toolEventHandler: 'click',\n      },\n      {\n        target: this.canvas,\n        eventName: 'dblclick',\n        toolEventHandler: 'dblclick',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mousedown',\n        toolEventHandler: 'mousedown',\n      },\n      {\n        target: document,\n        eventName: 'mousemove',\n        toolEventHandler: 'mousemove',\n      },\n      {\n        target: document,\n        eventName: 'mouseup',\n        toolEventHandler: 'mouseup',\n      },\n      {\n        target: document,\n        eventName: 'mouseleave',\n        toolEventHandler: 'mouseleave',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mouseleave',\n        toolEventHandler: 'mouseLeaveClientArea',\n      },\n      {\n        target: this.canvas,\n        eventName: 'mouseover',\n        toolEventHandler: 'mouseover',\n      },\n    ];\n\n    return trackedDomEvents;\n  }\n\n  private domEventSetup() {\n    this.trackedDomEvents.forEach(({ target, eventName, toolEventHandler }) => {\n      this.events[eventName] = new DOMSubscription();\n      const subs = this.events[eventName];\n\n      target.addEventListener(eventName, subs.dispatch.bind(subs));\n\n      subs.add((event) => {\n        this.updateLastCursorPosition(event);\n\n        if (\n          ['mouseup', 'mousedown', 'click', 'dbclick'].includes(event.type) &&\n          !isMouseMainButtonPressed(event)\n        ) {\n          return true;\n        }\n\n        // if (eventName !== 'mouseup' && eventName !== 'mouseleave') {\n        //   // to complete drag actions\n        //   if (!event.target || event.target.nodeName === 'DIV') {\n        //     // click on scroll\n        //     this.hover(null);\n        //     return true;\n        //   }\n        // }\n\n        this.useModeIfNeeded(toolEventHandler, event);\n        const isToolUsed = this.useToolIfNeeded(toolEventHandler, event);\n        if (isToolUsed) {\n          return true;\n        }\n\n        return true;\n      }, -1);\n    });\n  }\n\n  private updateLastCursorPosition(event) {\n    const events = ['mousemove', 'click', 'mousedown', 'mouseup', 'mouseover'];\n    if (events.includes(event.type)) {\n      const clientAreaBoundingBox = this.canvasOffset;\n\n      this.lastCursorPosition = new Vec2({\n        x: event.pageX - clientAreaBoundingBox.x,\n        y: event.pageY - clientAreaBoundingBox.y,\n      });\n      this.lastCursorPositionOfCanvas = Coordinates.viewToCanvas(\n        this.lastCursorPosition,\n      );\n    }\n  }\n\n  private useToolIfNeeded(eventHandlerName: ToolEventHandlerName, event) {\n    const editorTool = this.tool as Tool;\n    if (!editorTool) {\n      return false;\n    }\n    // this.lastEvent = event;\n    const conditions = [\n      eventHandlerName in editorTool,\n      this.canvas.contains(event?.target) || editorTool.isSelectionRunning?.(),\n      // isContextMenuClosed(editor.contextMenu),\n    ];\n\n    if (conditions.every((condition) => condition)) {\n      editorTool[eventHandlerName]?.(event);\n      return true;\n    }\n\n    return false;\n  }\n\n  private useModeIfNeeded(\n    eventHandlerName: ToolEventHandlerName,\n    event: Event,\n  ) {\n    this.mode?.[eventHandlerName]?.(event);\n  }\n\n  public switchToMicromolecules() {\n    this.unsubscribeEvents();\n    const history = new EditorHistory(this);\n    history.destroy();\n    const struct = this.micromoleculesEditor.struct();\n    const reStruct = this.micromoleculesEditor.render.ctab;\n    const { conversionErrorMessage } =\n      MacromoleculesConverter.convertDrawingEntitiesToStruct(\n        this.drawingEntitiesManager,\n        struct,\n        reStruct,\n      );\n    reStruct.render.setMolecule(struct);\n    if (conversionErrorMessage) {\n      const ketcher = ketcherProvider.getKetcher();\n\n      ketcher.editor.setMacromoleculeConvertionError(conversionErrorMessage);\n    }\n    this._monomersLibraryParsedJson = undefined;\n  }\n\n  private switchToMacromolecules() {\n    const struct = this.micromoleculesEditor?.struct() || new Struct();\n    const ketcher = ketcherProvider.getKetcher();\n    const { modelChanges } =\n      MacromoleculesConverter.convertStructToDrawingEntities(\n        struct,\n        this.drawingEntitiesManager,\n      );\n    this.renderersContainer.update(modelChanges);\n    ketcher?.editor.clear();\n  }\n\n  private rerenderSequenceMode() {\n    if (this.mode instanceof SequenceMode) {\n      const modelChanges = this.drawingEntitiesManager.reArrangeChains(\n        this.canvas.width.baseVal.value,\n        true,\n        false,\n      );\n      this.drawingEntitiesManager.clearCanvas();\n      this.renderersContainer.update(modelChanges);\n      this.drawingEntitiesManager.applyMonomersSequenceLayout();\n    }\n  }\n}\n","import {\n  IKetMonomerNode,\n  IKetMonomerTemplate,\n} from 'application/formatters/types/ket';\nimport { Struct, Vec2 } from 'domain/entities';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport { switchIntoChemistryCoordSystem } from 'domain/serializers/ket/helpers';\nimport { KetSerializer } from 'domain/serializers';\n\nexport function templateToMonomerProps(template: IKetMonomerTemplate) {\n  return {\n    id: template.id,\n    Name: template.fullName || template.name || template.alias || template.id,\n    MonomerNaturalAnalogCode: template.naturalAnalogShort || '',\n    MonomerName: template.alias || template.id,\n    MonomerFullName: template.fullName,\n    MonomerType: template.classHELM,\n    MonomerClass: template.class,\n    MonomerCaps: {},\n    idtAliases: template.idtAliases,\n    unresolved: template.unresolved,\n  };\n}\n\nexport function monomerToDrawingEntity(\n  node: IKetMonomerNode,\n  template: IKetMonomerTemplate,\n  struct: Struct,\n  drawingEntitiesManager: DrawingEntitiesManager,\n) {\n  const position: Vec2 = switchIntoChemistryCoordSystem(\n    new Vec2(node.position.x, node.position.y),\n  );\n  return drawingEntitiesManager.addMonomer(\n    {\n      struct,\n      label: template.alias || template.id,\n      colorScheme: undefined,\n      favorite: false,\n      props: templateToMonomerProps(template),\n      attachmentPoints: KetSerializer.getTemplateAttachmentPoints(template),\n      seqId: node.seqid,\n    },\n    position,\n  );\n}\n","import { IKetConnection } from 'application/formatters/types/ket';\nimport { Command } from 'domain/entities/Command';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport assert from 'assert';\nimport { getAttachmentPointLabel } from 'domain/helpers/attachmentPointCalculations';\nimport { BaseMonomer } from 'domain/entities';\nimport { AttachmentPointName } from 'domain/types';\nimport { CoreEditor } from 'application/editor';\n\nexport function polymerBondToDrawingEntity(\n  connection: IKetConnection,\n  drawingEntitiesManager: DrawingEntitiesManager,\n  monomerIdsMap: { [monomerIdFromKet: string]: number },\n  atomIdMap: Map<number, number>,\n  superatomMonomerToUsedAttachmentPoint: Map<BaseMonomer, Set<string>>,\n) {\n  const command = new Command();\n  const firstMonomer = drawingEntitiesManager.monomers.get(\n    Number(\n      monomerIdsMap[\n        connection.endpoint1.monomerId || connection.endpoint1.moleculeId\n      ],\n    ),\n  );\n  const secondMonomer = drawingEntitiesManager.monomers.get(\n    Number(\n      monomerIdsMap[\n        connection.endpoint2.monomerId || connection.endpoint2.moleculeId\n      ],\n    ),\n  );\n\n  assert(firstMonomer);\n  assert(secondMonomer);\n\n  const firstAttachmentPoint =\n    connection.endpoint1.attachmentPointId ||\n    getAttachmentPointLabel(\n      firstMonomer.monomerItem.struct.sgroups\n        .get(0)\n        ?.getAttachmentPoints()\n        .find(\n          (attachmentPoint) =>\n            attachmentPoint.atomId ===\n              atomIdMap.get(Number(connection.endpoint1.atomId)) &&\n            !superatomMonomerToUsedAttachmentPoint\n              .get(firstMonomer)\n              ?.has(\n                getAttachmentPointLabel(\n                  attachmentPoint.attachmentPointNumber as number,\n                ),\n              ),\n        )?.attachmentPointNumber as number,\n    );\n  const secondAttachmentPoint =\n    connection.endpoint2.attachmentPointId ||\n    getAttachmentPointLabel(\n      secondMonomer.monomerItem.struct.sgroups\n        .get(0)\n        ?.getAttachmentPoints()\n        .find(\n          (attachmentPoint) =>\n            attachmentPoint.atomId ===\n              atomIdMap.get(Number(connection.endpoint2.atomId)) &&\n            !superatomMonomerToUsedAttachmentPoint\n              .get(secondMonomer)\n              ?.has(\n                getAttachmentPointLabel(\n                  attachmentPoint.attachmentPointNumber as number,\n                ),\n              ),\n        )?.attachmentPointNumber as number,\n    );\n\n  if (\n    !firstMonomer.isAttachmentPointExistAndFree(\n      firstAttachmentPoint as AttachmentPointName,\n    ) ||\n    !secondMonomer.isAttachmentPointExistAndFree(\n      secondAttachmentPoint as AttachmentPointName,\n    )\n  ) {\n    const editor = CoreEditor.provideEditorInstance();\n    editor.events.error.dispatch(\n      'There is no free attachment point for bond creation.',\n    );\n    return new Command();\n  }\n\n  if (!superatomMonomerToUsedAttachmentPoint.get(firstMonomer)) {\n    superatomMonomerToUsedAttachmentPoint.set(firstMonomer, new Set());\n  }\n\n  if (!superatomMonomerToUsedAttachmentPoint.get(secondMonomer)) {\n    superatomMonomerToUsedAttachmentPoint.set(secondMonomer, new Set());\n  }\n\n  superatomMonomerToUsedAttachmentPoint\n    .get(firstMonomer)\n    ?.add(firstAttachmentPoint);\n  superatomMonomerToUsedAttachmentPoint\n    .get(secondMonomer)\n    ?.add(secondAttachmentPoint);\n\n  command.merge(\n    drawingEntitiesManager.createPolymerBond(\n      firstMonomer,\n      secondMonomer,\n      firstAttachmentPoint as AttachmentPointName,\n      secondAttachmentPoint as AttachmentPointName,\n    ),\n  );\n  return command;\n}\n","'use strict';\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(typeof Error.captureStackTrace === 'function'){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  if(typeof Error.captureStackTrace === 'function'){\n    Error.captureStackTrace(this, SchemaError);\n  }\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return (() => resolveUrl(this.base,target))();\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  let base = (() => resolveUrl(this.base,id||''))();\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n/**\n * Resolve target URL from a base and relative URL.\n * Similar to Node's URL Lib's legacy resolve function.\n * Code from example in deprecation note in said library.\n * @param string\n * @param string\n * @returns {string}\n */\nvar resolveUrl = exports.resolveUrl = function resolveUrl(from, to) {\n  const resolvedUrl = new URL(to, new URL(from, 'resolve://'));\n  if (resolvedUrl.protocol === 'resolve:') {\n    const { pathname, search, hash } = resolvedUrl;\n    return pathname + search + hash;\n  }\n  return resolvedUrl.toString();\n}\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","\"use strict\";\n\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      let resolvedUri = helpers.resolveUrl(baseuri,schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    let resolvedBase = helpers.resolveUrl(baseuri,id);\n    var ourBase = id ? resolvedBase : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  let base = helpers.resolveUrl(options.base,id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  let parsed = new URL(switchSchema,'thismessage::/');\n  let fragment = parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Validator } from 'jsonschema';\nimport schema from './schema.json';\n\nexport function validate(ket: any): boolean {\n  const validator = new Validator();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: jsonschema type issue?\n  return validator.validate(ket, schema).valid;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { IMAGE_SERIALIZE_KEY } from 'domain/constants';\nimport { KetFileNode } from 'domain/serializers';\nimport { KetFileImageNode } from 'domain/entities';\n\nexport function imageToKet(imageNode: KetFileNode) {\n  return {\n    type: IMAGE_SERIALIZE_KEY,\n    format: (imageNode as KetFileImageNode).format,\n    boundingBox: (imageNode as KetFileImageNode).boundingBox,\n    data: imageNode.data,\n    selected: imageNode.selected,\n  };\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities';\nimport { Image } from 'domain/entities/image';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function imageToStruct(ketItem: any, struct: Struct): Struct {\n  struct.images.add(Image.fromKetNode(ketItem));\n  return struct;\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  SGroupAttachmentPoint,\n  Struct,\n  UnresolvedMonomer,\n  Vec2,\n} from 'domain/entities';\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet';\nimport { Serializer } from '../serializers.types';\nimport { headerToKet } from './toKet/headerToKet';\nimport { moleculeToKet } from './toKet/moleculeToKet';\nimport { moleculeToStruct } from './fromKet/moleculeToStruct';\nimport { prepareStructForKet } from './toKet/prepare';\nimport { rgroupToKet } from './toKet/rgroupToKet';\nimport { rgroupToStruct } from './fromKet/rgroupToStruct';\nimport { rxnToStruct } from './fromKet/rxnToStruct';\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet';\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct';\nimport { textToKet } from './toKet/textToKet';\nimport { textToStruct } from './fromKet/textToStruct';\nimport {\n  IKetConnection,\n  IKetConnectionEndPoint,\n  IKetConnectionMoleculeEndPoint,\n  IKetConnectionMonomerEndPoint,\n  IKetMacromoleculesContent,\n  IKetMacromoleculesContentRootProperty,\n  IKetMonomerNode,\n  IKetMonomerTemplate,\n  KetConnectionType,\n  KetTemplateType,\n} from 'application/formatters/types/ket';\nimport { Command } from 'domain/entities/Command';\nimport { CoreEditor, EditorSelection } from 'application/editor/internal';\nimport {\n  monomerToDrawingEntity,\n  templateToMonomerProps,\n} from 'domain/serializers/ket/fromKet/monomerToDrawingEntity';\nimport assert from 'assert';\nimport { polymerBondToDrawingEntity } from 'domain/serializers/ket/fromKet/polymerBondToDrawingEntity';\nimport { getMonomerUniqueKey } from 'domain/helpers/monomers';\nimport {\n  MONOMER_CONST,\n  monomerFactory,\n} from 'application/editor/operations/monomer/monomerFactory';\nimport { KetcherLogger } from 'utilities';\nimport { Chem } from 'domain/entities/Chem';\nimport { DrawingEntitiesManager } from 'domain/entities/DrawingEntitiesManager';\nimport {\n  getKetRef,\n  populateStructWithSelection,\n  setMonomerPrefix,\n  setMonomerTemplatePrefix,\n  switchIntoChemistryCoordSystem,\n} from 'domain/serializers/ket/helpers';\nimport { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport { validate } from 'domain/serializers/ket/validate';\nimport { MacromoleculesConverter } from 'application/editor/MacromoleculesConverter';\nimport { getAttachmentPointLabelWithBinaryShift } from 'domain/helpers/attachmentPointCalculations';\nimport { isNumber } from 'lodash';\nimport { MonomerItemType } from 'domain/types';\nimport { PolymerBond } from 'domain/entities/PolymerBond';\nimport { imageToKet } from 'domain/serializers/ket/toKet/imageToKet';\nimport { imageToStruct } from 'domain/serializers/ket/fromKet/imageToStruct';\nimport { IMAGE_SERIALIZE_KEY } from 'domain/constants';\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type;\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct);\n      break;\n    }\n    case 'plus': {\n      rxnToStruct(node, struct);\n      break;\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct);\n      break;\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node);\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!;\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition);\n      }\n\n      currentStruct.mergeInto(struct);\n      break;\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct);\n      break;\n    }\n    case 'text': {\n      textToStruct(node, struct);\n      break;\n    }\n    case IMAGE_SERIALIZE_KEY: {\n      imageToStruct(node, struct);\n      break;\n    }\n    default:\n      break;\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserializeMicromolecules(content: string): Struct {\n    const ket = JSON.parse(content);\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.');\n    }\n\n    return this.fillStruct(ket);\n  }\n\n  fillStruct(ket) {\n    const resultingStruct = new Struct();\n    const nodes = ket.root.nodes;\n\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct);\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct);\n    });\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null;\n\n    return resultingStruct;\n  }\n\n  serializeMicromolecules(struct: Struct, monomer?: BaseMonomer): string {\n    const result: any = {\n      root: {\n        nodes: [],\n      },\n    };\n    const header = headerToKet(struct);\n    if (header) result.header = header;\n\n    const ketNodes = prepareStructForKet(struct);\n\n    let moleculeId = 0;\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` });\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment!, monomer);\n          break;\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` });\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment!,\n            item.data,\n          );\n          break;\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item));\n          break;\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item));\n          break;\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item));\n          break;\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item));\n          break;\n        }\n        case IMAGE_SERIALIZE_KEY: {\n          result.root.nodes.push(imageToKet(item));\n          break;\n        }\n        default:\n          break;\n      }\n    });\n\n    return JSON.stringify(result, null, 4);\n  }\n\n  private validateMonomerNodeTemplate(\n    node: IKetMonomerNode,\n    parsedFileContent: IKetMacromoleculesContent,\n    editor: CoreEditor,\n  ) {\n    const template =\n      parsedFileContent[setMonomerTemplatePrefix(node.templateId)];\n    if (!template) {\n      editor.events.error.dispatch('Error during file parsing');\n      return true;\n    }\n\n    return false;\n  }\n\n  private validateConnectionTypeAndEndpoints(\n    connection: IKetConnection,\n    editor: CoreEditor,\n  ) {\n    if (connection.connectionType !== KetConnectionType.SINGLE) {\n      editor.events.error.dispatch('Error during file parsing');\n      return true;\n    }\n    return false;\n  }\n\n  parseAndValidateMacromolecules(fileContent: string) {\n    const editor = CoreEditor.provideEditorInstance();\n    let parsedFileContent: IKetMacromoleculesContent;\n    try {\n      parsedFileContent = JSON.parse(fileContent);\n    } catch (e) {\n      KetcherLogger.error(\n        'ketSerializer.ts::KetSerializer::parseAndValidateMacromolecules',\n        e,\n      );\n      return { error: true };\n    }\n    let error = false;\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n\n      if (nodeDefinition?.type === 'monomer') {\n        error = this.validateMonomerNodeTemplate(\n          nodeDefinition,\n          parsedFileContent,\n          editor,\n        );\n      }\n    });\n    if (error) {\n      return { error: true };\n    }\n    parsedFileContent.root.connections?.forEach(\n      (connection: IKetConnection) => {\n        this.validateConnectionTypeAndEndpoints(connection, editor);\n      },\n    );\n    return {\n      error,\n      parsedFileContent,\n    };\n  }\n\n  deserializeToStruct(fileContent: string) {\n    const struct = new Struct();\n    const deserializedContent = this.deserializeToDrawingEntities(fileContent);\n\n    assert(deserializedContent);\n\n    MacromoleculesConverter.convertDrawingEntitiesToStruct(\n      deserializedContent?.drawingEntitiesManager,\n      struct,\n    );\n    return struct;\n  }\n\n  private filterMacromoleculesContent(\n    parsedFileContent: IKetMacromoleculesContent,\n  ) {\n    const fileContentForMicromolecules = {\n      ...parsedFileContent,\n      root: {\n        nodes: parsedFileContent.root.nodes.filter((node) => {\n          const nodeDefinition = parsedFileContent[node.$ref];\n\n          return (\n            nodeDefinition?.type !== 'monomer' &&\n            nodeDefinition?.type !== 'group'\n          );\n        }),\n      },\n    };\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n      if (\n        nodeDefinition?.type === 'monomer' ||\n        nodeDefinition?.type === 'group'\n      ) {\n        fileContentForMicromolecules[node.$ref] = undefined;\n      }\n    });\n\n    parsedFileContent.root.templates?.forEach((template) => {\n      fileContentForMicromolecules[template.$ref] = undefined;\n    });\n\n    return fileContentForMicromolecules;\n  }\n\n  public static getTemplateAttachmentPoints(template: IKetMonomerTemplate) {\n    return template.unresolved\n      ? template.attachmentPoints?.map((_, index) => {\n          return {\n            attachmentAtom: index,\n            leavingGroup: {\n              atoms: [],\n            },\n          };\n        })\n      : template.attachmentPoints;\n  }\n\n  public convertMonomerTemplateToStruct(template: IKetMonomerTemplate) {\n    const attachmentPoints = template.attachmentPoints || [];\n\n    return this.fillStruct({\n      root: {\n        nodes: [{ $ref: 'mol0' }],\n      },\n      mol0: {\n        ...template,\n        type: 'molecule',\n        atoms: template.unresolved\n          ? attachmentPoints?.map((_, index) => {\n              return {\n                label: 'C',\n                location: [index, index, index],\n              };\n            })\n          : template.atoms,\n        bonds: template.unresolved\n          ? attachmentPoints?.map((_, index) => {\n              if (index === attachmentPoints.length - 1) {\n                return {\n                  type: 1,\n                  atoms: [0, attachmentPoints.length - 1],\n                };\n              }\n\n              return {\n                type: 1,\n                atoms: [index, index + 1],\n              };\n            })\n          : template.bonds,\n        attachmentPoints: KetSerializer.getTemplateAttachmentPoints(template),\n      },\n      header: {\n        moleculeName: template.fullName,\n      },\n    });\n  }\n\n  public convertMonomerTemplateToLibraryItem(\n    template: IKetMonomerTemplate,\n  ): MonomerItemType {\n    const monomerLibraryItem = {\n      label: template.alias || template.id,\n      struct: this.convertMonomerTemplateToStruct(template),\n      props: templateToMonomerProps(template),\n      attachmentPoints: KetSerializer.getTemplateAttachmentPoints(template),\n    };\n    this.fillStructRgLabelsByMonomerTemplate(template, monomerLibraryItem);\n\n    return monomerLibraryItem;\n  }\n\n  public fillStructRgLabelsByMonomerTemplate(\n    template: IKetMonomerTemplate,\n    monomerItem: MonomerItemType,\n  ) {\n    if (monomerItem.props.unresolved) {\n      return;\n    }\n\n    const { attachmentPointsList } =\n      BaseMonomer.getAttachmentPointDictFromMonomerDefinition(\n        template.attachmentPoints || [],\n      );\n\n    template.attachmentPoints?.forEach(\n      (attachmentPoint, attachmentPointIndex) => {\n        const firstAtomInLeavingGroup = attachmentPoint.leavingGroup?.atoms[0];\n        const leavingGroupAtom = monomerItem.struct.atoms.get(\n          isNumber(firstAtomInLeavingGroup)\n            ? firstAtomInLeavingGroup\n            : attachmentPoint.attachmentAtom,\n        );\n        assert(leavingGroupAtom);\n        leavingGroupAtom.rglabel = (\n          0 |\n          (1 <<\n            (Number(\n              (attachmentPoint.label\n                ? attachmentPoint.label\n                : attachmentPointsList[attachmentPointIndex]\n              ).replace('R', ''),\n            ) -\n              1))\n        ).toString();\n        assert(monomerItem.props.MonomerCaps);\n        monomerItem.props.MonomerCaps[\n          getAttachmentPointLabelWithBinaryShift(\n            Number(leavingGroupAtom.rglabel),\n          )\n        ] = leavingGroupAtom.label;\n        leavingGroupAtom.label = 'R#';\n      },\n    );\n  }\n\n  deserializeToDrawingEntities(fileContent: string) {\n    const { error: hasValidationErrors, parsedFileContent } =\n      this.parseAndValidateMacromolecules(fileContent);\n    if (hasValidationErrors || !parsedFileContent) return;\n    const command = new Command();\n    const drawingEntitiesManager = new DrawingEntitiesManager();\n    const monomerIdsMap = {};\n    parsedFileContent.root.nodes.forEach((node) => {\n      const nodeDefinition = parsedFileContent[node.$ref];\n\n      switch (nodeDefinition?.type) {\n        case 'monomer': {\n          const template = parsedFileContent[\n            setMonomerTemplatePrefix(nodeDefinition.templateId)\n          ] as IKetMonomerTemplate;\n          assert(template);\n          const struct = this.convertMonomerTemplateToStruct(template);\n          const monomerAdditionCommand = monomerToDrawingEntity(\n            nodeDefinition,\n            template,\n            struct,\n            drawingEntitiesManager,\n          );\n          const monomer = monomerAdditionCommand.operations[0]\n            .monomer as BaseMonomer;\n          monomerIdsMap[node.$ref] = monomer?.id;\n\n          this.fillStructRgLabelsByMonomerTemplate(\n            template,\n            monomer.monomerItem,\n          );\n\n          command.merge(monomerAdditionCommand);\n          break;\n        }\n        default:\n          break;\n      }\n    });\n    const fileContentForMicromolecules =\n      this.filterMacromoleculesContent(parsedFileContent);\n\n    const deserializedMicromolecules = this.deserializeMicromolecules(\n      JSON.stringify(fileContentForMicromolecules),\n    );\n\n    let fragmentNumber = 1;\n    const fragments = MacromoleculesConverter.getFragmentsGroupedBySgroup(\n      deserializedMicromolecules,\n    );\n    const atomIdMap = new Map<number, number>();\n    fragments.forEach((_fragment) => {\n      const fragmentStruct = deserializedMicromolecules.getFragment(\n        _fragment,\n        false,\n        atomIdMap,\n      );\n      const fragmentBbox = fragmentStruct.getCoordBoundingBox();\n      const monomerAdditionCommand = drawingEntitiesManager.addMonomer(\n        {\n          struct: fragmentStruct,\n          label: 'F' + fragmentNumber,\n          colorScheme: undefined,\n          favorite: false,\n          props: {\n            Name: 'F' + fragmentNumber,\n            MonomerNaturalAnalogCode: '',\n            MonomerName: 'F' + fragmentNumber,\n            MonomerType: MONOMER_CONST.CHEM,\n            isMicromoleculeFragment: true,\n          },\n        },\n        new Vec2(\n          fragmentBbox.max.x - (fragmentBbox.max.x - fragmentBbox.min.x) / 2,\n          fragmentBbox.max.y - (fragmentBbox.max.y - fragmentBbox.min.y) / 2,\n        ),\n      );\n      const monomer = monomerAdditionCommand.operations[0].monomer;\n      monomerIdsMap[`mol${fragmentNumber - 1}`] = monomer?.id;\n      command.merge(monomerAdditionCommand);\n      fragmentNumber++;\n    });\n\n    const superatomMonomerToUsedAttachmentPoint = new Map<\n      BaseMonomer,\n      Set<string>\n    >();\n\n    parsedFileContent.root.connections?.forEach((connection) => {\n      switch (connection.connectionType) {\n        case KetConnectionType.SINGLE: {\n          const bondAdditionCommand = polymerBondToDrawingEntity(\n            connection,\n            drawingEntitiesManager,\n            monomerIdsMap,\n            atomIdMap,\n            superatomMonomerToUsedAttachmentPoint,\n          );\n          command.merge(bondAdditionCommand);\n          break;\n        }\n        default:\n          break;\n      }\n    });\n\n    drawingEntitiesManager.setMicromoleculesHiddenEntities(\n      deserializedMicromolecules,\n    );\n\n    return { modelChanges: command, drawingEntitiesManager };\n  }\n\n  deserialize(fileContent: string) {\n    return this.deserializeToStruct(fileContent);\n  }\n\n  getConnectionMonomerEndpoint(\n    monomer: BaseMonomer,\n    polymerBond: PolymerBond,\n  ): IKetConnectionMonomerEndPoint {\n    return {\n      monomerId: setMonomerPrefix(monomer.id),\n      attachmentPointId: monomer.getAttachmentPointByBond(polymerBond),\n    };\n  }\n\n  getConnectionMoleculeEndpoint(\n    monomer: BaseMonomer,\n    polymerBond: PolymerBond,\n    monomerToAtomIdMap: Map<BaseMonomer, Map<number, number>>,\n    struct: Struct,\n  ): IKetConnectionMoleculeEndPoint {\n    const { attachmentAtomId, globalAttachmentAtomId } =\n      MacromoleculesConverter.findAttachmentPointAtom(\n        polymerBond,\n        monomer,\n        monomerToAtomIdMap,\n      );\n\n    return {\n      moleculeId: `mol${\n        struct.atoms.get(globalAttachmentAtomId as number)?.fragment\n      }`,\n      atomId: `${attachmentAtomId as number}`,\n    };\n  }\n\n  serializeMacromolecules(\n    struct: Struct,\n    drawingEntitiesManager: DrawingEntitiesManager,\n  ) {\n    const fileContent: IKetMacromoleculesContentRootProperty = {\n      root: {\n        nodes: [],\n        connections: [],\n        templates: [],\n      },\n    };\n    const monomerToAtomIdMap = new Map<BaseMonomer, Map<number, number>>();\n\n    drawingEntitiesManager.monomers.forEach((monomer) => {\n      if (\n        monomer instanceof Chem &&\n        monomer.monomerItem.props.isMicromoleculeFragment\n      ) {\n        const atomIdMap = new Map<number, number>();\n        monomer.monomerItem.struct.mergeInto(\n          struct,\n          null,\n          null,\n          false,\n          false,\n          atomIdMap,\n        );\n        monomerToAtomIdMap.set(monomer, atomIdMap);\n      } else {\n        const templateId =\n          monomer.monomerItem.props.id ||\n          getMonomerUniqueKey(monomer.monomerItem);\n        const monomerName = setMonomerPrefix(monomer.id);\n        const position: Vec2 = switchIntoChemistryCoordSystem(\n          new Vec2(monomer.position.x, monomer.position.y),\n        );\n        fileContent[monomerName] = {\n          type: 'monomer',\n          id: monomer.id.toString(),\n          position: {\n            x: position.x,\n            y: position.y,\n          },\n          alias: monomer.label,\n          templateId,\n          seqid: monomer.monomerItem.seqId,\n        };\n        fileContent.root.nodes.push(getKetRef(monomerName));\n        const [, , monomerClass] = monomerFactory(monomer.monomerItem);\n        const templateNameWithPrefix = setMonomerTemplatePrefix(templateId);\n        if (!fileContent[templateNameWithPrefix]) {\n          fileContent[templateNameWithPrefix] = {\n            ...JSON.parse(\n              this.serializeMicromolecules(monomer.monomerItem.struct, monomer),\n            ).mol0,\n            type: 'monomerTemplate',\n            class: monomer.monomerItem.props.MonomerClass || monomerClass,\n            classHELM: monomer.monomerItem.props.MonomerType,\n            id: templateId,\n            fullName: monomer.monomerItem.props.Name,\n            alias: monomer.monomerItem.label,\n            attachmentPoints: monomer.monomerItem.attachmentPoints,\n            idtAliases: monomer.monomerItem.props.idtAliases,\n            unresolved: monomer instanceof UnresolvedMonomer ? true : undefined,\n          };\n          // CHEMs do not have natural analog\n          if (monomer.monomerItem.props.MonomerType !== 'CHEM') {\n            fileContent[templateNameWithPrefix].naturalAnalogShort =\n              monomer.monomerItem.props.MonomerNaturalAnalogCode;\n          }\n          fileContent.root.templates.push(getKetRef(templateNameWithPrefix));\n        }\n      }\n    });\n    drawingEntitiesManager.polymerBonds.forEach((polymerBond) => {\n      assert(polymerBond.secondMonomer);\n      fileContent.root.connections.push({\n        connectionType: KetConnectionType.SINGLE,\n        endpoint1: polymerBond.firstMonomer.monomerItem.props\n          .isMicromoleculeFragment\n          ? (this.getConnectionMoleculeEndpoint(\n              polymerBond.firstMonomer,\n              polymerBond,\n              monomerToAtomIdMap,\n              struct,\n            ) as IKetConnectionEndPoint)\n          : (this.getConnectionMonomerEndpoint(\n              polymerBond.firstMonomer,\n              polymerBond,\n            ) as IKetConnectionEndPoint),\n        endpoint2: polymerBond.secondMonomer.monomerItem.props\n          .isMicromoleculeFragment\n          ? (this.getConnectionMoleculeEndpoint(\n              polymerBond.secondMonomer,\n              polymerBond,\n              monomerToAtomIdMap,\n              struct,\n            ) as IKetConnectionEndPoint)\n          : (this.getConnectionMonomerEndpoint(\n              polymerBond.secondMonomer,\n              polymerBond,\n            ) as IKetConnectionEndPoint),\n      });\n    });\n\n    drawingEntitiesManager.micromoleculesHiddenEntities.mergeInto(struct);\n\n    return {\n      serializedMacromolecules: fileContent,\n      micromoleculesStruct: struct,\n    };\n  }\n\n  public static removeLeavingGroupsFromConnectedAtoms(_struct: Struct) {\n    const struct = _struct.clone();\n\n    struct.atoms.forEach((_atom, atomId) => {\n      if (Atom.isHiddenLeavingGroupAtom(struct, atomId)) {\n        struct.atoms.delete(atomId);\n      }\n    });\n\n    struct.bonds.forEach((bond, bondId) => {\n      if (Bond.isBondToHiddenLeavingGroup(struct, bond)) {\n        struct.bonds.delete(bondId);\n      }\n    });\n\n    struct.sgroups.forEach((sgroup) => {\n      const attachmentPoints = sgroup.getAttachmentPoints();\n      const attachmentPointsToReplace: Map<\n        SGroupAttachmentPoint,\n        SGroupAttachmentPoint\n      > = new Map();\n      attachmentPoints.forEach((attachmentPoint) => {\n        if (\n          isNumber(attachmentPoint.leaveAtomId) &&\n          Atom.isHiddenLeavingGroupAtom(struct, attachmentPoint.leaveAtomId)\n        ) {\n          const attachmentPointClone = new SGroupAttachmentPoint(\n            attachmentPoint.atomId,\n            undefined,\n            attachmentPoint.attachmentId,\n            attachmentPoint.attachmentPointNumber,\n          );\n          attachmentPointsToReplace.set(attachmentPoint, attachmentPointClone);\n          sgroup.atoms.splice(\n            sgroup.atoms.indexOf(attachmentPoint.leaveAtomId),\n            1,\n          );\n        }\n      });\n      attachmentPointsToReplace.forEach(\n        (attachmentPointToAdd, attachmentPointToDelete) => {\n          sgroup.removeAttachmentPoint(attachmentPointToDelete);\n          sgroup.addAttachmentPoint(attachmentPointToAdd);\n        },\n      );\n    });\n\n    return struct;\n  }\n\n  serialize(\n    _struct: Struct,\n    drawingEntitiesManager = new DrawingEntitiesManager(),\n    selection?: EditorSelection,\n  ) {\n    const struct = KetSerializer.removeLeavingGroupsFromConnectedAtoms(_struct);\n    struct.enableInitiallySelected();\n    const populatedStruct = populateStructWithSelection(struct, selection);\n    MacromoleculesConverter.convertStructToDrawingEntities(\n      populatedStruct,\n      drawingEntitiesManager,\n    );\n\n    const { serializedMacromolecules, micromoleculesStruct } =\n      this.serializeMacromolecules(new Struct(), drawingEntitiesManager);\n\n    if (selection === undefined) {\n      // if selection is not provided, then reset all initially selected flags\n      // before serialization of micromolecules.\n      // It is case of saving molecules in macromolecules mode, so we don't send to indigo/save selection.\n      micromoleculesStruct.enableInitiallySelected();\n    }\n\n    const serializedMicromoleculesStruct = JSON.parse(\n      this.serializeMicromolecules(micromoleculesStruct),\n    );\n\n    micromoleculesStruct.disableInitiallySelected();\n    const fileContent = {\n      ...serializedMicromoleculesStruct,\n      ...serializedMacromolecules,\n    };\n    fileContent.root.nodes = [\n      ...serializedMacromolecules.root.nodes,\n      ...serializedMicromoleculesStruct.root.nodes,\n    ];\n\n    return JSON.stringify(fileContent, null, 4) as unknown as string;\n  }\n\n  convertMonomersLibrary(monomersLibrary: IKetMacromoleculesContent) {\n    const library: MonomerItemType[] = [];\n\n    monomersLibrary.root.templates.forEach((templateRef) => {\n      const template = monomersLibrary[templateRef.$ref];\n\n      if (template.type !== KetTemplateType.MONOMER_TEMPLATE) {\n        return;\n      }\n\n      library.push(\n        this.convertMonomerTemplateToLibraryItem(\n          template as IKetMonomerTemplate,\n        ),\n      );\n    });\n\n    return library;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment,\n} from 'domain/entities';\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number);\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.'); // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit');\n\n  return numStr.padStart(width);\n}\n\n/**\n * @param str {string}\n * @returns {number}\n */\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10);\n\n  return isNaN(val) ? 0 : val; // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]));\n    if (withspace) shift++;\n    shift += parts[i];\n  }\n  return res;\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength));\n    if (withspace) shift++;\n  }\n  return res;\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN,\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS,\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN,\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN,\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [null, +3, +2, +1, null, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount',\n  },\n  rxnItemsPartition: [3, 3, 3],\n};\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3,\n};\n\nconst SHOULD_RESCALE_MOLECULES = true;\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct();\n  const bbReact = [];\n  const bbAgent = [];\n  const bbProd = [];\n  const molReact = [];\n  const molAgent = [];\n  const molProd = [];\n  let j;\n  const bondLengthData = { cnt: 0, totalLength: 0 };\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j];\n    const bondLengthDataMol = mol.getBondLengthData();\n    bondLengthData.cnt += bondLengthDataMol.cnt;\n    bondLengthData.totalLength += bondLengthDataMol.totalLength;\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt);\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j];\n      mol.scale(avgBondLength);\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j];\n    const bb = mol.getCoordBoundingBoxObj();\n    if (!bb) continue; // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT;\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb);\n      molReact.push(mol);\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb);\n      molAgent.push(mol);\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb);\n      molProd.push(mol);\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType;\n    });\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2,\n    );\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    });\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d); // eslint-disable-line no-underscore-dangle\n    });\n    bb.min.add_(d); // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d); // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret);\n    return bb.max.x - bb.min.x;\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0;\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0;\n    }\n    xorig += 2.0;\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0;\n    }\n    xorig += 2.0;\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0;\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret);\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret);\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret);\n  }\n\n  let bb1;\n  let bb2;\n  let x;\n  let y;\n  let bbReactAll = null;\n  let bbProdAll = null;\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j];\n    bb2 = bbReact[j + 1];\n\n    x = (bb1.max.x + bb2.min.x) / 2;\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }));\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {};\n      bbReactAll.max = new Vec2(bbReact[j].max);\n      bbReactAll.min = new Vec2(bbReact[j].min);\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max);\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min);\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j];\n    bb2 = bbProd[j + 1];\n\n    x = (bb1.max.x + bb2.min.x) / 2;\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4;\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }));\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {};\n      bbProdAll.max = new Vec2(bbProd[j].max);\n      bbProdAll.min = new Vec2(bbProd[j].min);\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max);\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min);\n    }\n  }\n  bb1 = bbReactAll;\n  bb2 = bbProdAll;\n  const defaultArrowLength = 2;\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)],\n      }),\n    );\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null;\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null;\n    const defaultOffset = 3;\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y);\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y);\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5);\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z,\n    );\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z,\n    );\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd],\n      }),\n    );\n  }\n  ret.isReaction = true;\n  return ret;\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct();\n\n  scaffold.mergeInto(ret, null, null, false, true);\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10);\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j];\n      ctab.rgroups.set(rgid, new RGroup());\n      const frag = new Fragment();\n      const frid = ctab.frags.add(frag);\n      ctab.rgroups.get(rgid).frags.add(frid);\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid;\n      });\n      ctab.mergeInto(ret);\n    }\n  });\n\n  return ret;\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2, SGroupAttachmentPoint } from 'domain/entities';\n\nimport utils from './utils';\nimport assert from 'assert';\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool();\n  const partition = utils.partitionLineFixed(str, 3, true);\n  const count = utils.parseDecimalInt(partition[0]);\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1;\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2]);\n\n    ret.set(key, value);\n  }\n\n  return ret;\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = [];\n  const partition = utils.partitionLineFixed(str, 3, true);\n  const count = utils.parseDecimalInt(partition[0]);\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2]),\n      /* eslint-enable no-mixed-operators */\n    ]);\n  }\n  return ret;\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0;\n  const atomReductionMap = {};\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap);\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap);\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m]; // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue; // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing');\n      atomReductionMap[raid] = sgroup.patoms[m]; // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms);\n\n  const patomsMap = identityMap(sgroup.patoms);\n\n  const bondsToRemove = [];\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap;\n    const endIn = bond.end in atomReductionMap;\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid);\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin];\n    else if (endIn) bond.end = atomReductionMap[bond.end];\n  }, sgroup);\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b]);\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a);\n    atomMap[a] = -1;\n  }\n  sgroup.atoms = sgroup.patoms;\n  sgroup.patoms = null;\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase();\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim();\n  sgroup.data.subscript = '';\n}\n\nfunction postLoadGen(_sgroup, _mol, _atomMap) {\n  // empty function\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms));\n  }\n}\n\nfunction postLoadMon(_sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(_sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(_sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(_sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(_sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(_sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(_sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(_sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(_sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(_sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen,\n  };\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg);\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap);\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id);\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, []);\n  else mol.sGroupForest.insert(sg);\n\n  return sg.id;\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true);\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type);\n    sg.number = key;\n    sGroups[key] = sg;\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric);\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    (core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key);\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1;\n  const num = utils.parseDecimalInt(propData.slice(4, 8));\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true));\n\n  if (part.length !== num) throw new Error('File format invalid');\n  if (shift) part = part.map((v) => v + shift);\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part);\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name;\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded;\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query;\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp;\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false);\n  const id = utils.parseDecimalInt(split[0]) - 1;\n  const fieldName = split[1].trim();\n  const fieldType = split[2].trim();\n  const units = split[3].trim();\n  const query = split[4].trim();\n  const queryOp = split[5].trim();\n  const sGroup = sGroups[id];\n  sGroup.data.fieldType = fieldType;\n  sGroup.data.fieldName = fieldName;\n  sGroup.data.units = units;\n  sGroup.data.query = query;\n  sGroup.data.queryOp = queryOp;\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */,\n    ],\n    false,\n  );\n\n  const x = parseFloat(split[0]);\n  const y = parseFloat(split[1]);\n  const attached = split[3].trim() === 'A';\n  const absolute = split[4].trim() === 'A';\n  const showUnits = split[5].trim() === 'U';\n  let nCharsToDisplay = split[7].trim();\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay);\n  const tagChar = split[10].trim();\n  const daspPos = utils.parseDecimalInt(split[11].trim());\n\n  sg.pp = new Vec2(x, -y);\n  sg.data.attached = attached;\n  sg.data.absolute = absolute;\n  sg.data.showUnits = showUnits;\n  sg.data.nCharsToDisplay = nCharsToDisplay;\n  sg.data.tagChar = tagChar;\n  sg.data.daspPos = daspPos;\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1;\n  const sg = sGroups[id];\n  applyDataSGroupInfo(sg, propData.substr(5));\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data;\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue);\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2,\n      );\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1;\n  const data = propData.substr(5);\n  const sg = sGroups[id];\n  applyDataSGroupData(sg, data, finalize);\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = [];\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j]);\n  }\n  return ret;\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '');\n}\n\nfunction identityMap(array) {\n  const map = {};\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i];\n  return map;\n}\n\n/**\n * Superatom attachment point parsing for 'ctab' v2000\n * Implemented based on: https://github.com/epam/ketcher/issues/2467\n * @param ctabString {string} example '   1  1   2   0   '\n *        M SAP sssnn6 iii ooo cc\n *             ^\n *             start position for ctabString content\n * @returns {{sGroupId: number, attachmentPoints: SGroupAttachmentPoint[]}}\n */\nfunction parseSGroupSAPLineV2000(ctabString) {\n  const [, sss, nn6] = utils.partitionLine(\n    ctabString.slice(0, 7),\n    [1, 3, 3],\n    false,\n  );\n  const chunksNumberInLine = utils.parseDecimalInt(nn6);\n  assert(chunksNumberInLine <= 6);\n  const sGroupId = utils.parseDecimalInt(sss) - 1;\n  const attachmentPointsStr = ctabString.slice(7);\n  const attachmentPoints = [];\n  for (let i = 0; i < chunksNumberInLine; i++) {\n    // length of ' iii ooo cc'\n    const CHUNK_SIZE = 11;\n    const stringForParse = attachmentPointsStr.slice(i * CHUNK_SIZE);\n    const CHUNK_PARTS_LENGTHS = [1, 3, 1, 3, 1, 2];\n    const [, iii, , ooo, , cc] = utils.partitionLine(\n      stringForParse,\n      CHUNK_PARTS_LENGTHS,\n      false,\n    );\n    const atomId = utils.parseDecimalInt(iii) - 1;\n    assert(atomId >= 0);\n    const leaveAtomParsedId = utils.parseDecimalInt(ooo);\n    const leaveAtomId =\n      leaveAtomParsedId > 0 ? leaveAtomParsedId - 1 : undefined;\n    attachmentPoints.push(new SGroupAttachmentPoint(atomId, leaveAtomId, cc));\n  }\n  return { sGroupId, attachmentPoints };\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand,\n  parseSGroupSAPLineV2000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport sGroup from './parseSGroup';\nimport utils from './utils';\n\nconst loadRGroupFragments = true; // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition,\n  );\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2]),\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16]),\n  };\n  return new Atom(params);\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition,\n  );\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6]),\n  };\n\n  return new Bond(params);\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition,\n  );\n\n  const number = utils.parseDecimalInt(split[0]) - 1;\n  const notList = split[2].trim() === 'T';\n  const count = utils.parseDecimalInt(split[4].trim());\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength);\n  const list = [];\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength;\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1),\n    );\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list,\n    }),\n  };\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool();\n\n  while (shift < end) {\n    const line = ctabLines[shift];\n    if (line.charAt(0) === 'A') {\n      const propValue = ctabLines[++shift];\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue);\n      if (isPseudo && !props.get('pseudo')) {\n        props.set('pseudo', new Pool());\n      }\n      if (!isPseudo && !props.get('alias')) {\n        props.set('alias', new Pool());\n      }\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3)) - 1, propValue);\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6);\n      let propertyData = line.slice(6);\n      if (type === 'END') {\n        break;\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount'))\n          props.set('substitutionCount', new Pool());\n        const subLabels = props.get('substitutionCount');\n        const arrs = sGroup.readKeyMultiValuePairs(propertyData);\n\n        for (let arri = 0; arri < arrs.length; arri++) {\n          const a2r = arrs[arri];\n          subLabels.set(a2r[0], a2r[1]);\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData));\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool());\n        const rglabels = props.get('rglabel');\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData);\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri];\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1)),\n          );\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4);\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim());\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim());\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim());\n        const ooo = propertyData.slice(12).trim();\n        const logic = {};\n        if (iii > 0) logic.ifthen = iii;\n        logic.resth = hhh === 1;\n        logic.range = ooo;\n        rLogic[rgid] = logic;\n      } else if (type === 'APO') {\n        if (!props.get('attachmentPoints')) {\n          props.set('attachmentPoints', sGroup.readKeyValuePairs(propertyData));\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false),\n        );\n\n        if (!props.get('atomList')) props.set('atomList', new Pool());\n        if (!props.get('label')) props.set('label', new Pool());\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#');\n          props.get('atomList').set(aid, atomList);\n        });\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData);\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData);\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true);\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true);\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData);\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1);\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1);\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1);\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1;\n        sGroups[sid].data.subscript = propertyData.slice(4).trim();\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData);\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData);\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false);\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true);\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ');\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1;\n          sGroups[sGroupId].data.expanded = true;\n        });\n      } else if (type === 'SAP') {\n        const { sGroupId, attachmentPoints } =\n          sGroup.parseSGroupSAPLineV2000(propertyData);\n        attachmentPoints.forEach((attachmentPoint) => {\n          sGroups[sGroupId].addAttachmentPoint(attachmentPoint);\n        });\n      }\n    }\n    ++shift;\n  }\n  return props;\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal;\n  });\n}\n\nfunction parseCTabV2000(\n  ctabLines,\n  countsSplit,\n  /* boolean */ ignoreChiralFlag,\n) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct();\n  let i;\n  const atomCount = utils.parseDecimalInt(countsSplit[0]);\n  const bondCount = utils.parseDecimalInt(countsSplit[1]);\n  const atomListCount = utils.parseDecimalInt(countsSplit[2]);\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1 || ignoreChiralFlag;\n  const isAnd =\n    utils.parseDecimalInt(countsSplit[4]) === 0 && !ignoreChiralFlag;\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5]);\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10]);\n  let shift = 0;\n  const atomLines = ctabLines.slice(shift, shift + atomCount);\n  shift += atomCount;\n  const bondLines = ctabLines.slice(shift, shift + bondCount);\n  shift += bondCount;\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount);\n  shift += atomListCount + stextLinesCount;\n\n  const atoms = atomLines.map(parseAtomLine);\n  atoms.forEach((atom) => ctab.atoms.add(atom));\n\n  const bonds = bondLines.map(parseBondLine);\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs;\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`;\n    }\n    ctab.bonds.add(bond);\n  });\n\n  const atomLists = atomListLines.map(parseAtomListLine);\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList;\n    ctab.atoms.get(pair.aid).label = 'L#';\n  });\n\n  const sGroups = {};\n  const rLogic = {};\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic,\n  );\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId);\n  });\n\n  const atomMap = {};\n  let sid;\n  for (sid in sGroups) {\n    const sg = sGroups[sid];\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent;\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1];\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms);\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap);\n  const emptyGroups = [];\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap);\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid);\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i]);\n    ctab.sgroups.delete(emptyGroups[i]);\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10);\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]));\n  }\n  return ctab;\n}\n\nfunction parseRg2000(\n  /* string[] */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7);\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid');\n  let i = 1;\n  while (ctabLines[i].charAt(0) !== '$') i++;\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid');\n  }\n  const coreLines = ctabLines.slice(1, i);\n  ctabLines = ctabLines.slice(i + 1);\n  const fragmentLines = {};\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file');\n    let line = ctabLines[0].trim();\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1);\n      break;\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid');\n\n    const rgid = parseInt(ctabLines[1].trim(), 10);\n    fragmentLines[rgid] = [];\n    ctabLines = ctabLines.slice(2);\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file');\n      line = ctabLines[0].trim();\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1);\n        break;\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid');\n      i = 1;\n      while (ctabLines[i].charAt(0) !== '$') i++;\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid');\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i));\n      ctabLines = ctabLines.slice(i + 1);\n    }\n  }\n\n  const core = parseCTab(coreLines, ignoreChiralFlag);\n  const frag = {};\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10);\n      frag[id] = [];\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j], ignoreChiralFlag));\n      }\n    }\n  }\n  return utils.rgMerge(core, frag);\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4);\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition,\n  );\n  const nReactants = countsSplit[0] - 0;\n  const nProducts = countsSplit[1] - 0;\n  const nAgents = countsSplit[2] - 0;\n  ctabLines = ctabLines.slice(1); // consume counts line\n  const mols = [];\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1);\n    let n = 0;\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++;\n\n    const lines = ctabLines.slice(0, n);\n    var struct;\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines, /* boolean */ ignoreChiralFlag);\n    } else {\n      struct = parseCTab(lines.slice(3), /* boolean */ ignoreChiralFlag);\n      struct.name = lines[0].trim();\n    }\n    mols.push(struct);\n    ctabLines = ctabLines.slice(n);\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout,\n  );\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition,\n  );\n  ctabLines = ctabLines.slice(1);\n  return parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag);\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = [];\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim());\n    if (element) {\n      ids.push(element.number);\n    }\n  }\n\n  return ids;\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1;\n  const count = utils.parseDecimalInt(hdr[2]);\n  const notList = hdr[4].trim() === 'T';\n  const ids = labelsListToIds(lst.slice(0, count));\n  const ret = new Pool();\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids,\n    }),\n  );\n  return ret;\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport sGroup from './parseSGroup';\nimport utils from './utils';\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i;\n  const split = spacebarsplit(line);\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4]),\n    ),\n    aam: split[5].trim(),\n  };\n  let label = split[1].trim();\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2);\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1); // remove ']'\n    const atomListParams = {};\n    atomListParams.notList = false;\n    const matchNotListInfo = label.match(/NOT ?\\[/);\n    if (matchNotListInfo) {\n      atomListParams.notList = true;\n      const [matchedSubstr] = matchNotListInfo;\n      label = label.substr(matchedSubstr.length); // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\");\n    } else {\n      label = label.substr(1); // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','));\n    params.atomList = new AtomList(atomListParams);\n    params.label = 'L#';\n  } else {\n    params.label = label;\n  }\n  split.splice(0, 6);\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=');\n    key = subsplit[0];\n    value = subsplit[1];\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value);\n      if (key === 'VAL') {\n        if (ival === 0) continue; // eslint-disable-line no-continue\n        if (ival === -1) ival = 0;\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival;\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2);\n      const rgrsplit = value.split(' ').slice(1);\n      params.rglabel = 0;\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1);\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0;\n    }\n  }\n\n  return new Atom(params);\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i;\n  const split = spacebarsplit(line);\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])],\n  };\n  split.splice(0, 4);\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=');\n    key = subsplit[0];\n    value = subsplit[1];\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)];\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS;\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)];\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value);\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value);\n    }\n  }\n  return new Bond(params);\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++;\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++;\n  shift++;\n  return shift;\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = '';\n  shift++;\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim();\n    if (line.trim() === 'END SGROUP') return shift;\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim();\n    }\n    const split = splitSGroupDef(line);\n    const type = split[1];\n    const sg = new SGroup(type);\n    sg.number = split[0] - 0;\n    sg.type = type;\n    sg.label = split[2] - 0;\n    sgroups[sg.number] = sg;\n    const props = {};\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=');\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\",\n        );\n      }\n      const name = subsplit[0];\n      if (!(name in props)) props[name] = [];\n      props[name].push(subsplit[1]);\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1);\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1);\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : [];\n    const brkxyzStrs = props.BRKXYZ;\n    sg.brkxyz = [];\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]));\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0;\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim();\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase();\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]));\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true);\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0]);\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0]);\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0]);\n    sGroup.loadSGroup(ctab, sg, atomMap);\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0]);\n  }\n  throw new Error('S-group declaration incomplete.');\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct();\n\n  let shift = 0;\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid');\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid');\n  }\n  const vals = ctabLines[shift].slice(14).split(' ');\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1;\n  shift++;\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++;\n    let line;\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim();\n      if (line === 'END ATOM') break;\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim();\n      }\n      ctab.atoms.add(parseAtomLineV3000(line));\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++;\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim();\n        if (line === 'END BOND') break;\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim();\n        }\n        const bond = parseBondLineV3000(line);\n        if (bond.stereo && isAbs)\n          ctab.atoms.get(bond.begin).stereoLabel = 'abs';\n        ctab.bonds.add(bond);\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {};\n    const atomMap = {};\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift);\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift);\n      } else throw Error('CTAB V3000 invalid');\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid');\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift));\n\n  return ctab;\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {};\n  const rLogic = {};\n  let shift = 0;\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop();\n    rfrags[id] = [];\n    rLogic[id] = {};\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim();\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13);\n        const rlsplit = line.trim().split(/\\s+/g);\n        const iii = utils.parseDecimalInt(rlsplit[0]);\n        const hhh = utils.parseDecimalInt(rlsplit[1]);\n        const ooo = rlsplit.slice(2).join(' ');\n        const logic = {};\n        if (iii > 0) logic.ifthen = iii;\n        logic.resth = hhh === 1;\n        logic.range = ooo;\n        rLogic[id] = logic;\n        shift++;\n        continue; // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid');\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break;\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1);\n      const rfrag = parseCTabV3000(lines, true);\n      rfrags[id].push(rfrag);\n      shift = shift + i + 1;\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++;\n        break;\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]));\n      const frid = rg.frags.add({});\n      rg.rgroups.get(rgid).frags.add(frid);\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid;\n      });\n      rg.mergeInto(ctab);\n    });\n  });\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout,\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4);\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3);\n  const nReactants = countsSplit[0] - 0;\n  const nProducts = countsSplit[1] - 0;\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0;\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j;\n    }\n\n    return console.error('CTab format invalid');\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j;\n    }\n    return console.error('CTab format invalid');\n  }\n\n  const molLinesReactants = [];\n  const molLinesProducts = [];\n  const molLinesAgents = [];\n  let current = null;\n  const rGroups = [];\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim();\n    var j;\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break; // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts;\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null;\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants;\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null;\n    } else if (line === 'M  V30 BEGIN AGENT') {\n      current = molLinesAgents;\n    } else if (line === 'M  V30 END AGENT') {\n      current = null;\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i);\n      rGroups.push(ctabLines.slice(i, j + 1));\n      i = j;\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i);\n      current.push(ctabLines.slice(i, j + 1));\n      i = j;\n    } else {\n      throw new Error('line unrecognized: ' + line);\n    }\n  }\n  const mols = [];\n  const molLines = molLinesReactants\n    .concat(molLinesProducts)\n    .concat(molLinesAgents);\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit);\n    mols.push(mol);\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout,\n  );\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = [];\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k]);\n      return res;\n    })(rGroups),\n  );\n\n  return ctab;\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = [];\n  let bracketEquality = 0;\n  let currentIndex = 0;\n  let firstSliceIndex = -1;\n  let quoted = false;\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex];\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']');\n      split.push(line.slice(currentIndex, closingBracketIndex + 1));\n      currentIndex = closingBracketIndex + 1;\n      firstSliceIndex = currentIndex;\n    } else if (currentSymbol === '(') bracketEquality += 1;\n    else if (currentSymbol === ')') bracketEquality -= 1;\n    else if (currentSymbol === '\"') quoted = !quoted;\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex));\n      }\n      firstSliceIndex = currentIndex;\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex));\n  }\n  return split;\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2);\n  }\n  return str;\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim);\n  return [line.slice(0, p), line.slice(p + 1)];\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = [];\n  let braceBalance = 0;\n  let quoted = false;\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i);\n    if (c === '\"') {\n      quoted = !quoted;\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++;\n      } else if (c === ')') {\n        braceBalance--;\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i));\n        line = line.slice(i + 1).trim();\n        i = 0;\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!');\n  }\n  if (line.length > 0) split.push(line.trim());\n  return split;\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null;\n  const list = [];\n  line = line.trim();\n  line = line.substr(1, line.length - 2);\n  const split = line.split(' ');\n  shift = shift || 0;\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i]);\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift);\n    }\n  }\n\n  return list;\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid');\n  return line.slice(7);\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = [];\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim());\n    if (element) {\n      ids.push(element.number);\n    }\n  }\n\n  return ids;\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MonomerMicromolecule, Pile, SGroup } from 'domain/entities';\n\nimport utils from './utils';\nimport v2000 from './v2000';\nimport v3000 from './v3000';\n\nconst loadRGroupFragments = true; // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines, ignoreChiralFlag);\n    struct.name = ctabLines[3].trim();\n    return struct;\n  }\n  const struct = parseCTab(ctabLines.slice(3), ignoreChiralFlag);\n  struct.name = ctabLines[0].trim();\n  return struct;\n}\n\nfunction parseCTab(\n  /* string */ ctabLines,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition,\n  );\n  const version = countsSplit[11].trim();\n  ctabLines = ctabLines.slice(1);\n  if (version === 'V2000') {\n    return v2000.parseCTabV2000(ctabLines, countsSplit, ignoreChiralFlag);\n  }\n  if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments);\n  } else {\n    throw new Error('Molfile version unknown: ' + version);\n  }\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  /* boolean */ shouldReactionRelayout,\n  /* boolean */ ignoreChiralFlag,\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ');\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout);\n  }\n\n  const struct = v2000.parseRxn2000(\n    ctabLines,\n    shouldReactionRelayout,\n    ignoreChiralFlag,\n  );\n  struct.name = ctabLines[1].trim();\n  return struct;\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving,\n  queryComponent: prepareQueryComponentForSaving,\n};\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = [];\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin);\n    const a2 = mol.atoms.get(bond.end);\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid);\n    }\n  }, sgroup);\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    // TODO fix this eslint error\n    // eslint-disable-next-line no-throw-literal\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number',\n    };\n  }\n  sgroup.bonds = xBonds;\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = [];\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin);\n    const a2 = mol.atoms.get(bond.end);\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid);\n    }\n  }, sgroup);\n  sgroup.bonds = xBonds;\n}\n\nfunction prepareGenForSaving(_sgroup, _mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareQueryComponentForSaving(_sgroup, _mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup);\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile,\n};\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap,\n    ),\n  ); // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap,\n    ),\n  );\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul;\n  lines.push(smtLine);\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n\n  let sgroupName;\n\n  if (sgroup instanceof MonomerMicromolecule) {\n    sgroupName = sgroup.monomer.label;\n  } else if (sgroup.data.name && sgroup.data.name !== '') {\n    sgroupName = sgroup.data.name;\n  }\n\n  if (sgroupName) {\n    lines.push('M  SMT ' + idstr + ' ' + sgroupName);\n  }\n\n  return lines.join('\\n');\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  const data = sgroup.data;\n  let pp = sgroup.pp;\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms));\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2);\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65);\n  }\n\n  lines.push(sdtLine);\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  '; // oo\n  lines.push(sddLine);\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '');\n  const charsPerLine = 69;\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine));\n      chars = chars.slice(charsPerLine);\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars);\n  });\n  return lines.join('\\n');\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3);\n\n  let lines = [];\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap));\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap));\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr));\n  return lines.join('\\n');\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return [];\n  const lines = [];\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15); // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2);\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3);\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine);\n  }\n  return lines;\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms);\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet);\n  SGroup.bracketPos(sg, mol, crossBonds);\n  const bb = sg.bracketBox;\n  const d = sg.bracketDirection;\n  const n = d.rotateSC(1, 0);\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n,\n  );\n  const lines = [];\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i];\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement();\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement();\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3);\n    const coord = [a0.x, a0.y, a1.x, a1.y];\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4);\n    }\n    lines.push(line);\n  }\n  return lines;\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g;\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n');\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace,\n) {\n  /* reader */\n  const res = [];\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]));\n    if (withspace) shift++;\n    shift += parts[i];\n  }\n  return res;\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile,\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StereoFlag,\n  Struct,\n  SGroupAttachmentPoint,\n  SGroup,\n} from 'domain/entities';\n\nimport { Elements } from 'domain/constants';\nimport common from './common';\nimport utils from './utils';\nimport { KetcherLogger } from 'utilities';\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0';\n\ntype Mapping = {\n  [key in number]: number;\n};\ntype NumberTuple = [number, number];\n\ninterface ParseCTFileProps {\n  molfileLines: string[];\n  shouldReactionRelayout?: boolean;\n  ignoreChiralFlag?: boolean;\n}\n\nexport class Molfile {\n  molecule: Struct | null;\n  molfile: string | null;\n  reaction: boolean;\n  mapping: Mapping;\n  bondMapping: Mapping;\n\n  constructor() {\n    this.molecule = null;\n    this.molfile = null;\n\n    this.reaction = false;\n    this.mapping = {};\n    this.bondMapping = {};\n  }\n\n  parseCTFile(props: ParseCTFileProps) {\n    const { molfileLines, shouldReactionRelayout, ignoreChiralFlag } = props;\n    let ret;\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(\n        molfileLines,\n        shouldReactionRelayout,\n        ignoreChiralFlag,\n      );\n    } else {\n      ret = common.parseMol(molfileLines, ignoreChiralFlag);\n    }\n    ret.initHalfBonds();\n    ret.initNeighbors();\n    ret.bindSGroupsToFunctionalGroups();\n    ret.markFragments();\n\n    return ret;\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule;\n    const toRemove: any[] = [];\n    let errors = 0;\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!;\n        let errorIgnore = false;\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol);\n        } catch (e: any) {\n          KetcherLogger.error('molfile.ts::Molfile::prepareSGroups', e);\n          if (!skipErrors || typeof e.id !== 'number') {\n            throw new Error(`Error: ${e.message}`);\n          }\n          errorIgnore = true;\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore;\n          toRemove.push(sgroup.id);\n        }\n      }, this);\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.',\n      );\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i]);\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone();\n    this.prepareSGroups(false, false);\n    this.molfile = '';\n    this.writeCTab2000(rgroups);\n    return this.molfile;\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean,\n    ignoreChiralFlag?: boolean,\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow();\n    this.molfile = '' + molecule.name;\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment',\n        );\n      }\n      const components = molecule.getComponents();\n\n      const reactants = components.reactants;\n      const products = components.products;\n      const all = reactants.concat(products);\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n';\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile();\n        const submol = molecule.clone(all[i], null, true);\n        const molfile = saver.saveMolecule(submol, false, true);\n        this.molfile += '$MOL\\n' + molfile;\n      }\n      return this.molfile;\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold();\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups,\n        );\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n';\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n';\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n';\n          this.writePaddedNumber(rgid, 3);\n          this.molfile += '\\n';\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid));\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n';\n          });\n          this.molfile += '$END RGP\\n';\n        });\n        this.molfile += '$END MOL\\n';\n\n        return this.molfile;\n      }\n    }\n\n    this.molecule = molecule.clone();\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc);\n\n    this.writeHeader();\n    this.writeCTab2000(undefined, ignoreChiralFlag);\n\n    return this.molfile;\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date();\n\n    this.writeCR(); // TODO: write structure name\n    this.writeWhiteSpace(2);\n    this.write('Ketcher');\n    this.writeWhiteSpace();\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000,\n    );\n    this.writeCR();\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str;\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = '';\n    }\n\n    this.molfile += str + '\\n';\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1;\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)));\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str);\n    this.writeWhiteSpace(width - str.length);\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString();\n\n    this.writeWhiteSpace(width - str.length);\n    this.write(str);\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision));\n  }\n\n  writeCTab2000Header(ignoreChiralFlag) {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3);\n    this.writePaddedNumber(this.molecule!.bonds.size, 3);\n\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false,\n    );\n\n    this.writePaddedNumber(isAbsFlag || ignoreChiralFlag ? 1 : 0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(999, 3);\n    this.writeCR(' V2000');\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>, ignoreChiralFlag?: boolean) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header(ignoreChiralFlag);\n\n    this.mapping = {};\n    let i = 1;\n\n    const atomsIds: number[] = [];\n    const atomsProps: {\n      id: number;\n      value: string;\n    }[] = [];\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label;\n      if (atom.atomList != null) {\n        label = 'L';\n        atomsIds.push(id);\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A';\n          atomsProps.push({ id, value: `'${atom.pseudo}'` });\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias });\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C';\n        atomsProps.push({ id, value: atom.label });\n      }\n\n      this.writeAtom(atom, label);\n\n      this.mapping[id] = i++;\n    }, this);\n\n    this.bondMapping = {};\n    i = 1;\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++;\n      this.writeBond(bond);\n    }, this);\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0]);\n      atomsProps.splice(0, 1);\n    }\n\n    const chargeList: NumberTuple[] = [];\n    const isotopeList: NumberTuple[] = [];\n    const radicalList: NumberTuple[] = [];\n    const rglabelList: NumberTuple[] = [];\n    const rglogicList: string[] = [];\n    const aplabelList: NumberTuple[] = [];\n    const rbcountList: NumberTuple[] = [];\n    const unsaturatedList: NumberTuple[] = [];\n    const substcountList: NumberTuple[] = [];\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0 && atom.charge !== null) {\n        chargeList.push([id, atom.charge]);\n      }\n      if (atom.isotope !== 0 && atom.isotope !== null) {\n        isotopeList.push([id, atom.isotope]);\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical]);\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1]);\n          }\n        }\n      }\n      if (atom.attachmentPoints != null) {\n        aplabelList.push([id, atom.attachmentPoints]);\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount]);\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount]);\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom]);\n      }\n    });\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range;\n          rglogicList.push(line);\n        }\n      });\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList);\n    this.writeAtomPropList('M  ISO', isotopeList);\n    this.writeAtomPropList('M  RAD', radicalList);\n    this.writeAtomPropList('M  RGP', rglabelList);\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n');\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList);\n    this.writeAtomPropList('M  RBC', rbcountList);\n    this.writeAtomPropList('M  SUB', substcountList);\n    this.writeAtomPropList('M  UNS', unsaturatedList);\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j];\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!;\n        this.write('M  ALS');\n        this.writePaddedNumber(atomId + 1, 4);\n        this.writePaddedNumber(atomList.ids.length, 3);\n        this.writeWhiteSpace();\n        this.write(atomList.notList ? 'T' : 'F');\n\n        const labelList = atomList.labelList();\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace();\n          this.writePadded(labelList[k], 3);\n        }\n        this.writeWhiteSpace();\n        this.writeCR();\n      }\n    }\n\n    const sgmap = {};\n    let cnt = 1;\n    const sgmapback = {};\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS();\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id;\n      sgmap[id] = cnt++;\n    });\n    for (let sGroupIdInCTab = 1; sGroupIdInCTab < cnt; ++sGroupIdInCTab) {\n      // each group on its own\n      const id = sgmapback[sGroupIdInCTab];\n      const sgroup = this.molecule!.sgroups.get(id)!;\n      if (SGroup.isQuerySGroup(sgroup)) {\n        console.warn('Query group does not support in mol format');\n        continue;\n      }\n      this.write('M  STY');\n      this.writePaddedNumber(1, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeWhiteSpace(1);\n      this.writePadded(sgroup.type, 3);\n      this.writeCR();\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB');\n      this.writePaddedNumber(1, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeWhiteSpace(1);\n      this.writePaddedNumber(sGroupIdInCTab, 3);\n      this.writeCR();\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!;\n      if (parentId >= 0) {\n        this.write('M  SPL');\n        this.writePaddedNumber(1, 3);\n        this.writeWhiteSpace(1);\n        this.writePaddedNumber(sGroupIdInCTab, 3);\n        this.writeWhiteSpace(1);\n        this.writePaddedNumber(sgmap[parentId], 3);\n        this.writeCR();\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${sGroupIdInCTab.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`;\n\n        this.write('M  SCN');\n        this.writePaddedNumber(1, 3);\n        this.write(connectivity.toUpperCase());\n        this.writeCR();\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ');\n        this.writePaddedNumber(sGroupIdInCTab, 3);\n        this.writeWhiteSpace();\n        this.write(sgroup.data.subscript || 'n');\n        this.writeCR();\n      }\n      sgroup.getAttachmentPoints().forEach((attachmentPoint) => {\n        this.writeSGroupAttachmentPointLine(sGroupIdInCTab, attachmentPoint);\n      });\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping,\n        ),\n      );\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = [];\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.isExpanded() && !SGroup.isQuerySGroup(sg))\n        expandedGroups.push(sg.id + 1);\n    });\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`;\n      this.writeCR(expandedGroupsLine);\n    }\n\n    this.writeCR('M  END');\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4);\n    this.writePaddedFloat(-atom.pp.y, 10, 4);\n    this.writePaddedFloat(atom.pp.z, 10, 4);\n    this.writeWhiteSpace();\n    this.writePadded(atomLabel, 3);\n    this.writePaddedNumber(0, 2);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0;\n    }\n    this.writePaddedNumber(atom.hCount, 3);\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0;\n    }\n    this.writePaddedNumber(atom.stereoCare, 3);\n\n    let number: number;\n    if (atom.explicitValence < 0) {\n      number = 0;\n    } else if (atom.explicitValence === 0) {\n      number = 15;\n    } else {\n      number = atom.explicitValence;\n    }\n    this.writePaddedNumber(number, 3);\n\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n    this.writePaddedNumber(0, 3);\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0;\n    }\n    this.writePaddedNumber(atom.aam, 3);\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0;\n    }\n    this.writePaddedNumber(atom.invRet, 3);\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0;\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3);\n\n    this.writeCR();\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3);\n    this.writePaddedNumber(this.mapping[bond.end], 3);\n    this.writePaddedNumber(bond.type, 3);\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0;\n    }\n    this.writePaddedNumber(bond.stereo, 3);\n\n    this.writePadded(bond.xxx, 3);\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0;\n    }\n    this.writePaddedNumber(bond.topology, 3);\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0;\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3);\n\n    this.writeCR();\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ');\n    this.writePaddedNumber(props.id + 1, 3);\n    this.writeCR();\n    this.writeCR(props.value);\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = [];\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0]);\n        values.splice(0, 1);\n      }\n\n      this.write(propId);\n      this.writePaddedNumber(part.length, 3);\n\n      part.forEach((value) => {\n        this.writeWhiteSpace();\n        this.writePaddedNumber(this.mapping[value[0]], 3);\n        this.writeWhiteSpace();\n        this.writePaddedNumber(value[1], 3);\n      });\n\n      this.writeCR();\n    }\n  }\n\n  private writeSGroupAttachmentPointLine(\n    sgroupId: number,\n    attachmentPoint: SGroupAttachmentPoint,\n  ) {\n    this.write(`M  SAP`);\n    this.writeWhiteSpace(1);\n    this.writePaddedNumber(sgroupId, 3);\n    this.writePaddedNumber(1, 3);\n    this.writeWhiteSpace(1);\n    const atomId = this.mapping[attachmentPoint.atomId];\n    this.writePaddedNumber(atomId, 3);\n    this.writeWhiteSpace(1);\n    const leaveAtomId =\n      this.mapping[attachmentPoint.leaveAtomId as number] ?? 0;\n    this.writePaddedNumber(leaveAtomId, 3);\n    this.writeWhiteSpace(1);\n\n    const attachmentId = attachmentPoint.attachmentId\n      ? attachmentPoint.attachmentId.slice(0, 2)\n      : '  ';\n    this.writePadded(attachmentId, 2);\n    this.writeCR();\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types';\nimport { Molfile } from './molfile';\nimport { Serializer } from '../serializers.types';\nimport { Struct } from 'domain/entities';\nimport { KetcherLogger } from 'utilities';\nimport { KetSerializer } from 'domain/serializers';\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false,\n  };\n\n  readonly options: MolSerializerOptions;\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options };\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile();\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g);\n\n    const parseCTFileParams = {\n      molfileLines: lines,\n      shouldReactionRelayout: this.options.reactionRelayout,\n      ignoreChiralFlag: this.options.ignoreChiralFlag,\n    };\n\n    try {\n      return molfile.parseCTFile(parseCTFileParams);\n    } catch (e) {\n      KetcherLogger.error('molSerializer::MolSerializer::deserialize', e);\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: lines.slice(1),\n          });\n        } catch (e1) {\n          KetcherLogger.error('molSerializer::MolSerializer::deserialize', e1);\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile({\n            ...parseCTFileParams,\n            molfileLines: [''].concat(lines),\n          });\n        } catch (e2) {\n          KetcherLogger.error('molSerializer::MolSerializer::deserialize', e2);\n        }\n      }\n      throw e;\n    }\n  }\n\n  serialize(_struct: Struct): string {\n    const struct = KetSerializer.removeLeavingGroupsFromConnectedAtoms(_struct);\n\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc,\n      this.options.ignoreChiralFlag,\n    );\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities';\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol;\n  this.bonds = new Pool();\n  this.getNeighbors = neighborsFunc;\n  this.context = context;\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2,\n};\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func);\n};\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity;\n};\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents;\n};\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end);\n  const norm = new Vec2(-diff.y, diff.x);\n\n  if (!norm.normalize()) return 0;\n\n  const normBeg = Vec2.diff(neiBeg, beg);\n  const normEnd = Vec2.diff(neiEnd, end);\n\n  if (!normBeg.normalize()) return 0;\n  if (!normEnd.normalize()) return 0;\n\n  const prodBeg = Vec2.dot(normBeg, norm);\n  const prodEnd = Vec2.dot(normEnd, norm);\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0;\n\n  return prodBeg * prodEnd > 0 ? 1 : -1;\n};\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp,\n  );\n};\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen();\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen();\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen();\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen();\n\n  if (h0 && h1) return false;\n  if (h2 && h3) return false;\n\n  if (h1) {\n    substituents[1] = -1;\n  } else if (h0) {\n    substituents[0] = substituents[1];\n    substituents[1] = -1;\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1);\n  }\n\n  if (h3) {\n    substituents[3] = -1;\n  } else if (h2) {\n    substituents[2] = substituents[3];\n    substituents[3] = -1;\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3);\n  }\n\n  return true;\n};\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx);\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false;\n\n  const label1 = this.molecule.atoms.get(bond.begin).label;\n  const label2 = this.molecule.atoms.get(bond.end).label;\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false;\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false;\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin);\n  const neiEnd = this.getNeighbors.call(this.context, bond.end);\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false;\n  }\n\n  substituents[0] = -1;\n  substituents[1] = -1;\n  substituents[2] = -1;\n  substituents[3] = -1;\n\n  let i;\n  let nei;\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i];\n\n    if (nei.bid === bondIdx) continue; // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false;\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid;\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid;\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i];\n\n    if (nei.bid === bondIdx) continue; // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false;\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid;\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid;\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false;\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: [],\n    };\n    this.bonds.set(bid, ct);\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return;\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return;\n\n    if (!this.sortSubstituents(ct.substituents)) return;\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2],\n    );\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS;\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS;\n  });\n};\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = tmp;\n}\n\nexport default CisTrans;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol;\n  this.atom_data = atomData;\n  this.components = components;\n  this.nComponentsInReactants = -1;\n  this.nReactants = nReactants;\n\n  this.vertices = new Array(this.molecule.atoms.size); // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc();\n  }, this);\n\n  this.edges = new Array(this.molecule.bonds.size); // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc();\n  }, this);\n\n  this.v_seq = [];\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0; // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0; // parent vertex in DFS tree\n  this.parent_edge = 0; // edge to parent vertex\n  this.branches = 0; // how many DFS branches go out from this vertex}\n};\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0; // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0; // 1 if this edge closes a cycle\n};\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx; // index of vertex in _graph\n  this.parent_vertex = parVertex; // parent vertex in DFS tree\n  this.parent_edge = parEdge; // edge to parent vertex\n};\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = [];\n  let i, j;\n  let cid = 0;\n  let component = 0;\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1;\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid;\n            return true;\n          }\n          return false;\n        });\n        if (selected === null) {\n          selected = -1;\n          cid++;\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component;\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid;\n            return true;\n          }\n          return false;\n        });\n      }\n      if (selected === -1) break;\n      this.vertices[selected].parent_vertex = -1;\n      this.vertices[selected].parent_edge = -1;\n      vStack.push(selected);\n      component++;\n    }\n\n    const vIdx = vStack.pop();\n    const parentVertex = this.vertices[vIdx].parent_vertex;\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge,\n    );\n    this.v_seq.push(seqElem);\n\n    this.vertices[vIdx].dfs_state = 2;\n\n    const atomD = this.atom_data[vIdx];\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid;\n      const edgeIdx = atomD.neighbours[i].bid;\n\n      if (neiIdx === parentVertex) continue; // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1;\n\n        j = vIdx;\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex;\n        }\n\n        if (j === -1) throw new Error('cycle unwind error');\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++;\n        this.vertices[vIdx].branches++;\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx);\n        this.v_seq.push(seqElem);\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx);\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack');\n          }\n\n          vStack.splice(j, 1);\n\n          const parent = this.vertices[neiIdx].parent_vertex;\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--;\n          }\n        }\n\n        this.vertices[vIdx].branches++;\n        this.vertices[neiIdx].parent_vertex = vIdx;\n        this.vertices[neiIdx].parent_edge = edgeIdx;\n        this.vertices[neiIdx].dfs_state = 1;\n        vStack.push(neiIdx);\n      }\n    }\n  }\n};\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0;\n};\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches;\n};\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles;\n};\n\nDfs.prototype.toString = function () {\n  let str = '';\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> ';\n  });\n  str += '*';\n  return str;\n};\n\nexport default Dfs;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities';\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol;\n  this.atoms = new Pool();\n  this.getNeighbors = neighborsFunc;\n  this.context = context;\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context);\n};\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors,\n) {\n  const atoms = this.molecule.atoms;\n  const bonds = this.molecule.bonds;\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile();\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid);\n    if (neiList.length !== 2) return false;\n    const nei1 = neiList[0];\n    const nei2 = neiList[1];\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this,\n      ) >= 0\n    ) {\n      return false;\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this,\n      ) >= 0\n    ) {\n      return false;\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid);\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid);\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false;\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this,\n        ) >= 0\n    ) {\n      return false;\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this,\n        ) >= 0\n    ) {\n      return false;\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid);\n    return true;\n  });\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return;\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid);\n      let stereocenter = false;\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid);\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true;\n            return true;\n          }\n        }\n        return false;\n      }, this);\n\n      if (!stereocenter) return;\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */,\n        );\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */,\n        );\n      }\n    });\n  }\n};\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 },\n];\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */,\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx);\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx);\n  const degree = neiList.length;\n  let implicitDegree = -1;\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: [],\n  };\n\n  const edgeIds = [];\n\n  let lastAtomDir = 0;\n  let nDoubleBonds = 0;\n\n  stereocenter.pyramid[0] = -1;\n  stereocenter.pyramid[1] = -1;\n  stereocenter.pyramid[2] = -1;\n  stereocenter.pyramid[3] = -1;\n\n  let nPureHydrogens = 0;\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree);\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid);\n    const bond = this.molecule.bonds.get(nei.bid);\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement(),\n    };\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++;\n      edgeIds[neiIdx].rank = 10000;\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000;\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length');\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter');\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter');\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++;\n  });\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree;\n      return true;\n    }\n    return false;\n  });\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)',\n    );\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter');\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter',\n    );\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n\n    var main1 = -1;\n    let main2 = -1;\n    var side1 = -1;\n    var side2 = -1;\n    var mainDir = 0;\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx;\n        mainDir = stereo;\n        break;\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond');\n    }\n\n    let xyz1, xyz2;\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4;\n        side1 = (main1 + 2) % 4;\n        side2 = (main1 + 3) % 4;\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4;\n        side1 = (main1 + 1) % 4;\n        side2 = (main1 + 3) % 4;\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n      );\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n      );\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4;\n        side1 = (main1 + 2) % 4;\n        side2 = (main1 + 1) % 4;\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond');\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch');\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch');\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match');\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match');\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir;\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP;\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec,\n    );\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx;\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2);\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1);\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx);\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx);\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx);\n\n    let nUp = 0;\n    let nDown = 0;\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0;\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0;\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom');\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom');\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case');\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case');\n      }\n\n      mainDir = 0;\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN;\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP;\n      } else {\n        main1 = -1;\n        side1 = -1;\n        side2 = -1;\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx);\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx;\n            mainDir = dir;\n            side1 = (neiIdx + 1) % 3;\n            side2 = (neiIdx + 2) % 3;\n            break;\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond');\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec,\n        );\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom');\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir;\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP;\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec,\n      );\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n      }\n\n      stereocenter.pyramid[3] = -1;\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      let dir;\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case');\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter');\n      } else if (nUp > 0) dir = 1;\n      else dir = -1;\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir;\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec,\n      );\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx;\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx;\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx;\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx;\n      }\n      stereocenter.pyramid[3] = -1;\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter);\n};\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx);\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0;\n  }\n\n  return bond.stereo;\n};\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001;\n\n  const sine1 = Vec2.cross(v1, v2);\n  const cosine1 = Vec2.dot(v1, v2);\n\n  const sine2 = Vec2.cross(v1, u);\n  const cosine2 = Vec2.dot(v1, u);\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap');\n    }\n\n    return sine2 > 0 ? 4 : 8;\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2;\n\n  if (cosine2 < cosine1) return 2;\n\n  return 1;\n};\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x); // eslint-disable-line no-mixed-operators\n  const eps = 0.001;\n\n  if (res > eps) return 1;\n  if (res < -eps) return -1;\n\n  throw new Error('degenerate triangle');\n};\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice();\n  let rigid = true;\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1);\n    rigid = !rigid;\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2);\n    rigid = !rigid;\n  }\n\n  return rigid;\n};\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = tmp;\n}\n\nexport default Stereocenters;\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities';\nimport { KetcherLogger } from 'utilities';\n\nimport CisTrans from './cis_trans';\nimport Dfs from './dfs';\nimport Stereocenters from './stereocenters';\n\nexport function Smiles() {\n  this.smiles = '';\n  this.writtenAtoms = [];\n  this.writtenComponents = 0;\n\n  this.ignoreErrors = false;\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = []; // Array of integer pairs {a, b}\n  this.aromatic = false; // has aromatic bond\n  this.lowercase = false; // aromatic and has to be written lowercase\n  this.chirality = 0; // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0; // runs from 0 to (branches - 1)\n  this.paren_written = false;\n  this.h_count = hCount;\n  this.parent = -1;\n};\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid];\n};\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k;\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors;\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined,\n  );\n  struct.initHalfBonds();\n  struct.initNeighbors();\n  struct.sortNeighbors();\n  struct.setImplicitHydrogen();\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct);\n      } catch (error) {\n        KetcherLogger.error('smiles.js::Smiles.prototype.saveMolecule', error);\n        throw Error('Bad s-group (' + error.message + ')');\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  });\n  // END\n\n  this.atoms = new Array(struct.atoms.size);\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH); // eslint-disable-line no-underscore-dangle\n  });\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As'];\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true;\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true;\n      }\n      this.atoms[bond.end].aromatic = true;\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true;\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid });\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid });\n  });\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure();\n    let bondsInLoops = new Pile();\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid);\n        bondsInLoops = bondsInLoops.union(new Pile(hbids));\n      }\n    });\n    const inLoop = {};\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1;\n    });\n    return inLoop;\n  })();\n\n  this.touchedCistransbonds = 0;\n  this.markCisTrans(struct);\n\n  const components = struct.getComponents();\n  const componentsAll = components.reactants.concat(components.products);\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length,\n  );\n\n  walk.walk();\n  this.atoms.forEach((atom) => {\n    atom.neighbours = [];\n  });\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i];\n    var vIdx = seqEl.idx;\n    var eIdx = seqEl.parent_edge;\n    var vPrevIdx = seqEl.parent_vertex;\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx];\n\n      var openingCycles = walk.numOpeningCycles(eIdx);\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 });\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx;\n            atom.neighbours[k].bid = eIdx;\n            break;\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place');\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx });\n        atom.parent = vPrevIdx;\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx });\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours;\n      },\n      this,\n    );\n    stereocenters.buildFromBonds(this.ignoreErrors);\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1;\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3;\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = [];\n      let counter = 0;\n\n      const atom = this.atoms[atomIdx];\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k;\n            break;\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx;\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue; // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow');\n            pyramidMapping[counter++] = k;\n            break;\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0];\n        pyramidMapping[0] = pyramidMapping[1];\n        pyramidMapping[1] = pyramidMapping[2];\n        pyramidMapping[2] = pyramidMapping[3];\n        pyramidMapping[3] = counter;\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality');\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1;\n      } else this.atoms[atomIdx].chirality = 2;\n    });\n  } catch (e) {\n    KetcherLogger.error('smiles.js::Smiles.prototype.saveMolecule', e);\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = [];\n\n  cycleNumbers.push(0); // never used\n\n  let firstComponent = true;\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i];\n    vIdx = seqEl.idx;\n    eIdx = seqEl.parent_edge;\n    vPrevIdx = seqEl.parent_vertex;\n    let writeAtom = true;\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')';\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx);\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break;\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx);\n        else cycleNumbers[k] = vPrevIdx;\n\n        this.writeCycleNumber(k);\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx);\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false;\n          } else {\n            this.smiles += '(';\n            this.atoms[vPrevIdx].paren_written = true;\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++;\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch');\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx);\n\n      let dir = 0;\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx);\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/';\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\';\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~';\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '=';\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#';\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:';\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:';\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,=';\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':';\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-';\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break;\n        }\n\n        if (j === cycleNumbers.length)\n          throw new Error('cycle number not found');\n\n        this.writeCycleNumber(j);\n\n        cycleNumbers[j] = -1;\n        writeAtom = false;\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.'; // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false;\n      this.writtenComponents++;\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality,\n      );\n      this.writtenAtoms.push(seqEl.idx);\n    }\n  }\n\n  this.comma = false;\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct);\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|';\n\n  return this.smiles;\n};\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n;\n  else if (n >= 10 && n < 100) this.smiles += '%' + n;\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n;\n  else throw new Error('bad cycle number: ' + n);\n};\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality,\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx);\n  let needBrackets = false;\n  let hydro = -1;\n  let aam = 0;\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*';\n    return;\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]';\n    return;\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam;\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true;\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count;\n  }\n\n  let label = atom.label;\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label();\n    needBrackets = false; // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*';\n    needBrackets = false;\n  } else if (\n    chirality ||\n    (atom.charge !== 0 && atom.charge !== null) ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true;\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count;\n    this.smiles += '[';\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope;\n\n  if (lowercase) this.smiles += label.toLowerCase();\n  else this.smiles += label;\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@';\n    // chirality == 2\n    else this.smiles += '@@';\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter');\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro;\n    else if (hydro === 1) this.smiles += 'H';\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge;\n  else if (atom.charge < -1) this.smiles += atom.charge;\n  else if (atom.charge === 1) this.smiles += '+';\n  else if (atom.charge === -1) this.smiles += '-';\n\n  if (aam > 0) this.smiles += ':' + aam;\n\n  if (needBrackets) this.smiles += ']';\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n};\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours;\n    },\n    this,\n  );\n  this.cis_trans.build();\n  this.dbonds = new Array(mol.bonds.size);\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0,\n    };\n  });\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid);\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours;\n      const neiEnd = this.atoms[bond.end].neighbours;\n      let aromFailBeg = true;\n      let aromFailEnd = true;\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false;\n        }\n      });\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false;\n        }\n      });\n\n      if (aromFailBeg || aromFailEnd) return;\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return;\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid;\n        } else this.dbonds[nei.bid].ctbond_end = bid;\n      });\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return;\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid;\n        } else this.dbonds[nei.bid].ctbond_end = bid;\n      });\n    }\n  });\n};\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx);\n  const subst = this.cis_trans.getSubstituents(bondIdx);\n  const parity = this.cis_trans.getParity(bondIdx);\n\n  const sidebonds = [-1, -1, -1, -1];\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin);\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin);\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end);\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end);\n\n  let n1 = 0;\n  let n2 = 0;\n  let n3 = 0;\n  let n4 = 0;\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++;\n    } else n2++;\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++;\n    } else n2++;\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++;\n    } else n4++;\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++;\n    } else n4++;\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3;\n    n2 += n4;\n  } else {\n    n1 += n4;\n    n2 += n3;\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration');\n\n  if (n1 === 0 && n2 === 0) return false;\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2;\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1;\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2;\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1;\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1;\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2;\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1;\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2;\n    }\n  }\n\n  return true;\n};\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched;\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0;\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type);\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0;\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++;\n      }\n    });\n    if (ntouched === this.touchedCistransbonds) break;\n    this.touchedCistransbonds = ntouched;\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1;\n    else this.dbonds[idx].saved = 2;\n  }\n\n  return this.dbonds[idx].saved;\n};\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length);\n  let i, j;\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue; // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical;\n\n    if (radical === 0) continue; // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ',';\n    } else {\n      this.smiles += ' |';\n      this.comma = true;\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:';\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:';\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:';\n\n    this.smiles += i;\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true;\n        this.smiles += ',' + j;\n      }\n    }\n  }\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types';\nimport { SmiSerializerOptions } from './smi.types';\nimport { Smiles } from './smiles';\nimport { Struct } from 'domain/entities';\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false,\n  };\n\n  private readonly options: SmiSerializerOptions;\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options };\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.');\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types';\n\nimport { MolSerializer } from '../mol/molSerializer';\nimport { Serializer } from '../serializers.types';\nimport { MolSerializerOptions } from '../mol';\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm;\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  private readonly molSerializerOptions?: Partial<MolSerializerOptions>;\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.molSerializerOptions = options;\n  }\n\n  deserialize(content: string): Array<SdfItem> {\n    let m: any;\n    const result: Array<SdfItem> = [];\n    const molSerializer = new MolSerializer(this.molSerializerOptions);\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim(); // TODO: normalize newline?\n      const end = chunk.indexOf('M  END');\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m);\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6));\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/);\n            if (m) {\n              const field = m[1];\n              const valueArr = pc.split('\\n').slice(1, -1);\n              let value = '';\n              if (valueArr.length > 1) {\n                value = valueArr.join(',');\n              } else {\n                value = pc.split('\\n')[1].trim();\n              }\n\n              acc[field] = Number.isFinite(value) ? +value : value.toString(); // eslint-disable-line\n            }\n            return acc;\n          },\n          {} as StructAssociatedData,\n        );\n\n        result.push({ struct, props });\n      }\n    }\n    return result;\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer(this.molSerializerOptions);\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct);\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`;\n        res += `${item.props[prop]}\\n\\n`;\n      });\n\n      return `${res}$$$$\\n`;\n    }, '');\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseMicromoleculeEntity } from 'domain/entities/BaseMicromoleculeEntity';\nimport { Vec2 } from 'domain/entities/vec2';\nimport { getNodeWithInvertedYCoord, KetFileNode } from 'domain/serializers';\nimport { IMAGE_SERIALIZE_KEY } from 'domain/constants';\n\nexport interface KetFileImageNode extends KetFileNode<string> {\n  format: string;\n  boundingBox: {\n    x: number;\n    y: number;\n    z?: number;\n    width: number;\n    height: number;\n  };\n}\n\nexport interface ImageReferencePositions {\n  topLeftPosition: Vec2;\n  topMiddlePosition: Vec2;\n  topRightPosition: Vec2;\n  rightMiddlePosition: Vec2;\n  bottomRightPosition: Vec2;\n  bottomMiddlePosition: Vec2;\n  bottomLeftPosition: Vec2;\n  leftMiddlePosition: Vec2;\n}\n\nexport type ImageReferenceName = keyof ImageReferencePositions;\n\nexport interface ImageReferencePositionInfo {\n  name: ImageReferenceName;\n  offset: Vec2;\n}\n\nexport class Image extends BaseMicromoleculeEntity {\n  constructor(\n    public bitmap: string,\n    private _center: Vec2,\n    private halfSize: Vec2,\n  ) {\n    super();\n  }\n\n  getTopLeftPosition(): Vec2 {\n    return this._center.sub(this.halfSize);\n  }\n\n  getTopRightPosition(): Vec2 {\n    return new Vec2(\n      this._center.x + this.halfSize.x,\n      this._center.y - this.halfSize.y,\n    );\n  }\n\n  getBottomRightPosition(): Vec2 {\n    return this._center.add(this.halfSize);\n  }\n\n  getBottomLeftPosition(): Vec2 {\n    return new Vec2(\n      this._center.x - this.halfSize.x,\n      this._center.y + this.halfSize.y,\n    );\n  }\n\n  getCornerPositions() {\n    return [\n      this.getTopLeftPosition(),\n      this.getTopRightPosition(),\n      this.getBottomRightPosition(),\n      this.getBottomLeftPosition(),\n    ];\n  }\n\n  getReferencePositions(): ImageReferencePositions {\n    const [\n      topLeftPosition,\n      topRightPosition,\n      bottomRightPosition,\n      bottomLeftPosition,\n    ] = this.getCornerPositions();\n    return {\n      topLeftPosition,\n      topMiddlePosition: Vec2.centre(topLeftPosition, topRightPosition),\n      topRightPosition,\n      rightMiddlePosition: Vec2.centre(topRightPosition, bottomRightPosition),\n      bottomRightPosition,\n      bottomMiddlePosition: Vec2.centre(\n        bottomLeftPosition,\n        bottomRightPosition,\n      ),\n      bottomLeftPosition,\n      leftMiddlePosition: Vec2.centre(topLeftPosition, bottomLeftPosition),\n    };\n  }\n\n  clone(): Image {\n    return new Image(\n      this.bitmap,\n      new Vec2(this._center),\n      new Vec2(this.halfSize),\n    );\n  }\n\n  addPositionOffset(offset: Vec2) {\n    this._center = this._center.add(offset);\n  }\n\n  resize(topLeftPosition: Vec2, bottomRightPosition: Vec2) {\n    this._center = Vec2.centre(topLeftPosition, bottomRightPosition);\n    const halfSize = Vec2.diff(bottomRightPosition, topLeftPosition).scaled(\n      0.5,\n    );\n    this.halfSize = new Vec2(Math.abs(halfSize.x), Math.abs(halfSize.y));\n  }\n\n  rescaleSize(scale: number): void {\n    this.halfSize = this.halfSize.scaled(scale);\n  }\n\n  center(): Vec2 {\n    return this._center;\n  }\n\n  toKetNode(): KetFileImageNode {\n    const topLeftCorner = this.getTopLeftPosition();\n    const base64Data = this.bitmap.replace(/^.*;base64,/, '');\n    const format = this.bitmap.match(\n      /^data:(image\\/.*);base64,/,\n    )?.[1] as string;\n    return {\n      type: IMAGE_SERIALIZE_KEY,\n      center: getNodeWithInvertedYCoord(this._center),\n      format,\n      boundingBox: {\n        ...getNodeWithInvertedYCoord(topLeftCorner),\n        width: this.halfSize.x * 2,\n        height: this.halfSize.y * 2,\n      },\n      data: base64Data,\n      selected: this.getInitiallySelected(),\n    };\n  }\n\n  static fromKetNode(ketFileNode: KetFileImageNode): Image {\n    const { width, height, ...point } = getNodeWithInvertedYCoord(\n      ketFileNode.boundingBox,\n    );\n    const halfSize = new Vec2(width / 2, height / 2);\n    const topLeftCorner = new Vec2(point);\n    const center = topLeftCorner.add(halfSize);\n    const imageSrc = `data:${ketFileNode.format};base64,${ketFileNode.data}`;\n\n    // Should be validated already\n    const image = new Image(imageSrc, center, halfSize);\n    image.setInitiallySelected(ketFileNode.selected);\n    return image;\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n}\n\nexport class Highlight {\n  atoms: Array<number>;\n  bonds: Array<number>;\n  color: string;\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes;\n    this.color = color;\n    this.atoms = atoms;\n    this.bonds = bonds;\n  }\n}\n","import assert from 'assert';\nimport { RGroupAttachmentPoint } from './rgroupAttachmentPoint';\n\n/**\n * This is data model for Sgrou attachment point.\n * each of the property is according to the specification of CT files for \"SAP\" instruction.\n * Implemented under requirements: https://github.com/epam/ketcher/issues/2467\n */\nexport class SGroupAttachmentPoint {\n  /**\n   * This is the index of the atom in the S-group that serves as the attachment point.\n   */\n  public readonly atomId: number;\n  /**\n   * This is the index of the atom that is being replaced or removed at the attachment point\n   * when the S-group is connected to another structure.\n   * If no atom is being replaced, this value should be set to zero.\n   *\n   * NOTE: The logic is not supported in the current implementation of Ketcher.\n   * Only reading from file and saving to file.\n   */\n  public readonly leaveAtomId: number | undefined;\n  /**\n   * 2 character attachment identifier (for example, H or T for head/tail).\n   * No validation of any kind is performed, and ‘ ’ is allowed.\n   * ISIS/Desktop uses the first character as the ID of the leaving group\n   * to attach if the bond between ooo and iii is deleted, and uses the second character\n   * to indicate the sequence polarity: l for left, r for right, and x for none (a crosslink).\n   *\n   * NOTE: The logic is not supported in the current implementation of Ketcher.\n   * Only reading from file and saving to file.\n   */\n  public readonly attachmentId: string | undefined;\n\n  // Field attachmentPointNumber is used for superatom attachment points\n  // which are used for connection between molecule and monomer.\n  public readonly attachmentPointNumber?: number;\n\n  constructor(\n    atomId: number,\n    leaveAtomId: number | undefined,\n    attachmentId: string | undefined,\n    attachmentPointNumber?: number,\n  ) {\n    this.atomId = atomId;\n    this.leaveAtomId = leaveAtomId;\n    this.attachmentId = attachmentId;\n    this.attachmentPointNumber = attachmentPointNumber;\n  }\n\n  clone(atomIdMap: Map<number, number>): SGroupAttachmentPoint {\n    const newAtomId = atomIdMap.get(this.atomId);\n    assert(newAtomId != null);\n    const newLeaveAtomId = atomIdMap.get(this.leaveAtomId as number);\n    return new SGroupAttachmentPoint(\n      newAtomId,\n      newLeaveAtomId,\n      this.attachmentId,\n      this.attachmentPointNumber,\n    );\n  }\n\n  /**\n   * Trick: used for cloned struct for tooltips, for preview, for templates\n   *\n   * Why?\n   * Currently, tooltips are implemented with removing sgroups (wrong implementation)\n   * That's why we need to mark atoms as sgroup attachment points.\n   *\n   * If we change preview approach to flagged (option for showing sgroups without abbreviation),\n   * then we will be able to remove this hack.\n   */\n  convertToRGroupAttachmentPointForDisplayPurpose(attachedAtomId: number) {\n    return new RGroupAttachmentPoint(attachedAtomId, 'primary');\n  }\n}\n","export enum Axis {\n  x = 'x',\n  y = 'y',\n  z = 'z',\n}\n\nexport type Axises = 'x' | 'y' | 'z';\n","import { Nucleoside } from 'domain/entities/Nucleoside';\nimport { Nucleotide } from 'domain/entities/Nucleotide';\nimport { MonomerSequenceNode } from 'domain/entities/MonomerSequenceNode';\nimport { EmptySequenceNode } from 'domain/entities/EmptySequenceNode';\n\nexport type SubChainNode =\n  | MonomerSequenceNode\n  | Nucleoside\n  | Nucleotide\n  | EmptySequenceNode;\n\nexport enum SequenceType {\n  RNA = 'RNA',\n  DNA = 'DNA',\n  PEPTIDE = 'PEPTIDE',\n}\n\nexport enum IsChainCycled {\n  NOT_CYCLED,\n  CYCLED,\n}\n","import { BaseMonomer } from 'domain/entities/BaseMonomer';\nimport {\n  getNextMonomerInChain,\n  isValidNucleoside,\n  isValidNucleotide,\n} from 'domain/helpers/monomers';\nimport { Chem } from 'domain/entities/Chem';\nimport { Phosphate } from 'domain/entities/Phosphate';\nimport { RNABase } from 'domain/entities/RNABase';\nimport { Sugar } from 'domain/entities/Sugar';\n\nexport class LinkerSequenceNode {\n  constructor(public monomer: BaseMonomer) {}\n\n  public get SubChainConstructor() {\n    return this.monomer.SubChainConstructor;\n  }\n\n  public get firstMonomerInNode() {\n    return this.monomer;\n  }\n\n  public get lastMonomerInNode() {\n    return this.monomers[this.monomers.length - 1];\n  }\n\n  public get monomers() {\n    const monomers = [this.firstMonomerInNode];\n    const firstMonomer = this.firstMonomerInNode;\n    let nextMonomer = getNextMonomerInChain(this.firstMonomerInNode);\n    while (\n      nextMonomer instanceof Chem ||\n      nextMonomer instanceof Phosphate ||\n      nextMonomer instanceof RNABase ||\n      (nextMonomer instanceof Sugar &&\n        !isValidNucleotide(nextMonomer) &&\n        !isValidNucleoside(nextMonomer))\n    ) {\n      monomers.push(nextMonomer);\n      nextMonomer = getNextMonomerInChain(nextMonomer, firstMonomer);\n    }\n\n    return monomers;\n  }\n\n  public get renderer() {\n    return this.monomer.renderer;\n  }\n\n  public get modified() {\n    return false;\n  }\n}\n","import { BaseMonomer } from './BaseMonomer';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { Peptide } from 'domain/entities/Peptide';\n\nexport class UnresolvedMonomer extends BaseMonomer {\n  public getValidSourcePoint(monomer?: BaseMonomer) {\n    return Peptide.prototype.getValidSourcePoint.call(this, monomer);\n  }\n\n  public getValidTargetPoint(monomer: BaseMonomer) {\n    return Peptide.prototype.getValidTargetPoint.call(this, monomer);\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import { BaseMonomer, Peptide } from 'domain/entities';\nimport { ChemSubChain } from 'domain/entities/monomer-chains/ChemSubChain';\nimport { SubChainNode } from 'domain/entities/monomer-chains/types';\nimport { PeptideSubChain } from 'domain/entities/monomer-chains/PeptideSubChain';\n\nexport class UnsplitNucleotide extends BaseMonomer {\n  public getValidSourcePoint(monomer?: BaseMonomer) {\n    return Peptide.prototype.getValidSourcePoint.call(this, monomer);\n  }\n\n  public getValidTargetPoint(monomer: BaseMonomer) {\n    return Peptide.prototype.getValidTargetPoint.call(this, monomer);\n  }\n\n  public get SubChainConstructor() {\n    return ChemSubChain;\n  }\n\n  public isMonomerTypeDifferentForChaining(monomerToChain: SubChainNode) {\n    return ![PeptideSubChain, ChemSubChain].includes(\n      monomerToChain.SubChainConstructor,\n    );\n  }\n}\n","import { ShowHydrogenLabels } from 'application/render';\nimport { ketcherProvider } from 'application/utils';\n\nenum IndigoShowHydrogenLabelsMode {\n  OFF = 'none',\n  HETERO = 'hetero',\n  TERMINAL_HETERO = 'terminal-hetero',\n  ALL = 'all',\n}\n\nexport function getLabelRenderModeForIndigo() {\n  // Terminal does not supported by indigo so TERMINAL_HETERO used\n  // Off removing all labels in indigo so HETERO used\n  const renderModeMapping = {\n    [ShowHydrogenLabels.Off]: IndigoShowHydrogenLabelsMode.HETERO,\n    [ShowHydrogenLabels.Hetero]: IndigoShowHydrogenLabelsMode.HETERO,\n    [ShowHydrogenLabels.Terminal]: IndigoShowHydrogenLabelsMode.TERMINAL_HETERO,\n    [ShowHydrogenLabels.TerminalAndHetero]:\n      IndigoShowHydrogenLabelsMode.TERMINAL_HETERO,\n    [ShowHydrogenLabels.On]: IndigoShowHydrogenLabelsMode.ALL,\n  };\n\n  return (\n    renderModeMapping[\n      ketcherProvider.getKetcher()?.editor.options().showHydrogenLabels\n    ] || IndigoShowHydrogenLabelsMode.TERMINAL_HETERO\n  );\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { defaultBondThickness, CoreEditor } from 'application/editor';\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  ExplicitHydrogensData,\n  ExplicitHydrogensResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions,\n} from 'domain/services';\nimport { KetcherLogger } from 'utilities';\nimport { getLabelRenderModeForIndigo } from 'infrastructure/services/helpers';\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val);\n            else setTimeout(iterate, timeGap);\n          } catch (error) {\n            KetcherLogger.error('remoteStructService.ts::pollDeferred', error);\n            reject(error);\n          }\n        },\n        (err) => reject(err),\n      );\n    }\n    setTimeout(iterate, startTimeGap || 0);\n  });\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val]);\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>,\n) {\n  let requestUrl = url;\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data);\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json',\n      },\n      headers,\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin',\n  });\n\n  if (responseHandler) {\n    response = responseHandler(response);\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error))),\n    );\n  }\n\n  return response;\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>,\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>,\n  ) {\n    const body = Object.assign({}, data);\n    body.options = Object.assign(body.options || {}, defaultOptions, options);\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders,\n      },\n      responseHandler,\n    );\n  };\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string;\n  private readonly defaultOptions: StructServiceOptions;\n  private readonly customHeaders?: Record<string, string>;\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>,\n  ) {\n    this.apiPath = apiPath;\n    this.defaultOptions = defaultOptions;\n    this.customHeaders = customHeaders;\n  }\n\n  getInChIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi',\n      },\n      {},\n    );\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string;\n    let imagoVersions: Array<string>;\n    let isAvailable = false;\n\n    try {\n      const response = await request('GET', this.apiPath + 'info');\n      indigoVersion = response.indigo_version;\n      imagoVersions = response.imago_versions;\n      isAvailable = true;\n    } catch (e) {\n      KetcherLogger.error(\n        'remoteStructService.ts::RemoteStructService::info',\n        e,\n      );\n      indigoVersion = '';\n      imagoVersions = [];\n      isAvailable = false;\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable,\n    };\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions,\n  ): Promise<ConvertResult> {\n    const monomerLibrary = JSON.stringify(\n      CoreEditor.provideEditorInstance()?.monomersLibraryParsedJson,\n    );\n    const expandedOptions = { monomerLibrary, ...options };\n\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, expandedOptions);\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions,\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions,\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions,\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions,\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions,\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions,\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : '';\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream',\n      },\n    );\n    const status = request.bind(\n      null,\n      'GET',\n      this.apiPath + 'imago/uploads/:id',\n    );\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response;\n            return response.state === 'SUCCESS';\n          },\n          500,\n          300,\n        ),\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }));\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions,\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png';\n    const bondThickness: number =\n      options?.bondThickness || defaultBondThickness;\n    const stereoStyle: undefined | string = options?.stereoStyle;\n    const stereoStyleOption =\n      stereoStyle != null ? { 'render-stereo-style': stereoStyle } : {};\n\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(\n      { struct: data },\n      {\n        'render-output-format': outputFormat,\n        'render-bond-line-width': bondThickness,\n        'render-label-mode': getLabelRenderModeForIndigo(),\n        ...stereoStyleOption,\n      },\n      (response) => response.then((resp) => resp.text()),\n    );\n  }\n\n  toggleExplicitHydrogens(\n    data: ExplicitHydrogensData,\n    options?: StructServiceOptions,\n  ): Promise<ExplicitHydrogensResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert_explicit_hydrogens',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders,\n    )(data, options);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider,\n} from 'domain/services';\n\nimport { RemoteStructService } from './remoteStructService';\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string;\n  mode: ServiceMode = 'remote';\n  customHeaders?: Record<string, string>;\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath;\n    this.customHeaders = customHeaders;\n    const params = new URLSearchParams(document.location.search);\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!;\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/';\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService,\n} from 'domain/services';\nimport { StructOrString } from 'application/indigo.types';\nimport { KetSerializer } from 'domain/serializers';\nimport { Struct } from 'domain/entities';\nimport { defaultBondThickness } from './editor';\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d',\n];\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition',\n];\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType;\n  inputFormat?: ChemicalMimeType;\n};\ntype AutomapOptions = {\n  mode?: AutomapMode;\n};\ntype CheckOptions = {\n  types?: Array<CheckTypes>;\n};\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>;\n};\ntype RecognizeOptions = {\n  version?: string;\n};\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType;\n  backgroundColor?: string;\n  bondThickness?: number;\n};\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer,\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map();\n    const result = struct.clone(null, null, false, aidMap);\n\n    return serializer.serialize(result);\n  }\n\n  return struct;\n}\n\nexport class Indigo {\n  #structService: StructService;\n  #ketSerializer: KetSerializer;\n\n  constructor(structService) {\n    this.#structService = structService;\n    this.#ketSerializer = new KetSerializer();\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info();\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions,\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET;\n    const inputFormat = options?.inputFormat;\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat,\n      input_format: inputFormat,\n    });\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard';\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes;\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types,\n    });\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions,\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps;\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties,\n    });\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || '';\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions,\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png';\n    const backgroundColor = options?.backgroundColor || '';\n    const bondThickness = options?.bondThickness || defaultBondThickness;\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor,\n        bondThickness,\n      },\n    );\n  }\n\n  toggleExplicitHydrogens(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .toggleExplicitHydrogens({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct));\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// Types for 'setMode'\nexport enum ModeTypes {\n  flex = 'flex-layout-mode',\n  snake = 'snake-layout-mode',\n  sequence = 'sequence-layout-mode',\n}\nexport type SupportedModes = keyof typeof ModeTypes;\n\n// Types for 'exportImage'\nexport enum BlobTypes {\n  svg = 'image/svg+xml',\n}\nexport type SupportedImageFormats = keyof typeof BlobTypes;\nexport type ExportImageParams = {\n  margin?: number;\n};\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { saveAs } from 'file-saver';\nimport { FormatterFactory, SupportedFormat } from './formatters';\nimport { GenerateImageOptions, StructService } from 'domain/services';\n\nimport { CoreEditor, Editor, defaultBondThickness } from './editor';\nimport { Indigo } from 'application/indigo';\nimport { KetSerializer, MolfileFormat } from 'domain/serializers';\nimport { SGroup, Struct } from 'domain/entities';\nimport assert from 'assert';\nimport { EventEmitter } from 'events';\nimport {\n  LogSettings,\n  LogLevel,\n  runAsyncAction,\n  SettingsManager,\n  getSvgFromDrawnStructures,\n} from 'utilities';\nimport {\n  deleteAllEntitiesOnCanvas,\n  getStructure,\n  parseAndAddMacromoleculesOnCanvas,\n  prepareStructToRender,\n} from './utils';\nimport { EditorSelection } from './editor/editor.types';\nimport {\n  BlobTypes,\n  ExportImageParams,\n  ModeTypes,\n  SupportedImageFormats,\n  SupportedModes,\n} from 'application/ketcher.types';\n\nconst allowedApiSettings = {\n  'general.dearomatize-on-load': 'dearomatize-on-load',\n  ignoreChiralFlag: 'ignoreChiralFlag',\n  disableQueryElements: 'disableQueryElements',\n  bondThickness: 'bondThickness',\n};\n\nexport class Ketcher {\n  logging: LogSettings;\n  structService: StructService;\n  #formatterFactory: FormatterFactory;\n  #editor: Editor;\n  _indigo: Indigo;\n  #eventBus: EventEmitter;\n\n  get editor(): Editor {\n    return this.#editor;\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus;\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory,\n  ) {\n    assert(editor != null);\n    assert(structService != null);\n    assert(formatterFactory != null);\n\n    this.#editor = editor;\n    this.structService = structService;\n    this.#formatterFactory = formatterFactory;\n    this._indigo = new Indigo(this.structService);\n    this.#eventBus = new EventEmitter();\n    this.logging = {\n      enabled: false,\n      level: LogLevel.ERROR,\n      showTrace: false,\n    };\n  }\n\n  get formatterFactory() {\n    return this.#formatterFactory;\n  }\n\n  get indigo() {\n    return this._indigo;\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options();\n    const result = Object.entries(allowedApiSettings).reduce(\n      (acc, [apiSetting, clientSetting]) => {\n        if (clientSetting in options) {\n          return { ...acc, [apiSetting]: clientSetting };\n        }\n        return acc;\n      },\n      {},\n    );\n\n    if (!Object.keys(result).length) {\n      throw new Error('Allowed options are not provided');\n    }\n\n    return result;\n  }\n\n  // TODO: create options type\n  setSettings(settings: Record<string, string>) {\n    // TODO: need to expand this and refactor this method\n    if (!settings) {\n      throw new Error('Please provide settings');\n    }\n    const options = {};\n    for (const [apiSetting, clientSetting] of Object.entries(\n      allowedApiSettings,\n    )) {\n      options[clientSetting] = settings[apiSetting];\n    }\n\n    if (Object.hasOwn(settings, 'disableCustomQuery')) {\n      SettingsManager.disableCustomQuery = !!settings.disableCustomQuery;\n    }\n\n    return this.#editor.setOptions(JSON.stringify(options));\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SMILES format is not available in macro mode');\n    }\n    const format = isExtended\n      ? SupportedFormat.smilesExt\n      : SupportedFormat.smiles;\n    return getStructure(format, this.#formatterFactory, this.editor.struct());\n  }\n\n  async getMolfile(molfileFormat?: MolfileFormat): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrows.',\n      );\n    }\n\n    const formatPassed =\n      molfileFormat === 'v3000'\n        ? SupportedFormat.molV3000\n        : SupportedFormat.mol;\n    const format = molfileFormat ? formatPassed : SupportedFormat.molAuto;\n\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n\n    return molfile;\n  }\n\n  getIdt(): Promise<string> {\n    return getStructure(\n      SupportedFormat.idt,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('RXN format is not available in macro mode');\n    }\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.',\n      );\n    }\n    const format =\n      molfileFormat === 'v3000'\n        ? SupportedFormat.rxnV3000\n        : SupportedFormat.rxn;\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n\n    return rxnfile;\n  }\n\n  getKet(): Promise<string> {\n    return getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n      this.#editor.selection() as EditorSelection,\n    );\n  }\n\n  getFasta(): Promise<string> {\n    return getStructure(\n      SupportedFormat.fasta,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  getSequence(): Promise<string> {\n    return getStructure(\n      SupportedFormat.sequence,\n      this.#formatterFactory,\n      this.#editor.struct(),\n      CoreEditor.provideEditorInstance()?.drawingEntitiesManager,\n    );\n  }\n\n  getSmarts(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SMARTS format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.smarts,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getCml(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CML format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cml,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getSdf(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('SDF format is not available in macro mode');\n    }\n    const format =\n      molfileFormat === 'v2000'\n        ? SupportedFormat.sdf\n        : SupportedFormat.sdfV3000;\n    return getStructure(format, this.#formatterFactory, this.#editor.struct());\n  }\n\n  getCDXml(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CDXML format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cdxml,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getCDX(): Promise<string> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('CDX format is not available in macro mode');\n    }\n    return getStructure(\n      SupportedFormat.cdx,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? SupportedFormat.inChIAuxInfo : SupportedFormat.inChI,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n  }\n\n  async getInChIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct(),\n    );\n\n    return this.structService.getInChIKey(struct);\n  }\n\n  containsReaction(): boolean {\n    const editor = CoreEditor.provideEditorInstance();\n    return (\n      this.editor.struct().hasRxnArrow() ||\n      editor?.drawingEntitiesManager?.micromoleculesHiddenEntities.hasRxnArrow()\n    );\n  }\n\n  isQueryStructureSelected(): boolean {\n    const structure = this.editor.struct();\n    const selection = this.editor.selection();\n\n    if (!selection) {\n      return false;\n    }\n\n    let hasQueryAtoms = false;\n    if (selection.atoms) {\n      hasQueryAtoms = selection.atoms.some((atomId) => {\n        const atom = structure.atoms.get(atomId);\n        assert(atom);\n        const sGroupIds = Array.from(atom.sgs.values());\n        const isQueryComponentSGroup = sGroupIds.some((sGroupId) => {\n          const sGroup = structure.sgroups.get(sGroupId);\n          assert(sGroup);\n          return SGroup.isQuerySGroup(sGroup);\n        });\n        return atom.isQuery() || isQueryComponentSGroup;\n      });\n    }\n\n    let hasQueryBonds = false;\n    if (selection.bonds) {\n      hasQueryBonds = selection.bonds.some((bondId) => {\n        const bond = structure.bonds.get(bondId);\n        assert(bond);\n        return bond.isQuery();\n      });\n    }\n    return hasQueryAtoms || hasQueryBonds;\n  }\n\n  async setMolecule(structStr: string): Promise<void | undefined> {\n    if (CoreEditor.provideEditorInstance()?.isSequenceEditInRNABuilderMode)\n      return;\n\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string');\n\n      if (window.isPolymerEditorTurnedOn) {\n        deleteAllEntitiesOnCanvas();\n        await parseAndAddMacromoleculesOnCanvas(structStr, this.structService);\n      } else {\n        const struct: Struct = await prepareStructToRender(\n          structStr,\n          this.structService,\n          this,\n        );\n\n        struct.rescale();\n        this.#editor.struct(struct);\n        this.#editor.zoomAccordingContent(struct);\n        this.#editor.centerStruct();\n      }\n    }, this.eventBus);\n  }\n\n  async setHelm(helmStr: string): Promise<void | undefined> {\n    runAsyncAction<void>(async () => {\n      assert(typeof helmStr === 'string');\n      const struct: Struct = await prepareStructToRender(\n        helmStr,\n        this.structService,\n        this,\n      );\n      struct.rescale();\n      this.#editor.struct(struct);\n      this.#editor.zoomAccordingContent(struct);\n      this.#editor.centerStruct();\n    }, this.eventBus);\n  }\n\n  async addFragment(structStr: string): Promise<void | undefined> {\n    if (CoreEditor.provideEditorInstance()?.isSequenceEditInRNABuilderMode)\n      return;\n\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string');\n\n      if (window.isPolymerEditorTurnedOn) {\n        await parseAndAddMacromoleculesOnCanvas(structStr, this.structService);\n      } else {\n        const struct: Struct = await prepareStructToRender(\n          structStr,\n          this.structService,\n          this,\n        );\n\n        struct.rescale();\n        this.#editor.structToAddFragment(struct);\n      }\n    }, this.eventBus);\n  }\n\n  async layout(): Promise<void> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('Layout is not available in macro mode');\n    }\n\n    runAsyncAction<void>(async () => {\n      const struct = await this._indigo.layout(this.#editor.struct());\n      const ketSerializer = new KetSerializer();\n      this.setMolecule(ketSerializer.serialize(struct));\n    }, this.eventBus);\n  }\n\n  /**\n   * @param {number} value - in a range [ZoomTool.instance.MINZOOMSCALE, ZoomTool.instance.MAXZOOMSCALE]\n   */\n  setZoom(value: number) {\n    const editor = CoreEditor.provideEditorInstance();\n    if (editor && value) editor.zoomTool.zoomTo(value);\n  }\n\n  setMode(mode: SupportedModes) {\n    const editor = CoreEditor.provideEditorInstance();\n    if (editor && mode) editor.events.selectMode.dispatch(ModeTypes[mode]);\n  }\n\n  exportImage(format: SupportedImageFormats, params?: ExportImageParams) {\n    const editor = CoreEditor.provideEditorInstance();\n    const fileName = 'ketcher';\n    let blobPart;\n\n    if (format === 'svg' && editor?.canvas) {\n      blobPart = getSvgFromDrawnStructures(\n        editor.canvas,\n        'file',\n        params?.margin,\n      );\n    }\n    if (!blobPart) {\n      throw new Error('Cannot export image');\n    }\n\n    const blob = new Blob([blobPart], {\n      type: BlobTypes[format],\n    });\n    saveAs(blob, `${fileName}.${format}`);\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    if (window.isPolymerEditorTurnedOn) {\n      throw new Error('Recognize is not available in macro mode');\n    }\n    return this._indigo.recognize(image, { version });\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = {\n      outputFormat: 'png',\n      bondThickness: defaultBondThickness,\n    },\n  ): Promise<Blob> {\n    let meta = '';\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml';\n        break;\n\n      case 'png':\n      default:\n        meta = 'image/png';\n        options.outputFormat = 'png';\n    }\n\n    const base64 = await this.structService.generateImageAsBase64(\n      data,\n      options,\n    );\n    const byteCharacters = atob(base64);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], { type: meta });\n    return blob;\n  }\n\n  public reinitializeIndigo(structService: StructService) {\n    this.structService = structService;\n    this._indigo = new Indigo(structService);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider,\n} from 'domain/services';\n\nimport { Editor } from 'application/editor';\nimport { FormatterFactory } from 'application/formatters';\nimport { Ketcher } from './ketcher';\nimport assert from 'assert';\nimport { ketcherProvider } from './utils';\n\nexport const DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false,\n  'ignore-no-chiral-flag': false,\n};\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider;\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider,\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider;\n    return this;\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null);\n    assert(this.#structServiceProvider != null);\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions,\n    };\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions);\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService),\n    );\n    ketcher[this.#structServiceProvider.mode] = true;\n\n    ketcherProvider.setKetcherInstance(ketcher);\n    return ketcher;\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","getAll","concat","Generics","itemSets","displayName","items","description","subGroups","getGenericsList","generics","_generics$","Array","isArray","map","item","result","_i","_Object$values","Object","values","length","subGroup","_toConsumableArray","genericsList","IMAGE_KEY","IMAGE_SERIALIZE_KEY","CURSOR_DIAGONAL_NWSE","CURSOR_DIAGONAL_NESW","CURSOR_VERTICAL","CURSOR_HORIZONTAL","imageReferencePositionToCursor","topLeftPosition","topMiddlePosition","topRightPosition","rightMiddlePosition","bottomRightPosition","bottomMiddlePosition","bottomLeftPosition","leftMiddlePosition","AtomList","params","_classCallCheck","notList","ids","_createClass","value","labelList","labels","_iterator","_createForOfIteratorHelper","_step","s","n","done","id","currenElement","push","err","e","f","join","equals","atomList","sort","toString","ifDef","target","defaultValue","undefined","tfx","parsedValue","parseFloat","toFixed","LogLevel","KetcherLogger","_window$ketcher$loggi","_window","window","ketcher","logging","newSettings","_Object$entries","entries","_Object$entries$_i","_slicedToArray","settingName","settingValue","settings","log","isMinimumLogLevel","LOG","showTrace","_len","arguments","messages","_key","console","trace","info","INFO","_len2","_key2","warn","WARN","_len3","warnings","_key3","error","ERROR","_len4","errors","_key4","minimumLevel","_this$settings","enabled","level","KetcherAsyncEvents","runAsyncAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","eventEmitter","res","wrap","_callee$","_context","prev","next","emit","LOADING","sent","SUCCESS","abrupt","t0","FAILURE","stop","_x","_x2","apply","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","blob","Blob","notifyRequestCompleted","event","Event","dispatchEvent","KETCHER_SAVED_SETTINGS_KEY","KETCHER_SAVED_OPTIONS_KEY","SettingsManager","getSettings","JSON","parse","localStorage","getItem","saveSettings","setItem","stringify","getOptions","saveOptions","options","_this$getSettings","selectionTool","_objectSpread","_disableCustomQuery","disableCustomQuery","_this$getOptions","ignoreChiralFlag","mac","navigator","test","platform","normalizeKeyName","name","parts","split","alt","ctrl","shift","meta","mod","Error","normalizeKeyMap","copy","create","keys","forEach","prop","modifiers","altKey","ctrlKey","metaKey","shiftKey","rusToEng","replace","KN","keyCode","normalizeKeyEvent","base","isChar","isControlKey","keyNorm","obj","KeyboardEvent","_typeof","setHotKey","actName","hotKeys","initHotKeys","actions","act","shortcut","lookup","baseName","shortcutAliasMap","Escape","Delete","Mod","isMacOs","shortcutStr","shortcutKey","toUpperCase","generateMenuShortcuts","_obj$key","processedShortcut","ChemicalMimeType","isClipboardAPIAvailable","_navigator","_navigator2","clipboard","writeText","read","legacyCopy","clipboardData","data","curFmt","setData","fmt","legacyPaste","cb","formats","getData","d","notifyCopyCut","getStructStringFromClipboardData","_getStructStringFromClipboardData","clipboardItem","structStr","ClipboardItem","safelyGetMimeType","KET","t2","Mol","t1","Rxn","text","_x3","_safelyGetMimeType","_callee2","mimeType","_callee2$","_context2","getType","Vec2","args","x","y","z","Math","sqrt","v","add","add_","get_xy0","sub","scaled","sInitial","isFinite","negated","yComplement","y1","addScaled","normalized","normalize","l","turnLeft","coordStr","max","assert","min","ceil","floor","rotate","angle","sin","cos","rotateSC","rotateAroundOrigin","angleInDegrees","angleInRadians","PI","offsetX","offsetY","rotatedX","rotatedY","Number","isInsidePolygon","points","inside","j","xi","yi","xj","yj","intersect","calculateDistanceToLine","line","dist","a","b","c","per","oxAngle","atan2","diff","v1","v2","sum","dot","cross","lc","lc2","f1","f2","centre","getLinePoint","lineStart","lineEnd","difference","distance","ratio","crossProduct","radiansToDegrees","radians","degrees_to_radians","degrees","oxAngleForVector","findSecondPoint","startPoint","lineLength","lineAngleRadians","deltaX","deltaY","endPoint","_defineProperty","Pile","_Set","_inherits","_callSuper","find","setB","isSuperset","subset","_iterator2","_step2","has","expression","from","union","_iterator3","_step3","intersection","thisSet","unionIntersections","sets","unionized","setsToReturn","prevSets","curSet","isCurSetMerged","newSets","intersec","size","_wrapNativeSuper","Set","INVALID","BaseMicromoleculeEntity","initiallySelected","getInitiallySelected","setInitiallySelected","resetInitiallySelected","invalidate","AttachmentPoints","StereoLabel","CIP","Atom","_BaseMicromoleculeEnt","attributes","_this","fragment","getValueOrDefault","alias","attrlist","isotope","radical","cip","charge","rglabel","attachmentPoints","implicitHCount","explicitValence","isPreview","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","queryProperties","property","_attributes$queryProp","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","defineProperty","_assertThisInitialized","enumerable","getPseudo","isCorrectPseudo","setRGAttachmentPointForDisplayPurpose","FirstSideOnly","clone","fidMap","ret","isQuery","isAnyAtom","isAnyMetal","isAnyHalogen","isAnyGroup","Boolean","some","pureHydrogen","isPlainCarbon","isPseudo","hasRxnProps","calcValence","connectionCount","groupno","radicalCount","radicalElectrons","hydrogenCount","absCharge","abs","isHeteroAtom","calcValenceMinusHyd","conn","rad","getConnectedBondIds","struct","atomId","bonds","_step$value","bondId","bond","begin","end","getAttrHash","atom","attrs","attr","attrGetDefault","isInAromatizedRing","atoms","loops","_step2$value","_","loop","halfBondIds","hbs","aromatic","halfBondId","halfBond","halfBonds","getSuperAtomAttachmentPointByAttachmentAtom","sgroup","getGroupFromAtomId","getAttachmentPoints","attachmentPoint","getSuperAtomAttachmentPointByLeavingGroup","leaveAtomId","isSuperatomLeavingGroupAtom","isSuperatomAttachmentAtom","getAttachmentAtomExternalConnections","attachmentAtomId","leavingGroupAtomid","isNumber","attachmentPointAtomBonds","attachmentAtomExternalConnection","beginAtom","endAtom","isHiddenLeavingGroupAtom","attachmentAtomExternalConnections","isSuperatomWithoutLabel","beginSuperatomAttachmentPointNumber","attachmentPointNumber","endSuperatomAttachmentPointNumber","RADICAL","NONE","SINGLET","DOUPLET","TRIPLET","STEREO_PARITY","ODD","EVEN","EITHER","aromaticity","ringMembership","ringSize","connectivity","chirality","customQuery","PATTERN","Bond","_attributes$cip","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","TYPE","ANY","center","TYPES","QUERY_BOND_TYPES","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","AROMATIC","includes","SINGLE","getCenter","p1","p2","getDir","aidMap","cp","getAttachedSGroups","_struct$atoms$get","_struct$atoms$get2","sGroupsWithBeginAtom","sGroupsWithEndAtom","getBondNeighbourIds","beginBondIds","endBondIds","getFusingConditions","bondBegin","bondEnd","_this$PATTERN$TYPE","DOUBLE","isFusingToDoubleBond","isFusingToSingleBond","isFusingDoubleSingleSingle","isFusingSingleSingleDouble","isAllSingle","getBenzeneConnectingBondType","_this$PATTERN$TYPE2","_Bond$getFusingCondit","getCyclopentadieneFusingBondType","_this$PATTERN$TYPE3","_Bond$getFusingCondit2","getCyclopentadieneDoubleBondIndexes","_Bond$getFusingCondit3","isBondToHiddenLeavingGroup","beginSuperatomAttachmentPoint","endSuperatomAttachmentPoint","TRIPLE","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","filteredStereoAtoms","aid","hasAnotherLabel","stereoFlag","Mixed","_stereoLabel$match","match","Abs","And","Or","_enhancedStereoFlag","WeakMap","_stereoAtoms","Fragment","stereoAtoms","stereoFlagPosition","properties","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_classPrivateFieldGet","fr","updateStereoFlag","updateStereoAtom","frId","isAdd","addStereoAtom","deleteStereoAtom","fragmentId","getDefaultStereoFlagPosition","getFragment","bb","getCoordBoundingBox","canvasToModel","point","microModeScale","modelToCanvas","vector","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","EndAtomNeigh","NaN","_struct$atomGetNeighb","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","getFunctionalGroupsList","setFunctionalGroupsList","list","addToFunctionalGroupsList","getInstance","instance","SaltsAndSolventsProvider","saltsAndSolventsList","getSaltsAndSolventsList","setSaltsAndSolventsList","Box2Abs","p0","extend","lp","rb","include","p","contains","ext","translate","transform","sz","pos","hasZeroArea","fromRelBox","relBox","width","height","b1","b2","segmentIntersection","dc","dd","da","db","_classStaticPrivateMethodGet","_isPointOnSegment","call","segPointA","segPointB","minX","maxX","minY","maxY","SgContexts","Multifragment","Group","selectionKeys","defaultBondThickness","MonomerGroups","MonomerGroupCodes","MonomerCodeToGroup","R","SUGARS","A","BASES","G","T","X","PHOSPHATES","SGroupBracketParams","w","h","SGroup","bracketBox","bracketDirection","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","mul","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","getAttr","setFunctionalGroup","functionalGroup","getAttrs","setAttr","oldValue","checkAttr","updateOffset","isExpanded","isSuperAtom","isContracted","calculatePP","topLeftPoint","isAtomContext","context","isBondContent","contentBoxes","contentBB","bba","bbb","sgroups","descriptorIntersects","sAtom","sAtomPP","getMassCentre","isGroupAttached","getConnectionPointsCount","addAttachmentPoint","isAttachmentPointAlreadyExist","addAttachmentPoints","removeAttachmentPoint","index","indexOf","splice","connectionAtoms","isNotContractible","getAttachmentAtomId","_this$attachmentPoint","getContractedPosition","_this$attachmentPoint2","_this2","representAtom","externalConnectionAtom","isBeginAtomInCurrentSgroup","isEndAtomInCurrentSgroup","position","cloneAttachmentPoints","atomIdMap","SUP","getOffset","isSaltOrSolvent","moleculeName","saltsAndSolventsProvider","saltsAndSolvents","_ref2","abbreviation","isAtomInSaltOrSolvent","sgroupsOnCanvas","_this3","onlySaltsOrSolvents","_ref3","atomIdInSaltOrSolvent","isBondInSaltOrSolvent","_this4","_ref4","bondIdInSaltOrSolvent","filterAtoms","newAtoms","removeNegative","_mol","sg","atomMap","field","elem","allAtoms","addAtom","removeAtom","getCrossBonds","mol","parentAtomSet","crossBonds","bid","bracketPos","sGroup","crossBondsPerAtom","remol","render","BORDER_EXT","PADDING_VECTOR","flat","braketBox","getAtom","structBoundingBox","getVBoxObj","vext","attachmentPointsVBox","ctab","getRGroupAttachmentPointsVBoxByAtomIds","getBracketParameters","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","cl","cr","bracketHeight","cl0","cr0","dr","dl","getObjBBox","a0","getAtoms","_atom","getBonds","prepareMulForSaving","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","_loop","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","isBondInContractedSGroup","sGroups","sGroupOrReSGroup","atomsInSGroup","isDataSGroup","DAT","isQuerySGroup","queryComponent","isSRUSGroup","SRU","isMulSGroup","MUL","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","GEN","contractedSGroup","sgBottomRightPoint","bottomRightPoint","_sgroup","FunctionalGroup","isFunctionalGroup","provider","functionalGroups","atomsInFunctionalGroup","isNeedCheckForGroups","fg","relatedSGroup","bondsInFunctionalGroup","molecule","isRGroupAttachmentPointInsideFunctionalGroup","rgroupAttachmentPoint","rgroupAttachmentPoints","attachedAtom","findFunctionalGroupByAtom","isFunctionalGroupReturned","relatedSGroupId","findFunctionalGroupByBond","_iterator4","_step4","findFunctionalGroupBySGroup","isAtomInContractedFunctionalGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","isBondInContractedFunctionalGroup","_sGroup","isHalfBondInContractedFunctionalGroup","HalfBond","dir","norm","ang","contra","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","isConvex","dblBonds","convex","hb","RGroup","atrributes","frags","resth","range","ifthen","fid","findRGroupByFragment","rgroups","frid","_rgid","rgroup","RGroupAttachmentPoint","atomToNewAtom","newAtomId","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","_attributes$height","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","getSGroupsBFS","order","queue","getAtomSetRelations","newId","isStrictSuperset","isSubset","parents","childs","findIndex","childId","path","insert","_this$children$get","guess","resetParentLink","parentId","childIndex","remove","_this$children$get2","_this3$children$get","checkOverlapping","sGroupType","searchFunction","common","sid","sgAtoms","SimpleObjectMode","SimpleObject","rectangle","Pool","_Map","nextId","_get","_getPrototypeOf","prototype","keyOf","changeInitiallySelectedPropertiesForPool","MonomerMicromolecule","_SGroup","monomer","sgroupContractedPosition","monomerMicromolecule","monomerMicromoleculeClone","arrayAddIfMissing","array","Struct","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","images","_aid","_bid","hasRxnArrow","hasRxnPluses","isRxn","isBlank","isSingleGroup","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","rgroupAttachmentPointSet","imagesSet","bidMap","mergeInto","getScaffold","rg","_fnum","getFragmentIds","_fid","copyNonFragmentObjects","keepAllRGroups","bidMapEntity","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","sgroupIdMap","sgroupId","oldSgroup","soid","prepareLoopStructure","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","calcConn","findBondId","a1","a2","hb1","hb2","bondInitHalfBonds","halfBondUpdate","sgroup1","sgroup2","startCoords","endCoords","coordsDifference","clear","setHbNext","hbid","halfBondSetAngle","left","hbl","atomAddNeighbor","ir","il","atomSortNeighbors","_this5","nei","nei2","nextNei","_this6","atomUpdateHalfBonds","_this7","_this8","sGroupsRecalcCrossBonds","_this9","sGroupDelete","_this10","atomSetPos","rxnPlusSetPos","rxnArrowSetPos","simpleObjectSetPos","textSetPosition","vec","global","getCoordBoundingBoxObj","getBondLengthData","_this11","totalLength","cnt","getAvgBondLength","bld","getAvgClosestAtomDistance","totalDist","minDist","k","checkBondExists","findConnectedComponent","firstaid","_this12","pop","neiId","findConnectedComponents","discardExistingFragments","_this13","addedAtoms","components","component","markFragment","idSet","_this14","frag","markFragments","_this15","comp","_comp","firstAtom","scale","image","rescaleSize","rescale","avg","loopHasSelfIntersections","hbi","ai","bi","hbj","aj","bj","partitionLoop","subloops","continueFlag","atomToHalfBond","aid1","subloop","halfBondAngle","hbid1","hbid2","hba","hbb","loopIsConvex","_this16","every","loopArr","loopIsInner","_this17","totalAngle","hbida","hbidb","_this18","newLoops","bondsToMark","hbIdNext","hbId","loopId","calcImplicitHydrogen","_this$calcConn","_this$calcConn2","isAromatic","correctConn","hasImplicitH","setImplicitHydrogen","_this19","_this$atoms$get","_this20","getComponents","_this21","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","getBondFragment","_this$bonds$get","_this$atoms$get2","bindSGroupsToFunctionalGroups","_this22","getGroupIdFromAtomId","_Array$from","_Array$from$_i","groupId","_this$sgroups","getGroupIdFromBondId","_i2","_Array$from2","_Array$from2$_i","getGroupFromBondId","_this$sgroups2","getGroupsIdsFromBondId","groupsIds","_i3","_Array$from3","_Array$from3$_i","getBondIdByHalfBond","getSelectedVisibleAtoms","selection","_selection$atoms","_this23","isAtomNotInContractedGroup","getRGroupAttachmentPointsByAtomId","_id","isAtomFromMacromolecule","isBondFromMacromolecule","isFunctionalGroupFromMacromolecule","functionalGroupId","isTargetFromMacromolecule","disableInitiallySelected","enableInitiallySelected","TextCommand","preparePositions","positions","Text","content","setPos","coords","customizer","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","setMonomerTemplatePrefix","templateName","setMonomerPrefix","monomerId","getKetRef","entityId","$ref","rotateCoordAxisBy180Degrees","axis","rotatedPosition","switchIntoChemistryCoordSystem","Axis","populateStructWithSelection","populatedStruct","entity","_populatedStruct$enti","selectedEntities","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","headerToKet","header","editorSettings","macroModeScale","provideEditorSettings","canvasSelector","drawnStructuresSelector","notifyRenderComplete","debounce","notifyItemsToMergeInitializationComplete","SCROLL_POSITION","AUTO_SCROLL_OFFSET_X","AUTO_SCROLL_OFFSET_Y","ZoomTool","drawingEntitiesManager","_this$zoom","zoom","translateBy","canvasWrapper","dx","_this$zoom2","dy","resizeObserver","ResizeObserver","drawScrollBars","observe","select","canvas","zoomLevel","zoomTransform","ZoomTransform","initActions","scaleExtent","MINZOOMSCALE","MAXZOOMSCALE","wheelDelta","defaultWheelDelta","preventDefault","on","zoomAction","bind","mouseWheeled","setZoom","getZoomLevel","setZoomTransform","requestAnimationFrame","dispatchZoomEventHandlers","subscribeOnZoomEvent","zoomEventHandler","zoomEventHandlers","initScrollBars","renderScrollBar","scrollBars","horizontal","vertical","scrollBar","hasOffset","offsetStart","offsetEnd","bar","updateScrollBarAttrs","drawScrollBar","_scrollBar$bar","_scrollBar$bar2","append","dragged","drag","_scrollBar$bar5","_this$calculateDynami","calculateDynamicAttr","start","_scrollBar$bar3","maxHeight","HORIZONTAL_DIST_TO_EDGE","WIDTH","_scrollBar$bar4","VERTICAL_DIST_TO_EDGE","RADIUS","COLOR","clamp","MARGIN","maxWidth","MIN_LENGTH","scrollTo","_this$canvasWrapper$n","_this$canvasWrapper$n2","_this$zoom3","stickToBottom","xOffset","yOffset","isOffsetInPercents","canvasWrapperHeight","baseVal","canvasWrapperWidth","translateTo","unzoomValue","scrollToVerticalCenter","structCenterY","_this$zoom4","centerPointOfModel","getCurrentCenterPointOfCanvas","scrollToVerticalBottom","_this$zoom5","isShiftKeydown","boxNode","_this$zoom6","_this$zoom7","_this$canvas$node","_this$canvasWrapper$n3","_this$canvasWrapper$n4","_this$canvasWrapper$n5","_this$scrollBars","_this$scrollBars2","boundingBox","getBoundingClientRect","wrapperBoundingBox","right","top","bottom","zoomIn","_this$zoom8","zoomStep","scaleTo","zoomOut","_this$zoom9","zoomTo","_this$zoom10","resetZoom","_this$zoom11","deltaMode","scaleCoordinates","newX","applyX","newY","applyY","invertZoom","invertX","invertY","zoomValue","destroy","_this$scrollBars$hori","_this$scrollBars$vert","_this$resizeObserver","unobserve","isFitToCanvasHeight","_this$canvasWrapper$n6","canvasWrapperBbox","_instance","initInstance","Coordinates","viewToModel","modelToView","canvasToView","viewToCanvas","canvasToMonomerCoordinates","coordinatesOnCanvas","centerOFMonomer","monomerWidth","monomerHeight","zeroPointCoord","monomerCoord","findLabelPoint","pointOnBorder","lineOffset","labelSize","isUsed","angleRadians","pointOfAttachment","attachmentVector","rotatedVector","normalizedVector","normalizedAttachmentVector","addedOrtogonalOffset","addedParallelOffset","ortogonalOffset","parallelOffset","labelCoordinates","getSearchFunction","initialAngle","canvasOffset","findPointOnMonomerBorder","coordStart","secondPoint","newLength","round","newCoordStart","zoomedCoordinateOfSecondPoint","CoordinatesTool","newPointCoord","newAngle","elementsAtPoint","document","elementsFromPoint","isCurrentMonomerAtNewPoint","_monomer$renderer","renderer","bodyElement","anglesToSector","attachmentPointNumberToAngle","sectorsList","checkFor0and360","getAttachmentPointLabelWithBinaryShift","attachmentPointLabel","rgi","getAttachmentPointLabel","getAttachmentPointNumberFromLabel","fromRlabel","val","moleculeToKet","body","rglabelToKet","atomToKet","bondToKet","sgroupToKet","source","_monomer$monomerItem$","monomerItem","props","MonomerCaps","parseInt","stereoCare","weight","refsToRGroups","rgnumber","sgroupAttachmentPointToKet","attachmentId","mergeFragmentsToStruct","ketItem","atomsOffset","fragments","_fragment$atoms","_fragment$bonds","_fragment$atoms2","atomToStruct","bondToStruct","toRlabel","moleculeToStruct","rglabelToStruct","addRGroupAttachmentPointsToStruct","sgroupData","sgroupToStruct","queryAttribute","elements","el","_Elements$get","mapping","attributeName","newAtom","_source$$refs$map","_source$$refs","$refs","attachedAtomId","SecondSideOnly","BothSides","atomOffset","toLowerCase","_source$attachmentPoi","sourceAttachmentPoint","sourceAttachmentPointIndex","sgroupAttachmentPointToStruct","placement","display","fieldData","attachmentAtom","leavingAtomId","leavingAtom","SGroupAttachmentPoint","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","filteredFragmentIds","addMolecules","toKetNode","ketNode","filteredSGroups","filteredSGroupsMap","fragmentIds","sGroupFragmentsMap","generateSGroupFragmentsMap","mergedFragments","atomsInFragment","hasAtomInSGroup","sGroupId","fragmentSet","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","plus","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","simpleObject","radius","pos0","ellipse","textToKet","textNode","textToStruct","KetConnectionType","KetMonomerClass","KetTemplateType","KetMonomerGroupTemplateClass","Command","addOperation","operation","operations","merge","command","setUndoOperationReverse","undoOperationReverse","setUndoOperationsByPriority","setUndoOperationByPriority","invert","renderersManagers","priority","runPostRenderMethods","execute","isBaseTool","tool","BaseRenderer","drawingEntity","_ZoomTool$instance","_ZoomTool$instance2","_this$rootElement","rootNode","rootElement","getBBox","_this$rootElement2","_this$rootBBox","rootBBox","_this$rootBBox2","_this$rootBBox3","_this$rootBBox4","_this$rootElement3","redrawHover","hovered","hoverElement","appendHover","hoverAreaElement","removeHover","move","editorEvents","resetEditorEvents","selectMonomer","Subscription","selectPreset","selectTool","createBondViaModal","cancelBondCreationViaModal","selectMode","layoutModeChange","selectHistory","openErrorModal","openMonomerConnectionModal","mouseOverPolymerBond","mouseLeavePolymerBond","mouseOverMonomer","mouseOnMoveMonomer","mouseLeaveMonomer","mouseOverAttachmentPoint","mouseLeaveAttachmentPoint","mouseUpAttachmentPoint","mouseDownAttachmentPoint","mouseOverDrawingEntity","mouseLeaveDrawingEntity","mouseUpMonomer","rightClickSequence","rightClickCanvas","rightClickPolymerBond","editSequence","startNewSequence","turnOnSequenceEditInRNABuilderMode","turnOffSequenceEditInRNABuilderMode","modifySequenceInRnaBuilder","mouseOverSequenceItem","mouseOnMoveSequenceItem","mouseLeaveSequenceItem","changeSequenceTypeEnterMode","toggleSequenceEditMode","toggleSequenceEditInRNABuilderMode","clickOnSequenceItem","mousedownBetweenSequenceItems","mouseDownOnSequenceItem","doubleClickOnSequenceItem","openConfirmationDialog","renderersEvents","hotkeysConfiguration","exit","handler","editor","events","dispatch","undo","onSelectHistory","redo","erase","isSequenceEditMode","modelChanges","selectAllDrawingEntities","renderersContainer","update","AttachmentPoint","constructorParams","_constructorParams$ca","_constructorParams$mo","bodyWidth","bodyHeight","DOMRect","attachmentPointName","centerOfMonomer","isSnake","appendAttachmentPoint","isAttachmentPointPotentiallyUsed","colors","fillPotentially","isAttachmentPointUsed","fillUsed","fill","strokePotentially","strokeUsed","stroke","_this$element","renderAttachmentPointByCoordinates","attachmentOnBorder","attachmentPointCoordinates","labelCoordinatesOnMonomer","style","attachmentPointElement","labelGroup","renderHoverableArea","monomerCenter","attachmentPointCenter","angleDegrees","rotation","halfWidth","areaHeight","pow","lineFunction","hoverableAreaElement","_polymerBond$firstMon","_polymerBond$renderer","polymerBond","attachmentPointsToBonds","flip","firstMonomer","isAttachmentpointR1","isMonomersOnSameHorizontalLine","rotateToAngle","_this$getCoordinates","getCoordinates","_this$getCoordinates2","attachmentToBorderCoordinates","attachmentToCenterCoordinates","hoverableArea","updateAttachmentPointStyleForHover","endPosition","_this$catchThePoint","catchThePoint","_this$catchThePoint2","labelPoint","updateCoords","_polymerBond$firstMon2","_this$attachmentPoint3","_this$attachmentPoint4","_this$attachmentPoint5","_this$getCoordinates3","_this$getCoordinates4","rotationAngle","currentMonomerCenter","_findLabelPoint","attachmentPointLength","labelOffset","_findLabelPoint2","getElement","getAttachmentPointName","getHoverableArea","getAngle","hypot","attachmentPointVector","labelPositions","MONOMER_CSS_CLASS","BaseMonomerRenderer","_BaseRenderer","monomerSelectedElementId","monomerHoveredElementId","monomerSymbolElementId","_this$monomerSymbolEl","_this$monomerSymbolEl2","setRenderer","CoreEditor","provideEditorInstance","monomerSymbolElement","querySelector","monomerSize","getAttribute","isSnakeBondForAttachmentPoint","_this$monomer$attachm","_this$monomer$attachm2","scaledMonomerPosition","WHITE","colorsMap","D","Q","MonomerNaturalAnalogCode","getMonomerColor","theme","_theme$monomer$color$","color","regular","redrawAttachmentPoints","hoveredAttachmenPoint","attachmentPointsVisible","removeAttachmentPoints","drawAttachmentPoints","updateAttachmentPoints","redrawAttachmentPointsCoordinates","chosenAttachmentPointName","chosenFirstAttachmentPointForBond","chosenAttachmentPoint","allAngles","isSectorOccupied","usedAttachmentPointsNamesList","newList","freeSectorsList","unrenderedAtPoints","unUsedAttachmentPointsNamesList","properAngleForFreeAttachmentPoint","customAngle","attachmentPointParams","isPotentiallyUsed","attPointInstance","hoverAttachmenPoint","appendRootElement","appendLabel","_labelPositions$monom","_labelPositions$monom2","fontSize","textElement","textColor","monomerUniqueKey","MonomerType","textBBox","cursor","selectedTool","SelectRectangle","getScaledMonomerPosition","appendSelection","selectionCircle","_this$canvas","selectionBorder","removeSelection","_this$selectionCircle","_this$selectionBorder","appendHoverAreaElement","appendEvents","setEnumeration","enumeration","appendEnumeration","enumerationElementPosition","enumerationElement","redrawEnumeration","setBeginning","beginning","appendChainBeginning","beginningElementPosition","beginningElement","reDrawChainBeginning","show","appendBody","drawSelection","raiseElement","_this$selectionCircle2","raise","moveSelection","_this$rootElement4","isSelectable","positionInAngstoms","monomerPositionInPixels","BaseSequenceRenderer","_hoverArea","_theme","DrawingEntity","_this$config","_position","config","generateId","moveRelative","moveAbsolute","turnOnHover","turnOffHover","turnOnSelection","turnOffSelection","selectIfLocatedInRectangle","rectangleTopLeftPoint","rectangleBottomRightPoint","isPreviousSelected","baseRenderer","prevSelectedValue","locatedInRectangle","setBaseRenderer","AttachmentPointName","attachmentPointNames","Entities","BaseMonomer","_DrawingEntity","getAttachmentPointDict","potentialAttachmentPointsToBonds","getMonomerDefinitionAttachmentPoints","potentialSecondAttachmentPointForBond","chosenSecondAttachmentPointForBond","maxAttachmentPointNumber","getMaxAttachmentPointNumber","attachmentPointList","turnOnAttachmentPointsVisibility","turnOffAttachmentPointsVisibility","setChosenFirstAttachmentPoint","setChosenSecondAttachmentPoint","setPotentialSecondAttachmentPoint","setPotentialBond","potentialBond","getAttachmentPointByBond","getPotentialAttachmentPointByBond","hasAttachmentPoint","pointNumber","isNaN","R1","R2","firstFreeAttachmentPoint","isAttachmentPointExistAndFree","forEachBond","callback","setBond","unsetBond","hasBonds","bondName","hasPotentialBonds","getPotentialBond","removeBond","removePotentialBonds","clearSelectedPoints","getBondByAttachmentPoint","getPotentialBondByAttachmentPoint","_BaseMonomer$getAttac","getAttachmentPointDictFromMonomerDefinition","attachmentPointDictionary","getAttachmentPointDictFromAtoms","moreThanTwo","monomerDefinitionAttachmentPoints","superatomAttachmentPoints","superatomAttachmentPoint","bondsToLeavingGroupAtom","leavingGroup","attachmentPointNumberToType","_struct$sgroups$filte","superatomWithoutLabel","attachmentPointNameToBond","leavingGroupAtomId","isMonomerTypeDifferentForChaining","monomerToChain","SubChainConstructor","sideConnections","isSideChainConnection","attachmentPointsList","attachmentPointTypeToNumber","side","attachmentPointIndex","calculatedAttachmentPointNumber","getLabelByTypeAction","calculatedLabel","BaseSubChain","nodes","PeptideSubChain","_BaseSubChain","ChemSubChain","Peptide","_BaseMonomer","getValidSourcePoint","secondMonomer","getValidTargetPoint","Chem","getMonomerUniqueKey","MonomerName","Name","checkIsR2R1Connection","nextMonomer","_nextMonomer$attachme","getAnotherMonomer","isMonomerConnectedToR2RnaBase","_R1ConnectedMonomer$a","R1PolymerBond","R1ConnectedMonomer","RNABase","getSugarFromRnaBase","getNextMonomerInChain","r2PolymerBond","getRnaBaseFromSugar","Sugar","r3PolymerBond","R3","r3ConnectedMonomer","r1PolymerBondOfConnectedMonomer","r1ConnectedMonomer","r1PolymerBond","r3PolymerBondOfConnectedMonomer","getPhosphateFromSugar","nextMonomerInChain","Phosphate","isMonomerBeginningOfChain","MonomerTypes","previousMonomer","isPreviousMonomerPartOfChain","previousConnectionNotR2","UnsplitNucleotide","isValidNucleotide","sugar","firstMonomerInCyclicChain","phosphate","nextMonomerAfterPhosphate","isValidNucleoside","PhosphateSubChain","RnaSubChain","getValidPoint","otherMonomer","potentialPointOnOther","PolymerBond","payload","bondRenderer","firstSelectedAttachmentPoint","secondSelectedAttachmentPoint","finishPolymerBondCreation","history","isBondConnectionModalOpen","deletePolymerBond","cancelPolymerBondCreation","EditorHistory","selectedRenderer","__data__","mousedown","startAttachmentPoint","startBondAttachmentPoint","_this$editor$drawingE","startPolymerBondCreation","lastCursorPositionOfCanvas","mousemove","movePolymerBond","hidePolymerBondInformation","markForRecalculateBegin","showPolymerBondInformation","_this$bondRenderer","_this$bondRenderer2","_this$bondRenderer3","shouldCalculateBonds","shouldInvokeModal","intendToFinishBondCreation","intendToStartBondCreation","_this$bondRenderer4","_this$bondRenderer5","_this$bondRenderer6","intendToFinishAttachmenPointBondCreation","intendToStartAttachmenPointBondCreation","_event$toElement","_event$fromElement","_this$bondRenderer7","eventToElementData","toElement","eventFromElementData","fromElement","_this$bondRenderer8","cancelIntentionToFinishBondCreation","_this$bondRenderer9","attachmentPointRenderer","_this$bondRenderer10","_this$bondRenderer11","isFirstMonomerHovered","_this$bondRenderer12","mouseup","alreadyHasBond","showModal","finishBondCreation","stopPropagation","hasFreeAttachmentPoint","firstMonomerAttachmentPoint","secondMonomerAttachmentPoint","_this$bondRenderer13","_this$bondRenderer14","removeHoverForAllMonomers","checkForPotentialBonds","UnresolvedMonomer","rnaMonomerClasses","firstMonomerIsRNA","RNAClass","secondMonomerIsRNA","hasPlentyAttachmentPoints","listOfAttachmentPoints","hasPlentyFreeAttachmentPoints","BothR1AttachmentPointUsed","BothR2AttachmentPointUsed","R1AndR2AttachmentPointUsed","CHEM_SELECTED_ELEMENT_ID","CHEM_SYMBOL_ELEMENT_ID","ChemRenderer","_BaseMonomerRenderer","CHEM","PEPTIDE_SELECTED_ELEMENT_ID","PEPTIDE_HOVERED_ELEMENT_ID","PEPTIDE_SYMBOL_ELEMENT_ID","PeptideRenderer","PHOSPHATE_SELECTED_ELEMENT_ID","PHOSPHATE_SYMBOL_ELEMENT_ID","PhosphateRenderer","SUGAR_SELECTED_ELEMENT_ID","SUGAR_SYMBOL_ELEMENT_ID","SugarRenderer","RNABASE_SELECTED_ELEMENT_ID","RNABASE_SYMBOL_ELEMENT_ID","RNABaseRenderer","PolymerBondAddOperation","addPolymerBondChangeModel","deletePolymerBondChangeModel","renderersManager","addPolymerBond","PolymerBondDeleteOperation","finishPolymerBondCreationModelChange","PolymerBondMoveOperation","PolymerBondShowInfoOperation","PolymerBondCancelCreationOperation","PolymerBondFinishCreationOperation","deletePolymerBondCreationModelChange","SelectLayoutModeOperation","_onExecute","_onInvert","prevMode","onExecute","onInvert","ReconnectPolymerBondOperation","reconnectPolymerBondModelChange","revertReconnectPolymerBondModelChange","redrawDrawingEntity","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","molAuto","molV3000","rxn","rxnV3000","smiles","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","inChIKey","InChIKey","cml","CML","ket","cdxml","CDXML","cdx","CDX","binaryCdx","sdf","SDF","sdfV3000","fasta","FASTA","idt","IDT","helm","HELM","sequence","SEQUENCE","unknown","UNKNOWN","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","getFormatMimeTypeByFileName","fileName","fileExtension","SupportedFormat","KetFormatter","serializer","_ketSerializer","_getStructureFromStructAsync","serialize","getStructureFromStructAsync","_getStructureFromStringAsync","deserialize","getStructureFromStringAsync","_x4","parseMacromoleculeString","deserializeMicromolecules","_smiSerializer","_structService","_format","_options","SmilesFormatter","smiSerializer","structService","ketSerializer","stringifiedMolfile","stringifiedStruct","serverFormatter","ServerFormatter","isContainsCoordinates","convertResult","message","convert","output_format","getCallingMethod","method","layout","withCoords","trim","_this$getCallingMetho","parsedStruct","formatError","MolfileV2000Formatter","molSerializer","_molSerializer","FormatterFactory","separateOptions","reactionRelayout","badHeaderRecover","structServiceOptions","_objectWithoutProperties","_excluded","molfileParseOptions","queryPropertiesAreUsed","_this$separateOptions","_this$separateOptions2","molSerializerOptions","formatter","KetSerializer","MolSerializer","identifyStructFormat","isMacromolecules","sanitizedString","isRXN","isSDF","isV2000","isV3000","search","clearStr","isBase64String","cdxHeader","startsWith","macromoleculesFilesInputFormats","seq","rna","dna","peptide","setFirstMonomer","setSecondMonomer","startPosition","moveToLinkedMonomers","_this$secondMonomer","firstMonomerCenter","secondMonomerCenter","moveBondStartAbsolute","moveBondEndAbsolute","_this$secondMonomer2","backBoneChainAttachmentPoints","KetcherProvider","setKetcherInstance","ketcherInstance","getKetcher","ketcherProvider","getStructure","structureFormat","formatterFactory","prepareStructToRender","_prepareStructToRender","parseStruct","factory","service","deleteAllEntitiesOnCanvas","deleteAllEntities","parseAndAddMacromoleculesOnCanvas","_x5","_parseAndAddMacromoleculesOnCanvas","ketStruct","deserialisedKet","_deserialisedKet$draw","deserializeToDrawingEntities","MonomerAddOperation","addMonomerChangeModel","deleteMonomerChangeModel","addMonomer","deleteMonomer","MonomerMoveOperation","monomerMoveModelChange","invertMonomerMoveModelChange","moveMonomer","MonomerHoverOperation","needRedrawAttachmentPoints","hoverMonomer","AttachmentPointHoverOperation","hoverAttachmentPoint","MonomerDeleteOperation","MonomerItemModifyOperation","updateMonomerItem","revertMonomerItem","DrawingEntityHoverOperation","hoverDrawingEntity","DrawingEntitySelectOperation","selectDrawingEntity","DrawingEntityMoveOperation","moveDrawingEntityChangeModel","invertMoveDrawingEntityChangeModel","redoDrawingEntityChangeModel","wasInverted","moveDrawingEntity","DrawingEntityRedrawOperation","drawingEntityRedrawModelChange","invertDrawingEntityRedrawModelChange","RNA_MONOMER_DISTANCE","RnaPresetTool","preset","rnaBase","_this$sugarPreviewRen","sugarPreviewRenderer","addRnaPreset","sugarPosition","phosphatePosition","phosphatePreviewRenderer","rnaBasePosition","rnaBasePreviewRenderer","_this$sugarPreview","_this$rnaBasePreview","_this$phosphatePrevie","_this$rnaBasePreviewR","_this$phosphatePrevie2","_this$sugarPreviewRen2","sugarPreview","lastCursorPosition","MONOMER_PREVIEW_OFFSET_X","MONOMER_PREVIEW_OFFSET_Y","rnaBasePreview","RNA_BASE_PREVIEW_OFFSET_X","RNA_BASE_PREVIEW_OFFSET_Y","phosphatePreview","PHOSPHATE_PREVIEW_OFFSET_X","mouseLeaveClientArea","_this$sugarPreviewRen3","_this$phosphatePrevie3","_this$rnaBasePreviewR2","mouseover","_this$sugarPreviewRen4","_monomerFactory","monomerFactory","_monomerFactory2","MONOMER_PREVIEW_SCALE_FACTOR","_this$rnaBasePreviewR3","_monomerFactory3","_monomerFactory4","_this$phosphatePrevie4","_monomerFactory5","_monomerFactory6","hidePreview","_this$rnaBasePreviewR4","_this$phosphatePrevie5","_this$sugarPreviewRen5","EmptySubChain","Chain","isCyclic","fillSubChains","createSubChainIfNeed","_this$lastNode","needCreateNewSubchain","lastNode","subChains","lastSubChain","MonomerSequenceNode","Nucleoside","fromSugar","Nucleotide","isNextMonomerNucleosideOrNucleotideOrPeptide","isNucleosideOrNucleotide","LinkerSequenceNode","addNode","_this$lastNode2","lastMonomerInNode","subChain","_this$lastSubChain","EmptySequenceNode","_this$firstSubChain","firstSubChain","firstNode","forEachNode","createChainWithEmptyNode","emptyChain","emptySequenceNode","emptySubChain","ChainsCollection","chains","chain","monomers","monomerToNode","rearrange","chain1","chain2","_chain2$firstNode","_chain2$firstNode2","_chain1$firstNode","_chain1$firstNode2","X_COORDINATE_REDUCTION_FACTOR","reorderedChains","sideConnection","anotherMonomer","anotherChain","_this$chains$","forEachCallback","nodeIndexOverall","chainIndex","subChainIndex","nodeIndex","fromMonomers","chainsCollection","_this$getFirstMonomer","getFirstMonomersInChains","_this$getFirstMonomer2","firstMonomersInRegularChains","firstMonomersInCycledChains","IsChainCycled","CYCLED","monomersList","firstMonomersInChains","getFirstMonomersInRegularChains","getFirstMonomersInCycledChains","isFirstMonomerWithR2R1connection","isRnaBaseConnectedToSugar","handledMonomers","cyclicChains","monomersInSameChain","firstMonomersOfCycledChainsSet","cyclicChain","getMonomerWithLowerCoordsFromMonomerList","monomerList","monomerListShallowCopy","monomer1","monomer2","monomerWithLowerCoords","Raphael","raphaelModule","require","translateAbs","delta","st","Visel","paths","boxes","oldBoundingBox","exts","degree","ReObject","viselType","visel","changeSelectionStyle","hoverStyle","_this$hovering","_this$hovering2","vbox","setHover","noredraw","removed","paper","setStart","drawHover","setFinish","hide","_render","makeSelectionPlate","_restruct","_paper","_styles","LayerMap","StereoColoringType","StereLabelStyleType","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","pos1","pos2","oPos2","getCIPValuePath","cipLabelPosition","atomOrBond","font","fontsz","rect","toFront","drawCIPLabel","restruct","_restruct$render","cipValuePath","addReObjectPath","additionalInfo","updateHalfBondCoordinates","xShift","escapeHtml","str","util","rectangleArrowHighlightAndSelection","_ref$pos","endX","wOffset","hOffset","svgPath","rx","ry","polyline","isResizing","shouldApplySnappingStyle","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","_ref2$pos","direction","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","transformedPath","lineattr","arrowSnappingStyle","_ref3$pos","triangleLength","triangleWidth","_ref4$pos","_ref5","_ref5$pos","_ref6","_ref6$pos","_ref7","_ref7$pos","_ref8","_ref8$pos","_ref9","_ref9$pos","dashInterval","_ref10","_ref10$pos","failSignWidth","arrowCenter","_ref11","_ref11$pos","_ref12","_ref12$pos","arrowLen","arrowOffset","_ref13","_ref13$pos","_ref14","_ref14$pos","_ref15","_ref15$pos","unbalanceVal","_ref16","_ref16$pos","_ref17","_ref17$pos","_ref18","_ref18$pos","bondSingle","halfBond1","halfBond2","isSnapping","makeStroke","bondSnappingStyle","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","q","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathDesc","bondMark","fontszsub","rbb","recenterText","radicalCap","point1","lineWidth","dw","dh","radicalBullet","circle","bracket","bracketAngleDirection","bondCenter","isBracketContainAttachment","halfBracketHeight","bracketPoint0","bracketPoint1","longHalfBracketHeight","shortHalfBracketHeight","bracketArc0","bracketArc1","sgroupBracketStyle","selectionRectangle","point2","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","black","aromaticBondPaths","mask","relativeBox","vml","gap","shiftedAtomPositionVector","attachmentPointEnd","directionVector","linePath","curvePath","getSvgCurveShapeAttachmentPoint","resultShape","centerPosition","basicSize","attachmentPointSvgPathString","attachmentPointSvgPathSize","shapeScale","rgroupAttachmentPointLabel","labelPosition","labelText","labelPath","StereoLabelMinOpacity","MAX_LABEL_LENGTH","ShowHydrogenLabels","ShowHydrogenLabelNames","ReAtom","_ReObject","showLabel","hydrogenOnTheLeft","makeHoverPlate","getLabeledSelectionContour","radiusScaleFactor","padding","ps1","ps2","getUnlabeledSelectionContour","atomSelectionPlateRadius","ps","getSelectionContour","hasLabel","pseudo","getQueryAttrsText","selectionStyle","getShiftedSegmentPosition","renderOptions","_atomPosition","atomPosition","atomSymbolShift","_restruct$atoms$get","isPositionAtom","shouldHydrogenBeOnLeft","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","background","showAtomIds","idPos","draw","indices","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","pathAndRBoxTranslate","aamText","getAamText","customQueryText","checkIsSmartPropertiesExist","getOnlyQueryAttributesCustomQuery","shortenCustomQueryText","customQueryTooltipText","substring","displayStereoLabel","shouldDisplayStereoLabel","stereoLabelStyle","enhancedStereoFlag","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","bisectLargestSector","addTooltip","isHighlighted","highlightColor","highlight","_highlight$atoms","hasCurrentHighlight","Off","getLargestSectorFromNeighbors","angles","largeAngles","largestAngle","neighborAngle","_this$getLargestSecto","bisectAngle","newVectorFromAngle","colorStereogenicCenters","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","isAttachmentPointAtom","isCarbon","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","nei1","sameNotStereo","hydrogenLabels","_atom$label","_atom$label2","Terminal","TerminalAndHetero","neighbor","neighborDirection","queryText","getAtomCustomQuery","tooltip","_label$text","currentlySelectedMonomerAttachmentPoint","connectedMonomerAttachmentPoints","labelInMonomerConnectionsModal","labelInPreview","getLabelText","shouldStyleLabel","isMonomerAttachmentPoint","isMonomerAttachmentPointSelected","isMonomerAttachmentPointUsed","_label$text2","previewOpacity","backgroundSize","hshift","vshift","mapValence","hydrogenLeft","assign","getRingBondCountAttrText","attrText","getRingConnectivity","getDegree","getSubstitutionCountAttrText","getAtomType","smartsSpecificProperties","_atom$queryProperties","includeOnlyQueryAttributes","queryAttrsText","nonQueryAttributes","addSemicolon","patterns","regExpResult","exec","propertyName","_atom$a","ReBond","doubleBondShift","getSelectionPoints","bondThickness","doubleBondWidth","stereoBondWidth","regularSelectionThikness","halfBondStart","halfBondEnd","isStereoBond","addPadding","contourStart","contourEnd","stereoBondStartHeightCoef","bondPadding","addStart","stereoBondEndHeightCoef","addEnd","contourPaddedStart","contourPaddedEnd","padStartPoint","padEndPoint","startTop","startBottom","startPadTop","startPadBottom","endTop","endBottom","endPadTop","endPadBottom","_this$getSelectionPoi","_this$getSelectionPoi2","pathString","bondRecalc","checkStereoBold","setDoubleBondShift","isSnappingBond","getBondPath","bondSkeleton","getReactingCenterPath","getBondMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","_highlight$bonds","highlightPath","getHighlightPath","getAtomPositionForBond","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","_restruct$atoms$get2","halfbonds","neihbid1","neihbid2","_restruct$atoms$get3","_restruct$atoms$get4","shiftA","shiftB","newHalfBonds","xShiftMinus1","xShiftPlus1","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","_struct$loops$get","_struct$loops$get2","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","n1","n2","selectDoubleBondShift","nLeft","nRight","_path","ReEnhancedFlag","hoverPath","_classPrivateFieldGet2","_classPrivateFieldGet3","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","fragGetAtoms","fragGetBonds","firstFrag","secondFrag","calcBBox","_ui_editor","_draw","ReRGroup","labelBox","rGroupBoundingBox","fragBox","rGroupAttachmentPointsVBox","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","logic","rLogicToString","logicPath","logicBox","fnum","drawing","cy","leftBracket","rightBracket","rLogic","ifThen","rangeExists","restH","nextRg","ReRxnArrow","calcDistance","distRef","getReferencePointDistance","_this$getReferencePoi","getReferencePoints","_this$getReferencePoi2","middlePoint","refPoint","refPoints","rp","current","generatePath","_item$pos","findMiddlePoint","makeAdditionalInfo","scaleFactor","selectionSet","scaledRP","styles","_this$getArrowParams","getArrowParams","x1","x2","y2","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","BracketParams","ReSGroup","SGroupdrawBracketsOptions","lowerIndexText","upperIndexText","indexAttribute","drawGroupDat","sgroupTypesWithBrackets","SGroupdrawBrackets","getTextHighlightDimensions","startX","startY","_sGroup$getContracted","reSGroupAtom","sGroupTextBoundingBox","_Scale$modelToCanvas","getContractedSelectionContour","_this$getTextHighligh","sGroupItem","_getHighlighPathInfo","getHighlighPathInfo","b0","_render$ctab","_render$ctab2","arr","rgroupAttachmentPointIds","crossBondsValues","rightBracketIndex","bracketR","renderIndex","isLowerText","lowerPath","getPath","bracketPoint2","indexPos","indexPath","indexBox","showValue","drawAttachedDat","drawAbsoluteDat","_sgroup$pp","sbox","nameI","boxI","sboxI","getBracketParamersWithCrossBondsLessThan2","getBracketParamersWithCrossBondsEquals2","getBracketParamersWithCrossBondsMoreThan2OnOneAtom","notTemplateShapeFirstAtom","bondDirections","needNegated","bondDirection","attachmentDirection","_render$ctab$rgroupAt","lineDirectionVector","_mol$sGroupForest","leftCenter","rightCenter","leftShift","rightShift","bracketShift","bracketShiftNegated","centerConnection","rightDirection","leftDirection","bracketDirectionNegated","_render$ctab3","_boundingBox","contractedFunctionalGroupSize","_sgroup$getContracted","contractedPosition","hoverPp","ReSimpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","getHoverPathStyle","isOuterShapeOfHoverPath","outerEllipse","stylesApplied","innerEllipse","outerRect","innerRect","poly","atan","enhPath","selectionPointsSet","selectionStyleSimpleObject","togglePoints","displayFlag","_this$selectionPoints","_this$selectionPoints2","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","isValid","SCALE","ReText","_this$getRelBox","getRelBox","leftTopPoint","rightBottomPoint","_this$getRelBox2","topLeft","_p1$sub","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","_this3$getRelBox","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","_range$style$match","nextRange","textRange","Bold","Italic","Subscript","Superscript","ReRGroupAttachmentPoint","reAtom","outlineEndPoint","normalizedLineDirectionVector","CURVE_OUTLINE_HEIGHT","OUTLINE_PADDING","getOutlinePoints","topLeftPadPoint","normalizedCurveDirectionVector","CURVE_OUTLINE_WIDTH","topRightPadPoint","topRightPoint","middleMostLeftPadPoint","middleMostLeftPoint","middleMostRightPadPoint","middleMostRightPoint","middleLeftPoint","LINE_OUTLINE_WIDTH","middleRightPoint","bottomLeftPadPoint","bottomLeftPoint","bottomRightPadPoint","getDistanceTo","destination","getAttachmentPointDirectionVector","showAttachmentPointShape","isAttachmentPointLabelRequired","showAttachmentPointLabel","getHoverPlatePath","outlinePoints","scaledOutlinePoints","_scaledOutlinePoints","hoverPlatePath","hoverPlate","isTrisectionAttachmentPoint","trisectionLargestSector","hasOnlyOneBond","getAttachmentDirectionForOnlyOneBond","atomPositionVector","attachmentPointType","_atom$getLargestSecto","firstTrisectorAngle","secondTrisectorAngle","_struct$bonds$get","DEGREE_120_FOR_ONE_BOND","DEGREE_180_FOR_TRIPLE_BOND","onlyNeighbor","neighbour","isTripleBond","finalAngle","getLabelPositionForAttachmentPoint","shapeHeight","normal","REFERENCE_POINT_LINE_WIDTH_MULTIPLIER","ReImage","getScaledPointWithOffset","originalPoint","scaledPoint","getScale","getDimensions","getBottomRightPosition","getTopLeftPosition","getSelectionReferencePositions","_this$image$getCorner","getCornerPositions","_this$image$getCorner2","selectionTopLeftPosition","selectionTopRightPosition","selectionBottomRightPosition","selectionBottomLeftPosition","drawSelectionLine","_this$getSelectionRef","polygon","styleOptions","strokeWidth","drawSelectionPoints","reStruct","selectionReferencePositions","_ref2$","scaledTopLeftWithOffset","dimensions","bitmap","_this$getSelectionRef2","outerBorderOffset","topLeftCorner","calculateDistanceToPoint","isPointInsidePolygon","_this$getSelectionRef3","calculateClosestReferencePosition","ref","POSITIVE_INFINITY","referencePositions","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reItem","connectedComponentRemoveAtom","cc","clearConnectedComponents","getConnectedComponent","adjacentComponents","addConnectedComponent","compId","aidSet","ccFragmentType","removeConnectedComponent","ccid","assignConnectedComponents","layers","visible","parentNode","insertBefore","maps","structChanged","markItemRemoved","markBond","markItem","markAtom","mapChanged","clearVisel","eachItem","func","getSelectionBoxCenter","atomPositionPoint","atomBox","selectionExceptAtoms","selectionExceptAtomsBoundingBox","getBoundingBoxForSelection","isSelectionEmpty","getAllElementsAsSelectionMap","elementKey","_selection$elementKey","elementId","scaleVisel","clearVisels","force","initialized","_item","atomsChanged","emptyFrags","atomsChangedArray","verifyLoops","updLoops","updateLoops","showAtoms","showBonds","showRgroupAttachmentPoints","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","showImages","reloop","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","loopRemove","bondlist","atomsIds","_this24","allAtomAttachmentPointsVBox","attachmentPointIds","oneAtomAttachmentPointsVBox","previousVBox","attachmentPointId","currentVBox","_allAtomAttachmentPoi","_this25","isInsideContractedSGroup","_this26","_this27","enhancedFlagsChanged","chid","_this28","bondsChanged","_this29","imagesChanged","setSelection","_this30","_this30$map$values","_this30$map$values2","mapValues","_item$item","_item$selectionPlate","sgId","sGroupAtoms","_item$item2","showItemSelection","toBack","exists","isSelectionSvgObjectExists","_item$additionalInfo","_item$cip","_item$additionalInfo2","_item$cip2","addSnappingBonds","snappingBonds","clearSnappingBonds","anySelection","scaleRPath","_item$selectionPlate2","_item$selectionPlate3","_item$selectionPlate4","_item$selectionPlate$","FRAC","setFracAngle","calcAngle","fracAngle","angle2","calcNewAtomPos","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","defaultOptions","scaleFactorMicro","scaleFactorMacro","rotationStep","utils","labelFontSize","disableQueryElements","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","movingStyle","_render$options$exter","viewBox","externalZoomScale","pointInCanvas","_render$options$exter2","pageToView","renderClientArea","_renderClientArea$get","offsetTop","offsetLeft","clientX","clientY","pageToCanvas","pointInViewBox","clientArea","pageToModel","CoordinateTransformation","_calculateOffset","WeakSet","ScrollOffset","_classPrivateMethodInitSpec","getAbsViewBox","viewBoxMinXY","viewBoxMaxXY","getAbsBoundingBox","protoBoundingBox","boundingBoxMinXY","boundingBoxMaxXY","_classPrivateMethodGet","_calculateOffset2","hasVerticalOffset","up","down","hasHorizontalOffset","absBoundingBox","absViewBox","Scrollbar","redraw","updateAttr","_this$bar","getDynamicAttr","_this$bar2","_this$bar3","undrag","_this$getDynamicAttr","onDragMove","onDragStart","onDragEnd","_y","viewBoxBeforeDrag","SCALE_FACTOR","getUserFriendlyScrollOffset","getUserFriendlyViewBoxDelta","getZoomedValue","_scrollOffset","VerticalScrollbar","_Scrollbar","scrollOffset","DIST_TO_EDGE","_dx","_event","setViewBox","HorizontalScrollbar","_dy","_verticalBar","_horizontalBar","ScrollbarContainer","Render","reuseRestructIfExist","_global$ketcher","clientWidth","clientHeight","resizeViewBox","userOpts","getCanvasSizeVector","_global$ketcher2","scrollbar","updateOptions","opts","passedOptions","point0","page2obj","zoomedWidth","zoomedHeight","zoomOnMouse","zoomOnCanvasCenter","viewBoxX","viewBoxY","newWidth","newHeight","fixedPoint","widthRatio","heightRatio","arg","newViewBox","setMolecule","forceUpdateWithTimeout","setTimeout","viewSz","changes","downScale","isAutoScale","oldCb","sz1","marg","mv","csz","rescaleAmount","isForceDownscale","isBondsLengthFit","sz2","renderCache","previousOptions","MIN_ATTACHMENT_POINT_SIZE","attachmentPointRegExp","RenderStruct","prepareStruct","_newStruct$sgroups$ge","newStruct","convertAllSGroupAttachmentPointsToRGroupAttachmentPoints","removeSmallAttachmentPointLabelsInModal","isSmall","_options$cachePrefix","cachePrefix","_options$needCache","needCache","cacheKey","innerHTML","preparedStruct","rnd","attachmentPointAtom","convertToRGroupAttachmentPointForDisplayPurpose","SequenceNodeRendererFactory","fromNode","firstMonomerInChainPosition","monomerIndexInChain","isLastMonomerInChain","isEditingSymbol","RendererClass","constructor","NucleotideSequenceItemRenderer","NucleosideSequenceItemRenderer","EmptySequenceItemRenderer","ChemSequenceItemRenderer","PhosphateSequenceItemRenderer","PeptideSequenceItemRenderer","UnresolvedMonomerSequenceItemRenderer","UnsplitNucleotideSequenceItemRenderer","getEmptyMonomerItem","EmptyMonomer","CHAIN_START_ARROW_SYMBOL_ID","BaseSequenceItemRenderer","_BaseSequenceRenderer","firstNodeInChainPosition","_isEditingSymbol","SequenceRenderer","indexInRow","symbolsInRow","rowIndex","nthSeparationInRow","scaledMonomerPositionForSequence","isSequenceEditInRNABuilderMode","isSequenceEditModeTurnedOn","isSingleEmptyNode","appendBackgroundElement","backgroundElement","appendSpacerElement","spacerGroupElement","isSequenceEditInRnaBuilderModeTurnedOn","appendCounterElement","showCaret","_this$spacerElement","caretElement","spacerElement","removeCaret","_this$caretElement","redrawBackgroundElementColor","_this$backgroundEleme","appendChainStartArrow","drawGreyOverlay","isBeginningOfChain","symbolToDisplay","needDisplayCounter","counterElement","modified","drawModification","_this$rootElement5","_this$backgroundEleme2","_this$selectionRectan","_this$selectionRectan2","_this$selectionRectan3","_this$selectionRectan4","lower","_this$rootElement6","drawBackgroundElementHover","_this$backgroundEleme3","removeBackgroundElementHover","_this$backgroundEleme4","_this$spacerElement2","_this$backgroundEleme5","_this$backgroundEleme6","_this$backgroundEleme7","_this$backgroundEleme8","_this$backgroundEleme9","PolymerBondSequenceRenderer","secondNode","_this$firstNode","_this$secondNode","_this$firstMonomer$re","_this$secondMonomer3","firstMonomerY","firstMonomerX","secondMonomerY","secondMonomerX","scaledPosition","mainLineY","mainLineY1","mainLineY2","areMonomersOnSameRow","_this$selectionElemen","selectionElement","_this$selectionElemen2","moveStart","moveEnd","RNA_DNA_NON_MODIFIED_PART","rnaDnaNaturalAnalogues","peptideNaturalAnalogues","NO_NATURAL_ANALOGUE","BaseOperation","perform","_inverted","isDummy","invalidateAtom","invalidateLoop","invalidateBond","invalidateItem","mapName","invalidateEnhancedFlag","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATTACHMENT_POINT_ADD","S_GROUP_ATTACHMENT_POINT_REMOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","R_GROUP_ATTACHMENT_POINT_ADD","R_GROUP_ATTACHMENT_POINT_REMOVE","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_ROTATE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_SET_PROPERTIES","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","POLYMER_BOND_ADD","POLYMER_BOND_DELETE","POLYMER_BOND_MOVE","POLYMER_BOND_FINISH_CREATION","POLYMER_BOND_CANCEL_CREATION","PEPTIDE_ADD","PEPTIDE_REMOVE","PEPTIDE_MOVE","PEPTIDE_HOVER","DRAWING_ENTITY_SELECT","DRAWING_ENTITY_HOVER","SHOW_POLYMER_BOND_INFORMATION","IMAGE_UPSERT","IMAGE_DELETE","IMAGE_MOVE","IMAGE_RESIZE","OperationPriority","AtomAttr","_BaseOperation","attribute","data2","_this$data","inverted","_this$data2","_this$data3","_this$data4","AtomMove","noinvalidate","reatom","AtomAdd","atomData","AtomDelete","_BaseOperation2","restructedAtom","BondAttr","needInvalidateBond","BondMove","BondAdd","needInvalidateAtoms","structBond","BondDelete","rebond","CanvasLoad","oldStruct","AlignDescriptors","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","FragmentSetProperties","_BaseOperation3","enhancedFalg","FragmentAddStereoAtom","FragmentDeleteStereoAtom","FragmentStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","ImageMove","renderItem","scaledOffset","addPositionOffset","moveLeftPositions","moveRightPositions","moveTopPositions","moveBottomPositions","ImageResize","referencePositionName","getReferencePositions","previousPosition","resize","ImageUpsert","ImageDelete","reImage","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","removeOld","setNew","RGroupAttachmentPointAdd","newAttachmentPoint","revertedId","RGroupAttachmentPointRemove","INITIAL_DATA","RxnArrowMove","_Base","Base","RxnArrowRotate","_reStruct$rxnArrows$g","arrowId","drawingCenter","ARROW_MAX_SNAPPING_ANGLE","RxnArrowResize","anchor","isSnappingEnabled","_middlePoint","_middlePoint2","previousPos0","previousPos1","_reItem$getReferenceP","_reItem$getReferenceP2","currentArrowVector","snappedArrowVector","getSnappedArrowVector","snappedCurrent","_reItem$getArrowParam","cosAngle","sinAngle","diffX","diffY","_reItem$getReferenceP3","_reItem$getReferenceP4","newMiddlePoint","AXIS","POSITIVE_X","POSITIVE_Y","NEGATIVE_X","NEGATIVE_Y","isSnappingToPositiveXAxis","isSnappingToPositiveYAxis","isSnappingToNegativeXAxis","isSnappingToNegativeYAxis","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","RxnPlusDelete","RxnArrowAdd","itemId","RxnArrowDelete","_Base2","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","SimpleObjectDelete","SimpleObjectMove","_Base3","handleRectangleChangeWithAnchor","SimpleObjectResize","_Base4","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","SGroupAttr","SGroupDataMove","_sgroups$get$pp","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupAttachmentPointAdd","apAtom","SGroupAttachmentPointRemove","SGroupCreate","existingSGroup","SGroupDelete","_sgroup$item","_sgroup$item2","_sgroup$item3","_sgroup$item4","relatedFGroupId","fgid","TextCreate","TextDelete","TextUpdate","previousContent","TextMove","Action","addOp","mergeWith","sortedOperations","invertedOperation","fromAromaticTemplateOnBond","template","_events","simpleFusing","Promise","resolve","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","rxnArrow","_sg$getContractedPosi","pg","findClosestItem","mp","other","findCloseMerge","srcId","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","isMonomer","connectedBonds","connectedWithStereoBond","structSelection","formatSelection","atomForNewBond","_atomNeighbours$","neighbours","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSGroupsBySelection","selectedAtoms","_sgid","isAttachmentBond","isBondStartsInSelectionAndEndsOutside","isBondEndsInSelectionAndStartsOutside","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","expandSGroupWithMultipleAttachmentPoint","sGroupAttributeAction","fromSgroupDeletion","needPerform","sG","asteriskAction","plainCarbon","fromSgroupAction","newSg","sourceAtoms","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","fromMultiFragmentAction","fromAtomAction","fromQueryComponentSGroupAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","count","_restruct$sgroups$get","fromSgroupAttachmentPointAddition","fromSgroupAttachmentPointRemove","atomAttachmentPoints","fromBondAddition","beginAtomPos","endAtomPos","_struct$frags$get","mouseDownNothingAndUpNothing","beginAtomAttr","endAtomAttr","newFragmentId","newBeginAtomId","newEndAtomId","mouseDownNothingAndUpAtom","endAtomId","mergeSgroups","mouseDownAtomAndUpNothing","beginAtomId","startsOnAtom","endsOnAtom","_mouseDownNothingAndU","_mouseDownNothingAndU2","_mouseDownNothingAndU3","_mouseDownNothingAndU4","_mouseDownAtomAndUpNo","_mouseDownAtomAndUpNo2","addAttachmentPointToSuperatom","newBondId","fromBondStereoUpdate","mergedFragmentId","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","isInteger","withReverse","beginFrId","endFrId","fragmentStereoBonds","_struct$atoms$get3","_struct$atoms$get4","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","_struct$atoms$get5","fromStereoAtomAttrs","correctAtomIds","_struct$atoms$get6","_stereoAtomsMap$get","getStereoParity","newAtomParity","plainBondTypes","bondChangingAction","itemID","bondProps","newItemId","removeAttachmentPointFromSuperatom","_sgroup$item5","_sgroup$item6","anotherSideAtomId","fromAtomAddition","_atomNeighbors$","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","_dstAtomNeighbors$","_atomNeighbors$2","fragAction","mergeBondId","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","checkAtomValence","fromNewCanvas","fromDescriptorsAlign","fromChain","chainItems","fromItemsFuse","usedAtoms","connectedAtomIds","getAllConnectedAtomsIds","mergeMapOfItemsToSet","valenceCheck","getItemsToFuse","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","atomToFunctionalGroup","Date","now","itemsSet","closestMap","bondsIds","initialAtoms","connectedAtoms","_bond$b","initialAtom","relevantConnectedComponent","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromRGroupAttachmentPointUpdate","fromRGroupAttachmentPointsDeletionByAtom","fromRGroupAttachmentPointAddition","attachmentPointsToDelete","rgroupAttachmentPointId","fromRGroupAttachmentPointDeletion","_getNewAtomAttachment","getNewAtomAttachmentPoints","newAttachmentPoints","actionToUpdateAtomsAttrs","actionToDeletePoint","rgroupAttachmentPointToDelete","pointToDelete","currentAttachmentPoints","None","pointToDeleteType","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","_restruct$bonds$get","_restruct$bonds$get2","beginAtomConnectedToBond","endAtomConnectedToBond","atomsToRemove","fromOneBondDeletion","rawSelection","frids","sgroupAtoms","actionRemoveBonds","removedRGroupAttachmentPoints","frid3","actionToDeleteRGroupAttachmentPoints","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","clonedImage","__frag","newRgId","isOnlyOneSGroup","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromImageCreation","halfSize","Image","fromImageDeletion","fromImageMove","fromImageResize","referencePositionInfo","positionWithOffset","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","flipDirection","structToFlip","fromStructureFlip","fromRxnArrowFlip","fromRxnPlusFlip","fromTextFlip","rxnArrowIds","_rxnArrow$pos","oyAngle","rotateAngle","flipPointByCenter","rxnPlusIds","plusId","rxnPlus","textIds","textId","textMiddleLeft","textMiddleRight","textCenter","flipBonds","bondIds","pointToFlip","fromRotate","rotateDelta","did","flagId","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","benzeneMoleculeName","cyclopentadieneMoleculeName","benzeneDoubleBondIndexes","fromTemplateOnCanvas","_fromPaste","_fromPaste2","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","isTmplSingleGroup","extraRes","angle0","fromTemplateOnBondAction","fromTemplateOnBond","getConnectingBond","isBenzeneTemplate","isCyclopentadieneTemplate","_Bond$getBondNeighbou","isOnlyTwoConnectingBonds","beginBond","endBond","tmplBond","tmplBegin","atomsMap","bondAtoms","_utils$mergeBondsPara","mergeA","fusingBondType","isFusingBenzeneBySpecialRules","tBond","tBondIndex","existId","previewBondId","newBondType","_Bond$getBondNeighbou2","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","Highlight","notifyChanged","HighlightDelete","highlightToRemove","HighlightUpdate","newData","oldData","_this$newData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","_this$oldData","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","HISTORY_SIZE","historyPointer","megreWithLatestHistoryCommand","latestCommand","historyStack","_this$editor","_this$editor2","lastCommand","turnOffSelectionCommand","unselectAllDrawingEntities","vectorUtils","getRnaPartLibraryItem","rnaBaseName","monomersLibrary","libraryItem","MONOMER_CONST","RNA","getPeptideLibraryItem","peptideName","PEPTIDE","getSugarBySequenceType","sequenceType","SequenceType","DNA","SUGAR_DNA","SUGAR_RNA","isNotLastNode","isModification","needValidation","isNucleotide","createOnCanvas","rnaBaseLibraryItem","sugarName","sequenceTypeEnterMode","sugarLibraryItem","createPolymerBond","BackBoneBondSequenceRenderer","ReinitializeModeOperation","_renderersManager","SequenceMode","SnakeMode","initialize","RestoreSequenceCaretPositionOperation","nextPosition","setCaretPosition","TEXT_COLOR","HOVER_COLOR","BUTTON_OFFSET_FROM_CANVAS","BUTTON_Y_OFFSET_FROM_ROW","NewSequenceButton","indexOfRowBefore","_chain$lastNode","lastNodeRendererInChain","buttonElement","appendPlusIcon","_this$buttonElement","_this$buttonElement2","NUMBER_OF_SYMBOLS_IN_ROW","emptyChainIndex","removeEmptyNodes","removeNewSequenceButtons","showNodes","emptySequenceItemRenderers","emptySequenceItemRenderer","newSequenceButtons","newSequenceButton","chainBeforeEmptyChainIndex","_firstNode$monomer$re","newSequenceEmptyNode","currentChainStartPosition","currentMonomerIndexInChain","currentMonomerIndexOverall","isEditMode","isEditInRnaBuilderMode","_Chain$createChainWit","_node$monomers","curr","caretPosition","getNextChainPosition","showNewSequenceButton","setCaretPositionByNode","lastChainStartPosition","lastChain","handledMonomersToAttachmentPoints","handledAttachmentPoints","connectedSugarToBase","anotherMonomerHandledAttachmentPoints","_chain$firstMonomer","lastNonEmptyNode","_subChainNode$rendere","oldSubChainNode","currentEdittingNode","_oldSubChainNode$rend","subChainNode","setCaretPositionBySequenceItemRenderer","sequenceItemRenderer","newCaretPosition","setCaretPositionByMonomer","nodeToCompare","getMonomersByCaretPositionRange","startCaretPosition","endCaretPosition","resetLastUserDefinedCaretPosition","lastUserDefinedCaretPosition","finalArray","chainNodes","getNodeIndexInRowByGlobalIndex","restNodes","nodeIndexInRow","nodesGroupedByRows","idexRow","currentIndex","moveCaretUp","currentNodeIndexInRow","currentChainRow","symbolsBeforeCaretInCurrentRow","lastUserDefinedCursorPositionInRow","previousRowOfNodes","moveCaretDown","symbolsAfterCaretInCurrentRow","nextRowOfNodes","moveCaretForward","nextCaretPosition","moveCaretBack","previousCaretPosition","currentChainIndex","lastNodeIndex","getNodeByPointer","sequencePointer","nodeToReturn","getLastNonEmptyNode","subChainBeforeLast","getLastNode","getPreviousNodeInSameChain","nodeOnNextPosition","nodeOnPreviousPosition","oldNewSequenceChainIndex","isNewSequenceChain","clearCanvas","previousNode","previousNodeChainIndex","getNextNodeInSameChain","getPreviousNode","getNextNode","shiftArrowSelectionInEditMode","arrowKey","code","getShiftArrowChanges","previousNodeInSameChain","previousChain","previousChainLastEmptyNode","_editor$drawingEntiti","getAllSelectedEntitiesForSingleEntity","needTurnOffSelection","addDrawingEntitiesToSelection","drawingEntities","unselectEmptySequenceNodes","unselectDrawingEntity","selections","lastSelectionRangeIndex","_previousNode","isNucleosideConnectedAndSelectedWithPhosphate","isNucleosideAndPhosphateConnectedAsNucleotide","hasR1Connection","getRenderedStructuresBbox","_node$monomer$rendere","nodePosition","getRendererByMonomer","rendererToReturn","isNucleoside","phosphateLibraryItem","PHOSPHATE","Matrix","matrix","getRow","_this$matrix$x","forEachRightToLeft","_this$matrix$x2","forEachBottomToTop","_this$matrix$","Cell","connections","CanvasMatrix","matrixConfig","initialMatrix","initialMatrixWidth","fillCells","fillConnectionsOffset","increaseOffset","connection","increaseValue","currentConnections","iterationMethod","cell","biggestOffsetInCell","biggestOffset","connectedNode","polymerBondConnections","polymerBondToConnections","polymerBondConnection","currentConnection","fillRightConnectionsOffset","handledConnections","rowNumber","columnNumber","rowsWithRnaBases","wereBasesInRow","_this3$matrixConfig$i","monomerToCell","initialMatrixRowLength","emptyCellsAmount","cellWithPotentialRnaBase","_this3$polymerBondToC5","_this3$polymerBondToC6","connectedCell","xDistance","yDistance","xDirection","yDirection","xDistanceAbsolute","yDistanceAbsolute","isVertical","polymerBondToCells","nextCellX","nextCellY","_this3$polymerBondToC","_this3$polymerBondToC2","sign","nextCellToHandle","_this3$polymerBondToC3","_this3$polymerBondToC4","lastCellToHandle","RecalculateCanvasMatrixOperation","recalculateCanvasMatrixModelChange","invertRecalculateCanvasMatrixModelChange","rerenderSideConnectionPolymerBonds","VERTICAL_DISTANCE_FROM_MONOMER","DISTANCE_FROM_RIGHT","SNAKE_LAYOUT_CELL_WIDTH","MONOMER_START_X_POSITION","MONOMER_START_Y_POSITION","DrawingEntitiesManager","allEntities","polymerBonds","deleteSelectedEntities","mergedCommand","deleteDrawingEntity","_monomer","Monomer","monomerItemNew","initialMonomer","needToDeleteConnectedEntities","createDrawingEntitySelectionCommand","selectDrawingEntities","selectionCommand","moveDrawingEntityModelChange","moveChemAtomsPoint","isMicromoleculeFragment","moveSelectedDrawingEntities","partOfMovementOffset","fullMovementOffset","createDrawingEntityMovingCommand","_drawingEntity$second","movingCommand","createDrawingEntityRedrawCommand","redrawCommand","needToDeleteConnectedBonds","modifyMonomerItem","previousSelectedEntities","isValueChanged","checkBondSelectionForSequenceMode","_bond$secondMonomer","startPolymerBondCreationChangeModel","_polymerBond","_polymerBond$secondMo","_polymerBond$secondMo2","_polymerBond$secondMo3","_polymerBond$secondMo4","_polymerBond$secondMo5","_polymerBond$secondMo6","recalculateCanvasMatrix","firstMonomerValidSourcePoint","secondMonomerValidTargetPoint","connectFirstMonomerOperation","connectSecondMonomerOperation","intendToSelectDrawingEntity","cancelIntentionToSelectDrawingEntity","monomersToAdd","_ref19","monomerPosition","monomerAddOperation","attPointStart","attPointEnd","rearrangeChainModelChange","getNucleotideSize","nucleotide","_nucleotide$sugar$ren","_nucleotide$phosphate","_nucleotide$sugar$ren2","_nucleotide$rnaBase$r","reArrangeChain","lastPosition","canvasWidth","rearrangedMonomersSet","maxVerticalDistance","snakeLayoutMatrix","_snakeLayoutMatrix$ge","_snakeLayoutMatrix$ge2","heightMonomerWithBond","isNewRow","isMonomerInRnaChainRow","oldMonomerPosition","matrixX","matrixY","nextPositionAndVerticalDistance","getNextMonomerPositionForSnakeLayout","reArrangeRnaChain","_nucleotide$sugar$ren3","_nucleotide$sugar$ren4","_nucleotide$rnaBase$r2","_nucleotide$rnaBase$r3","_nucleotide$rnaBase","_nucleotide$rnaBase2","_snakeLayoutMatrix$ge3","_snakeLayoutMatrix$ge4","nucleotideSize","heightWithBond","oldSugarPosition","addRnaOperations","_nucleotide$phosphate2","_nucleotide$phosphate3","lastMonomerInNucleotide","baseMonomer","nextMonomerPositionAndVerticalDistance","nextPositionAndDistance","getNextPositionAndDistance","_chainsCollection","canvasMatrix","redrawBonds","previousSnakeLayoutMatrix","reArrangeChains","isSnakeMode","needRedrawBonds","_ref20","rearrangeResult","firstMonomerInNode","getFirstPosition","redrawBondsModelChange","isMonomerFitCanvas","nucleoside","_nucleoside$sugar$att","setMicromoleculesHiddenEntities","micromoleculesHiddenEntities","clearMicromoleculesHiddenEntities","targetDrawingEntitiesManager","monomerToNewMonomer","mergedDrawingEntities","monomerAddCommand","addedMonomer","polymerBondCreateCommand","addedPolymerBond","centerMacroStructure","structCenter","getMacroStructureCenter","_Vec2$add","_Vec2$add2","endY","originalCenterPointOfCanvas","applyMonomersSequenceLayout","applyFlexLayoutMode","rerenderPolymerBonds","getAllSelectedEntitiesForEntities","newDrawingEntities","selectedDrawingEntities","needToSelectConnectedBonds","isPartOfRNA","_polymerBond$getAnoth","validateIfApplicableForFasta","monomerTypes","monomerType","_ref21","_polymerBond$secondMo7","_polymerBond$secondMo8","newFirstMonomerAttachmentPoint","newSecondMonomerAttachmentPoint","initialFirstMonomerAttachmentPoint","initialSecondMonomerAttachmentPoint","reconnectPolymerBond","BaseMode","modeName","previousMode","DEFAULT_LAYOUT_MODE","changeMode","isUndo","ModeConstructor","modesMap","setMode","needRemoveSelection","_onKeyDown","checkIfTargetIsInput","_this$keyboardEventHa","keyboardEventHandlers","onKeyDown","onCopy","_entity$secondMonomer","_entity$secondMonomer2","firstAttachmentPoint","secondAttachmentPoint","serializedKet","_onPaste","_clipboardData","_pasteIsInProgress","pasteFromClipboard","onPaste","_pasteFromClipboard","_callee3","pastedStr","inputFormat","isSequenceOrFasta","_callee3$","_context3","pasteKetFormatFragment","pasteWithIndigoConversion","scrollForView","isPasteAllowedByMode","isPasteAvailable","errorTitle","errorMessage","updateMonomersPosition","_drawingEntitiesManag","applyAdditionalPasteOperations","_pasteWithIndigoConversion","_callee4","indigo","stringError","_args4","_callee4$","_context4","outputFormat","unsupportedSymbolsError","newNodePosition","getNewNodePosition","_event$target","_event$target2","HTMLElement","nodeName","FlexMode","_BaseMode","naturalAnalogues","Direction","_isEditMode","_isEditInRNABuilderMode","isEditInRNABuilderMode","_chainsCollection$fir","needScroll","firstMonomerPosition","turnOnEditMode","needToRemoveSelection","turnOffEditMode","eventData","updatedSelection","labeledNucleoelement","sugarMonomerItem","baseMonomerItem","phosphateMonomerItem","sugarLabel","baseLabel","phosphateLabel","currentNode","sugarR2","nextMonomerInSameChain","bondNodesThroughNewPhosphate","click","isClickedOnSequenceItem","unselectAllEntities","_event$target3","_event$target4","isClickedOnEmptyPlace","isEventOnSequenceItem","sequenceItemBoundingBox","rootBoundingClientRect","_SequenceRenderer$get","isRightSideOfSequenceItemClicked","selectionStarted","selectionStartCaretPosition","_event$target5","mousemoveCounter","moveCaretOperation","additionalPhosphate","tryToCreatePolymerBond","handlePeptideNodeAddition","enteredSymbol","newPeptideLibraryItem","peptideAddCommand","newPeptide","newPeptideNode","insertNewSequenceFragment","handleRnaDnaNodeAddition","addedNodeModelChanges","nodeToAdd","connectNodes","firstNodeToConnect","secondNodeToConnect","nextNodeInSameChain","_firstNodeToConnect$l","_secondNodeToConnect$","nodeR2Bond","nextNodeR1Bond","deleteBondToNextNodeInChain","finishNodesDeletion","isConnectionPossible","areR1R2Free","showMergeWarningModal","handleNodesDeletion","selectionRange","selectionStartNode","selectionEndNode","isPhosphateAdditionalyDeleted","nodeBeforeSelection","nodeAfterSelection","nodeInSameChainBeforeSelection","nodeInSameChainAfterSelection","getNewSequenceItemPosition","deleteNode","nodeToDelete","Left","nodesToDelete","deleteSelectedDrawingEntities","Right","backspace","naturalAnalogue","deleteSelection","insertNewSequenceItem","deletionModelChanges","isR1Free","_entity$firstMonomerI","isR2Free","_entity$lastMonomerIn","firstEntity","lastEntity","lastNodeOfNewFragment","firstNodeOfNewFragment","isPasteInEnd","isPasteInStart","_currentSequence$last","currentSequence","currentChain","currentSequenceHasPhosphate","preserveSideChainConnections","sideConnectionsData","secondMonomerBondData","_secondMonomerBondDat","secondMonomerAttachmentPointName","firstMonomerAttachmentPointName","replaceSelectionWithMonomer","previousSelectionNode","nextNode","sideChainConnections","hasPreviousNodeInChain","hasNextNodeInChain","newMonomer","newMonomerSequenceNode","sideConnectionData","replaceSelectionsWithMonomer","previousReplacedNode","nodeSelection","checkIfNewMonomerCouldEstablishConnections","newMonomerAttachmentPoints","oldMonomerBonds","isBackBoneChainConnection","selectionsContainLinkerNode","selectionsCantPreserveConnectionsWithMonomer","presetHasNeededAttachmentPoints","sugarHasR1","phosphateHasR2","selectionsCantPreserveConnectionsWithPreset","insertMonomerFromLibrary","confirmationText","onConfirm","createRnaPresetNode","rnaPresetAddResult","sugarMonomer","rnaBaseMonomer","phosphateMonomer","newPresetNode","rnaPresetAddModelChanges","replaceSelectionWithPreset","rnaAdditionResult","monomerForSideConnections","replaceSelectionsWithPreset","insertPresetFromLibrary","chainsCollectionOrNode","nextNodeToConnect","previousNodeToConnect","needConnectWithPreviousNodeInChain","needConnectWithNextNodeInChain","previousFromCurrentEdittingMonomer","nodeBeforePreviousNode","offsetFromPrevious","drawnEntitiesBoundingBox","RenderersManager","markForReEnumeration","needRecalculateMonomersEnumeration","needRecalculateMonomersBeginning","MonomerRenderer","monomerRenderer","_monomer$renderer2","_drawingEntity$baseRe","_drawingEntity$baseRe2","deleteAllDrawingEntities","polymerBondRenderer","_monomer$renderer3","_polymerBondRenderer$","PolymerBondRenderer","_polymerBond$renderer2","_polymerBond$renderer3","_polymerBond$renderer4","_polymerBond$firstMon3","_polymerBond$renderer5","_polymerBond$firstMon4","_polymerBond$firstMon5","recalculateEnumeration","recalculateBeginning","recalculatePeptideChainEnumeration","peptideRenderer","_currentEnumeration","currentEnumeration","stack","stackItem","isR2R1Connection","recalculateRnaChainEnumeration","rnaComponentRenderer","_rnaBaseMonomer$rende","_rnaBaseMonomer$rende2","UnsplitNucleotideRenderer","recalculatePeptideEnumeration","firstMonomers","recalculateRnaEnumeration","recalculateMonomersEnumeration","_ChainsCollection$get","_ChainsCollection$get2","firstMonomersInCyclicChains","isOnlyPartOfRnaChain","nextMonomerAfterPhospate","recalculateMonomersBeginning","CHAIN_BEGINNING","_rnaBaseMonomer$rende3","_polymerBond$firstMon6","_polymerBond$firstMon7","_polymerBond$firstMon8","_polymerBond$renderer6","_polymerBond$firstMon9","_polymerBond$firstMon10","_polymerBond$firstMon11","_secondMonomer$render","_secondMonomer$render2","_secondMonomer$render3","_monomer$renderer4","_monomer$renderer5","_monomer$renderer6","_monomer$renderer7","_needRemoveSelection","_isUndo","bottomRightMonomerPosition","isSequenceMode","LINE_FROM_MONOMER_LENGTH","VERTICAL_LINE_LENGTH","RNA_CHAIN_VERTICAL_LINE_LENGTH","CORNER_LENGTH","DOUBLE_CORNER_LENGTH","BOND_END_LENGTH","CELL_HEIGHT","SMOOTH_CORNER_SIZE","SIDE_CONNECTION_BODY_ELEMENT_CLASS","LINE_DIRECTION","startPositionInPixels","endPositionInPixels","previousStateOfIsMonomersOnSameHorisontalLine","appendBond","appendSideConnectionBond","finished","appendSnakeBond","appendBondGraph","updateSnakeBondPath","drawPartOfSideConnection","isHorizontal","_cell$monomer$rendere","_cell$monomer$rendere2","_cell$monomer$rendere3","_cell$monomer$rendere4","maxXOffset","maxYOffset","connectionYOffset","endOfPathPart","sideConnectionBondTurnPoint","pathPart","_firstCell$node","cells","firstCell","firstCellConnection","isVerticalConnection","isStraightVerticalConnection","isFirstMonomerOfBondInFirstCell","isTwoNeighborRowsConnection","dAttributeForPath","previousConnection","previousCell","horizontalPartIntersectionsOffset","areCellsOnSameRow","isSecondCellEmpty","maxHorizontalOffset","cellIndex","cellConnection","isLastCell","_xDirection","directionObject","getMonomerWidth","_this$polymerBond$fir","_this$polymerBond$fir2","getMonomerHeight","_this$polymerBond$fir3","_this$polymerBond$fir4","reCheckAttachmentpoint","isR1TheCurrentAttachmentpointOfFirstMonomer","isBondConnectedWithNucleotide","verticalLineLength","isSecondMonomerBottomRight","addLine","Horizontal","addLineFromLeftToBottom","Vertical","addLineFromTopToRight","isSecondMonomerTopRight","addLineFromLeftToTop","addLineFromBottomToRight","isSecondMonomerBottomLeft","addLineFromTopToLeft","addLineFromRightToBottom","isSecondMonomerTopLeft","addLineFromRightToUp","isSecondMonomerLeft","addRandomLine","isHorisontal","moveSnakeBondEnd","moveGraphBondEnd","_this$selectionElemen3","_this$hoverCircleArea","_this$selectionElemen4","hoverCircleAreaElement","moveSnakeBondStart","moveGraphBondStart","_this$selectionElemen5","_this$selectionElemen6","allSideConnectionBondsBodyElements","querySelectorAll","bondBodyElement","UNRESOLVED_MONOMER_SELECTED_ELEMENT_ID","UNRESOLVED_MONOMER_HOVERED_ELEMENT_ID","UNRESOLVED_MONOMER_SYMBOL_ELEMENT_ID","UnresolvedMonomerRenderer","NUCLEOTIDE_SELECTED_ELEMENT_ID","NUCLEOTIDE_HOVERED_ELEMENT_ID","NUCLEOTIDE_SYMBOL_ELEMENT_ID","Y_OFFSET_FROM_MIDDLE","html","_BaseSequenceItemRend","RNASequenceItemRenderer","_this$node$monomer$at","drawCommonModification","_RNASequenceItemRende","_node$phosphate","phosphateModificationCircleElement","nucleosideCircleElement","AMINO_ACID","MODDNA","SUGAR","BASE","ketMonomerClass","unresolved","MonomerClass","AminoAcid","MonomerTool","monomerPreviewRenderer","_this$monomerPreview","_this$monomerPreviewR","monomerPreview","_this$monomerPreviewR2","_this$monomerPreviewR3","EraserTool","selectedItemRenderer","createBrush","brushArea","brush","d3Brush","brushed","mo","setSelectedEntities","_this$brushArea","_this$brush","onStartBrush","onBrush","brushEvent","sourceEvent","handleResizeCanvas","extent","keyModifiers","canvasElement","canvasResizeObserver","isSequenceAnyEditMode","mousePositionAfterMove","mousePositionBeforeMove","ModKey","moveStarted","selectModelChanges","selectedEntitiesArr","_this$editor$drawingE2","currentSubChain","bondsInsideCurrentChain","_renderer$drawingEnti","_this$canvasResizeObs","disconnect","ClearTool","isCurrentModeSequence","toolsMap","MacromoleculesConverter","convertMonomerToMonomerMicromolecule","addMonomerAtomToStruct","atomClone","convertAttachmentPointNameToNumber","findAttachmentPointAtom","monomerToAtomIdMap","globalAttachmentAtomId","convertDrawingEntitiesToStruct","atomIdsMap","oldAtom","oldAtomId","_this$addMonomerAtomT","_monomer$monomerItem$2","_attachmentPoint$leav","bondClone","conversionErrorMessage","_this$findAttachmentP","_this$findAttachmentP2","convertMonomerMicromoleculeToMonomer","sgroupToMonomer","monomerAdditionCommand","convertFragmentToChem","fragmentNumber","fragmentStruct","fragmentBbox","colorScheme","favorite","atomRglabel","getFragmentsGroupedBySgroup","groupedFragments","_fragment","isAlreadyGrouped","fragmentsGroup","fragmentSgroups","lastFragmentGroupIndex","atomFragmentId","convertStructToDrawingEntities","fragmentIdToMonomer","superatomAttachmentPointToBond","beginAtomSgroup","beginAtomSgroupAttachmentPoints","endAtomSgroup","endAtomSgroupAttachmentPoints","beginAtomAttachmentPointNumber","sgroupAttachmentPoint","beginAtomAttachmentPoint","endAtomAttachmentPointNumber","endAtomAttachmentPoint","isMouseMainButtonPressed","button","drawnStructuresWrapperElement","setMonomersLibrary","monomersDataRaw","_monomersLibraryParsedJson","subscribeEvents","domEventSetup","setupContextMenuEvents","setupKeyboardEvents","setupCopyPasteEvent","zoomTool","micromoleculesEditor","switchToMacromolecules","rerenderSequenceMode","monomersLibraryParsedJson","_monomersLibrary","convertMonomersLibrary","monomersLibraryJson","root","templates","templateRef","MONOMER_GROUP_TEMPLATE","handleHotKeyEvents","_keySettings$shortcut","keySettings","isInput","setupHotKeysEvents","keydownEventHandler","addEventListener","copyEventHandler","pasteEventHandler","hotKeyEventHandler","onSelectMonomer","onSelectRNAPreset","onSelectTool","onCreateBond","onCancelBondCreation","onSelectMode","eventName","useModeIfNeeded","useToolIfNeeded","onEditSequence","onTurnOnSequenceEditInRNABuilderMode","onTurnOffSequenceEditInRNABuilderMode","onChangeSequenceTypeEnterMode","isReconnection","_this$drawingEntities","PolymerBondTool","handleBondCreation","handleBondCreationCancellation","mergeWithLatestHistoryCommand","ToolConstructor","oldTool","unsubscribeEvents","handlers","removeEventListener","trackedDomEvents","toolEventHandler","DOMSubscription","subs","updateLastCursorPosition","isToolUsed","clientAreaBoundingBox","pageX","pageY","eventHandlerName","_editorTool$isSelecti","editorTool","conditions","isSelectionRunning","condition","_editorTool$eventHand","_this$mode","_this$mode$eventHandl","switchToMicromolecules","_MacromoleculesConver","setMacromoleculeConvertionError","_this$micromoleculesE","_MacromoleculesConver2","templateToMonomerProps","fullName","naturalAnalogShort","MonomerFullName","classHELM","idtAliases","monomerToDrawingEntity","getTemplateAttachmentPoints","seqId","seqid","polymerBondToDrawingEntity","monomerIdsMap","superatomMonomerToUsedAttachmentPoint","_firstMonomer$monomer","_secondMonomer$monome","_superatomMonomerToUs3","_superatomMonomerToUs4","endpoint1","moleculeId","endpoint2","_superatomMonomerToUs","_superatomMonomerToUs2","ValidatorResult","SchemaError","require$$0","require$$1","require$$2","validate","validator","Validator","schema","valid","imageToKet","imageNode","imageToStruct","fromKetNode","parseNode","currentStruct","fillStruct","resultingStruct","serializeMicromolecules","validateMonomerNodeTemplate","parsedFileContent","templateId","validateConnectionTypeAndEndpoints","connectionType","parseAndValidateMacromolecules","fileContent","_parsedFileContent$ro","nodeDefinition","deserializeToStruct","deserializedContent","filterMacromoleculesContent","_parsedFileContent$ro2","fileContentForMicromolecules","convertMonomerTemplateToStruct","mol0","convertMonomerTemplateToLibraryItem","monomerLibraryItem","fillStructRgLabelsByMonomerTemplate","_template$attachmentP","firstAtomInLeavingGroup","leavingGroupAtom","_parsedFileContent$ro3","_this$parseAndValidat","hasValidationErrors","deserializedMicromolecules","bondAdditionCommand","getConnectionMonomerEndpoint","getConnectionMoleculeEndpoint","serializeMacromolecules","monomerName","monomerClass","templateNameWithPrefix","serializedMacromolecules","micromoleculesStruct","_struct","removeLeavingGroupsFromConnectedAtoms","_this$serializeMacrom","serializedMicromoleculesStruct","library","MONOMER_TEMPLATE","_template$attachmentP2","attachmentPointsToReplace","attachmentPointClone","attachmentPointToAdd","attachmentPointToDelete","paddedNum","precision","numStr","padStart","parseDecimalInt","partitionLine","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","fragmentType","shiftMol","xorig","over","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowStart","arrowEnd","rgMerge","scaffold","readKeyValuePairs","valueString","partition","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","_atomMap","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","endsWith","applyDataSGroupDataLine","strArray","parseSGroupSAPLineV2000","ctabString","_utils$partitionLine","_utils$partitionLine2","sss","nn6","chunksNumberInLine","attachmentPointsStr","CHUNK_SIZE","stringForParse","CHUNK_PARTS_LENGTHS","_utils$partitionLine3","_utils$partitionLine4","iii","ooo","leaveAtomParsedId","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","charAt","propValue","propertyData","subLabels","arrs","arri","a2r","rglabels","a2rs","a2ri","hhh","pool","parsePropertyLineAtomList","expandedSGroups","eg","_sGroup$parseSGroupSA","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","_matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","attpnt","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","molLinesAgents","rGroups","molLines","bracketEquality","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","prepareQueryComponentForSaving","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sgroupName","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","parseCTFile","molfileLines","prepareSGroups","skipErrors","preserveIndigoDesc","_this$molecule","toRemove","errorIgnore","getCTab","writeCTab2000","saveMolecule","skipSGroupErrors","all","saver","submol","writePaddedNumber","writeHeader","date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","writePadded","writePaddedFloat","writeCTab2000Header","isAbsFlag","atomsProps","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","sgmap","sgmapback","sgorder","sGroupIdInCTab","writeSGroupAttachmentPointLine","expandedGroups","expandedGroupsLine","atomLabel","_this$mapping$attachm","DefaultOptions","parseCTFileParams","e1","e2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","each","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","i1","i2","tmp","Dfs","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","writtenAtoms","writtenComponents","_Atom","lowercase","branch_cnt","paren_written","h_count","isBondInRing","inLoop","allowedLowercase","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","chunk","propChunks","pc","valueArr","sdfItems","_center","getTopRightPosition","getBottomLeftPosition","_this$getCornerPositi","_this$getCornerPositi2","_this$bitmap$match","base64Data","ketFileNode","_getNodeWithInvertedY","imageSrc","newLeaveAtomId","IndigoShowHydrogenLabelsMode","getLabelRenderModeForIndigo","_ketcherProvider$getK","renderModeMapping","HETERO","TERMINAL_HETERO","ALL","pollDeferred","process","complete","timeGap","startTimeGap","reject","iterate","then","parametrizeUrl","url","request","headers","responseHandler","requestUrl","response","fetch","Accept","credentials","json","ok","indigoCall","baseUrl","customHeaders","RemoteStructService","apiPath","getInChIKey","_info","indigoVersion","imagoVersions","isAvailable","indigo_version","imago_versions","_CoreEditor$provideEd","monomerLibrary","expandedOptions","clean","aromatize","dearomatize","calculateCip","automap","check","calculate","recognize","parVersion","req","status","upload_id","metadata","mol_str","generateImageAsBase64","stereoStyle","stereoStyleOption","resp","toggleExplicitHydrogens","RemoteStructServiceProvider","currentApiPath","URLSearchParams","createStructService","defaultTypes","defaultCalcProps","convertStructToString","Indigo","input_format","types","backgroundColor","ModeTypes","BlobTypes","allowedApiSettings","_formatterFactory","_editor","_eventBus","Ketcher","_indigo","EventEmitter","apiSetting","clientSetting","setSettings","hasOwn","setOptions","getSmiles","isExtended","isPolymerEditorTurnedOn","_getMolfile","molfileFormat","formatPassed","containsReaction","getMolfile","getIdt","_CoreEditor$provideEd2","_getRxn","rxnfile","_args2","getRxn","getKet","_CoreEditor$provideEd3","getFasta","_CoreEditor$provideEd4","getSequence","_CoreEditor$provideEd5","getSmarts","getCml","getSdf","getCDXml","getCDX","getInchi","withAuxInfo","_getInChIKey","isQueryStructureSelected","structure","hasQueryAtoms","sGroupIds","isQueryComponentSGroup","hasQueryBonds","_setMolecule","_callee5","_CoreEditor$provideEd6","_callee5$","_context5","zoomAccordingContent","centerStruct","eventBus","_setHelm","_callee7","helmStr","_callee7$","_context7","_callee6","_callee6$","_context6","setHelm","_addFragment","_callee9","_CoreEditor$provideEd7","_callee9$","_context9","_callee8","_callee8$","_context8","structToAddFragment","addFragment","_layout","_callee11","_callee11$","_context11","_callee10","_callee10$","_context10","exportImage","blobPart","getSvgFromDrawnStructures","margin","saveAs","_generateImage","_callee12","base64","_args12","_callee12$","_context12","generateImage","reinitializeIndigo","DefaultStructServiceOptions","_structServiceProvider","KetcherBuilder","withStructServiceProvider","structServiceProvider","serviceOptions","mergedServiceOptions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,IAAMA,YAAY,GAAqB;AAC5CC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,CAAC,EAAE,SAAS;AACZC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EAAE,EAAE,SAAS;AACbC,EAAAA,EA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"}