"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"ket","description":"Ketcher format schema","type":"object","required":["root"],"properties":{"root":{"type":"object","required":["nodes"],"properties":{"nodes":{"type":"array","minItems":0,"items":{"oneOf":[{"$ref":"#/definitions/simpleObject"},{"$ref":"#/definitions/text"},{"$ref":"#/definitions/arrow"},{"$ref":"#/definitions/plus"},{"$ref":"#/definitions/image"},{"$ref":"#/definitions/multitailArrow"},{"type":"object","required":["$ref"],"properties":{"$ref":{"type":"string","pattern":"^(mol\\d+|rg[1-9]\\d*)"}}}]}}}}},"patternProperties":{"^rg[1-9]\\d*":{"$ref":"#/definitions/rgroup"},"^mol\\d+":{"$ref":"#/definitions/molecule"},"^header$":{"$ref":"#/definitions/header"}},"additionalProperties":false,"definitions":{"header":{"type":"object","properties":{"moleculeName":{"type":"string"}}},"point":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}},"rsite":{"type":"object","required":["type","location"],"properties":{"type":{"const":"rg-label"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"$refs":{"type":"array","items":{"type":"string","pattern":"^rg-[1-9]\\d*"}},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]}}},"atom":{"type":"object","required":["label"],"properties":{"label":{"type":"string"},"alias":{"type":"string"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"selected":{"type":"boolean"},"charge":{"type":"integer","minimum":-1000,"maximum":1000},"explicitValence":{"type":"integer","enum":[-1,0,1,2,3,4,5,6,7,8,9,10,11,12]},"isotope":{"type":"integer","minimum":0,"maximum":1000},"radical":{"type":"integer","enum":[0,2,1,3]},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]},"stereoLabel":{"type":"string","pattern":"(?:(?:^&|or)[0-9]+$)|(?:^abs$)"},"stereoParity":{"type":"integer","enum":[0,1,2,3]},"ringBondCount":{"type":"integer","enum":[0,-2,-1,2,3,4,5,6,7,8,9]},"substitutionCount":{"type":"integer","enum":[0,-2,-1,1,2,3,4,5,6,7,8,9]},"unsaturatedAtom":{"type":"boolean"},"hCount":{"type":"integer","enum":[-1,0,1,2,3,4,5,6,7,8,9,10]},"implicitHCount":{"type":"integer","enum":[0,1,2,3,4,5,6,7,8,9]},"mapping":{"type":"integer","minimum":0},"invRet":{"type":"integer","enum":[0,1,2]},"exactChangeFlag":{"type":"boolean"},"cip":{"type":"string","enum":["R","S","r","s"]},"queryProperties":{"type":"object","properties":{"aromaticity":{"type":"string","enum":["aromatic","aliphatic"]},"ringMembership":{"type":"integer","minimum":0,"maximum":9},"ringSize":{"type":"integer","minimum":0,"maximum":9},"connectivity":{"type":"integer","minimum":0,"maximum":9},"chirality":{"type":"string","enum":["clockwise","anticlockwise"]},"customQuery":{"type":"string"}}}},"additionalProperties":false},"atomlist":{"type":"object","required":["type","location"],"properties":{"type":{"enum":["atom-list"]},"notList":{"type":"boolean"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"elements":{"type":"array","minItems":1,"items":{"type":"string","minLength":1}},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]}}},"bond":{"type":"object","required":["atoms"],"properties":{"atoms":{"type":"array","minItems":2,"maxItems":2,"uniqueItems":true,"items":{"type":"integer","minimum":0}},"selected":{"type":"boolean"},"stereobox":{"type":"integer","enum":[0,1]},"cip":{"type":"string","enum":["Z","E"]}},"oneOf":[{"required":["type"],"properties":{"type":{"type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11,12]},"stereo":{"type":"integer","enum":[0,1,3,4,6]},"topology":{"type":"integer","enum":[0,1,2]},"center":{"type":"integer","enum":[0,-1,1,2,4,8,12]}}},{"required":["customQuery"],"properties":{"customQuery":{"type":"string"}}}]},"rgroup":{"type":"object","required":["rlogic","type"],"properties":{"type":{"const":"rgroup"},"rlogic":{"type":"object","required":["number"],"properties":{"number":{"type":"integer","minimum":1},"range":{"type":"string","maxLength":50,"default":""},"resth":{"type":"boolean","default":false},"ifthen":{"type":"integer","minimum":0,"default":0}}},"fragments":{"type":"array","items":{"$ref":"#/definitions/structure"}}},"anyOf":[{"required":["fragments"]},{"$ref":"#/definitions/structure"}]},"molecule":{"type":"object","required":["type"],"properties":{"type":{"const":"molecule"}},"allOf":[{"$ref":"#/definitions/structure"}]},"structure":{"type":"object","required":["atoms"],"properties":{"stereoFlagPosition":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"}}},"properties":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"atoms":{"type":"array","items":{"oneOf":[{"$ref":"#/definitions/atom"},{"$ref":"#/definitions/rsite"},{"$ref":"#/definitions/atomlist"}]}},"bonds":{"type":"array","items":{"$ref":"#/definitions/bond"}},"highlight":{"$ref":"#/definitions/subset"},"selection":{"$ref":"#/definitions/subset"},"sgroups":{"$ref":"#/definitions/sgroups"}}},"subset":{"type":"array","minItems":1,"maxItems":2,"items":{"oneOf":[{"type":"object","required":["entityType","items"],"properties":{"entityType":{"type":"string","const":"atoms"},"items":{"type":"array","uniqueItems":true,"items":{"type":"integer","minimum":0}}}},{"type":"object","required":["entityType","items"],"properties":{"entityType":{"type":"string","const":"bonds"},"items":{"type":"array","uniqueItems":true,"items":{"type":"integer","minimum":0}}}}]}},"sgroups":{"type":"array","items":{"required":["atoms","type"],"type":"object","properties":{"atoms":{"type":"array","items":{"type":"integer","minimum":0}},"type":{"type":"string","enum":["GEN","MUL","SRU","SUP","DAT","queryComponent"]}},"if":{"properties":{"type":{"const":"DAT"}}},"then":{"properties":{"context":{"enum":["Fragment","Multifragment","Bond","Atom","Group"]},"fieldName":{"type":"string"},"fieldValue":{"type":"string","minLength":1},"display":{"type":"boolean"},"placement":{"type":"boolean"},"bonds":{"type":"array","items":{"type":"integer","minimum":0}}}}}},"plus":{"type":"object","required":["type","location"],"properties":{"type":{"const":"plus"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"selected":{"type":"boolean"}}},"arrow":{"type":"object","required":["type","data"],"properties":{"type":{"const":"arrow"},"data":{"type":"object","required":["mode"],"properties":{"mode":{"type":"string"},"pos":{"type":"array","items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}},"height":{"type":"number"}}},"selected":{"type":"boolean"}}},"simpleObject":{"type":"object","required":["type","data"],"properties":{"type":{"const":"simpleObject"},"data":{"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["line","rectangle","circle","ellipse","polyline"]}},"if":{"properties":{"mode":{"const":"polyline"}}},"then":{"required":["pos"],"properties":{"pos":{"type":"array","minItems":2,"items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}},"else":{"required":["pos"],"properties":{"pos":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}}},"selected":{"type":"boolean"}}},"text":{"type":"object","required":["type","data"],"properties":{"type":{"const":"text"},"data":{"type":"object","required":["content"],"properties":{"content":{"type":"string"},"pos":{"type":"array","items":{"type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}},"selected":{"type":"boolean"}}},"image":{"type":"object","required":["type","format","boundingBox","data"],"properties":{"type":{"const":"image"},"format":{"type":"string","pattern":"^image/(png|svg\\+xml)$"},"boundingBox":{"type":"object","required":["width","height","x","y"],"properties":{"width":{"type":"number","exclusiveMinimum":0},"height":{"type":"number","exclusiveMinimum":0},"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}},"data":{"type":"string","minLength":160}}},"multitailArrow":{"type":"object","required":["type","data"],"properties":{"type":{"const":"multi-tailed-arrow"},"data":{"type":"object","required":["head","spine","tails"],"properties":{"head":{"type":"object","required":["position"],"properties":{"position":{"$ref":"#/definitions/point"}}},"spine":{"type":"object","required":["pos"],"properties":{"pos":{"type":"array","items":{"$ref":"#/definitions/point"},"minItems":2,"maxItems":2}}},"tails":{"type":"object","required":["pos"],"properties":{"pos":{"type":"array","items":{"$ref":"#/definitions/point"},"minItems":2}}}}}}}}};const schema23 = {"type":"object","required":["type","data"],"properties":{"type":{"const":"simpleObject"},"data":{"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["line","rectangle","circle","ellipse","polyline"]}},"if":{"properties":{"mode":{"const":"polyline"}}},"then":{"required":["pos"],"properties":{"pos":{"type":"array","minItems":2,"items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}},"else":{"required":["pos"],"properties":{"pos":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}}},"selected":{"type":"boolean"}}};const schema24 = {"type":"object","required":["type","data"],"properties":{"type":{"const":"text"},"data":{"type":"object","required":["content"],"properties":{"content":{"type":"string"},"pos":{"type":"array","items":{"type":"object","properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}}}},"selected":{"type":"boolean"}}};const schema25 = {"type":"object","required":["type","data"],"properties":{"type":{"const":"arrow"},"data":{"type":"object","required":["mode"],"properties":{"mode":{"type":"string"},"pos":{"type":"array","items":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}}},"height":{"type":"number"}}},"selected":{"type":"boolean"}}};const schema26 = {"type":"object","required":["type","location"],"properties":{"type":{"const":"plus"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"selected":{"type":"boolean"}}};const schema27 = {"type":"object","required":["type","format","boundingBox","data"],"properties":{"type":{"const":"image"},"format":{"type":"string","pattern":"^image/(png|svg\\+xml)$"},"boundingBox":{"type":"object","required":["width","height","x","y"],"properties":{"width":{"type":"number","exclusiveMinimum":0},"height":{"type":"number","exclusiveMinimum":0},"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}},"data":{"type":"string","minLength":160}}};const schema42 = {"type":"object","properties":{"moleculeName":{"type":"string"}}};const pattern0 = new RegExp("^rg[1-9]\\d*", "u");const pattern1 = new RegExp("^mol\\d+", "u");const pattern2 = new RegExp("^header$", "u");const pattern3 = new RegExp("^image/(png|svg\\+xml)$", "u");const pattern4 = new RegExp("^(mol\\d+|rg[1-9]\\d*)", "u");const func4 = require("ajv/dist/runtime/ucs2length").default;const schema28 = {"type":"object","required":["type","data"],"properties":{"type":{"const":"multi-tailed-arrow"},"data":{"type":"object","required":["head","spine","tails"],"properties":{"head":{"type":"object","required":["position"],"properties":{"position":{"$ref":"#/definitions/point"}}},"spine":{"type":"object","required":["pos"],"properties":{"pos":{"type":"array","items":{"$ref":"#/definitions/point"},"minItems":2,"maxItems":2}}},"tails":{"type":"object","required":["pos"],"properties":{"pos":{"type":"array","items":{"$ref":"#/definitions/point"},"minItems":2}}}}}}};const schema29 = {"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"},"z":{"type":"number"}}};function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.type === undefined) && (missing0 = "type")) || ((data.data === undefined) && (missing0 = "data"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){const _errs1 = errors;if("multi-tailed-arrow" !== data.type){validate21.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "multi-tailed-arrow"},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.data !== undefined){let data1 = data.data;const _errs2 = errors;if(errors === _errs2){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((((data1.head === undefined) && (missing1 = "head")) || ((data1.spine === undefined) && (missing1 = "spine"))) || ((data1.tails === undefined) && (missing1 = "tails"))){validate21.errors = [{instancePath:instancePath+"/data",schemaPath:"#/properties/data/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.head !== undefined){let data2 = data1.head;const _errs4 = errors;if(errors === _errs4){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing2;if((data2.position === undefined) && (missing2 = "position")){validate21.errors = [{instancePath:instancePath+"/data/head",schemaPath:"#/properties/data/properties/head/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data2.position !== undefined){let data3 = data2.position;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing3;if(((data3.x === undefined) && (missing3 = "x")) || ((data3.y === undefined) && (missing3 = "y"))){validate21.errors = [{instancePath:instancePath+"/data/head/position",schemaPath:"#/definitions/point/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data3.x !== undefined){let data4 = data3.x;const _errs9 = errors;if(!((typeof data4 == "number") && (isFinite(data4)))){validate21.errors = [{instancePath:instancePath+"/data/head/position/x",schemaPath:"#/definitions/point/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs9 === errors;}else {var valid4 = true;}if(valid4){if(data3.y !== undefined){let data5 = data3.y;const _errs11 = errors;if(!((typeof data5 == "number") && (isFinite(data5)))){validate21.errors = [{instancePath:instancePath+"/data/head/position/y",schemaPath:"#/definitions/point/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs11 === errors;}else {var valid4 = true;}if(valid4){if(data3.z !== undefined){let data6 = data3.z;const _errs13 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate21.errors = [{instancePath:instancePath+"/data/head/position/z",schemaPath:"#/definitions/point/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs13 === errors;}else {var valid4 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/head/position",schemaPath:"#/definitions/point/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/head",schemaPath:"#/properties/data/properties/head/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data1.spine !== undefined){let data7 = data1.spine;const _errs15 = errors;if(errors === _errs15){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing4;if((data7.pos === undefined) && (missing4 = "pos")){validate21.errors = [{instancePath:instancePath+"/data/spine",schemaPath:"#/properties/data/properties/spine/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"}];return false;}else {if(data7.pos !== undefined){let data8 = data7.pos;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data8)){if(data8.length > 2){validate21.errors = [{instancePath:instancePath+"/data/spine/pos",schemaPath:"#/properties/data/properties/spine/properties/pos/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"}];return false;}else {if(data8.length < 2){validate21.errors = [{instancePath:instancePath+"/data/spine/pos",schemaPath:"#/properties/data/properties/spine/properties/pos/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"}];return false;}else {var valid6 = true;const len0 = data8.length;for(let i0=0; i0<len0; i0++){let data9 = data8[i0];const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing5;if(((data9.x === undefined) && (missing5 = "x")) || ((data9.y === undefined) && (missing5 = "y"))){validate21.errors = [{instancePath:instancePath+"/data/spine/pos/" + i0,schemaPath:"#/definitions/point/required",keyword:"required",params:{missingProperty: missing5},message:"must have required property '"+missing5+"'"}];return false;}else {if(data9.x !== undefined){let data10 = data9.x;const _errs22 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate21.errors = [{instancePath:instancePath+"/data/spine/pos/" + i0+"/x",schemaPath:"#/definitions/point/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs22 === errors;}else {var valid8 = true;}if(valid8){if(data9.y !== undefined){let data11 = data9.y;const _errs24 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate21.errors = [{instancePath:instancePath+"/data/spine/pos/" + i0+"/y",schemaPath:"#/definitions/point/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs24 === errors;}else {var valid8 = true;}if(valid8){if(data9.z !== undefined){let data12 = data9.z;const _errs26 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate21.errors = [{instancePath:instancePath+"/data/spine/pos/" + i0+"/z",schemaPath:"#/definitions/point/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid8 = _errs26 === errors;}else {var valid8 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/spine/pos/" + i0,schemaPath:"#/definitions/point/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs19 === errors;if(!valid6){break;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/spine/pos",schemaPath:"#/properties/data/properties/spine/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/spine",schemaPath:"#/properties/data/properties/spine/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}if(valid1){if(data1.tails !== undefined){let data13 = data1.tails;const _errs28 = errors;if(errors === _errs28){if(data13 && typeof data13 == "object" && !Array.isArray(data13)){let missing6;if((data13.pos === undefined) && (missing6 = "pos")){validate21.errors = [{instancePath:instancePath+"/data/tails",schemaPath:"#/properties/data/properties/tails/required",keyword:"required",params:{missingProperty: missing6},message:"must have required property '"+missing6+"'"}];return false;}else {if(data13.pos !== undefined){let data14 = data13.pos;const _errs30 = errors;if(errors === _errs30){if(Array.isArray(data14)){if(data14.length < 2){validate21.errors = [{instancePath:instancePath+"/data/tails/pos",schemaPath:"#/properties/data/properties/tails/properties/pos/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"}];return false;}else {var valid10 = true;const len1 = data14.length;for(let i1=0; i1<len1; i1++){let data15 = data14[i1];const _errs32 = errors;const _errs33 = errors;if(errors === _errs33){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing7;if(((data15.x === undefined) && (missing7 = "x")) || ((data15.y === undefined) && (missing7 = "y"))){validate21.errors = [{instancePath:instancePath+"/data/tails/pos/" + i1,schemaPath:"#/definitions/point/required",keyword:"required",params:{missingProperty: missing7},message:"must have required property '"+missing7+"'"}];return false;}else {if(data15.x !== undefined){let data16 = data15.x;const _errs35 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate21.errors = [{instancePath:instancePath+"/data/tails/pos/" + i1+"/x",schemaPath:"#/definitions/point/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid12 = _errs35 === errors;}else {var valid12 = true;}if(valid12){if(data15.y !== undefined){let data17 = data15.y;const _errs37 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate21.errors = [{instancePath:instancePath+"/data/tails/pos/" + i1+"/y",schemaPath:"#/definitions/point/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid12 = _errs37 === errors;}else {var valid12 = true;}if(valid12){if(data15.z !== undefined){let data18 = data15.z;const _errs39 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate21.errors = [{instancePath:instancePath+"/data/tails/pos/" + i1+"/z",schemaPath:"#/definitions/point/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid12 = _errs39 === errors;}else {var valid12 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/tails/pos/" + i1,schemaPath:"#/definitions/point/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid10 = _errs32 === errors;if(!valid10){break;}}}}else {validate21.errors = [{instancePath:instancePath+"/data/tails/pos",schemaPath:"#/properties/data/properties/tails/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data/tails",schemaPath:"#/properties/data/properties/tails/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs28 === errors;}else {var valid1 = true;}}}}}else {validate21.errors = [{instancePath:instancePath+"/data",schemaPath:"#/properties/data/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}const schema32 = {"type":"object","required":["rlogic","type"],"properties":{"type":{"const":"rgroup"},"rlogic":{"type":"object","required":["number"],"properties":{"number":{"type":"integer","minimum":1},"range":{"type":"string","maxLength":50,"default":""},"resth":{"type":"boolean","default":false},"ifthen":{"type":"integer","minimum":0,"default":0}}},"fragments":{"type":"array","items":{"$ref":"#/definitions/structure"}}},"anyOf":[{"required":["fragments"]},{"$ref":"#/definitions/structure"}]};const schema33 = {"type":"object","required":["atoms"],"properties":{"stereoFlagPosition":{"type":"object","required":["x","y"],"properties":{"x":{"type":"number"},"y":{"type":"number"}}},"properties":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"atoms":{"type":"array","items":{"oneOf":[{"$ref":"#/definitions/atom"},{"$ref":"#/definitions/rsite"},{"$ref":"#/definitions/atomlist"}]}},"bonds":{"type":"array","items":{"$ref":"#/definitions/bond"}},"highlight":{"$ref":"#/definitions/subset"},"selection":{"$ref":"#/definitions/subset"},"sgroups":{"$ref":"#/definitions/sgroups"}}};const schema34 = {"type":"object","required":["label"],"properties":{"label":{"type":"string"},"alias":{"type":"string"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"selected":{"type":"boolean"},"charge":{"type":"integer","minimum":-1000,"maximum":1000},"explicitValence":{"type":"integer","enum":[-1,0,1,2,3,4,5,6,7,8,9,10,11,12]},"isotope":{"type":"integer","minimum":0,"maximum":1000},"radical":{"type":"integer","enum":[0,2,1,3]},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]},"stereoLabel":{"type":"string","pattern":"(?:(?:^&|or)[0-9]+$)|(?:^abs$)"},"stereoParity":{"type":"integer","enum":[0,1,2,3]},"ringBondCount":{"type":"integer","enum":[0,-2,-1,2,3,4,5,6,7,8,9]},"substitutionCount":{"type":"integer","enum":[0,-2,-1,1,2,3,4,5,6,7,8,9]},"unsaturatedAtom":{"type":"boolean"},"hCount":{"type":"integer","enum":[-1,0,1,2,3,4,5,6,7,8,9,10]},"implicitHCount":{"type":"integer","enum":[0,1,2,3,4,5,6,7,8,9]},"mapping":{"type":"integer","minimum":0},"invRet":{"type":"integer","enum":[0,1,2]},"exactChangeFlag":{"type":"boolean"},"cip":{"type":"string","enum":["R","S","r","s"]},"queryProperties":{"type":"object","properties":{"aromaticity":{"type":"string","enum":["aromatic","aliphatic"]},"ringMembership":{"type":"integer","minimum":0,"maximum":9},"ringSize":{"type":"integer","minimum":0,"maximum":9},"connectivity":{"type":"integer","minimum":0,"maximum":9},"chirality":{"type":"string","enum":["clockwise","anticlockwise"]},"customQuery":{"type":"string"}}}},"additionalProperties":false};const schema35 = {"type":"object","required":["type","location"],"properties":{"type":{"const":"rg-label"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"$refs":{"type":"array","items":{"type":"string","pattern":"^rg-[1-9]\\d*"}},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]}}};const schema36 = {"type":"object","required":["type","location"],"properties":{"type":{"enum":["atom-list"]},"notList":{"type":"boolean"},"location":{"type":"array","minItems":2,"maxItems":3,"items":{"type":"number"}},"elements":{"type":"array","minItems":1,"items":{"type":"string","minLength":1}},"attachmentPoints":{"type":"integer","enum":[0,1,2,3]}}};const schema37 = {"type":"object","required":["atoms"],"properties":{"atoms":{"type":"array","minItems":2,"maxItems":2,"uniqueItems":true,"items":{"type":"integer","minimum":0}},"selected":{"type":"boolean"},"stereobox":{"type":"integer","enum":[0,1]},"cip":{"type":"string","enum":["Z","E"]}},"oneOf":[{"required":["type"],"properties":{"type":{"type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11,12]},"stereo":{"type":"integer","enum":[0,1,3,4,6]},"topology":{"type":"integer","enum":[0,1,2]},"center":{"type":"integer","enum":[0,-1,1,2,4,8,12]}}},{"required":["customQuery"],"properties":{"customQuery":{"type":"string"}}}]};const schema38 = {"type":"array","minItems":1,"maxItems":2,"items":{"oneOf":[{"type":"object","required":["entityType","items"],"properties":{"entityType":{"type":"string","const":"atoms"},"items":{"type":"array","uniqueItems":true,"items":{"type":"integer","minimum":0}}}},{"type":"object","required":["entityType","items"],"properties":{"entityType":{"type":"string","const":"bonds"},"items":{"type":"array","uniqueItems":true,"items":{"type":"integer","minimum":0}}}}]}};const schema40 = {"type":"array","items":{"required":["atoms","type"],"type":"object","properties":{"atoms":{"type":"array","items":{"type":"integer","minimum":0}},"type":{"type":"string","enum":["GEN","MUL","SRU","SUP","DAT","queryComponent"]}},"if":{"properties":{"type":{"const":"DAT"}}},"then":{"properties":{"context":{"enum":["Fragment","Multifragment","Bond","Atom","Group"]},"fieldName":{"type":"string"},"fieldValue":{"type":"string","minLength":1},"display":{"type":"boolean"},"placement":{"type":"boolean"},"bonds":{"type":"array","items":{"type":"integer","minimum":0}}}}}};const func5 = Object.prototype.hasOwnProperty;const pattern6 = new RegExp("(?:(?:^&|or)[0-9]+$)|(?:^abs$)", "u");const pattern7 = new RegExp("^rg-[1-9]\\d*", "u");function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.atoms === undefined) && (missing0 = "atoms")){validate24.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.stereoFlagPosition !== undefined){let data0 = data.stereoFlagPosition;const _errs1 = errors;if(errors === _errs1){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing1;if(((data0.x === undefined) && (missing1 = "x")) || ((data0.y === undefined) && (missing1 = "y"))){validate24.errors = [{instancePath:instancePath+"/stereoFlagPosition",schemaPath:"#/properties/stereoFlagPosition/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data0.x !== undefined){let data1 = data0.x;const _errs3 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate24.errors = [{instancePath:instancePath+"/stereoFlagPosition/x",schemaPath:"#/properties/stereoFlagPosition/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data0.y !== undefined){let data2 = data0.y;const _errs5 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate24.errors = [{instancePath:instancePath+"/stereoFlagPosition/y",schemaPath:"#/properties/stereoFlagPosition/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid1 = _errs5 === errors;}else {var valid1 = true;}}}}else {validate24.errors = [{instancePath:instancePath+"/stereoFlagPosition",schemaPath:"#/properties/stereoFlagPosition/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data3 = data.properties;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid2 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){let data4 = data3[i0];const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.key !== undefined){const _errs11 = errors;if(typeof data4.key !== "string"){validate24.errors = [{instancePath:instancePath+"/properties/" + i0+"/key",schemaPath:"#/properties/properties/items/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data4.value !== undefined){const _errs13 = errors;if(typeof data4.value !== "string"){validate24.errors = [{instancePath:instancePath+"/properties/" + i0+"/value",schemaPath:"#/properties/properties/items/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}}}else {validate24.errors = [{instancePath:instancePath+"/properties/" + i0,schemaPath:"#/properties/properties/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs9 === errors;if(!valid2){break;}}}else {validate24.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.atoms !== undefined){let data7 = data.atoms;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data7)){var valid4 = true;const len1 = data7.length;for(let i1=0; i1<len1; i1++){let data8 = data7[i1];const _errs17 = errors;const _errs18 = errors;let valid5 = false;let passing0 = null;const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing2;if((data8.label === undefined) && (missing2 = "label")){const err0 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/atom/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {const _errs22 = errors;for(const key0 in data8){if(!(func5.call(schema34.properties, key0))){const err1 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/atom/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;break;}}if(_errs22 === errors){if(data8.label !== undefined){const _errs23 = errors;if(typeof data8.label !== "string"){const err2 = {instancePath:instancePath+"/atoms/" + i1+"/label",schemaPath:"#/definitions/atom/properties/label/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid7 = _errs23 === errors;}else {var valid7 = true;}if(valid7){if(data8.alias !== undefined){const _errs25 = errors;if(typeof data8.alias !== "string"){const err3 = {instancePath:instancePath+"/atoms/" + i1+"/alias",schemaPath:"#/definitions/atom/properties/alias/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var valid7 = _errs25 === errors;}else {var valid7 = true;}if(valid7){if(data8.location !== undefined){let data11 = data8.location;const _errs27 = errors;if(errors === _errs27){if(Array.isArray(data11)){if(data11.length > 3){const err4 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atom/properties/location/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}else {if(data11.length < 2){const err5 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atom/properties/location/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}else {var valid8 = true;const len2 = data11.length;for(let i2=0; i2<len2; i2++){let data12 = data11[i2];const _errs29 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){const err6 = {instancePath:instancePath+"/atoms/" + i1+"/location/" + i2,schemaPath:"#/definitions/atom/properties/location/items/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}var valid8 = _errs29 === errors;if(!valid8){break;}}}}}else {const err7 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atom/properties/location/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}var valid7 = _errs27 === errors;}else {var valid7 = true;}if(valid7){if(data8.selected !== undefined){const _errs31 = errors;if(typeof data8.selected !== "boolean"){const err8 = {instancePath:instancePath+"/atoms/" + i1+"/selected",schemaPath:"#/definitions/atom/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}var valid7 = _errs31 === errors;}else {var valid7 = true;}if(valid7){if(data8.charge !== undefined){let data14 = data8.charge;const _errs33 = errors;if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){const err9 = {instancePath:instancePath+"/atoms/" + i1+"/charge",schemaPath:"#/definitions/atom/properties/charge/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}if(errors === _errs33){if((typeof data14 == "number") && (isFinite(data14))){if(data14 > 1000 || isNaN(data14)){const err10 = {instancePath:instancePath+"/atoms/" + i1+"/charge",schemaPath:"#/definitions/atom/properties/charge/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}else {if(data14 < -1000 || isNaN(data14)){const err11 = {instancePath:instancePath+"/atoms/" + i1+"/charge",schemaPath:"#/definitions/atom/properties/charge/minimum",keyword:"minimum",params:{comparison: ">=", limit: -1000},message:"must be >= -1000"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}}}var valid7 = _errs33 === errors;}else {var valid7 = true;}if(valid7){if(data8.explicitValence !== undefined){let data15 = data8.explicitValence;const _errs35 = errors;if(!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))){const err12 = {instancePath:instancePath+"/atoms/" + i1+"/explicitValence",schemaPath:"#/definitions/atom/properties/explicitValence/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}if(!((((((((((((((data15 === -1) || (data15 === 0)) || (data15 === 1)) || (data15 === 2)) || (data15 === 3)) || (data15 === 4)) || (data15 === 5)) || (data15 === 6)) || (data15 === 7)) || (data15 === 8)) || (data15 === 9)) || (data15 === 10)) || (data15 === 11)) || (data15 === 12))){const err13 = {instancePath:instancePath+"/atoms/" + i1+"/explicitValence",schemaPath:"#/definitions/atom/properties/explicitValence/enum",keyword:"enum",params:{allowedValues: schema34.properties.explicitValence.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}var valid7 = _errs35 === errors;}else {var valid7 = true;}if(valid7){if(data8.isotope !== undefined){let data16 = data8.isotope;const _errs37 = errors;if(!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))){const err14 = {instancePath:instancePath+"/atoms/" + i1+"/isotope",schemaPath:"#/definitions/atom/properties/isotope/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}if(errors === _errs37){if((typeof data16 == "number") && (isFinite(data16))){if(data16 > 1000 || isNaN(data16)){const err15 = {instancePath:instancePath+"/atoms/" + i1+"/isotope",schemaPath:"#/definitions/atom/properties/isotope/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1000},message:"must be <= 1000"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}else {if(data16 < 0 || isNaN(data16)){const err16 = {instancePath:instancePath+"/atoms/" + i1+"/isotope",schemaPath:"#/definitions/atom/properties/isotope/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}}}var valid7 = _errs37 === errors;}else {var valid7 = true;}if(valid7){if(data8.radical !== undefined){let data17 = data8.radical;const _errs39 = errors;if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){const err17 = {instancePath:instancePath+"/atoms/" + i1+"/radical",schemaPath:"#/definitions/atom/properties/radical/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}if(!((((data17 === 0) || (data17 === 2)) || (data17 === 1)) || (data17 === 3))){const err18 = {instancePath:instancePath+"/atoms/" + i1+"/radical",schemaPath:"#/definitions/atom/properties/radical/enum",keyword:"enum",params:{allowedValues: schema34.properties.radical.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}var valid7 = _errs39 === errors;}else {var valid7 = true;}if(valid7){if(data8.attachmentPoints !== undefined){let data18 = data8.attachmentPoints;const _errs41 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){const err19 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/atom/properties/attachmentPoints/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}if(!((((data18 === 0) || (data18 === 1)) || (data18 === 2)) || (data18 === 3))){const err20 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/atom/properties/attachmentPoints/enum",keyword:"enum",params:{allowedValues: schema34.properties.attachmentPoints.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}var valid7 = _errs41 === errors;}else {var valid7 = true;}if(valid7){if(data8.stereoLabel !== undefined){let data19 = data8.stereoLabel;const _errs43 = errors;if(errors === _errs43){if(typeof data19 === "string"){if(!pattern6.test(data19)){const err21 = {instancePath:instancePath+"/atoms/" + i1+"/stereoLabel",schemaPath:"#/definitions/atom/properties/stereoLabel/pattern",keyword:"pattern",params:{pattern: "(?:(?:^&|or)[0-9]+$)|(?:^abs$)"},message:"must match pattern \""+"(?:(?:^&|or)[0-9]+$)|(?:^abs$)"+"\""};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}else {const err22 = {instancePath:instancePath+"/atoms/" + i1+"/stereoLabel",schemaPath:"#/definitions/atom/properties/stereoLabel/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}var valid7 = _errs43 === errors;}else {var valid7 = true;}if(valid7){if(data8.stereoParity !== undefined){let data20 = data8.stereoParity;const _errs45 = errors;if(!(((typeof data20 == "number") && (!(data20 % 1) && !isNaN(data20))) && (isFinite(data20)))){const err23 = {instancePath:instancePath+"/atoms/" + i1+"/stereoParity",schemaPath:"#/definitions/atom/properties/stereoParity/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}if(!((((data20 === 0) || (data20 === 1)) || (data20 === 2)) || (data20 === 3))){const err24 = {instancePath:instancePath+"/atoms/" + i1+"/stereoParity",schemaPath:"#/definitions/atom/properties/stereoParity/enum",keyword:"enum",params:{allowedValues: schema34.properties.stereoParity.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}var valid7 = _errs45 === errors;}else {var valid7 = true;}if(valid7){if(data8.ringBondCount !== undefined){let data21 = data8.ringBondCount;const _errs47 = errors;if(!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))){const err25 = {instancePath:instancePath+"/atoms/" + i1+"/ringBondCount",schemaPath:"#/definitions/atom/properties/ringBondCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(!(((((((((((data21 === 0) || (data21 === -2)) || (data21 === -1)) || (data21 === 2)) || (data21 === 3)) || (data21 === 4)) || (data21 === 5)) || (data21 === 6)) || (data21 === 7)) || (data21 === 8)) || (data21 === 9))){const err26 = {instancePath:instancePath+"/atoms/" + i1+"/ringBondCount",schemaPath:"#/definitions/atom/properties/ringBondCount/enum",keyword:"enum",params:{allowedValues: schema34.properties.ringBondCount.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}var valid7 = _errs47 === errors;}else {var valid7 = true;}if(valid7){if(data8.substitutionCount !== undefined){let data22 = data8.substitutionCount;const _errs49 = errors;if(!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))){const err27 = {instancePath:instancePath+"/atoms/" + i1+"/substitutionCount",schemaPath:"#/definitions/atom/properties/substitutionCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}if(!((((((((((((data22 === 0) || (data22 === -2)) || (data22 === -1)) || (data22 === 1)) || (data22 === 2)) || (data22 === 3)) || (data22 === 4)) || (data22 === 5)) || (data22 === 6)) || (data22 === 7)) || (data22 === 8)) || (data22 === 9))){const err28 = {instancePath:instancePath+"/atoms/" + i1+"/substitutionCount",schemaPath:"#/definitions/atom/properties/substitutionCount/enum",keyword:"enum",params:{allowedValues: schema34.properties.substitutionCount.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}var valid7 = _errs49 === errors;}else {var valid7 = true;}if(valid7){if(data8.unsaturatedAtom !== undefined){const _errs51 = errors;if(typeof data8.unsaturatedAtom !== "boolean"){const err29 = {instancePath:instancePath+"/atoms/" + i1+"/unsaturatedAtom",schemaPath:"#/definitions/atom/properties/unsaturatedAtom/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}var valid7 = _errs51 === errors;}else {var valid7 = true;}if(valid7){if(data8.hCount !== undefined){let data24 = data8.hCount;const _errs53 = errors;if(!(((typeof data24 == "number") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24)))){const err30 = {instancePath:instancePath+"/atoms/" + i1+"/hCount",schemaPath:"#/definitions/atom/properties/hCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}if(!((((((((((((data24 === -1) || (data24 === 0)) || (data24 === 1)) || (data24 === 2)) || (data24 === 3)) || (data24 === 4)) || (data24 === 5)) || (data24 === 6)) || (data24 === 7)) || (data24 === 8)) || (data24 === 9)) || (data24 === 10))){const err31 = {instancePath:instancePath+"/atoms/" + i1+"/hCount",schemaPath:"#/definitions/atom/properties/hCount/enum",keyword:"enum",params:{allowedValues: schema34.properties.hCount.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}var valid7 = _errs53 === errors;}else {var valid7 = true;}if(valid7){if(data8.implicitHCount !== undefined){let data25 = data8.implicitHCount;const _errs55 = errors;if(!(((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25)))){const err32 = {instancePath:instancePath+"/atoms/" + i1+"/implicitHCount",schemaPath:"#/definitions/atom/properties/implicitHCount/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}if(!((((((((((data25 === 0) || (data25 === 1)) || (data25 === 2)) || (data25 === 3)) || (data25 === 4)) || (data25 === 5)) || (data25 === 6)) || (data25 === 7)) || (data25 === 8)) || (data25 === 9))){const err33 = {instancePath:instancePath+"/atoms/" + i1+"/implicitHCount",schemaPath:"#/definitions/atom/properties/implicitHCount/enum",keyword:"enum",params:{allowedValues: schema34.properties.implicitHCount.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}var valid7 = _errs55 === errors;}else {var valid7 = true;}if(valid7){if(data8.mapping !== undefined){let data26 = data8.mapping;const _errs57 = errors;if(!(((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26)))){const err34 = {instancePath:instancePath+"/atoms/" + i1+"/mapping",schemaPath:"#/definitions/atom/properties/mapping/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}if(errors === _errs57){if((typeof data26 == "number") && (isFinite(data26))){if(data26 < 0 || isNaN(data26)){const err35 = {instancePath:instancePath+"/atoms/" + i1+"/mapping",schemaPath:"#/definitions/atom/properties/mapping/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}}var valid7 = _errs57 === errors;}else {var valid7 = true;}if(valid7){if(data8.invRet !== undefined){let data27 = data8.invRet;const _errs59 = errors;if(!(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27)))){const err36 = {instancePath:instancePath+"/atoms/" + i1+"/invRet",schemaPath:"#/definitions/atom/properties/invRet/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}if(!(((data27 === 0) || (data27 === 1)) || (data27 === 2))){const err37 = {instancePath:instancePath+"/atoms/" + i1+"/invRet",schemaPath:"#/definitions/atom/properties/invRet/enum",keyword:"enum",params:{allowedValues: schema34.properties.invRet.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}var valid7 = _errs59 === errors;}else {var valid7 = true;}if(valid7){if(data8.exactChangeFlag !== undefined){const _errs61 = errors;if(typeof data8.exactChangeFlag !== "boolean"){const err38 = {instancePath:instancePath+"/atoms/" + i1+"/exactChangeFlag",schemaPath:"#/definitions/atom/properties/exactChangeFlag/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}var valid7 = _errs61 === errors;}else {var valid7 = true;}if(valid7){if(data8.cip !== undefined){let data29 = data8.cip;const _errs63 = errors;if(typeof data29 !== "string"){const err39 = {instancePath:instancePath+"/atoms/" + i1+"/cip",schemaPath:"#/definitions/atom/properties/cip/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}if(!((((data29 === "R") || (data29 === "S")) || (data29 === "r")) || (data29 === "s"))){const err40 = {instancePath:instancePath+"/atoms/" + i1+"/cip",schemaPath:"#/definitions/atom/properties/cip/enum",keyword:"enum",params:{allowedValues: schema34.properties.cip.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}var valid7 = _errs63 === errors;}else {var valid7 = true;}if(valid7){if(data8.queryProperties !== undefined){let data30 = data8.queryProperties;const _errs65 = errors;if(errors === _errs65){if(data30 && typeof data30 == "object" && !Array.isArray(data30)){if(data30.aromaticity !== undefined){let data31 = data30.aromaticity;const _errs67 = errors;if(typeof data31 !== "string"){const err41 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/aromaticity",schemaPath:"#/definitions/atom/properties/queryProperties/properties/aromaticity/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}if(!((data31 === "aromatic") || (data31 === "aliphatic"))){const err42 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/aromaticity",schemaPath:"#/definitions/atom/properties/queryProperties/properties/aromaticity/enum",keyword:"enum",params:{allowedValues: schema34.properties.queryProperties.properties.aromaticity.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}var valid9 = _errs67 === errors;}else {var valid9 = true;}if(valid9){if(data30.ringMembership !== undefined){let data32 = data30.ringMembership;const _errs69 = errors;if(!(((typeof data32 == "number") && (!(data32 % 1) && !isNaN(data32))) && (isFinite(data32)))){const err43 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringMembership",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringMembership/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}if(errors === _errs69){if((typeof data32 == "number") && (isFinite(data32))){if(data32 > 9 || isNaN(data32)){const err44 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringMembership",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringMembership/maximum",keyword:"maximum",params:{comparison: "<=", limit: 9},message:"must be <= 9"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}else {if(data32 < 0 || isNaN(data32)){const err45 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringMembership",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringMembership/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}}}}var valid9 = _errs69 === errors;}else {var valid9 = true;}if(valid9){if(data30.ringSize !== undefined){let data33 = data30.ringSize;const _errs71 = errors;if(!(((typeof data33 == "number") && (!(data33 % 1) && !isNaN(data33))) && (isFinite(data33)))){const err46 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringSize",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(errors === _errs71){if((typeof data33 == "number") && (isFinite(data33))){if(data33 > 9 || isNaN(data33)){const err47 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringSize",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringSize/maximum",keyword:"maximum",params:{comparison: "<=", limit: 9},message:"must be <= 9"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}else {if(data33 < 0 || isNaN(data33)){const err48 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/ringSize",schemaPath:"#/definitions/atom/properties/queryProperties/properties/ringSize/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}}}}var valid9 = _errs71 === errors;}else {var valid9 = true;}if(valid9){if(data30.connectivity !== undefined){let data34 = data30.connectivity;const _errs73 = errors;if(!(((typeof data34 == "number") && (!(data34 % 1) && !isNaN(data34))) && (isFinite(data34)))){const err49 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/connectivity",schemaPath:"#/definitions/atom/properties/queryProperties/properties/connectivity/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}if(errors === _errs73){if((typeof data34 == "number") && (isFinite(data34))){if(data34 > 9 || isNaN(data34)){const err50 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/connectivity",schemaPath:"#/definitions/atom/properties/queryProperties/properties/connectivity/maximum",keyword:"maximum",params:{comparison: "<=", limit: 9},message:"must be <= 9"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}else {if(data34 < 0 || isNaN(data34)){const err51 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/connectivity",schemaPath:"#/definitions/atom/properties/queryProperties/properties/connectivity/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}}}var valid9 = _errs73 === errors;}else {var valid9 = true;}if(valid9){if(data30.chirality !== undefined){let data35 = data30.chirality;const _errs75 = errors;if(typeof data35 !== "string"){const err52 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/chirality",schemaPath:"#/definitions/atom/properties/queryProperties/properties/chirality/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}if(!((data35 === "clockwise") || (data35 === "anticlockwise"))){const err53 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/chirality",schemaPath:"#/definitions/atom/properties/queryProperties/properties/chirality/enum",keyword:"enum",params:{allowedValues: schema34.properties.queryProperties.properties.chirality.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}var valid9 = _errs75 === errors;}else {var valid9 = true;}if(valid9){if(data30.customQuery !== undefined){const _errs77 = errors;if(typeof data30.customQuery !== "string"){const err54 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties/customQuery",schemaPath:"#/definitions/atom/properties/queryProperties/properties/customQuery/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}var valid9 = _errs77 === errors;}else {var valid9 = true;}}}}}}}else {const err55 = {instancePath:instancePath+"/atoms/" + i1+"/queryProperties",schemaPath:"#/definitions/atom/properties/queryProperties/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}var valid7 = _errs65 === errors;}else {var valid7 = true;}}}}}}}}}}}}}}}}}}}}}}}}else {const err56 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/atom/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}var _valid0 = _errs19 === errors;if(_valid0){valid5 = true;passing0 = 0;}const _errs79 = errors;const _errs80 = errors;if(errors === _errs80){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing3;if(((data8.type === undefined) && (missing3 = "type")) || ((data8.location === undefined) && (missing3 = "location"))){const err57 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/rsite/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}else {if(data8.type !== undefined){const _errs82 = errors;if("rg-label" !== data8.type){const err58 = {instancePath:instancePath+"/atoms/" + i1+"/type",schemaPath:"#/definitions/rsite/properties/type/const",keyword:"const",params:{allowedValue: "rg-label"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}var valid11 = _errs82 === errors;}else {var valid11 = true;}if(valid11){if(data8.location !== undefined){let data38 = data8.location;const _errs83 = errors;if(errors === _errs83){if(Array.isArray(data38)){if(data38.length > 3){const err59 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/rsite/properties/location/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}else {if(data38.length < 2){const err60 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/rsite/properties/location/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}else {var valid12 = true;const len3 = data38.length;for(let i3=0; i3<len3; i3++){let data39 = data38[i3];const _errs85 = errors;if(!((typeof data39 == "number") && (isFinite(data39)))){const err61 = {instancePath:instancePath+"/atoms/" + i1+"/location/" + i3,schemaPath:"#/definitions/rsite/properties/location/items/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}var valid12 = _errs85 === errors;if(!valid12){break;}}}}}else {const err62 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/rsite/properties/location/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}}var valid11 = _errs83 === errors;}else {var valid11 = true;}if(valid11){if(data8.$refs !== undefined){let data40 = data8.$refs;const _errs87 = errors;if(errors === _errs87){if(Array.isArray(data40)){var valid13 = true;const len4 = data40.length;for(let i4=0; i4<len4; i4++){let data41 = data40[i4];const _errs89 = errors;if(errors === _errs89){if(typeof data41 === "string"){if(!pattern7.test(data41)){const err63 = {instancePath:instancePath+"/atoms/" + i1+"/$refs/" + i4,schemaPath:"#/definitions/rsite/properties/%24refs/items/pattern",keyword:"pattern",params:{pattern: "^rg-[1-9]\\d*"},message:"must match pattern \""+"^rg-[1-9]\\d*"+"\""};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}else {const err64 = {instancePath:instancePath+"/atoms/" + i1+"/$refs/" + i4,schemaPath:"#/definitions/rsite/properties/%24refs/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}}var valid13 = _errs89 === errors;if(!valid13){break;}}}else {const err65 = {instancePath:instancePath+"/atoms/" + i1+"/$refs",schemaPath:"#/definitions/rsite/properties/%24refs/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}}var valid11 = _errs87 === errors;}else {var valid11 = true;}if(valid11){if(data8.attachmentPoints !== undefined){let data42 = data8.attachmentPoints;const _errs91 = errors;if(!(((typeof data42 == "number") && (!(data42 % 1) && !isNaN(data42))) && (isFinite(data42)))){const err66 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/rsite/properties/attachmentPoints/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}if(!((((data42 === 0) || (data42 === 1)) || (data42 === 2)) || (data42 === 3))){const err67 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/rsite/properties/attachmentPoints/enum",keyword:"enum",params:{allowedValues: schema35.properties.attachmentPoints.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}var valid11 = _errs91 === errors;}else {var valid11 = true;}}}}}}else {const err68 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/rsite/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}var _valid0 = _errs79 === errors;if(_valid0 && valid5){valid5 = false;passing0 = [passing0, 1];}else {if(_valid0){valid5 = true;passing0 = 1;}const _errs93 = errors;const _errs94 = errors;if(errors === _errs94){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing4;if(((data8.type === undefined) && (missing4 = "type")) || ((data8.location === undefined) && (missing4 = "location"))){const err69 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/atomlist/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}else {if(data8.type !== undefined){const _errs96 = errors;if(!(data8.type === "atom-list")){const err70 = {instancePath:instancePath+"/atoms/" + i1+"/type",schemaPath:"#/definitions/atomlist/properties/type/enum",keyword:"enum",params:{allowedValues: schema36.properties.type.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}var valid15 = _errs96 === errors;}else {var valid15 = true;}if(valid15){if(data8.notList !== undefined){const _errs97 = errors;if(typeof data8.notList !== "boolean"){const err71 = {instancePath:instancePath+"/atoms/" + i1+"/notList",schemaPath:"#/definitions/atomlist/properties/notList/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}var valid15 = _errs97 === errors;}else {var valid15 = true;}if(valid15){if(data8.location !== undefined){let data45 = data8.location;const _errs99 = errors;if(errors === _errs99){if(Array.isArray(data45)){if(data45.length > 3){const err72 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atomlist/properties/location/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}else {if(data45.length < 2){const err73 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atomlist/properties/location/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}else {var valid16 = true;const len5 = data45.length;for(let i5=0; i5<len5; i5++){let data46 = data45[i5];const _errs101 = errors;if(!((typeof data46 == "number") && (isFinite(data46)))){const err74 = {instancePath:instancePath+"/atoms/" + i1+"/location/" + i5,schemaPath:"#/definitions/atomlist/properties/location/items/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}var valid16 = _errs101 === errors;if(!valid16){break;}}}}}else {const err75 = {instancePath:instancePath+"/atoms/" + i1+"/location",schemaPath:"#/definitions/atomlist/properties/location/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}var valid15 = _errs99 === errors;}else {var valid15 = true;}if(valid15){if(data8.elements !== undefined){let data47 = data8.elements;const _errs103 = errors;if(errors === _errs103){if(Array.isArray(data47)){if(data47.length < 1){const err76 = {instancePath:instancePath+"/atoms/" + i1+"/elements",schemaPath:"#/definitions/atomlist/properties/elements/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}else {var valid17 = true;const len6 = data47.length;for(let i6=0; i6<len6; i6++){let data48 = data47[i6];const _errs105 = errors;if(errors === _errs105){if(typeof data48 === "string"){if(func4(data48) < 1){const err77 = {instancePath:instancePath+"/atoms/" + i1+"/elements/" + i6,schemaPath:"#/definitions/atomlist/properties/elements/items/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}}else {const err78 = {instancePath:instancePath+"/atoms/" + i1+"/elements/" + i6,schemaPath:"#/definitions/atomlist/properties/elements/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}}var valid17 = _errs105 === errors;if(!valid17){break;}}}}else {const err79 = {instancePath:instancePath+"/atoms/" + i1+"/elements",schemaPath:"#/definitions/atomlist/properties/elements/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}}var valid15 = _errs103 === errors;}else {var valid15 = true;}if(valid15){if(data8.attachmentPoints !== undefined){let data49 = data8.attachmentPoints;const _errs107 = errors;if(!(((typeof data49 == "number") && (!(data49 % 1) && !isNaN(data49))) && (isFinite(data49)))){const err80 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/atomlist/properties/attachmentPoints/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}if(!((((data49 === 0) || (data49 === 1)) || (data49 === 2)) || (data49 === 3))){const err81 = {instancePath:instancePath+"/atoms/" + i1+"/attachmentPoints",schemaPath:"#/definitions/atomlist/properties/attachmentPoints/enum",keyword:"enum",params:{allowedValues: schema36.properties.attachmentPoints.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;}var valid15 = _errs107 === errors;}else {var valid15 = true;}}}}}}}else {const err82 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/definitions/atomlist/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err82];}else {vErrors.push(err82);}errors++;}}var _valid0 = _errs93 === errors;if(_valid0 && valid5){valid5 = false;passing0 = [passing0, 2];}else {if(_valid0){valid5 = true;passing0 = 2;}}}if(!valid5){const err83 = {instancePath:instancePath+"/atoms/" + i1,schemaPath:"#/properties/atoms/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err83];}else {vErrors.push(err83);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs18;if(vErrors !== null){if(_errs18){vErrors.length = _errs18;}else {vErrors = null;}}}var valid4 = _errs17 === errors;if(!valid4){break;}}}else {validate24.errors = [{instancePath:instancePath+"/atoms",schemaPath:"#/properties/atoms/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.bonds !== undefined){let data50 = data.bonds;const _errs109 = errors;if(errors === _errs109){if(Array.isArray(data50)){var valid18 = true;const len7 = data50.length;for(let i7=0; i7<len7; i7++){let data51 = data50[i7];const _errs111 = errors;const _errs112 = errors;const _errs114 = errors;let valid20 = false;let passing1 = null;const _errs115 = errors;if(data51 && typeof data51 == "object" && !Array.isArray(data51)){let missing5;if((data51.type === undefined) && (missing5 = "type")){const err84 = {instancePath:instancePath+"/bonds/" + i7,schemaPath:"#/definitions/bond/oneOf/0/required",keyword:"required",params:{missingProperty: missing5},message:"must have required property '"+missing5+"'"};if(vErrors === null){vErrors = [err84];}else {vErrors.push(err84);}errors++;}else {if(data51.type !== undefined){let data52 = data51.type;const _errs116 = errors;if(!(((typeof data52 == "number") && (!(data52 % 1) && !isNaN(data52))) && (isFinite(data52)))){const err85 = {instancePath:instancePath+"/bonds/" + i7+"/type",schemaPath:"#/definitions/bond/oneOf/0/properties/type/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err85];}else {vErrors.push(err85);}errors++;}if(!((((((((((((data52 === 1) || (data52 === 2)) || (data52 === 3)) || (data52 === 4)) || (data52 === 5)) || (data52 === 6)) || (data52 === 7)) || (data52 === 8)) || (data52 === 9)) || (data52 === 10)) || (data52 === 11)) || (data52 === 12))){const err86 = {instancePath:instancePath+"/bonds/" + i7+"/type",schemaPath:"#/definitions/bond/oneOf/0/properties/type/enum",keyword:"enum",params:{allowedValues: schema37.oneOf[0].properties.type.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err86];}else {vErrors.push(err86);}errors++;}var valid21 = _errs116 === errors;}else {var valid21 = true;}if(valid21){if(data51.stereo !== undefined){let data53 = data51.stereo;const _errs118 = errors;if(!(((typeof data53 == "number") && (!(data53 % 1) && !isNaN(data53))) && (isFinite(data53)))){const err87 = {instancePath:instancePath+"/bonds/" + i7+"/stereo",schemaPath:"#/definitions/bond/oneOf/0/properties/stereo/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err87];}else {vErrors.push(err87);}errors++;}if(!(((((data53 === 0) || (data53 === 1)) || (data53 === 3)) || (data53 === 4)) || (data53 === 6))){const err88 = {instancePath:instancePath+"/bonds/" + i7+"/stereo",schemaPath:"#/definitions/bond/oneOf/0/properties/stereo/enum",keyword:"enum",params:{allowedValues: schema37.oneOf[0].properties.stereo.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err88];}else {vErrors.push(err88);}errors++;}var valid21 = _errs118 === errors;}else {var valid21 = true;}if(valid21){if(data51.topology !== undefined){let data54 = data51.topology;const _errs120 = errors;if(!(((typeof data54 == "number") && (!(data54 % 1) && !isNaN(data54))) && (isFinite(data54)))){const err89 = {instancePath:instancePath+"/bonds/" + i7+"/topology",schemaPath:"#/definitions/bond/oneOf/0/properties/topology/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err89];}else {vErrors.push(err89);}errors++;}if(!(((data54 === 0) || (data54 === 1)) || (data54 === 2))){const err90 = {instancePath:instancePath+"/bonds/" + i7+"/topology",schemaPath:"#/definitions/bond/oneOf/0/properties/topology/enum",keyword:"enum",params:{allowedValues: schema37.oneOf[0].properties.topology.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err90];}else {vErrors.push(err90);}errors++;}var valid21 = _errs120 === errors;}else {var valid21 = true;}if(valid21){if(data51.center !== undefined){let data55 = data51.center;const _errs122 = errors;if(!(((typeof data55 == "number") && (!(data55 % 1) && !isNaN(data55))) && (isFinite(data55)))){const err91 = {instancePath:instancePath+"/bonds/" + i7+"/center",schemaPath:"#/definitions/bond/oneOf/0/properties/center/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err91];}else {vErrors.push(err91);}errors++;}if(!(((((((data55 === 0) || (data55 === -1)) || (data55 === 1)) || (data55 === 2)) || (data55 === 4)) || (data55 === 8)) || (data55 === 12))){const err92 = {instancePath:instancePath+"/bonds/" + i7+"/center",schemaPath:"#/definitions/bond/oneOf/0/properties/center/enum",keyword:"enum",params:{allowedValues: schema37.oneOf[0].properties.center.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err92];}else {vErrors.push(err92);}errors++;}var valid21 = _errs122 === errors;}else {var valid21 = true;}}}}}}var _valid1 = _errs115 === errors;if(_valid1){valid20 = true;passing1 = 0;}const _errs124 = errors;if(data51 && typeof data51 == "object" && !Array.isArray(data51)){let missing6;if((data51.customQuery === undefined) && (missing6 = "customQuery")){const err93 = {instancePath:instancePath+"/bonds/" + i7,schemaPath:"#/definitions/bond/oneOf/1/required",keyword:"required",params:{missingProperty: missing6},message:"must have required property '"+missing6+"'"};if(vErrors === null){vErrors = [err93];}else {vErrors.push(err93);}errors++;}else {if(data51.customQuery !== undefined){if(typeof data51.customQuery !== "string"){const err94 = {instancePath:instancePath+"/bonds/" + i7+"/customQuery",schemaPath:"#/definitions/bond/oneOf/1/properties/customQuery/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err94];}else {vErrors.push(err94);}errors++;}}}}var _valid1 = _errs124 === errors;if(_valid1 && valid20){valid20 = false;passing1 = [passing1, 1];}else {if(_valid1){valid20 = true;passing1 = 1;}}if(!valid20){const err95 = {instancePath:instancePath+"/bonds/" + i7,schemaPath:"#/definitions/bond/oneOf",keyword:"oneOf",params:{passingSchemas: passing1},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err95];}else {vErrors.push(err95);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs114;if(vErrors !== null){if(_errs114){vErrors.length = _errs114;}else {vErrors = null;}}}if(errors === _errs112){if(data51 && typeof data51 == "object" && !Array.isArray(data51)){let missing7;if((data51.atoms === undefined) && (missing7 = "atoms")){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7,schemaPath:"#/definitions/bond/required",keyword:"required",params:{missingProperty: missing7},message:"must have required property '"+missing7+"'"}];return false;}else {if(data51.atoms !== undefined){let data57 = data51.atoms;const _errs127 = errors;if(errors === _errs127){if(Array.isArray(data57)){if(data57.length > 2){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms",schemaPath:"#/definitions/bond/properties/atoms/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"}];return false;}else {if(data57.length < 2){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms",schemaPath:"#/definitions/bond/properties/atoms/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"}];return false;}else {var valid24 = true;const len8 = data57.length;for(let i8=0; i8<len8; i8++){let data58 = data57[i8];const _errs129 = errors;if(!(((typeof data58 == "number") && (!(data58 % 1) && !isNaN(data58))) && (isFinite(data58)))){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms/" + i8,schemaPath:"#/definitions/bond/properties/atoms/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs129){if((typeof data58 == "number") && (isFinite(data58))){if(data58 < 0 || isNaN(data58)){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms/" + i8,schemaPath:"#/definitions/bond/properties/atoms/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid24 = _errs129 === errors;if(!valid24){break;}}if(valid24){let i9 = data57.length;let j0;if(i9 > 1){const indices0 = {};for(;i9--;){let item0 = data57[i9];if(!(((typeof item0 == "number") && (!(item0 % 1) && !isNaN(item0))) && (isFinite(item0)))){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms",schemaPath:"#/definitions/bond/properties/atoms/uniqueItems",keyword:"uniqueItems",params:{i: i9, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i9+" are identical)"}];return false;break;}indices0[item0] = i9;}}}}}}else {validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/atoms",schemaPath:"#/definitions/bond/properties/atoms/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid23 = _errs127 === errors;}else {var valid23 = true;}if(valid23){if(data51.selected !== undefined){const _errs131 = errors;if(typeof data51.selected !== "boolean"){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/selected",schemaPath:"#/definitions/bond/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid23 = _errs131 === errors;}else {var valid23 = true;}if(valid23){if(data51.stereobox !== undefined){let data60 = data51.stereobox;const _errs133 = errors;if(!(((typeof data60 == "number") && (!(data60 % 1) && !isNaN(data60))) && (isFinite(data60)))){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/stereobox",schemaPath:"#/definitions/bond/properties/stereobox/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(!((data60 === 0) || (data60 === 1))){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/stereobox",schemaPath:"#/definitions/bond/properties/stereobox/enum",keyword:"enum",params:{allowedValues: schema37.properties.stereobox.enum},message:"must be equal to one of the allowed values"}];return false;}var valid23 = _errs133 === errors;}else {var valid23 = true;}if(valid23){if(data51.cip !== undefined){let data61 = data51.cip;const _errs135 = errors;if(typeof data61 !== "string"){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/cip",schemaPath:"#/definitions/bond/properties/cip/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data61 === "Z") || (data61 === "E"))){validate24.errors = [{instancePath:instancePath+"/bonds/" + i7+"/cip",schemaPath:"#/definitions/bond/properties/cip/enum",keyword:"enum",params:{allowedValues: schema37.properties.cip.enum},message:"must be equal to one of the allowed values"}];return false;}var valid23 = _errs135 === errors;}else {var valid23 = true;}}}}}}else {validate24.errors = [{instancePath:instancePath+"/bonds/" + i7,schemaPath:"#/definitions/bond/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid18 = _errs111 === errors;if(!valid18){break;}}}else {validate24.errors = [{instancePath:instancePath+"/bonds",schemaPath:"#/properties/bonds/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs109 === errors;}else {var valid0 = true;}if(valid0){if(data.highlight !== undefined){let data62 = data.highlight;const _errs137 = errors;const _errs138 = errors;if(errors === _errs138){if(Array.isArray(data62)){if(data62.length > 2){validate24.errors = [{instancePath:instancePath+"/highlight",schemaPath:"#/definitions/subset/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"}];return false;}else {if(data62.length < 1){validate24.errors = [{instancePath:instancePath+"/highlight",schemaPath:"#/definitions/subset/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid27 = true;const len9 = data62.length;for(let i10=0; i10<len9; i10++){let data63 = data62[i10];const _errs140 = errors;const _errs141 = errors;let valid28 = false;let passing2 = null;const _errs142 = errors;if(errors === _errs142){if(data63 && typeof data63 == "object" && !Array.isArray(data63)){let missing8;if(((data63.entityType === undefined) && (missing8 = "entityType")) || ((data63.items === undefined) && (missing8 = "items"))){const err96 = {instancePath:instancePath+"/highlight/" + i10,schemaPath:"#/definitions/subset/items/oneOf/0/required",keyword:"required",params:{missingProperty: missing8},message:"must have required property '"+missing8+"'"};if(vErrors === null){vErrors = [err96];}else {vErrors.push(err96);}errors++;}else {if(data63.entityType !== undefined){let data64 = data63.entityType;const _errs144 = errors;if(typeof data64 !== "string"){const err97 = {instancePath:instancePath+"/highlight/" + i10+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/0/properties/entityType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err97];}else {vErrors.push(err97);}errors++;}if("atoms" !== data64){const err98 = {instancePath:instancePath+"/highlight/" + i10+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/0/properties/entityType/const",keyword:"const",params:{allowedValue: "atoms"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err98];}else {vErrors.push(err98);}errors++;}var valid29 = _errs144 === errors;}else {var valid29 = true;}if(valid29){if(data63.items !== undefined){let data65 = data63.items;const _errs146 = errors;if(errors === _errs146){if(Array.isArray(data65)){var valid30 = true;const len10 = data65.length;for(let i11=0; i11<len10; i11++){let data66 = data65[i11];const _errs148 = errors;if(!(((typeof data66 == "number") && (!(data66 % 1) && !isNaN(data66))) && (isFinite(data66)))){const err99 = {instancePath:instancePath+"/highlight/" + i10+"/items/" + i11,schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err99];}else {vErrors.push(err99);}errors++;}if(errors === _errs148){if((typeof data66 == "number") && (isFinite(data66))){if(data66 < 0 || isNaN(data66)){const err100 = {instancePath:instancePath+"/highlight/" + i10+"/items/" + i11,schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err100];}else {vErrors.push(err100);}errors++;}}}var valid30 = _errs148 === errors;if(!valid30){break;}}if(valid30){let i12 = data65.length;let j1;if(i12 > 1){const indices1 = {};for(;i12--;){let item1 = data65[i12];if(!(((typeof item1 == "number") && (!(item1 % 1) && !isNaN(item1))) && (isFinite(item1)))){continue;}if(typeof indices1[item1] == "number"){j1 = indices1[item1];const err101 = {instancePath:instancePath+"/highlight/" + i10+"/items",schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/uniqueItems",keyword:"uniqueItems",params:{i: i12, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i12+" are identical)"};if(vErrors === null){vErrors = [err101];}else {vErrors.push(err101);}errors++;break;}indices1[item1] = i12;}}}}else {const err102 = {instancePath:instancePath+"/highlight/" + i10+"/items",schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err102];}else {vErrors.push(err102);}errors++;}}var valid29 = _errs146 === errors;}else {var valid29 = true;}}}}else {const err103 = {instancePath:instancePath+"/highlight/" + i10,schemaPath:"#/definitions/subset/items/oneOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err103];}else {vErrors.push(err103);}errors++;}}var _valid2 = _errs142 === errors;if(_valid2){valid28 = true;passing2 = 0;}const _errs150 = errors;if(errors === _errs150){if(data63 && typeof data63 == "object" && !Array.isArray(data63)){let missing9;if(((data63.entityType === undefined) && (missing9 = "entityType")) || ((data63.items === undefined) && (missing9 = "items"))){const err104 = {instancePath:instancePath+"/highlight/" + i10,schemaPath:"#/definitions/subset/items/oneOf/1/required",keyword:"required",params:{missingProperty: missing9},message:"must have required property '"+missing9+"'"};if(vErrors === null){vErrors = [err104];}else {vErrors.push(err104);}errors++;}else {if(data63.entityType !== undefined){let data67 = data63.entityType;const _errs152 = errors;if(typeof data67 !== "string"){const err105 = {instancePath:instancePath+"/highlight/" + i10+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/1/properties/entityType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err105];}else {vErrors.push(err105);}errors++;}if("bonds" !== data67){const err106 = {instancePath:instancePath+"/highlight/" + i10+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/1/properties/entityType/const",keyword:"const",params:{allowedValue: "bonds"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err106];}else {vErrors.push(err106);}errors++;}var valid32 = _errs152 === errors;}else {var valid32 = true;}if(valid32){if(data63.items !== undefined){let data68 = data63.items;const _errs154 = errors;if(errors === _errs154){if(Array.isArray(data68)){var valid33 = true;const len11 = data68.length;for(let i13=0; i13<len11; i13++){let data69 = data68[i13];const _errs156 = errors;if(!(((typeof data69 == "number") && (!(data69 % 1) && !isNaN(data69))) && (isFinite(data69)))){const err107 = {instancePath:instancePath+"/highlight/" + i10+"/items/" + i13,schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err107];}else {vErrors.push(err107);}errors++;}if(errors === _errs156){if((typeof data69 == "number") && (isFinite(data69))){if(data69 < 0 || isNaN(data69)){const err108 = {instancePath:instancePath+"/highlight/" + i10+"/items/" + i13,schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err108];}else {vErrors.push(err108);}errors++;}}}var valid33 = _errs156 === errors;if(!valid33){break;}}if(valid33){let i14 = data68.length;let j2;if(i14 > 1){const indices2 = {};for(;i14--;){let item2 = data68[i14];if(!(((typeof item2 == "number") && (!(item2 % 1) && !isNaN(item2))) && (isFinite(item2)))){continue;}if(typeof indices2[item2] == "number"){j2 = indices2[item2];const err109 = {instancePath:instancePath+"/highlight/" + i10+"/items",schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/uniqueItems",keyword:"uniqueItems",params:{i: i14, j: j2},message:"must NOT have duplicate items (items ## "+j2+" and "+i14+" are identical)"};if(vErrors === null){vErrors = [err109];}else {vErrors.push(err109);}errors++;break;}indices2[item2] = i14;}}}}else {const err110 = {instancePath:instancePath+"/highlight/" + i10+"/items",schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err110];}else {vErrors.push(err110);}errors++;}}var valid32 = _errs154 === errors;}else {var valid32 = true;}}}}else {const err111 = {instancePath:instancePath+"/highlight/" + i10,schemaPath:"#/definitions/subset/items/oneOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err111];}else {vErrors.push(err111);}errors++;}}var _valid2 = _errs150 === errors;if(_valid2 && valid28){valid28 = false;passing2 = [passing2, 1];}else {if(_valid2){valid28 = true;passing2 = 1;}}if(!valid28){const err112 = {instancePath:instancePath+"/highlight/" + i10,schemaPath:"#/definitions/subset/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing2},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err112];}else {vErrors.push(err112);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs141;if(vErrors !== null){if(_errs141){vErrors.length = _errs141;}else {vErrors = null;}}}var valid27 = _errs140 === errors;if(!valid27){break;}}}}}else {validate24.errors = [{instancePath:instancePath+"/highlight",schemaPath:"#/definitions/subset/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs137 === errors;}else {var valid0 = true;}if(valid0){if(data.selection !== undefined){let data70 = data.selection;const _errs158 = errors;const _errs159 = errors;if(errors === _errs159){if(Array.isArray(data70)){if(data70.length > 2){validate24.errors = [{instancePath:instancePath+"/selection",schemaPath:"#/definitions/subset/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"}];return false;}else {if(data70.length < 1){validate24.errors = [{instancePath:instancePath+"/selection",schemaPath:"#/definitions/subset/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid36 = true;const len12 = data70.length;for(let i15=0; i15<len12; i15++){let data71 = data70[i15];const _errs161 = errors;const _errs162 = errors;let valid37 = false;let passing3 = null;const _errs163 = errors;if(errors === _errs163){if(data71 && typeof data71 == "object" && !Array.isArray(data71)){let missing10;if(((data71.entityType === undefined) && (missing10 = "entityType")) || ((data71.items === undefined) && (missing10 = "items"))){const err113 = {instancePath:instancePath+"/selection/" + i15,schemaPath:"#/definitions/subset/items/oneOf/0/required",keyword:"required",params:{missingProperty: missing10},message:"must have required property '"+missing10+"'"};if(vErrors === null){vErrors = [err113];}else {vErrors.push(err113);}errors++;}else {if(data71.entityType !== undefined){let data72 = data71.entityType;const _errs165 = errors;if(typeof data72 !== "string"){const err114 = {instancePath:instancePath+"/selection/" + i15+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/0/properties/entityType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err114];}else {vErrors.push(err114);}errors++;}if("atoms" !== data72){const err115 = {instancePath:instancePath+"/selection/" + i15+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/0/properties/entityType/const",keyword:"const",params:{allowedValue: "atoms"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err115];}else {vErrors.push(err115);}errors++;}var valid38 = _errs165 === errors;}else {var valid38 = true;}if(valid38){if(data71.items !== undefined){let data73 = data71.items;const _errs167 = errors;if(errors === _errs167){if(Array.isArray(data73)){var valid39 = true;const len13 = data73.length;for(let i16=0; i16<len13; i16++){let data74 = data73[i16];const _errs169 = errors;if(!(((typeof data74 == "number") && (!(data74 % 1) && !isNaN(data74))) && (isFinite(data74)))){const err116 = {instancePath:instancePath+"/selection/" + i15+"/items/" + i16,schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err116];}else {vErrors.push(err116);}errors++;}if(errors === _errs169){if((typeof data74 == "number") && (isFinite(data74))){if(data74 < 0 || isNaN(data74)){const err117 = {instancePath:instancePath+"/selection/" + i15+"/items/" + i16,schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err117];}else {vErrors.push(err117);}errors++;}}}var valid39 = _errs169 === errors;if(!valid39){break;}}if(valid39){let i17 = data73.length;let j3;if(i17 > 1){const indices3 = {};for(;i17--;){let item3 = data73[i17];if(!(((typeof item3 == "number") && (!(item3 % 1) && !isNaN(item3))) && (isFinite(item3)))){continue;}if(typeof indices3[item3] == "number"){j3 = indices3[item3];const err118 = {instancePath:instancePath+"/selection/" + i15+"/items",schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/uniqueItems",keyword:"uniqueItems",params:{i: i17, j: j3},message:"must NOT have duplicate items (items ## "+j3+" and "+i17+" are identical)"};if(vErrors === null){vErrors = [err118];}else {vErrors.push(err118);}errors++;break;}indices3[item3] = i17;}}}}else {const err119 = {instancePath:instancePath+"/selection/" + i15+"/items",schemaPath:"#/definitions/subset/items/oneOf/0/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err119];}else {vErrors.push(err119);}errors++;}}var valid38 = _errs167 === errors;}else {var valid38 = true;}}}}else {const err120 = {instancePath:instancePath+"/selection/" + i15,schemaPath:"#/definitions/subset/items/oneOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err120];}else {vErrors.push(err120);}errors++;}}var _valid3 = _errs163 === errors;if(_valid3){valid37 = true;passing3 = 0;}const _errs171 = errors;if(errors === _errs171){if(data71 && typeof data71 == "object" && !Array.isArray(data71)){let missing11;if(((data71.entityType === undefined) && (missing11 = "entityType")) || ((data71.items === undefined) && (missing11 = "items"))){const err121 = {instancePath:instancePath+"/selection/" + i15,schemaPath:"#/definitions/subset/items/oneOf/1/required",keyword:"required",params:{missingProperty: missing11},message:"must have required property '"+missing11+"'"};if(vErrors === null){vErrors = [err121];}else {vErrors.push(err121);}errors++;}else {if(data71.entityType !== undefined){let data75 = data71.entityType;const _errs173 = errors;if(typeof data75 !== "string"){const err122 = {instancePath:instancePath+"/selection/" + i15+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/1/properties/entityType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err122];}else {vErrors.push(err122);}errors++;}if("bonds" !== data75){const err123 = {instancePath:instancePath+"/selection/" + i15+"/entityType",schemaPath:"#/definitions/subset/items/oneOf/1/properties/entityType/const",keyword:"const",params:{allowedValue: "bonds"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err123];}else {vErrors.push(err123);}errors++;}var valid41 = _errs173 === errors;}else {var valid41 = true;}if(valid41){if(data71.items !== undefined){let data76 = data71.items;const _errs175 = errors;if(errors === _errs175){if(Array.isArray(data76)){var valid42 = true;const len14 = data76.length;for(let i18=0; i18<len14; i18++){let data77 = data76[i18];const _errs177 = errors;if(!(((typeof data77 == "number") && (!(data77 % 1) && !isNaN(data77))) && (isFinite(data77)))){const err124 = {instancePath:instancePath+"/selection/" + i15+"/items/" + i18,schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err124];}else {vErrors.push(err124);}errors++;}if(errors === _errs177){if((typeof data77 == "number") && (isFinite(data77))){if(data77 < 0 || isNaN(data77)){const err125 = {instancePath:instancePath+"/selection/" + i15+"/items/" + i18,schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err125];}else {vErrors.push(err125);}errors++;}}}var valid42 = _errs177 === errors;if(!valid42){break;}}if(valid42){let i19 = data76.length;let j4;if(i19 > 1){const indices4 = {};for(;i19--;){let item4 = data76[i19];if(!(((typeof item4 == "number") && (!(item4 % 1) && !isNaN(item4))) && (isFinite(item4)))){continue;}if(typeof indices4[item4] == "number"){j4 = indices4[item4];const err126 = {instancePath:instancePath+"/selection/" + i15+"/items",schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/uniqueItems",keyword:"uniqueItems",params:{i: i19, j: j4},message:"must NOT have duplicate items (items ## "+j4+" and "+i19+" are identical)"};if(vErrors === null){vErrors = [err126];}else {vErrors.push(err126);}errors++;break;}indices4[item4] = i19;}}}}else {const err127 = {instancePath:instancePath+"/selection/" + i15+"/items",schemaPath:"#/definitions/subset/items/oneOf/1/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err127];}else {vErrors.push(err127);}errors++;}}var valid41 = _errs175 === errors;}else {var valid41 = true;}}}}else {const err128 = {instancePath:instancePath+"/selection/" + i15,schemaPath:"#/definitions/subset/items/oneOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err128];}else {vErrors.push(err128);}errors++;}}var _valid3 = _errs171 === errors;if(_valid3 && valid37){valid37 = false;passing3 = [passing3, 1];}else {if(_valid3){valid37 = true;passing3 = 1;}}if(!valid37){const err129 = {instancePath:instancePath+"/selection/" + i15,schemaPath:"#/definitions/subset/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing3},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err129];}else {vErrors.push(err129);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs162;if(vErrors !== null){if(_errs162){vErrors.length = _errs162;}else {vErrors = null;}}}var valid36 = _errs161 === errors;if(!valid36){break;}}}}}else {validate24.errors = [{instancePath:instancePath+"/selection",schemaPath:"#/definitions/subset/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs158 === errors;}else {var valid0 = true;}if(valid0){if(data.sgroups !== undefined){let data78 = data.sgroups;const _errs179 = errors;const _errs180 = errors;if(errors === _errs180){if(Array.isArray(data78)){var valid45 = true;const len15 = data78.length;for(let i20=0; i20<len15; i20++){let data79 = data78[i20];const _errs182 = errors;const _errs184 = errors;let valid46 = true;const _errs185 = errors;if(data79 && typeof data79 == "object" && !Array.isArray(data79)){if(data79.type !== undefined){if("DAT" !== data79.type){const err130 = {};if(vErrors === null){vErrors = [err130];}else {vErrors.push(err130);}errors++;}}}var _valid4 = _errs185 === errors;errors = _errs184;if(vErrors !== null){if(_errs184){vErrors.length = _errs184;}else {vErrors = null;}}if(_valid4){const _errs187 = errors;if(data79 && typeof data79 == "object" && !Array.isArray(data79)){if(data79.context !== undefined){let data81 = data79.context;const _errs188 = errors;if(!(((((data81 === "Fragment") || (data81 === "Multifragment")) || (data81 === "Bond")) || (data81 === "Atom")) || (data81 === "Group"))){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/context",schemaPath:"#/definitions/sgroups/items/then/properties/context/enum",keyword:"enum",params:{allowedValues: schema40.items.then.properties.context.enum},message:"must be equal to one of the allowed values"}];return false;}var valid48 = _errs188 === errors;}else {var valid48 = true;}if(valid48){if(data79.fieldName !== undefined){const _errs189 = errors;if(typeof data79.fieldName !== "string"){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/fieldName",schemaPath:"#/definitions/sgroups/items/then/properties/fieldName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid48 = _errs189 === errors;}else {var valid48 = true;}if(valid48){if(data79.fieldValue !== undefined){let data83 = data79.fieldValue;const _errs191 = errors;if(errors === _errs191){if(typeof data83 === "string"){if(func4(data83) < 1){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/fieldValue",schemaPath:"#/definitions/sgroups/items/then/properties/fieldValue/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/fieldValue",schemaPath:"#/definitions/sgroups/items/then/properties/fieldValue/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid48 = _errs191 === errors;}else {var valid48 = true;}if(valid48){if(data79.display !== undefined){const _errs193 = errors;if(typeof data79.display !== "boolean"){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/display",schemaPath:"#/definitions/sgroups/items/then/properties/display/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid48 = _errs193 === errors;}else {var valid48 = true;}if(valid48){if(data79.placement !== undefined){const _errs195 = errors;if(typeof data79.placement !== "boolean"){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/placement",schemaPath:"#/definitions/sgroups/items/then/properties/placement/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid48 = _errs195 === errors;}else {var valid48 = true;}if(valid48){if(data79.bonds !== undefined){let data86 = data79.bonds;const _errs197 = errors;if(errors === _errs197){if(Array.isArray(data86)){var valid49 = true;const len16 = data86.length;for(let i21=0; i21<len16; i21++){let data87 = data86[i21];const _errs199 = errors;if(!(((typeof data87 == "number") && (!(data87 % 1) && !isNaN(data87))) && (isFinite(data87)))){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/bonds/" + i21,schemaPath:"#/definitions/sgroups/items/then/properties/bonds/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs199){if((typeof data87 == "number") && (isFinite(data87))){if(data87 < 0 || isNaN(data87)){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/bonds/" + i21,schemaPath:"#/definitions/sgroups/items/then/properties/bonds/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid49 = _errs199 === errors;if(!valid49){break;}}}else {validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/bonds",schemaPath:"#/definitions/sgroups/items/then/properties/bonds/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid48 = _errs197 === errors;}else {var valid48 = true;}}}}}}}var _valid4 = _errs187 === errors;valid46 = _valid4;}if(!valid46){const err131 = {instancePath:instancePath+"/sgroups/" + i20,schemaPath:"#/definitions/sgroups/items/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err131];}else {vErrors.push(err131);}errors++;validate24.errors = vErrors;return false;}if(errors === _errs182){if(data79 && typeof data79 == "object" && !Array.isArray(data79)){let missing12;if(((data79.atoms === undefined) && (missing12 = "atoms")) || ((data79.type === undefined) && (missing12 = "type"))){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20,schemaPath:"#/definitions/sgroups/items/required",keyword:"required",params:{missingProperty: missing12},message:"must have required property '"+missing12+"'"}];return false;}else {if(data79.atoms !== undefined){let data88 = data79.atoms;const _errs201 = errors;if(errors === _errs201){if(Array.isArray(data88)){var valid51 = true;const len17 = data88.length;for(let i22=0; i22<len17; i22++){let data89 = data88[i22];const _errs203 = errors;if(!(((typeof data89 == "number") && (!(data89 % 1) && !isNaN(data89))) && (isFinite(data89)))){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/atoms/" + i22,schemaPath:"#/definitions/sgroups/items/properties/atoms/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs203){if((typeof data89 == "number") && (isFinite(data89))){if(data89 < 0 || isNaN(data89)){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/atoms/" + i22,schemaPath:"#/definitions/sgroups/items/properties/atoms/items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid51 = _errs203 === errors;if(!valid51){break;}}}else {validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/atoms",schemaPath:"#/definitions/sgroups/items/properties/atoms/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid50 = _errs201 === errors;}else {var valid50 = true;}if(valid50){if(data79.type !== undefined){let data90 = data79.type;const _errs205 = errors;if(typeof data90 !== "string"){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/type",schemaPath:"#/definitions/sgroups/items/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((data90 === "GEN") || (data90 === "MUL")) || (data90 === "SRU")) || (data90 === "SUP")) || (data90 === "DAT")) || (data90 === "queryComponent"))){validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20+"/type",schemaPath:"#/definitions/sgroups/items/properties/type/enum",keyword:"enum",params:{allowedValues: schema40.items.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid50 = _errs205 === errors;}else {var valid50 = true;}}}}else {validate24.errors = [{instancePath:instancePath+"/sgroups/" + i20,schemaPath:"#/definitions/sgroups/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid45 = _errs182 === errors;if(!valid45){break;}}}else {validate24.errors = [{instancePath:instancePath+"/sgroups",schemaPath:"#/definitions/sgroups/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs179 === errors;}else {var valid0 = true;}}}}}}}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.fragments === undefined) && (missing0 = "fragments")){const err0 = {instancePath,schemaPath:"#/anyOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs3 = errors;if(!(validate24(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var _valid0 = _errs3 === errors;valid0 = valid0 || _valid0;}if(!valid0){const err1 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;validate23.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if(((data.rlogic === undefined) && (missing1 = "rlogic")) || ((data.type === undefined) && (missing1 = "type"))){validate23.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data.type !== undefined){const _errs4 = errors;if("rgroup" !== data.type){validate23.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "rgroup"},message:"must be equal to constant"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.rlogic !== undefined){let data1 = data.rlogic;const _errs5 = errors;if(errors === _errs5){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing2;if((data1.number === undefined) && (missing2 = "number")){validate23.errors = [{instancePath:instancePath+"/rlogic",schemaPath:"#/properties/rlogic/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data1.number !== undefined){let data2 = data1.number;const _errs7 = errors;if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){validate23.errors = [{instancePath:instancePath+"/rlogic/number",schemaPath:"#/properties/rlogic/properties/number/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs7){if((typeof data2 == "number") && (isFinite(data2))){if(data2 < 1 || isNaN(data2)){validate23.errors = [{instancePath:instancePath+"/rlogic/number",schemaPath:"#/properties/rlogic/properties/number/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data1.range !== undefined){let data3 = data1.range;const _errs9 = errors;if(errors === _errs9){if(typeof data3 === "string"){if(func4(data3) > 50){validate23.errors = [{instancePath:instancePath+"/rlogic/range",schemaPath:"#/properties/rlogic/properties/range/maxLength",keyword:"maxLength",params:{limit: 50},message:"must NOT have more than 50 characters"}];return false;}}else {validate23.errors = [{instancePath:instancePath+"/rlogic/range",schemaPath:"#/properties/rlogic/properties/range/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data1.resth !== undefined){const _errs11 = errors;if(typeof data1.resth !== "boolean"){validate23.errors = [{instancePath:instancePath+"/rlogic/resth",schemaPath:"#/properties/rlogic/properties/resth/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data1.ifthen !== undefined){let data5 = data1.ifthen;const _errs13 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate23.errors = [{instancePath:instancePath+"/rlogic/ifthen",schemaPath:"#/properties/rlogic/properties/ifthen/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs13){if((typeof data5 == "number") && (isFinite(data5))){if(data5 < 0 || isNaN(data5)){validate23.errors = [{instancePath:instancePath+"/rlogic/ifthen",schemaPath:"#/properties/rlogic/properties/ifthen/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid2 = _errs13 === errors;}else {var valid2 = true;}}}}}}else {validate23.errors = [{instancePath:instancePath+"/rlogic",schemaPath:"#/properties/rlogic/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.fragments !== undefined){let data6 = data.fragments;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data6)){var valid3 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){const _errs17 = errors;if(!(validate24(data6[i0], {instancePath:instancePath+"/fragments/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid3 = _errs17 === errors;if(!valid3){break;}}}else {validate23.errors = [{instancePath:instancePath+"/fragments",schemaPath:"#/properties/fragments/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}const schema41 = {"type":"object","required":["type"],"properties":{"type":{"const":"molecule"}},"allOf":[{"$ref":"#/definitions/structure"}]};function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(validate24(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate28.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){if("molecule" !== data.type){validate28.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/const",keyword:"const",params:{allowedValue: "molecule"},message:"must be equal to constant"}];return false;}}}}else {validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate28.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.root === undefined) && (missing0 = "root")){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((key0 === "root") || (pattern0.test(key0))) || (pattern1.test(key0))) || (pattern2.test(key0)))){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.root !== undefined){let data0 = data.root;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing1;if((data0.nodes === undefined) && (missing1 = "nodes")){validate20.errors = [{instancePath:instancePath+"/root",schemaPath:"#/properties/root/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data0.nodes !== undefined){let data1 = data0.nodes;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){if(data1.length < 0){validate20.errors = [{instancePath:instancePath+"/root/nodes",schemaPath:"#/properties/root/properties/nodes/minItems",keyword:"minItems",params:{limit: 0},message:"must NOT have fewer than 0 items"}];return false;}else {var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;let valid3 = false;let passing0 = null;const _errs8 = errors;const _errs9 = errors;if(errors === _errs9){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing2;if(((data2.type === undefined) && (missing2 = "type")) || ((data2.data === undefined) && (missing2 = "data"))){const err0 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/simpleObject/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {if(data2.type !== undefined){const _errs11 = errors;if("simpleObject" !== data2.type){const err1 = {instancePath:instancePath+"/root/nodes/" + i0+"/type",schemaPath:"#/definitions/simpleObject/properties/type/const",keyword:"const",params:{allowedValue: "simpleObject"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}var valid5 = _errs11 === errors;}else {var valid5 = true;}if(valid5){if(data2.data !== undefined){let data4 = data2.data;const _errs12 = errors;const _errs14 = errors;let valid6 = true;const _errs15 = errors;if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.mode !== undefined){if("polyline" !== data4.mode){const err2 = {};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}}var _valid1 = _errs15 === errors;errors = _errs14;if(vErrors !== null){if(_errs14){vErrors.length = _errs14;}else {vErrors = null;}}let ifClause0;if(_valid1){const _errs17 = errors;if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing3;if((data4.pos === undefined) && (missing3 = "pos")){const err3 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/simpleObject/properties/data/then/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}else {if(data4.pos !== undefined){let data6 = data4.pos;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data6)){if(data6.length < 2){const err4 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}else {var valid9 = true;const len1 = data6.length;for(let i1=0; i1<len1; i1++){let data7 = data6[i1];const _errs20 = errors;if(errors === _errs20){if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing4;if(((data7.x === undefined) && (missing4 = "x")) || ((data7.y === undefined) && (missing4 = "y"))){const err5 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i1,schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/items/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}else {if(data7.x !== undefined){let data8 = data7.x;const _errs22 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){const err6 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i1+"/x",schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/items/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}var valid10 = _errs22 === errors;}else {var valid10 = true;}if(valid10){if(data7.y !== undefined){let data9 = data7.y;const _errs24 = errors;if(!((typeof data9 == "number") && (isFinite(data9)))){const err7 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i1+"/y",schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/items/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}var valid10 = _errs24 === errors;}else {var valid10 = true;}if(valid10){if(data7.z !== undefined){let data10 = data7.z;const _errs26 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){const err8 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i1+"/z",schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/items/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}var valid10 = _errs26 === errors;}else {var valid10 = true;}}}}}else {const err9 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i1,schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}var valid9 = _errs20 === errors;if(!valid9){break;}}}}else {const err10 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/simpleObject/properties/data/then/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}}}}var _valid1 = _errs17 === errors;valid6 = _valid1;ifClause0 = "then";}else {const _errs28 = errors;if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing5;if((data4.pos === undefined) && (missing5 = "pos")){const err11 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/simpleObject/properties/data/else/required",keyword:"required",params:{missingProperty: missing5},message:"must have required property '"+missing5+"'"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}else {if(data4.pos !== undefined){let data11 = data4.pos;const _errs29 = errors;if(errors === _errs29){if(Array.isArray(data11)){if(data11.length > 2){const err12 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}else {if(data11.length < 2){const err13 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}else {var valid12 = true;const len2 = data11.length;for(let i2=0; i2<len2; i2++){let data12 = data11[i2];const _errs31 = errors;if(errors === _errs31){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){let missing6;if(((data12.x === undefined) && (missing6 = "x")) || ((data12.y === undefined) && (missing6 = "y"))){const err14 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i2,schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/items/required",keyword:"required",params:{missingProperty: missing6},message:"must have required property '"+missing6+"'"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}else {if(data12.x !== undefined){let data13 = data12.x;const _errs33 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){const err15 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i2+"/x",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/items/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}var valid13 = _errs33 === errors;}else {var valid13 = true;}if(valid13){if(data12.y !== undefined){let data14 = data12.y;const _errs35 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){const err16 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i2+"/y",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/items/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}var valid13 = _errs35 === errors;}else {var valid13 = true;}if(valid13){if(data12.z !== undefined){let data15 = data12.z;const _errs37 = errors;if(!((typeof data15 == "number") && (isFinite(data15)))){const err17 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i2+"/z",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/items/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}var valid13 = _errs37 === errors;}else {var valid13 = true;}}}}}else {const err18 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i2,schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}var valid12 = _errs31 === errors;if(!valid12){break;}}}}}else {const err19 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/simpleObject/properties/data/else/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}}}}var _valid1 = _errs28 === errors;valid6 = _valid1;ifClause0 = "else";}if(!valid6){const err20 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/simpleObject/properties/data/if",keyword:"if",params:{failingKeyword: ifClause0},message:"must match \""+ifClause0+"\" schema"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}if(errors === _errs12){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing7;if((data4.mode === undefined) && (missing7 = "mode")){const err21 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/simpleObject/properties/data/required",keyword:"required",params:{missingProperty: missing7},message:"must have required property '"+missing7+"'"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}else {if(data4.mode !== undefined){let data16 = data4.mode;if(typeof data16 !== "string"){const err22 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/mode",schemaPath:"#/definitions/simpleObject/properties/data/properties/mode/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}if(!(((((data16 === "line") || (data16 === "rectangle")) || (data16 === "circle")) || (data16 === "ellipse")) || (data16 === "polyline"))){const err23 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/mode",schemaPath:"#/definitions/simpleObject/properties/data/properties/mode/enum",keyword:"enum",params:{allowedValues: schema23.properties.data.properties.mode.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}}}else {const err24 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/simpleObject/properties/data/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}var valid5 = _errs12 === errors;}else {var valid5 = true;}if(valid5){if(data2.selected !== undefined){const _errs41 = errors;if(typeof data2.selected !== "boolean"){const err25 = {instancePath:instancePath+"/root/nodes/" + i0+"/selected",schemaPath:"#/definitions/simpleObject/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}var valid5 = _errs41 === errors;}else {var valid5 = true;}}}}}else {const err26 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/simpleObject/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}var _valid0 = _errs8 === errors;if(_valid0){valid3 = true;passing0 = 0;}const _errs43 = errors;const _errs44 = errors;if(errors === _errs44){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing8;if(((data2.type === undefined) && (missing8 = "type")) || ((data2.data === undefined) && (missing8 = "data"))){const err27 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/text/required",keyword:"required",params:{missingProperty: missing8},message:"must have required property '"+missing8+"'"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}else {if(data2.type !== undefined){const _errs46 = errors;if("text" !== data2.type){const err28 = {instancePath:instancePath+"/root/nodes/" + i0+"/type",schemaPath:"#/definitions/text/properties/type/const",keyword:"const",params:{allowedValue: "text"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}var valid16 = _errs46 === errors;}else {var valid16 = true;}if(valid16){if(data2.data !== undefined){let data19 = data2.data;const _errs47 = errors;if(errors === _errs47){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){let missing9;if((data19.content === undefined) && (missing9 = "content")){const err29 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/text/properties/data/required",keyword:"required",params:{missingProperty: missing9},message:"must have required property '"+missing9+"'"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}else {if(data19.content !== undefined){const _errs49 = errors;if(typeof data19.content !== "string"){const err30 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/content",schemaPath:"#/definitions/text/properties/data/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}var valid17 = _errs49 === errors;}else {var valid17 = true;}if(valid17){if(data19.pos !== undefined){let data21 = data19.pos;const _errs51 = errors;if(errors === _errs51){if(Array.isArray(data21)){var valid18 = true;const len3 = data21.length;for(let i3=0; i3<len3; i3++){let data22 = data21[i3];const _errs53 = errors;if(errors === _errs53){if(data22 && typeof data22 == "object" && !Array.isArray(data22)){if(data22.x !== undefined){let data23 = data22.x;const _errs55 = errors;if(!((typeof data23 == "number") && (isFinite(data23)))){const err31 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i3+"/x",schemaPath:"#/definitions/text/properties/data/properties/pos/items/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}var valid19 = _errs55 === errors;}else {var valid19 = true;}if(valid19){if(data22.y !== undefined){let data24 = data22.y;const _errs57 = errors;if(!((typeof data24 == "number") && (isFinite(data24)))){const err32 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i3+"/y",schemaPath:"#/definitions/text/properties/data/properties/pos/items/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}var valid19 = _errs57 === errors;}else {var valid19 = true;}if(valid19){if(data22.z !== undefined){let data25 = data22.z;const _errs59 = errors;if(!((typeof data25 == "number") && (isFinite(data25)))){const err33 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i3+"/z",schemaPath:"#/definitions/text/properties/data/properties/pos/items/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}var valid19 = _errs59 === errors;}else {var valid19 = true;}}}}else {const err34 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i3,schemaPath:"#/definitions/text/properties/data/properties/pos/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}}var valid18 = _errs53 === errors;if(!valid18){break;}}}else {const err35 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/text/properties/data/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}var valid17 = _errs51 === errors;}else {var valid17 = true;}}}}else {const err36 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/text/properties/data/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}}var valid16 = _errs47 === errors;}else {var valid16 = true;}if(valid16){if(data2.selected !== undefined){const _errs61 = errors;if(typeof data2.selected !== "boolean"){const err37 = {instancePath:instancePath+"/root/nodes/" + i0+"/selected",schemaPath:"#/definitions/text/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}var valid16 = _errs61 === errors;}else {var valid16 = true;}}}}}else {const err38 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/text/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}}var _valid0 = _errs43 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 1];}else {if(_valid0){valid3 = true;passing0 = 1;}const _errs63 = errors;const _errs64 = errors;if(errors === _errs64){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing10;if(((data2.type === undefined) && (missing10 = "type")) || ((data2.data === undefined) && (missing10 = "data"))){const err39 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/arrow/required",keyword:"required",params:{missingProperty: missing10},message:"must have required property '"+missing10+"'"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}else {if(data2.type !== undefined){const _errs66 = errors;if("arrow" !== data2.type){const err40 = {instancePath:instancePath+"/root/nodes/" + i0+"/type",schemaPath:"#/definitions/arrow/properties/type/const",keyword:"const",params:{allowedValue: "arrow"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}var valid21 = _errs66 === errors;}else {var valid21 = true;}if(valid21){if(data2.data !== undefined){let data28 = data2.data;const _errs67 = errors;if(errors === _errs67){if(data28 && typeof data28 == "object" && !Array.isArray(data28)){let missing11;if((data28.mode === undefined) && (missing11 = "mode")){const err41 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/arrow/properties/data/required",keyword:"required",params:{missingProperty: missing11},message:"must have required property '"+missing11+"'"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}else {if(data28.mode !== undefined){const _errs69 = errors;if(typeof data28.mode !== "string"){const err42 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/mode",schemaPath:"#/definitions/arrow/properties/data/properties/mode/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}var valid22 = _errs69 === errors;}else {var valid22 = true;}if(valid22){if(data28.pos !== undefined){let data30 = data28.pos;const _errs71 = errors;if(errors === _errs71){if(Array.isArray(data30)){var valid23 = true;const len4 = data30.length;for(let i4=0; i4<len4; i4++){let data31 = data30[i4];const _errs73 = errors;if(errors === _errs73){if(data31 && typeof data31 == "object" && !Array.isArray(data31)){let missing12;if(((data31.x === undefined) && (missing12 = "x")) || ((data31.y === undefined) && (missing12 = "y"))){const err43 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i4,schemaPath:"#/definitions/arrow/properties/data/properties/pos/items/required",keyword:"required",params:{missingProperty: missing12},message:"must have required property '"+missing12+"'"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}else {if(data31.x !== undefined){let data32 = data31.x;const _errs75 = errors;if(!((typeof data32 == "number") && (isFinite(data32)))){const err44 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i4+"/x",schemaPath:"#/definitions/arrow/properties/data/properties/pos/items/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}var valid24 = _errs75 === errors;}else {var valid24 = true;}if(valid24){if(data31.y !== undefined){let data33 = data31.y;const _errs77 = errors;if(!((typeof data33 == "number") && (isFinite(data33)))){const err45 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i4+"/y",schemaPath:"#/definitions/arrow/properties/data/properties/pos/items/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}var valid24 = _errs77 === errors;}else {var valid24 = true;}if(valid24){if(data31.z !== undefined){let data34 = data31.z;const _errs79 = errors;if(!((typeof data34 == "number") && (isFinite(data34)))){const err46 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i4+"/z",schemaPath:"#/definitions/arrow/properties/data/properties/pos/items/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}var valid24 = _errs79 === errors;}else {var valid24 = true;}}}}}else {const err47 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos/" + i4,schemaPath:"#/definitions/arrow/properties/data/properties/pos/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}}var valid23 = _errs73 === errors;if(!valid23){break;}}}else {const err48 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/pos",schemaPath:"#/definitions/arrow/properties/data/properties/pos/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}}var valid22 = _errs71 === errors;}else {var valid22 = true;}if(valid22){if(data28.height !== undefined){let data35 = data28.height;const _errs81 = errors;if(!((typeof data35 == "number") && (isFinite(data35)))){const err49 = {instancePath:instancePath+"/root/nodes/" + i0+"/data/height",schemaPath:"#/definitions/arrow/properties/data/properties/height/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}var valid22 = _errs81 === errors;}else {var valid22 = true;}}}}}else {const err50 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/arrow/properties/data/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}}var valid21 = _errs67 === errors;}else {var valid21 = true;}if(valid21){if(data2.selected !== undefined){const _errs83 = errors;if(typeof data2.selected !== "boolean"){const err51 = {instancePath:instancePath+"/root/nodes/" + i0+"/selected",schemaPath:"#/definitions/arrow/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}var valid21 = _errs83 === errors;}else {var valid21 = true;}}}}}else {const err52 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/arrow/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}var _valid0 = _errs63 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 2];}else {if(_valid0){valid3 = true;passing0 = 2;}const _errs85 = errors;const _errs86 = errors;if(errors === _errs86){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing13;if(((data2.type === undefined) && (missing13 = "type")) || ((data2.location === undefined) && (missing13 = "location"))){const err53 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/plus/required",keyword:"required",params:{missingProperty: missing13},message:"must have required property '"+missing13+"'"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}else {if(data2.type !== undefined){const _errs88 = errors;if("plus" !== data2.type){const err54 = {instancePath:instancePath+"/root/nodes/" + i0+"/type",schemaPath:"#/definitions/plus/properties/type/const",keyword:"const",params:{allowedValue: "plus"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}var valid26 = _errs88 === errors;}else {var valid26 = true;}if(valid26){if(data2.location !== undefined){let data38 = data2.location;const _errs89 = errors;if(errors === _errs89){if(Array.isArray(data38)){if(data38.length > 3){const err55 = {instancePath:instancePath+"/root/nodes/" + i0+"/location",schemaPath:"#/definitions/plus/properties/location/maxItems",keyword:"maxItems",params:{limit: 3},message:"must NOT have more than 3 items"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}else {if(data38.length < 2){const err56 = {instancePath:instancePath+"/root/nodes/" + i0+"/location",schemaPath:"#/definitions/plus/properties/location/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}else {var valid27 = true;const len5 = data38.length;for(let i5=0; i5<len5; i5++){let data39 = data38[i5];const _errs91 = errors;if(!((typeof data39 == "number") && (isFinite(data39)))){const err57 = {instancePath:instancePath+"/root/nodes/" + i0+"/location/" + i5,schemaPath:"#/definitions/plus/properties/location/items/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}var valid27 = _errs91 === errors;if(!valid27){break;}}}}}else {const err58 = {instancePath:instancePath+"/root/nodes/" + i0+"/location",schemaPath:"#/definitions/plus/properties/location/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}}var valid26 = _errs89 === errors;}else {var valid26 = true;}if(valid26){if(data2.selected !== undefined){const _errs93 = errors;if(typeof data2.selected !== "boolean"){const err59 = {instancePath:instancePath+"/root/nodes/" + i0+"/selected",schemaPath:"#/definitions/plus/properties/selected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}var valid26 = _errs93 === errors;}else {var valid26 = true;}}}}}else {const err60 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/plus/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}var _valid0 = _errs85 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 3];}else {if(_valid0){valid3 = true;passing0 = 3;}const _errs95 = errors;const _errs96 = errors;if(errors === _errs96){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing14;if(((((data2.type === undefined) && (missing14 = "type")) || ((data2.format === undefined) && (missing14 = "format"))) || ((data2.boundingBox === undefined) && (missing14 = "boundingBox"))) || ((data2.data === undefined) && (missing14 = "data"))){const err61 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/image/required",keyword:"required",params:{missingProperty: missing14},message:"must have required property '"+missing14+"'"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}else {if(data2.type !== undefined){const _errs98 = errors;if("image" !== data2.type){const err62 = {instancePath:instancePath+"/root/nodes/" + i0+"/type",schemaPath:"#/definitions/image/properties/type/const",keyword:"const",params:{allowedValue: "image"},message:"must be equal to constant"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}var valid29 = _errs98 === errors;}else {var valid29 = true;}if(valid29){if(data2.format !== undefined){let data42 = data2.format;const _errs99 = errors;if(errors === _errs99){if(typeof data42 === "string"){if(!pattern3.test(data42)){const err63 = {instancePath:instancePath+"/root/nodes/" + i0+"/format",schemaPath:"#/definitions/image/properties/format/pattern",keyword:"pattern",params:{pattern: "^image/(png|svg\\+xml)$"},message:"must match pattern \""+"^image/(png|svg\\+xml)$"+"\""};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}else {const err64 = {instancePath:instancePath+"/root/nodes/" + i0+"/format",schemaPath:"#/definitions/image/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}}var valid29 = _errs99 === errors;}else {var valid29 = true;}if(valid29){if(data2.boundingBox !== undefined){let data43 = data2.boundingBox;const _errs101 = errors;if(errors === _errs101){if(data43 && typeof data43 == "object" && !Array.isArray(data43)){let missing15;if(((((data43.width === undefined) && (missing15 = "width")) || ((data43.height === undefined) && (missing15 = "height"))) || ((data43.x === undefined) && (missing15 = "x"))) || ((data43.y === undefined) && (missing15 = "y"))){const err65 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox",schemaPath:"#/definitions/image/properties/boundingBox/required",keyword:"required",params:{missingProperty: missing15},message:"must have required property '"+missing15+"'"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}else {if(data43.width !== undefined){let data44 = data43.width;const _errs103 = errors;if(errors === _errs103){if((typeof data44 == "number") && (isFinite(data44))){if(data44 <= 0 || isNaN(data44)){const err66 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/width",schemaPath:"#/definitions/image/properties/boundingBox/properties/width/exclusiveMinimum",keyword:"exclusiveMinimum",params:{comparison: ">", limit: 0},message:"must be > 0"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}else {const err67 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/width",schemaPath:"#/definitions/image/properties/boundingBox/properties/width/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}}var valid30 = _errs103 === errors;}else {var valid30 = true;}if(valid30){if(data43.height !== undefined){let data45 = data43.height;const _errs105 = errors;if(errors === _errs105){if((typeof data45 == "number") && (isFinite(data45))){if(data45 <= 0 || isNaN(data45)){const err68 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/height",schemaPath:"#/definitions/image/properties/boundingBox/properties/height/exclusiveMinimum",keyword:"exclusiveMinimum",params:{comparison: ">", limit: 0},message:"must be > 0"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}else {const err69 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/height",schemaPath:"#/definitions/image/properties/boundingBox/properties/height/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}}var valid30 = _errs105 === errors;}else {var valid30 = true;}if(valid30){if(data43.x !== undefined){let data46 = data43.x;const _errs107 = errors;if(!((typeof data46 == "number") && (isFinite(data46)))){const err70 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/x",schemaPath:"#/definitions/image/properties/boundingBox/properties/x/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}var valid30 = _errs107 === errors;}else {var valid30 = true;}if(valid30){if(data43.y !== undefined){let data47 = data43.y;const _errs109 = errors;if(!((typeof data47 == "number") && (isFinite(data47)))){const err71 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/y",schemaPath:"#/definitions/image/properties/boundingBox/properties/y/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}var valid30 = _errs109 === errors;}else {var valid30 = true;}if(valid30){if(data43.z !== undefined){let data48 = data43.z;const _errs111 = errors;if(!((typeof data48 == "number") && (isFinite(data48)))){const err72 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox/z",schemaPath:"#/definitions/image/properties/boundingBox/properties/z/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}var valid30 = _errs111 === errors;}else {var valid30 = true;}}}}}}}else {const err73 = {instancePath:instancePath+"/root/nodes/" + i0+"/boundingBox",schemaPath:"#/definitions/image/properties/boundingBox/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}}var valid29 = _errs101 === errors;}else {var valid29 = true;}if(valid29){if(data2.data !== undefined){let data49 = data2.data;const _errs113 = errors;if(errors === _errs113){if(typeof data49 === "string"){if(func4(data49) < 160){const err74 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/image/properties/data/minLength",keyword:"minLength",params:{limit: 160},message:"must NOT have fewer than 160 characters"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}}else {const err75 = {instancePath:instancePath+"/root/nodes/" + i0+"/data",schemaPath:"#/definitions/image/properties/data/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}var valid29 = _errs113 === errors;}else {var valid29 = true;}}}}}}else {const err76 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/definitions/image/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}}var _valid0 = _errs95 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 4];}else {if(_valid0){valid3 = true;passing0 = 4;}const _errs115 = errors;if(!(validate21(data2, {instancePath:instancePath+"/root/nodes/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var _valid0 = _errs115 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 5];}else {if(_valid0){valid3 = true;passing0 = 5;}const _errs116 = errors;if(errors === _errs116){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing16;if((data2.$ref === undefined) && (missing16 = "$ref")){const err77 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/properties/root/properties/nodes/items/oneOf/6/required",keyword:"required",params:{missingProperty: missing16},message:"must have required property '"+missing16+"'"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}else {if(data2.$ref !== undefined){let data50 = data2.$ref;const _errs118 = errors;if(errors === _errs118){if(typeof data50 === "string"){if(!pattern4.test(data50)){const err78 = {instancePath:instancePath+"/root/nodes/" + i0+"/$ref",schemaPath:"#/properties/root/properties/nodes/items/oneOf/6/properties/%24ref/pattern",keyword:"pattern",params:{pattern: "^(mol\\d+|rg[1-9]\\d*)"},message:"must match pattern \""+"^(mol\\d+|rg[1-9]\\d*)"+"\""};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}}else {const err79 = {instancePath:instancePath+"/root/nodes/" + i0+"/$ref",schemaPath:"#/properties/root/properties/nodes/items/oneOf/6/properties/%24ref/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}}}}}else {const err80 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/properties/root/properties/nodes/items/oneOf/6/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}}var _valid0 = _errs116 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 6];}else {if(_valid0){valid3 = true;passing0 = 6;}}}}}}}if(!valid3){const err81 = {instancePath:instancePath+"/root/nodes/" + i0,schemaPath:"#/properties/root/properties/nodes/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;validate20.errors = vErrors;return false;}else {errors = _errs7;if(vErrors !== null){if(_errs7){vErrors.length = _errs7;}else {vErrors = null;}}}var valid2 = _errs6 === errors;if(!valid2){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/root/nodes",schemaPath:"#/properties/root/properties/nodes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}else {validate20.errors = [{instancePath:instancePath+"/root",schemaPath:"#/properties/root/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){var valid32 = true;for(const key1 in data){if(pattern0.test(key1)){const _errs120 = errors;if(!(validate23(data[key1], {instancePath:instancePath+"/" + key1.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key1,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid32 = _errs120 === errors;if(!valid32){break;}}}if(valid32){var valid32 = true;for(const key2 in data){if(pattern1.test(key2)){const _errs121 = errors;if(!(validate28(data[key2], {instancePath:instancePath+"/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key2,rootData}))){vErrors = vErrors === null ? validate28.errors : vErrors.concat(validate28.errors);errors = vErrors.length;}var valid32 = _errs121 === errors;if(!valid32){break;}}}if(valid32){var valid32 = true;for(const key3 in data){if(pattern2.test(key3)){let data53 = data[key3];const _errs122 = errors;const _errs123 = errors;if(errors === _errs123){if(data53 && typeof data53 == "object" && !Array.isArray(data53)){if(data53.moleculeName !== undefined){if(typeof data53.moleculeName !== "string"){validate20.errors = [{instancePath:instancePath+"/" + key3.replace(/~/g, "~0").replace(/\//g, "~1")+"/moleculeName",schemaPath:"#/definitions/header/properties/moleculeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/" + key3.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/header/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid32 = _errs122 === errors;if(!valid32){break;}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}